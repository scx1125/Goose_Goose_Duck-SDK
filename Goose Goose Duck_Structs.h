#pragma once

/**
 * Name: Goose Goose Duck
 * Version: 1.0.0.0
 */

namespace CG
{
	// --------------------------------------------------
	// # Enums
	// --------------------------------------------------
	/**
	 * Enum Assembly-CSharp.FullScreenTabUIButtonHandler+FDLENKIHMEI
	 */
	enum class FullScreenTabUIButtonHandler_FDLENKIHMEI : int32_t
	{
		CTA      = 0x0000000000000000,
		Normal   = 0x0000000000000001,
		Inactive = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.GameMapButtonHandlerUI+KBDNEMGPEPN
	 */
	enum class GameMapButtonHandlerUI_KBDNEMGPEPN : int32_t
	{
		CTA      = 0x0000000000000000,
		Normal   = 0x0000000000000001,
		Inactive = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.GameModeButtonHandlerUI+NDJLFKDPFMC
	 */
	enum class GameModeButtonHandlerUI_NDJLFKDPFMC : int32_t
	{
		CTA      = 0x0000000000000000,
		Normal   = 0x0000000000000001,
		Inactive = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.GamepadCursorItemState
	 */
	enum class GamepadCursorItemState : int32_t
	{
		Idle     = 0x0000000000000000,
		PickedUp = 0x0000000000000001,
		Locked   = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.GamepadDirection
	 */
	enum class GamepadDirection : int32_t
	{
		NONE  = 0x0000000000000000,
		UP    = 0x0000000000000001,
		DOWN  = 0x0000000000000002,
		LEFT  = 0x0000000000000003,
		RIGHT = 0x0000000000000004
	};

	/**
	 * Enum Assembly-CSharp.LoungeDoor+DALMEBLFHLF
	 */
	enum class LoungeDoor_DALMEBLFHLF : int32_t
	{
		Open         = 0x0000000000000000,
		Closed       = 0x0000000000000001,
		DoNotDisturb = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.LoungeDoor+LNDMMJJJAGE
	 */
	enum class LoungeDoor_LNDMMJJJAGE : int32_t
	{
		Upwards    = 0x0000000000000000,
		Downwards  = 0x0000000000000001,
		Leftwards  = 0x0000000000000002,
		Rightwards = 0x0000000000000003
	};

	/**
	 * Enum Assembly-CSharp.MainMenuButtonParameters+KHKPFKDELOL
	 */
	enum class MainMenuButtonParameters_KHKPFKDELOL : int32_t
	{
		Main      = 0x0000000000000000,
		MainSmall = 0x0000000000000001,
		Secondary = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.MainMenuButtonParameters+NKDKFNMAMJG
	 */
	enum class MainMenuButtonParameters_NKDKFNMAMJG : int32_t
	{
		CTA      = 0x0000000000000000,
		Normal   = 0x0000000000000001,
		Inactive = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.MainUIButtonHandler+HEMCAHAFJOD
	 */
	enum class MainUIButtonHandler_HEMCAHAFJOD : int32_t
	{
		CTA      = 0x0000000000000000,
		Normal   = 0x0000000000000001,
		Inactive = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.ModularUIButtonHandler+JHODKDOEBDM
	 */
	enum class ModularUIButtonHandler_JHODKDOEBDM : int32_t
	{
		CTA      = 0x0000000000000000,
		Normal   = 0x0000000000000001,
		Inactive = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.NFTGenerator+IJAOBKOFPLF
	 */
	enum class NFTGenerator_IJAOBKOFPLF : int32_t
	{
		category = 0x0000000000000000,
		layer    = 0x0000000000000001,
		itemID   = 0x0000000000000002,
		Color    = 0x0000000000000003,
		Gender   = 0x0000000000000004
	};

	/**
	 * Enum Assembly-CSharp.NFTGenerator+BKGIGAAKPEG
	 */
	enum class NFTGenerator_BKGIGAAKPEG : int32_t
	{
		Mask             = 0x0000000000000019,
		Beak1            = 0x0000000000000018,
		Eyewear          = 0x0000000000000017,
		HeadAccessory    = 0x0000000000000016,
		Hats             = 0x0000000000000015,
		HairTop          = 0x0000000000000014,
		Hair             = 0x0000000000000013,
		BeakDesign       = 0x0000000000000012,
		Beak2            = 0x0000000000000011,
		BehindHair       = 0x0000000000000010,
		EyesTop          = 0x000000000000000F,
		BlinkAnimation   = 0x000000000000000E,
		Eyes             = 0x000000000000000D,
		BehindHat        = 0x000000000000000C,
		AccessoryBehind  = 0x000000000000000B,
		TshirtTop        = 0x000000000000000A,
		HandAccessory    = 0x0000000000000008,
		TopBackAccessory = 0x0000000000000009,
		Tshirt           = 0x0000000000000007,
		Tail             = 0x0000000000000006,
		BackAccessory    = 0x0000000000000005,
		FeetFront        = 0x0000000000000004,
		FeetBack         = 0x0000000000000003,
		Skin             = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.UICooldownButton+IGGBCCOCMGM
	 */
	enum class UICooldownButton_IGGBCCOCMGM : int32_t
	{
		Paused      = 0x0000000000000000,
		CoolingDown = 0x0000000000000001,
		Ready       = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.CardGame+BFGPAOAKHNC
	 */
	enum class CardGame_BFGPAOAKHNC : int32_t
	{
		NotStarted          = 0x0000000000000000,
		ChooseActions       = 0x0000000000000001,
		ProcessSnitch       = 0x0000000000000002,
		ProcessSteal        = 0x0000000000000003,
		ProcessSurveillance = 0x0000000000000004,
		ProcessTrade        = 0x0000000000000005,
		ProcessStash        = 0x0000000000000006,
		ProcessFraming      = 0x0000000000000007
	};

	/**
	 * Enum Assembly-CSharp.Card+CardType
	 */
	enum class Card_CardType : int32_t
	{
		Default = 0x0000000000000000,
		Blank   = 0x0000000000000001,
		Wild    = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.CardGameLogic+ActionBubble
	 */
	enum class CardGameLogic_ActionBubble : int32_t
	{
		Unselected   = 0x0000000000000000,
		Snitch       = 0x0000000000000001,
		Steal        = 0x0000000000000002,
		Surveillance = 0x0000000000000003,
		Trade        = 0x0000000000000004,
		Stash        = 0x0000000000000005,
		Framing      = 0x0000000000000006
	};

	/**
	 * Enum Assembly-CSharp.CardGameLogic+ActionState
	 */
	enum class CardGameLogic_ActionState : int32_t
	{
		Start           = 0x0000000000000000,
		ChoosePlayer    = 0x0000000000000001,
		ChooseOwnCard   = 0x0000000000000002,
		ChooseOtherCard = 0x0000000000000003,
		Finish          = 0x0000000000000004
	};

	/**
	 * Enum Assembly-CSharp.NKFADCJLAEF+CardGameMessageType
	 */
	enum class NKFADCJLAEF_CardGameMessageType : int32_t
	{
		PlayerList      = 0x0000000000000000,
		PlayerJoined    = 0x0000000000000001,
		PlayerLeft      = 0x0000000000000002,
		StartGame       = 0x0000000000000003,
		SetState        = 0x0000000000000004,
		SendAction      = 0x0000000000000005,
		SubmitAction    = 0x0000000000000006,
		Stash           = 0x0000000000000007,
		SubmitTrade     = 0x0000000000000008,
		DelayedStopGame = 0x0000000000000009,
		JoinFailed      = 0x000000000000000A
	};

	/**
	 * Enum Assembly-CSharp.NKFADCJLAEF+HFGGKPLEIHE
	 */
	enum class NKFADCJLAEF_HFGGKPLEIHE : int32_t
	{
		ValidateMessage = 0x000000000000006C,
		ProcessMessage  = 0x000000000000006D
	};

	/**
	 * Enum Assembly-CSharp.CardGamePlayerFrame+KBOMLAOGDLP
	 */
	enum class CardGamePlayerFrame_KBOMLAOGDLP : int32_t
	{
		Complete = 0x0000000000000000,
		Waiting  = 0x0000000000000001,
		Queued   = 0x0000000000000002,
		None     = 0x0000000000000003
	};

	/**
	 * Enum Assembly-CSharp.ActivateShuttle+HIKEGGDPHIN
	 */
	enum class ActivateShuttle_HIKEGGDPHIN : int32_t
	{
		Disabled = 0x0000000000000000,
		Active   = 0x0000000000000001,
		Pressed  = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.WarpDrive+HCIDODCGNOC
	 */
	enum class WarpDrive_HCIDODCGNOC : int32_t
	{
		WarpingUp   = 0x0000000000000000,
		WarpingDown = 0x0000000000000001,
		AtWarp      = 0x0000000000000002,
		Idle        = 0x0000000000000003
	};

	/**
	 * Enum Assembly-CSharp.ThreeCardMonte_IO+FFEMCIJLCNH
	 */
	enum class ThreeCardMonte_IO_FFEMCIJLCNH : int32_t
	{
		PreShuffle       = 0x0000000000000000,
		TurningCardsOver = 0x0000000000000001,
		Shuffling        = 0x0000000000000002,
		PostShuffle      = 0x0000000000000003,
		TurningRightCard = 0x0000000000000004
	};

	/**
	 * Enum Assembly-CSharp.Conversation+OAOGONAMNCA
	 */
	enum class Conversation_OAOGONAMNCA : int32_t
	{
		Normal   = 0x0000000000000000,
		Response = 0x0000000000000001,
		Goodbye  = 0x0000000000000002,
		System   = 0x0000000000000003
	};

	/**
	 * Enum Assembly-CSharp.ChapelConversation+DMGIBHPKNII
	 */
	enum class ChapelConversation_DMGIBHPKNII : int32_t
	{
		Normal   = 0x0000000000000000,
		Response = 0x0000000000000001,
		Goodbye  = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.StampDocuments.MDDIMAGOOOO+JPCNKBIBBNL
	 */
	enum class StampDocuments_MDDIMAGOOOO_JPCNKBIBBNL : int32_t
	{
		Greater = 0x0000000000000000,
		Less    = 0x0000000000000001
	};

	/**
	 * Enum Assembly-CSharp.StampDocuments.AEJLPMIHHDB+KKHLCHEFMNA
	 */
	enum class StampDocuments_AEJLPMIHHDB_KKHLCHEFMNA : int32_t
	{
		MustContain    = 0x0000000000000000,
		MustNotContain = 0x0000000000000001
	};

	/**
	 * Enum Assembly-CSharp.DraftPlayerHandler+PCOKIGCOJHI
	 */
	enum class DraftPlayerHandler_PCOKIGCOJHI : int32_t
	{
		Waiting      = 0x0000000000000000,
		Picking      = 0x0000000000000001,
		Picked       = 0x0000000000000002,
		Disconnected = 0x0000000000000003
	};

	/**
	 * Enum Assembly-CSharp.MenuUiGamepadHandler+INDEDKHDDBD
	 */
	enum class MenuUiGamepadHandler_INDEDKHDDBD : int32_t
	{
		Main   = 0x0000000000000000,
		Mode   = 0x0000000000000001,
		Map    = 0x0000000000000002,
		Custom = 0x0000000000000003
	};

	/**
	 * Enum Assembly-CSharp.Friend+JALKMOGGDCN
	 */
	enum class Friend_JALKMOGGDCN : int32_t
	{
		ADD     = 0x0000000000000000,
		WAITING = 0x0000000000000001,
		ADDED   = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.EBMNADNIBKG
	 */
	enum class EBMNADNIBKG : int32_t
	{
		NoBody        = 0x0000000000000000,
		Body          = 0x0000000000000001,
		InvisibleBody = 0x0000000000000002,
		LakeBodyLeft  = 0x0000000000000003,
		LakeBodyRight = 0x0000000000000004,
		Furnace       = 0x0000000000000005,
		Space         = 0x0000000000000006
	};

	/**
	 * Enum Assembly-CSharp.AOGIBIDODMM+NKGNADJNEJK
	 */
	enum class AOGIBIDODMM_NKGNADJNEJK : int32_t
	{
		PLUGIN_MESSAGE            = 0x0000000000000000,
		COMPLETE_TASK             = 0x0000000000000001,
		EMERGENCY                 = 0x0000000000000002,
		RECEIVE_KILL              = 0x0000000000000003,
		REPORT                    = 0x0000000000000004,
		VOTE                      = 0x0000000000000005,
		SABOTAGE                  = 0x0000000000000006,
		VENT                      = 0x0000000000000007,
		EXIT_VENT                 = 0x0000000000000008,
		CONNECT_TO_TASK           = 0x0000000000000009,
		ASSIGN_TASK               = 0x000000000000000A,
		LOOK_AT_CAMERAS           = 0x000000000000000B,
		SPECIAL_KILL              = 0x000000000000000C,
		UNASSIGN_TASK             = 0x000000000000000D,
		BROADCAST                 = 0x000000000000000E,
		FART                      = 0x000000000000000F,
		KICK_PLAYER               = 0x0000000000000010,
		DECREASE_TIMER            = 0x0000000000000011,
		EAT                       = 0x0000000000000012,
		SEND_KILL                 = 0x0000000000000013,
		MORPH                     = 0x0000000000000014,
		GAME_ENDED                = 0x0000000000000015,
		IS_CHATTING               = 0x0000000000000016,
		SILENCE                   = 0x0000000000000017,
		LOVER_SUICIDE             = 0x0000000000000018,
		VOTE_STATE_CHANGE         = 0x0000000000000019,
		NOTIFY_BEHAVIOR_VOICE_BAN = 0x000000000000001A,
		TELEPORT                  = 0x000000000000001B,
		DECON                     = 0x000000000000001C,
		MOVE_SHUTTLE              = 0x000000000000001D,
		DAMAGE_TELEPORTER         = 0x000000000000001E,
		INFECT                    = 0x000000000000001F,
		RECEIVE_VOTE              = 0x0000000000000020,
		ASSASSINATE               = 0x0000000000000021,
		PROCEEDING_VOTE_STATE     = 0x0000000000000022,
		SPAWN_KEYS                = 0x0000000000000023,
		PICK_UP_KEY               = 0x0000000000000024,
		KNOCK_DOOR                = 0x0000000000000025,
		EXIT_DOOR                 = 0x0000000000000026,
		SPECTATOR_INFO            = 0x0000000000000027,
		SPECTATOR_STATE           = 0x0000000000000028,
		SYNC_LOUNGE_MUSIC         = 0x0000000000000029,
		OPEN_DOOR                 = 0x000000000000002A,
		CLOSE_DOOR                = 0x000000000000002B,
		TOGGLE_DND                = 0x000000000000002C,
		HELIUM                    = 0x000000000000002D,
		WHISTLEBLOW_BOMB          = 0x000000000000002E,
		THROW_BOMB                = 0x000000000000002F,
		EXPLODE_BOMB              = 0x0000000000000030,
		SETTINGS_UPDATE           = 0x0000000000000031,
		FEED_GOD                  = 0x0000000000000032,
		PLAYER_PROPERTIES_UPDATE  = 0x0000000000000033,
		LIGHT_TORCH               = 0x0000000000000034,
		SET_GOD                   = 0x0000000000000035,
		DROP_BRIDGE               = 0x0000000000000036,
		CREATE_FOOD               = 0x0000000000000037,
		PICK_UP_FOOD              = 0x0000000000000038,
		TASK_COMPLETED            = 0x0000000000000039,
		GRAB_BODY                 = 0x000000000000003A,
		UPDATE_TASKBAR            = 0x000000000000003B,
		DROP_BODY                 = 0x000000000000003C,
		GENERATE_BOMB             = 0x000000000000003D,
		REQUEST_SYNC_LOUNGE_MUSIC = 0x000000000000003E,
		INVESTIGATE               = 0x000000000000003F,
		REVEAL_ROLE               = 0x0000000000000040,
		CHAT_MESSAGE              = 0x0000000000000041,
		USED_ROLE_SPECIAL         = 0x0000000000000042,
		MORTICIAN_ABILITY         = 0x0000000000000043,
		ENABLE_BOUNTY_ICON        = 0x0000000000000044,
		LAST_PEASANT              = 0x0000000000000045,
		DUELING_DODO_REVEAL       = 0x0000000000000046,
		ENABLE_ROLE_BUTTON        = 0x0000000000000047,
		CELEBRITY_DIED            = 0x0000000000000048,
		SPAWN_SACRIFICE_BELL      = 0x0000000000000049,
		PICK_UP_SACRIFICE_BELL    = 0x000000000000004A,
		BASEMENT_TELEPORT_EFFECT  = 0x000000000000004B,
		TURN_INVISIBLE            = 0x000000000000004C,
		PELICAN_EAT               = 0x000000000000004D,
		PELICAN_KILL              = 0x000000000000004E,
		PELICAN_RELEASE           = 0x000000000000004F,
		MEETING_TURN_THRALL       = 0x0000000000000050,
		MORPH_INTO_MUMMY          = 0x0000000000000051,
		LATCH_ONTO_VILLAGER       = 0x0000000000000052,
		SEND_MONSTER              = 0x0000000000000053,
		SERIAL_KILLER_TARGET      = 0x0000000000000054,
		SERIAL_KILLER_SUCCESS     = 0x0000000000000055,
		DRAFT_SEND_ORDER          = 0x0000000000000056,
		DRAFT_CHOOSE              = 0x0000000000000057,
		DRAFT_TURN                = 0x0000000000000058,
		DRAFT_DISCONNECT          = 0x0000000000000059,
		DRAFT_FAIL                = 0x000000000000005A,
		DRAFT_DATA                = 0x000000000000005B,
		GGD_LOBBY_GAME_EVENT      = 0x000000000000005C,
		GGD_LOBBY_GAME_LIST       = 0x000000000000005D,
		GGD_LOBBY_GAME_CREATE     = 0x000000000000005E,
		GGD_LOBBY_GAME_DESTROY    = 0x000000000000005F,
		GGD_LOBBY_GAME_JOIN       = 0x0000000000000060,
		GGD_LOBBY_GAME_LEAVE      = 0x0000000000000061,
		SERVER_SEND_ROLE          = 0x0000000000000062,
		CLIENT_RECEIVE_ROLE       = 0x0000000000000063,
		KICK_PLAYER_AFK           = 0x0000000000000064,
		START_GAME                = 0x0000000000000065,
		SERVER_ABORT_GAME         = 0x0000000000000066,
		SEND_DEBUG_SETTINGS       = 0x0000000000000067,
		TASK_ACHIEVEMENT          = 0x0000000000000068,
		GAINED_ACHIEVEMENT        = 0x0000000000000069,
		GAME_SETTINGS             = 0x000000000000006A,
		CHANGE_MAP                = 0x000000000000006B,
		LOUNGE_JSON_VALIDATE      = 0x000000000000006C,
		LOUNGE_JSON_PROCESS       = 0x000000000000006D,
		TRANSFER_MASTER_RECIEVE   = 0x000000000000006E,
		TRANSFER_MASTER_RESPONSE  = 0x000000000000006F,
		REGISTER_ACK              = 0x0000000000000070,
		GENERATE_RANDOM_SPAWN     = 0x0000000000000071,
		SET_IDENTITY              = 0x0000000000000072,
		SET_TARGET                = 0x0000000000000073,
		WRONG_KILL                = 0x0000000000000074,
		SET_VIP                   = 0x0000000000000075,
		DUELING_TO_DODO           = 0x0000000000000076,
		FORCE_EXIT_VENT           = 0x0000000000000077,
		MAKE_ADMIN                = 0x0000000000000078,
		ADMIN_VOICE_BAN           = 0x0000000000000079,
		ADMIN_SUPER_BAN           = 0x000000000000007A,
		SET_IN_ENDING_SCREEN      = 0x000000000000007B,
		RESET_MID_SPECTATORS      = 0x000000000000007C,
		RESEND_RECONNECTION_DATA  = 0x000000000000007D,
		ASSIGN_TASK_TIMER         = 0x000000000000007E,
		NOTIFY_MOD_VOICE_BAN      = 0x000000000000007F,
		SET_SANDSTORM_ACTIVE      = 0x0000000000000080,
		SPAWN_MUMMY               = 0x0000000000000081,
		MUMMY_MOVEMENT            = 0x0000000000000082,
		LOCUST_START              = 0x0000000000000083,
		TESTING_MIC               = 0x0000000000000084,
		DRAFT_RECONNECT           = 0x0000000000000085,
		SYNC_DESERT_BOAT          = 0x0000000000000086,
		UPDATE_FIRE_INFO          = 0x0000000000000087,
		GACHA_DATA                = 0x0000000000000088,
		GACHA_PLAY                = 0x0000000000000089,
		REJECT_VOTE               = 0x000000000000008A,
		STALKER_CHOOSE_TARGET     = 0x000000000000008B,
		ESPER_SPECTATE            = 0x000000000000008C,
		ESPER_BUTTON_CHANGE       = 0x000000000000008D,
		CHANGE_MAP_SKIN           = 0x000000000000008E,
		SEND_KILL_SWITCH_DATA     = 0x000000000000008F
	};

	/**
	 * Enum Assembly-CSharp.AOGIBIDODMM+ENANHPCELNK
	 */
	enum class AOGIBIDODMM_ENANHPCELNK : uint8_t
	{
		SetMasterClient   = 0x00000000000000D0,
		VacantViewIds     = 0x00000000000000D3,
		Rpc               = 0x00000000000000C8,
		UnreliableRead    = 0x00000000000000C9,
		Instantiate       = 0x00000000000000CA,
		CloseConnection   = 0x00000000000000CB,
		Destroy           = 0x00000000000000CC,
		RemoveCachedRPCs  = 0x00000000000000CD,
		ReliableRead      = 0x00000000000000CE,
		DestroyPlayer     = 0x00000000000000CF,
		OwnershipRequest  = 0x00000000000000D1,
		OwnershipTransfer = 0x00000000000000D2,
		OwnershipUpdate   = 0x00000000000000D4,
		Recall            = 0x00000000000000D6,
		Debugger          = 0x00000000000000D9,
		Admin             = 0x00000000000000DB
	};

	/**
	 * Enum Assembly-CSharp.AOGIBIDODMM+EFAKLLJHNJA
	 */
	enum class AOGIBIDODMM_EFAKLLJHNJA : uint8_t
	{
		CantHearYou       = 0x0000000000000000,
		ChangeColour      = 0x0000000000000001,
		ChangeCurrentRoom = 0x0000000000000002,
		ClickRpc          = 0x0000000000000003,
		DestroyRpc        = 0x0000000000000004,
		DestroySpaceship  = 0x0000000000000005,
		Fire              = 0x0000000000000006,
		Flip              = 0x0000000000000007,
		HeresWhy          = 0x0000000000000008,
		RespawnSpaceship  = 0x0000000000000009
	};

	/**
	 * Enum Assembly-CSharp.AJOLNCJDGLB
	 */
	enum class AJOLNCJDGLB : int32_t
	{
		KILL      = 0x0000000000000000,
		USE       = 0x0000000000000001,
		PRIMARY   = 0x0000000000000002,
		SECONDARY = 0x0000000000000003,
		TERTIARY  = 0x0000000000000004,
		REPORT    = 0x0000000000000005,
		VENT      = 0x0000000000000006
	};

	/**
	 * Enum Assembly-CSharp.JDFFKLMDIBC
	 */
	enum class JDFFKLMDIBC : int16_t
	{
		None          = 0x0000000000000000,
		Goose         = 0x0000000000000001,
		Duck          = 0x0000000000000002,
		Dodo          = 0x0000000000000003,
		Bounty        = 0x0000000000000004,
		Mechanic      = 0x0000000000000005,
		Technician    = 0x0000000000000006,
		Medium        = 0x0000000000000007,
		Vigilante     = 0x0000000000000008,
		Cannibal      = 0x0000000000000009,
		Morphling     = 0x000000000000000A,
		Sheriff       = 0x000000000000000B,
		Silencer      = 0x000000000000000C,
		Canadian      = 0x000000000000000D,
		LoverDuck     = 0x000000000000000E,
		LoverGoose    = 0x000000000000000F,
		Vulture       = 0x0000000000000010,
		Professional  = 0x0000000000000011,
		Spy           = 0x0000000000000012,
		Mimic         = 0x0000000000000013,
		Detective     = 0x0000000000000014,
		Pigeon        = 0x0000000000000015,
		Birdwatcher   = 0x0000000000000016,
		Assassin      = 0x0000000000000017,
		Falcon        = 0x0000000000000018,
		Hitman        = 0x0000000000000019,
		Bodyguard     = 0x000000000000001A,
		Snitch        = 0x000000000000001B,
		Politician    = 0x000000000000001C,
		Locksmith     = 0x000000000000001D,
		Mortician     = 0x000000000000001E,
		Celebrity     = 0x000000000000001F,
		Party         = 0x0000000000000020,
		Demolitionist = 0x0000000000000021,
		DuelingDodo   = 0x0000000000000022,
		GHGoose       = 0x0000000000000023,
		GHDuck        = 0x0000000000000024,
		GHBounty      = 0x0000000000000025,
		HNSGoose      = 0x0000000000000026,
		HNSDuck       = 0x0000000000000027,
		HNSBounty     = 0x0000000000000028,
		DNDDuck       = 0x0000000000000029,
		DNDFalcon     = 0x000000000000002A,
		DNDVulture    = 0x000000000000002B,
		DNDMorphling  = 0x000000000000002C,
		FPGoose       = 0x000000000000002D,
		ExploreGoose  = 0x000000000000002E,
		TTVampire     = 0x000000000000002F,
		TTPeasant     = 0x0000000000000030,
		TTThrall      = 0x0000000000000031,
		Spectator     = 0x0000000000000032,
		IdentityThief = 0x0000000000000033,
		Adventurer    = 0x0000000000000034,
		Avenger       = 0x0000000000000035,
		Ninja         = 0x0000000000000036,
		Undertaker    = 0x0000000000000037,
		Snoop         = 0x0000000000000038,
		Esper         = 0x0000000000000039,
		Invisibility  = 0x000000000000003A,
		Astral        = 0x000000000000003B,
		Pelican       = 0x000000000000003C,
		TTEThrall     = 0x000000000000003D,
		TTMummy       = 0x000000000000003E,
		SerialKiller  = 0x000000000000003F,
		Engineer      = 0x0000000000000040,
		Warlock       = 0x0000000000000041,
		StreetUrchin  = 0x0000000000000042,
		Tracker       = 0x0000000000000043,
		EsperDuck     = 0x0000000000000044,
		Stalker       = 0x0000000000000045
	};

	/**
	 * Enum Assembly-CSharp.KNAKDHEOALP+GPPOBMMEIKF
	 */
	enum class KNAKDHEOALP_GPPOBMMEIKF : int32_t
	{
		KOREAN = 0x0000000000000000,
		LUNAR  = 0x0000000000000001
	};

	/**
	 * Enum Assembly-CSharp.LBLAAKIIDCG
	 */
	enum class LBLAAKIIDCG : int32_t
	{
		HEARTS  = 0x0000000000000000,
		CLUB    = 0x0000000000000001,
		SPADE   = 0x0000000000000002,
		DIAMOND = 0x0000000000000003
	};

	/**
	 * Enum Assembly-CSharp.FPGPNIDMGEJ
	 */
	enum class FPGPNIDMGEJ : int32_t
	{
		FIRST_CARD_GAME = 0x0000000000000000,
		BATTLE_BIRDS    = 0x0000000000000001
	};

	/**
	 * Enum Assembly-CSharp.NNBFMPFKBEF
	 */
	enum class NNBFMPFKBEF : int32_t
	{
		Space            = 0x0000000000000000,
		Teleporter       = 0x0000000000000001,
		ShuttleSuffocate = 0x0000000000000002,
		ShuttleCrush     = 0x0000000000000003,
		ChandelierCrush  = 0x0000000000000004,
		FallOffBridge    = 0x0000000000000005,
		BoulderCrush     = 0x0000000000000006,
		MummyDeath       = 0x0000000000000007,
		LocustsKill      = 0x0000000000000008
	};

	/**
	 * Enum Assembly-CSharp.NIMOAKAOMDD+FKIOLHOCIHP
	 */
	enum class NIMOAKAOMDD_FKIOLHOCIHP : int32_t
	{
		NONE       = 0x0000000000000000,
		FURNACE    = 0x0000000000000001,
		LAKE_LEFT  = 0x0000000000000002,
		LAKE_RIGHT = 0x0000000000000003
	};

	/**
	 * Enum Assembly-CSharp.PGHBOEGEEOE
	 */
	enum class PGHBOEGEEOE : int32_t
	{
		Both       = 0x0000000000000000,
		Horizontal = 0x0000000000000001,
		Vertical   = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.BLNLOEELPLC+DOMPJLHPHNM
	 */
	enum class BLNLOEELPLC_DOMPJLHPHNM : int32_t
	{
		NOT_DETERMINED = 0x0000000000000000,
		RESTRICTED     = 0x0000000000000001,
		DENIED         = 0x0000000000000002,
		AUTHORIZED     = 0x0000000000000003
	};

	/**
	 * Enum Assembly-CSharp.GIFIOHOGAEI
	 */
	enum class GIFIOHOGAEI : int32_t
	{
		LikelyReal  = 0x0000000000000000,
		Unknown     = 0x0000000000000001,
		Unsupported = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.IIBBEADODKN
	 */
	enum class IIBBEADODKN : int32_t
	{
		Revoked    = 0x0000000000000000,
		Authorized = 0x0000000000000001,
		NotFound   = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.Shop.IAPManager+JCGNGHCDKDH
	 */
	enum class IAPManager_JCGNGHCDKDH : int32_t
	{
		none                       = 0x0000000000000000,
		StandardPack               = 0x0000000000000001,
		FoundersPack               = 0x0000000000000002,
		Gold20                     = 0x0000000000000003,
		Gold80                     = 0x0000000000000004,
		Gold200                    = 0x0000000000000005,
		Gold600                    = 0x0000000000000006,
		Gold1600                   = 0x0000000000000007,
		Gold4000                   = 0x0000000000000008,
		warewuf                    = 0x0000000000000009,
		SupporterPack              = 0x000000000000000A,
		StarterPack                = 0x000000000000000B,
		CultistPack                = 0x000000000000000C,
		HunterPack                 = 0x000000000000000D,
		BasementPack               = 0x000000000000000E,
		SummerOfGalaxy             = 0x000000000000000F,
		TrickOrTreat2022           = 0x0000000000000010,
		TrickOrTreat2022Pumpkin    = 0x0000000000000011,
		TrickOrTreat2022Web        = 0x0000000000000012,
		TrickOrTreat2022PumpkinPet = 0x0000000000000013,
		WinterHolidayBundle        = 0x0000000000000014,
		WinterJoyousPack           = 0x0000000000000015,
		WinterFestivePack          = 0x0000000000000016,
		AncientSandsPack           = 0x0000000000000017
	};

	/**
	 * Enum Assembly-CSharp.Shop.IAPManager+MBDFDJPNKAG
	 */
	enum class IAPManager_MBDFDJPNKAG : int32_t
	{
		iOSIAP     = 0x0000000000000000,
		AndroidIAP = 0x0000000000000001,
		SamsungIAP = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.Gaggle.Friends.FriendManager+NLBJCIABMEJ
	 */
	enum class FriendManager_NLBJCIABMEJ : int32_t
	{
		OFFLINE     = 0x0000000000000000,
		ONLINE_MENU = 0x0000000000000001,
		IN_LOBBY    = 0x0000000000000002,
		IN_GAME     = 0x0000000000000003
	};

	/**
	 * Enum Assembly-CSharp.Gaggle.Friends.FriendManager+FPMEIBJHKDM
	 */
	enum class FriendManager_FPMEIBJHKDM : int32_t
	{
		ALLOW_JOIN    = 0x0000000000000000,
		ALLOW_REQUEST = 0x0000000000000001,
		DND           = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.MOMNOHJEIFE
	 */
	enum class MOMNOHJEIFE : int32_t
	{
		Pending  = 0x0000000000000000,
		Rejected = 0x0000000000000001,
		Resolved = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.KDAABLJKNKK+HAMBMHJHFFP
	 */
	enum class KDAABLJKNKK_HAMBMHJHFFP : int32_t
	{
		Signature = 0x0000000000000000,
		NonMaster = 0x0000000000000001
	};

	/**
	 * Enum Assembly-CSharp.PIANHEOEIKK
	 */
	enum class PIANHEOEIKK : int32_t
	{
		Array   = 0x0000000000000000,
		Object  = 0x0000000000000001,
		Double  = 0x0000000000000002,
		Int64   = 0x0000000000000003,
		Boolean = 0x0000000000000004,
		String  = 0x0000000000000005,
		Null    = 0x0000000000000006
	};

	/**
	 * Enum Assembly-CSharp.ABDDMKHACOD
	 */
	enum class ABDDMKHACOD : int32_t
	{
		OptIn   = 0x0000000000000000,
		OptOut  = 0x0000000000000001,
		Default = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.APIs.FullSerializer.Source.Aot.fsAotConfiguration+KNKCNBNNFJN
	 */
	enum class fsAotConfiguration_KNKCNBNNFJN : int32_t
	{
		Default  = 0x0000000000000000,
		Enabled  = 0x0000000000000001,
		Disabled = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.Managers.GiftsManager+EOKPJBEPDBL
	 */
	enum class GiftsManager_EOKPJBEPDBL : int32_t
	{
		OK          = 0x0000000000000000,
		ALREADY_OWN = 0x0000000000000001
	};

	/**
	 * Enum Assembly-CSharp.LCBDPHDKHKJ
	 */
	enum class LCBDPHDKHKJ : int32_t
	{
		Mute      = 0x0000000000000000,
		PTT       = 0x0000000000000001,
		Deafen    = 0x0000000000000002,
		Fart      = 0x0000000000000003,
		Primary   = 0x0000000000000004,
		Secondary = 0x0000000000000005,
		Tertiary  = 0x0000000000000006,
		Use       = 0x0000000000000007,
		Report    = 0x0000000000000008,
		Map       = 0x0000000000000009,
		Chat      = 0x000000000000000A,
		Tasks     = 0x000000000000000B,
		MoveUp    = 0x000000000000000C,
		MoveDown  = 0x000000000000000D,
		MoveLeft  = 0x000000000000000E,
		MoveRight = 0x000000000000000F
	};

	/**
	 * Enum Assembly-CSharp.Managers.InfoManagers.ReportPlayerManager+ACIEPOKFKLB
	 */
	enum class ReportPlayerManager_ACIEPOKFKLB : int32_t
	{
		Leave     = 0x0000000000000000,
		Afk       = 0x0000000000000001,
		FailedAck = 0x0000000000000002,
		Report    = 0x0000000000000003,
		TaskIdle  = 0x0000000000000004
	};

	/**
	 * Enum Assembly-CSharp.Managers.GameManagers.GameManager+JOMFFDDICNI
	 */
	enum class GameManager_JOMFFDDICNI : int32_t
	{
		InLobby    = 0x0000000000000000,
		Drafting   = 0x0000000000000001,
		InGame     = 0x0000000000000002,
		Opening    = 0x0000000000000003,
		Discussion = 0x0000000000000004,
		Voting     = 0x0000000000000005,
		Waiting    = 0x0000000000000006,
		Proceeding = 0x0000000000000007
	};

	/**
	 * Enum Assembly-CSharp.CICMMHGNKHG+GCHBDDCDKPP
	 */
	enum class CICMMHGNKHG_GCHBDDCDKPP : int32_t
	{
		Hardware = 0x0000000000000000,
		Touch    = 0x0000000000000001
	};

	/**
	 * Enum Assembly-CSharp.UnityStandardAssets.CrossPlatformInput.Joystick+MAHEHGPFFJK
	 */
	enum class Joystick_MAHEHGPFFJK : int32_t
	{
		Both           = 0x0000000000000000,
		OnlyHorizontal = 0x0000000000000001,
		OnlyVertical   = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.UnityStandardAssets.CrossPlatformInput.TouchPad+HANPJJJJKMH
	 */
	enum class TouchPad_HANPJJJJKMH : int32_t
	{
		Both           = 0x0000000000000000,
		OnlyHorizontal = 0x0000000000000001,
		OnlyVertical   = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.UnityStandardAssets.CrossPlatformInput.TouchPad+JMMGCHGNAKC
	 */
	enum class TouchPad_JMMGCHGNAKC : int32_t
	{
		Absolute = 0x0000000000000000,
		Relative = 0x0000000000000001,
		Swipe    = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.ExitGames.Demos.DemoPunVoice.CharacterInstantiation+SpawnSequence
	 */
	enum class CharacterInstantiation_SpawnSequence : int32_t
	{
		Connection = 0x0000000000000000,
		Random     = 0x0000000000000001,
		RoundRobin = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.Google.GoogleSignInStatusCode
	 */
	enum class GoogleSignInStatusCode : int32_t
	{
		SuccessCached   = -1,
		Success         = 0x0000000000000000,
		ApiNotConnected = 0x0000000000000001,
		Canceled        = 0x0000000000000002,
		Interrupted     = 0x0000000000000003,
		InvalidAccount  = 0x0000000000000004,
		Timeout         = 0x0000000000000005,
		DeveloperError  = 0x0000000000000006,
		InternalError   = 0x0000000000000007,
		NetworkError    = 0x0000000000000008,
		Error           = 0x0000000000000009
	};

	/**
	 * Enum Assembly-CSharp.GooglePlayGames.BasicApi.DataSource
	 */
	enum class DataSource : int32_t
	{
		ReadCacheOrNetwork = 0x0000000000000000,
		ReadNetworkOnly    = 0x0000000000000001
	};

	/**
	 * Enum Assembly-CSharp.GooglePlayGames.BasicApi.ResponseStatus
	 */
	enum class ResponseStatus : int32_t
	{
		Success               = 0x0000000000000001,
		SuccessWithStale      = 0x0000000000000002,
		LicenseCheckFailed    = -1,
		InternalError         = -2,
		NotAuthorized         = -3,
		VersionUpdateRequired = -4,
		Timeout               = -5,
		ResolutionRequired    = -6
	};

	/**
	 * Enum Assembly-CSharp.GooglePlayGames.BasicApi.UIStatus
	 */
	enum class UIStatus : int32_t
	{
		Valid                 = 0x0000000000000001,
		InternalError         = -2,
		NotAuthorized         = -3,
		VersionUpdateRequired = -4,
		Timeout               = -5,
		UserClosedUI          = -6,
		UiBusy                = -12,
		NetworkError          = -20
	};

	/**
	 * Enum Assembly-CSharp.GooglePlayGames.BasicApi.LeaderboardStart
	 */
	enum class LeaderboardStart : int32_t
	{
		TopScores      = 0x0000000000000001,
		PlayerCentered = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.GooglePlayGames.BasicApi.LeaderboardTimeSpan
	 */
	enum class LeaderboardTimeSpan : int32_t
	{
		Daily   = 0x0000000000000001,
		Weekly  = 0x0000000000000002,
		AllTime = 0x0000000000000003
	};

	/**
	 * Enum Assembly-CSharp.GooglePlayGames.BasicApi.LeaderboardCollection
	 */
	enum class LeaderboardCollection : int32_t
	{
		Public = 0x0000000000000001,
		Social = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.GooglePlayGames.BasicApi.FriendsListVisibilityStatus
	 */
	enum class FriendsListVisibilityStatus : int32_t
	{
		Unknown            = 0x0000000000000000,
		Visible            = 0x0000000000000001,
		ResolutionRequired = 0x0000000000000002,
		Unavailable        = 0x0000000000000003,
		NetworkError       = -4,
		NotAuthorized      = -5
	};

	/**
	 * Enum Assembly-CSharp.GooglePlayGames.BasicApi.LoadFriendsStatus
	 */
	enum class LoadFriendsStatus : int32_t
	{
		Unknown            = 0x0000000000000000,
		Completed          = 0x0000000000000001,
		LoadMore           = 0x0000000000000002,
		ResolutionRequired = -3,
		InternalError      = -4,
		NotAuthorized      = -5,
		NetworkError       = -6
	};

	/**
	 * Enum Assembly-CSharp.GooglePlayGames.BasicApi.VideoCaptureMode
	 */
	enum class VideoCaptureMode : int32_t
	{
		Unknown = -1,
		File    = 0x0000000000000000,
		Stream  = 0x0000000000000001
	};

	/**
	 * Enum Assembly-CSharp.GooglePlayGames.BasicApi.VideoQualityLevel
	 */
	enum class VideoQualityLevel : int32_t
	{
		Unknown = -1,
		SD      = 0x0000000000000000,
		HD      = 0x0000000000000001,
		XHD     = 0x0000000000000002,
		FullHD  = 0x0000000000000003
	};

	/**
	 * Enum Assembly-CSharp.GooglePlayGames.BasicApi.VideoCaptureOverlayState
	 */
	enum class VideoCaptureOverlayState : int32_t
	{
		Unknown   = -1,
		Shown     = 0x0000000000000001,
		Started   = 0x0000000000000002,
		Stopped   = 0x0000000000000003,
		Dismissed = 0x0000000000000004
	};

	/**
	 * Enum Assembly-CSharp.GooglePlayGames.BasicApi.Gravity
	 */
	enum class Gravity : int32_t
	{
		TOP               = 0x0000000000000030,
		BOTTOM            = 0x0000000000000050,
		LEFT              = 0x0000000000000003,
		RIGHT             = 0x0000000000000005,
		CENTER_HORIZONTAL = 0x0000000000000001
	};

	/**
	 * Enum Assembly-CSharp.GooglePlayGames.BasicApi.SignInInteractivity
	 */
	enum class SignInInteractivity : int32_t
	{
		NoPrompt        = 0x0000000000000000,
		CanPromptAlways = 0x0000000000000001,
		CanPromptOnce   = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.GooglePlayGames.BasicApi.SignInStatus
	 */
	enum class SignInStatus : int32_t
	{
		Success           = 0x0000000000000000,
		UiSignInRequired  = 0x0000000000000001,
		DeveloperError    = 0x0000000000000002,
		NetworkError      = 0x0000000000000003,
		InternalError     = 0x0000000000000004,
		Canceled          = 0x0000000000000005,
		AlreadyInProgress = 0x0000000000000006,
		Failed            = 0x0000000000000007,
		NotAuthenticated  = 0x0000000000000008
	};

	/**
	 * Enum Assembly-CSharp.GooglePlayGames.BasicApi.SavedGame.ConflictResolutionStrategy
	 */
	enum class ConflictResolutionStrategy : int32_t
	{
		UseLongestPlaytime   = 0x0000000000000000,
		UseOriginal          = 0x0000000000000001,
		UseUnmerged          = 0x0000000000000002,
		UseManual            = 0x0000000000000003,
		UseLastKnownGood     = 0x0000000000000004,
		UseMostRecentlySaved = 0x0000000000000005
	};

	/**
	 * Enum Assembly-CSharp.GooglePlayGames.BasicApi.SavedGame.SavedGameRequestStatus
	 */
	enum class SavedGameRequestStatus : int32_t
	{
		Success             = 0x0000000000000001,
		TimeoutError        = -1,
		InternalError       = -2,
		AuthenticationError = -3,
		BadInputError       = -4
	};

	/**
	 * Enum Assembly-CSharp.GooglePlayGames.BasicApi.SavedGame.SelectUIStatus
	 */
	enum class SelectUIStatus : int32_t
	{
		SavedGameSelected   = 0x0000000000000001,
		UserClosedUI        = 0x0000000000000002,
		InternalError       = -1,
		TimeoutError        = -2,
		AuthenticationError = -3,
		BadInputError       = -4,
		UiBusy              = -5
	};

	/**
	 * Enum Assembly-CSharp.GooglePlayGames.BasicApi.Nearby.ConnectionResponse+Status
	 */
	enum class ConnectionResponse_Status : int32_t
	{
		Accepted                  = 0x0000000000000000,
		Rejected                  = 0x0000000000000001,
		ErrorInternal             = 0x0000000000000002,
		ErrorNetworkNotConnected  = 0x0000000000000003,
		ErrorEndpointNotConnected = 0x0000000000000004,
		ErrorAlreadyConnected     = 0x0000000000000005
	};

	/**
	 * Enum Assembly-CSharp.GooglePlayGames.BasicApi.Nearby.InitializationStatus
	 */
	enum class InitializationStatus : int32_t
	{
		Success               = 0x0000000000000000,
		VersionUpdateRequired = 0x0000000000000001,
		InternalError         = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.GooglePlayGames.BasicApi.Events.EventVisibility
	 */
	enum class EventVisibility : int32_t
	{
		Hidden   = 0x0000000000000001,
		Revealed = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.GHHLNBPFCCK+IMAJMNEKAHJ
	 */
	enum class GHHLNBPFCCK_IMAJMNEKAHJ : int32_t
	{
		Yellow = 0x0000000000000000,
		Blue   = 0x0000000000000001
	};

	/**
	 * Enum Assembly-CSharp.Objects.GameSettings+BFCFAGFBCOG
	 */
	enum class GameSettings_BFCFAGFBCOG : int32_t
	{
		Classic      = 0x0000000000000000,
		GooseHunt    = 0x0000000000000001,
		DineAndDash  = 0x0000000000000002,
		TrickOrTreat = 0x0000000000000003,
		HangingOut   = 0x0000000000000004,
		Draft        = 0x0000000000000005,
		FowlPlay     = 0x0000000000000006,
		HideAndSeek  = 0x0000000000000007
	};

	/**
	 * Enum Assembly-CSharp.Objects.GameSettings+NGNMJKHMCEE
	 */
	enum class GameSettings_NGNMJKHMCEE : int32_t
	{
		Shown         = 0x0000000000000000,
		AfterMeetings = 0x0000000000000001,
		Hidden        = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.Objects.GameSettings+IBPMGMGDOGK
	 */
	enum class GameSettings_IBPMGMGDOGK : int32_t
	{
		Shown      = 0x0000000000000000,
		Colorblind = 0x0000000000000001,
		Blind      = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.Objects.GameSettings+FGGANELHAIE
	 */
	enum class GameSettings_FGGANELHAIE : int32_t
	{
		VeryDark = 0x0000000000000000,
		Dark     = 0x0000000000000001,
		Low      = 0x0000000000000002,
		Medium   = 0x0000000000000003,
		High     = 0x0000000000000004
	};

	/**
	 * Enum Assembly-CSharp.Objects.GameSettings+BOCIHADPMEN
	 */
	enum class GameSettings_BOCIHADPMEN : int32_t
	{
		Slow   = 0x0000000000000000,
		Medium = 0x0000000000000001,
		High   = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.Objects.GameSettings+IIMMPDMKOBK
	 */
	enum class GameSettings_IIMMPDMKOBK : int32_t
	{
		Fifteen   = 0x0000000000000000,
		Thirty    = 0x0000000000000001,
		FortyFive = 0x0000000000000002,
		Sixty     = 0x0000000000000003
	};

	/**
	 * Enum Assembly-CSharp.Objects.GameSettings+HLCMLGDGCAD
	 */
	enum class GameSettings_HLCMLGDGCAD : int32_t
	{
		Fifteen   = 0x0000000000000000,
		Thirty    = 0x0000000000000001,
		FortyFive = 0x0000000000000002,
		Sixty     = 0x0000000000000003
	};

	/**
	 * Enum Assembly-CSharp.Objects.GameSettings+AIDFPJGLJHB
	 */
	enum class GameSettings_AIDFPJGLJHB : int32_t
	{
		Ten        = 0x0000000000000000,
		Fifteen    = 0x0000000000000001,
		Twenty     = 0x0000000000000002,
		TwentyFive = 0x0000000000000003,
		Thirty     = 0x0000000000000004,
		ThirtyFive = 0x0000000000000005,
		Forty      = 0x0000000000000006
	};

	/**
	 * Enum Assembly-CSharp.Objects.GameSettings+FNFLNCOIHDB
	 */
	enum class GameSettings_FNFLNCOIHDB : int32_t
	{
		Five    = 0x0000000000000000,
		Ten     = 0x0000000000000001,
		Fifteen = 0x0000000000000002,
		Twenty  = 0x0000000000000003
	};

	/**
	 * Enum Assembly-CSharp.Objects.GameSettings+EIJHLAMKKJG
	 */
	enum class GameSettings_EIJHLAMKKJG : int32_t
	{
		Ten    = 0x0000000000000000,
		Twenty = 0x0000000000000001,
		Thirty = 0x0000000000000002,
		Forty  = 0x0000000000000003,
		Fifty  = 0x0000000000000004,
		Sixty  = 0x0000000000000005
	};

	/**
	 * Enum Assembly-CSharp.Objects.GameSettings+EBMKIMMDCLL
	 */
	enum class GameSettings_EBMKIMMDCLL : int32_t
	{
		Forty   = 0x0000000000000000,
		Fifty   = 0x0000000000000001,
		Sixty   = 0x0000000000000002,
		Seventy = 0x0000000000000003,
		Eighty  = 0x0000000000000004,
		Ninety  = 0x0000000000000005
	};

	/**
	 * Enum Assembly-CSharp.Objects.GameSettings+HGLGENOFEAN
	 */
	enum class GameSettings_HGLGENOFEAN : int32_t
	{
		Zero  = 0x0000000000000000,
		One   = 0x0000000000000001,
		Two   = 0x0000000000000002,
		Three = 0x0000000000000003
	};

	/**
	 * Enum Assembly-CSharp.EBOFJGHNBII+KNCPDPLEIKI
	 */
	enum class EBOFJGHNBII_KNCPDPLEIKI : int32_t
	{
		Int    = 0x0000000000000000,
		String = 0x0000000000000001,
		Float  = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.Objects.RequestError+FPGEPAPHENE
	 */
	enum class RequestError_FPGEPAPHENE : int32_t
	{
		Exception = 0x0000000000000000,
		Message   = 0x0000000000000001
	};

	/**
	 * Enum Assembly-CSharp.AFOJLDLPJJI+JFCAOPKOPMG
	 */
	enum class AFOJLDLPJJI_JFCAOPKOPMG : int32_t
	{
		Task   = 0x0000000000000000,
		Kill   = 0x0000000000000001,
		Report = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.IFFFHHEDHOP+MEFPICKNENI
	 */
	enum class IFFFHHEDHOP_MEFPICKNENI : int32_t
	{
		None   = 0x0000000000000000,
		Banned = 0x0000000000000001
	};

	/**
	 * Enum Assembly-CSharp.HNAHBLPEIHI+PBIIFNKIKAP
	 */
	enum class HNAHBLPEIHI_PBIIFNKIKAP : int32_t
	{
		FreeView   = 0x0000000000000000,
		Spectating = 0x0000000000000001
	};

	/**
	 * Enum Assembly-CSharp.JAFPBGAOKED
	 */
	enum class JAFPBGAOKED : int16_t
	{
		None         = 0x0000000000000000,
		Murdered     = 0x0000000000000001,
		Spaced       = 0x0000000000000002,
		Voted        = 0x0000000000000003,
		RunOver      = 0x0000000000000004,
		Assassinated = 0x0000000000000005
	};

	/**
	 * Enum Assembly-CSharp.NACBFFEFKHE
	 */
	enum class NACBFFEFKHE : int32_t
	{
		Sample      = 0x0000000000000000,
		Morph       = 0x0000000000000001,
		Morphed     = 0x0000000000000002,
		CoolingDown = 0x0000000000000003
	};

	/**
	 * Enum Assembly-CSharp.OBBBICOLNAI
	 */
	enum class OBBBICOLNAI : int32_t
	{
		NotInvestigated          = 0x0000000000000000,
		InvestigatedWhileMorphed = 0x0000000000000001,
		Investigated             = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.GHGELPKKCJN
	 */
	enum class GHGELPKKCJN : int32_t
	{
		Sample      = 0x0000000000000000,
		Morph       = 0x0000000000000001,
		Morphed     = 0x0000000000000002,
		CoolingDown = 0x0000000000000003
	};

	/**
	 * Enum Assembly-CSharp.Handlers.SettingsHandler.MaybeToggleSettingValueHandler+OMOCFJPFMLP
	 */
	enum class MaybeToggleSettingValueHandler_OMOCFJPFMLP : int32_t
	{
		No    = 0x0000000000000000,
		Yes   = 0x0000000000000001,
		Maybe = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.Handlers.GameHandlers.RoofHandler+BFLLFFHMBMJ
	 */
	enum class RoofHandler_BFLLFFHMBMJ : int32_t
	{
		MovingInside  = 0x0000000000000000,
		MovingOutside = 0x0000000000000001,
		MovingFarAway = 0x0000000000000002,
		MovingNearby  = 0x0000000000000003
	};

	/**
	 * Enum Assembly-CSharp.Handlers.GameHandlers.TaskHandlers.TargetHandler+NDJECGMIFIN
	 */
	enum class TargetHandler_NDJECGMIFIN : int32_t
	{
		None     = 0x0000000000000000,
		Task     = 0x0000000000000001,
		Sabotage = 0x0000000000000002,
		Body     = 0x0000000000000003,
		Player   = 0x0000000000000004,
		Kill     = 0x0000000000000005,
		Stalk    = 0x0000000000000006
	};

	/**
	 * Enum Assembly-CSharp.Handlers.GameHandlers.SpecialBehaviour.SaboTextHandler+OIAOFLLALIK
	 */
	enum class SaboTextHandler_OIAOFLLALIK : int32_t
	{
		SabotageTwo = 0x0000000000000000,
		SabotageOne = 0x0000000000000001,
		Reviving    = 0x0000000000000002,
		LastPeasant = 0x0000000000000003
	};

	/**
	 * Enum Assembly-CSharp.Handlers.GameHandlers.SpecialBehaviour.ShuttleHandler+CAAKHLFABJD
	 */
	enum class ShuttleHandler_CAAKHLFABJD : int32_t
	{
		LeftPanel    = 0x0000000000000000,
		ShuttlePanel = 0x0000000000000001,
		RightPanel   = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.Handlers.GameHandlers.SpecialBehaviour.SabotageHandlers.SabotageButtonHandler+ButtonType
	 */
	enum class SabotageButtonHandler_ButtonType : int32_t
	{
		Default   = 0x0000000000000000,
		Victorian = 0x0000000000000001
	};

	/**
	 * Enum Assembly-CSharp.Handlers.GameHandlers.SpecialBehaviour.SabotageHandlers.SabotageButtonHandler+CooldownType
	 */
	enum class SabotageButtonHandler_CooldownType : int32_t
	{
		ResetOnRound = 0x0000000000000000,
		Countdown    = 0x0000000000000001
	};

	/**
	 * Enum Assembly-CSharp.Handlers.MenuSceneHandlers.DailyUnlockRewardHandler+DPCMFJPLPNC
	 */
	enum class DailyUnlockRewardHandler_DPCMFJPLPNC : int32_t
	{
		redeemed    = 0x0000000000000000,
		available   = 0x0000000000000001,
		unavailable = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp.Handlers.MenuSceneHandlers.RoomsListHandler+EGCOMFINPEI
	 */
	enum class RoomsListHandler_EGCOMFINPEI : int32_t
	{
		None       = 0x0000000000000000,
		Name       = 0x0000000000000001,
		Players    = 0x0000000000000002,
		Map        = 0x0000000000000004,
		Ping       = 0x0000000000000008,
		Ascending  = 0x0000000000000010,
		Descending = 0x0000000000000020,
		Gamemode   = 0x0000000000000040
	};

	/**
	 * Enum Assembly-CSharp.Handlers.LobbyHandlers.LobbySceneHandler+KEACIDGJGJH
	 */
	enum class LobbySceneHandler_KEACIDGJGJH : int32_t
	{
		NotReady  = 0x0000000000000000,
		Ready     = 0x0000000000000001,
		Spectator = 0x0000000000000002
	};

	/**
	 * Enum BestHTTP.PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction
	 */
	enum class NotifyCollectionChangedAction : int32_t
	{
		Add     = 0x0000000000000000,
		Remove  = 0x0000000000000001,
		Replace = 0x0000000000000002,
		Move    = 0x0000000000000003,
		Reset   = 0x0000000000000004
	};

	/**
	 * Enum BestHTTP.LitJson.JsonType
	 */
	enum class JsonType : int32_t
	{
		None    = 0x0000000000000000,
		Object  = 0x0000000000000001,
		Array   = 0x0000000000000002,
		String  = 0x0000000000000003,
		Int     = 0x0000000000000004,
		Long    = 0x0000000000000005,
		Double  = 0x0000000000000006,
		Boolean = 0x0000000000000007
	};

	/**
	 * Enum BestHTTP.LitJson.JsonToken
	 */
	enum class JsonToken : int32_t
	{
		None         = 0x0000000000000000,
		ObjectStart  = 0x0000000000000001,
		PropertyName = 0x0000000000000002,
		ObjectEnd    = 0x0000000000000003,
		ArrayStart   = 0x0000000000000004,
		ArrayEnd     = 0x0000000000000005,
		Int          = 0x0000000000000006,
		Long         = 0x0000000000000007,
		Double       = 0x0000000000000008,
		String       = 0x0000000000000009,
		Boolean      = 0x000000000000000A,
		Null         = 0x000000000000000B
	};

	/**
	 * Enum BestHTTP.LitJson.Condition
	 */
	enum class Condition : int32_t
	{
		InArray      = 0x0000000000000000,
		InObject     = 0x0000000000000001,
		NotAProperty = 0x0000000000000002,
		Property     = 0x0000000000000003,
		Value        = 0x0000000000000004
	};

	/**
	 * Enum BestHTTP.LitJson.ParserToken
	 */
	enum class ParserToken : int32_t
	{
		None        = 0x0000000000010000,
		Number      = 0x0000000000010001,
		True        = 0x0000000000010002,
		False       = 0x0000000000010003,
		Null        = 0x0000000000010004,
		CharSeq     = 0x0000000000010005,
		Char        = 0x0000000000010006,
		Text        = 0x0000000000010007,
		Object      = 0x0000000000010008,
		ObjectPrime = 0x0000000000010009,
		Pair        = 0x000000000001000A,
		PairRest    = 0x000000000001000B,
		Array       = 0x000000000001000C,
		ArrayPrime  = 0x000000000001000D,
		Value       = 0x000000000001000E,
		ValueRest   = 0x000000000001000F,
		String      = 0x0000000000010010,
		End         = 0x0000000000010011,
		Epsilon     = 0x0000000000010012
	};

	/**
	 * Enum BestHTTP.BestHTTP.ShutdownTypes
	 */
	enum class ShutdownTypes : int32_t
	{
		Running   = 0x0000000000000000,
		Gentle    = 0x0000000000000001,
		Immediate = 0x0000000000000002
	};

	/**
	 * Enum BestHTTP.BestHTTP.HTTPMethods
	 */
	enum class HTTPMethods : uint8_t
	{
		Get     = 0x0000000000000000,
		Head    = 0x0000000000000001,
		Post    = 0x0000000000000002,
		Put     = 0x0000000000000003,
		Delete  = 0x0000000000000004,
		Patch   = 0x0000000000000005,
		Merge   = 0x0000000000000006,
		Options = 0x0000000000000007,
		Connect = 0x0000000000000008
	};

	/**
	 * Enum BestHTTP.BestHTTP.HTTPRequestStates
	 */
	enum class HTTPRequestStates : int32_t
	{
		Initial            = 0x0000000000000000,
		Queued             = 0x0000000000000001,
		Processing         = 0x0000000000000002,
		Finished           = 0x0000000000000003,
		Error              = 0x0000000000000004,
		Aborted            = 0x0000000000000005,
		ConnectionTimedOut = 0x0000000000000006,
		TimedOut           = 0x0000000000000007
	};

	/**
	 * Enum BestHTTP.BestHTTP.SOCKSVersions
	 */
	enum class SOCKSVersions : uint8_t
	{
		Unknown = 0x0000000000000000,
		V5      = 0x0000000000000005
	};

	/**
	 * Enum BestHTTP.BestHTTP.SOCKSMethods
	 */
	enum class SOCKSMethods : uint8_t
	{
		NoAuthenticationRequired = 0x0000000000000000,
		GSSAPI                   = 0x0000000000000001,
		UsernameAndPassword      = 0x0000000000000002,
		NoAcceptableMethods      = 0x00000000000000FF
	};

	/**
	 * Enum BestHTTP.BestHTTP.SOCKSReplies
	 */
	enum class SOCKSReplies : uint8_t
	{
		Succeeded                     = 0x0000000000000000,
		GeneralSOCKSServerFailure     = 0x0000000000000001,
		ConnectionNotAllowedByRuleset = 0x0000000000000002,
		NetworkUnreachable            = 0x0000000000000003,
		HostUnreachable               = 0x0000000000000004,
		ConnectionRefused             = 0x0000000000000005,
		TTLExpired                    = 0x0000000000000006,
		CommandNotSupported           = 0x0000000000000007,
		AddressTypeNotSupported       = 0x0000000000000008
	};

	/**
	 * Enum BestHTTP.BestHTTP.SOCKSAddressTypes
	 */
	enum class SOCKSAddressTypes : int32_t
	{
		IPV4       = 0x0000000000000000,
		DomainName = 0x0000000000000003,
		IPv6       = 0x0000000000000004
	};

	/**
	 * Enum BestHTTP.BestHTTP.WebSocket.WebSocketStates
	 */
	enum class WebSocketStates : uint8_t
	{
		Connecting = 0x0000000000000000,
		Open       = 0x0000000000000001,
		Closing    = 0x0000000000000002,
		Closed     = 0x0000000000000003,
		Unknown    = 0x0000000000000004
	};

	/**
	 * Enum BestHTTP.BestHTTP.WebSocket.WebSocketStausCodes
	 */
	enum class WebSocketStausCodes : uint16_t
	{
		NormalClosure     = 0x00000000000003E8,
		GoingAway         = 0x00000000000003E9,
		ProtocolError     = 0x00000000000003EA,
		WrongDataType     = 0x00000000000003EB,
		Reserved          = 0x00000000000003EC,
		NoStatusCode      = 0x00000000000003ED,
		ClosedAbnormally  = 0x00000000000003EE,
		DataError         = 0x00000000000003EF,
		PolicyError       = 0x00000000000003F0,
		TooBigMessage     = 0x00000000000003F1,
		ExtensionExpected = 0x00000000000003F2,
		WrongRequest      = 0x00000000000003F3,
		TLSHandshakeError = 0x00000000000003F7
	};

	/**
	 * Enum BestHTTP.BestHTTP.WebSocket.Frames.WebSocketFrameTypes
	 */
	enum class WebSocketFrameTypes : uint8_t
	{
		Continuation    = 0x0000000000000000,
		Text            = 0x0000000000000001,
		Binary          = 0x0000000000000002,
		ConnectionClose = 0x0000000000000008,
		Ping            = 0x0000000000000009,
		Pong            = 0x000000000000000A
	};

	/**
	 * Enum BestHTTP.BestHTTP.SocketIO3.TransportEventTypes
	 */
	enum class TransportEventTypes : int32_t
	{
		Unknown = -1,
		Open    = 0x0000000000000000,
		Close   = 0x0000000000000001,
		Ping    = 0x0000000000000002,
		Pong    = 0x0000000000000003,
		Message = 0x0000000000000004,
		Upgrade = 0x0000000000000005,
		Noop    = 0x0000000000000006
	};

	/**
	 * Enum BestHTTP.BestHTTP.SocketIO3.SocketIOEventTypes
	 */
	enum class SocketIOEventTypes : int32_t
	{
		Unknown     = -1,
		Connect     = 0x0000000000000000,
		Disconnect  = 0x0000000000000001,
		Event       = 0x0000000000000002,
		Ack         = 0x0000000000000003,
		Error       = 0x0000000000000004,
		BinaryEvent = 0x0000000000000005,
		BinaryAck   = 0x0000000000000006
	};

	/**
	 * Enum BestHTTP.BestHTTP.SocketIO3.SocketManager+States
	 */
	enum class SocketManager_States : int32_t
	{
		Initial      = 0x0000000000000000,
		Opening      = 0x0000000000000001,
		Open         = 0x0000000000000002,
		Paused       = 0x0000000000000003,
		Reconnecting = 0x0000000000000004,
		Closed       = 0x0000000000000005
	};

	/**
	 * Enum BestHTTP.BestHTTP.SocketIO3.Transports.TransportTypes
	 */
	enum class TransportTypes : int32_t
	{
		Polling   = 0x0000000000000000,
		WebSocket = 0x0000000000000001
	};

	/**
	 * Enum BestHTTP.BestHTTP.SocketIO3.Transports.TransportStates
	 */
	enum class TransportStates : int32_t
	{
		Connecting = 0x0000000000000000,
		Opening    = 0x0000000000000001,
		Open       = 0x0000000000000002,
		Closed     = 0x0000000000000003,
		Paused     = 0x0000000000000004
	};

	/**
	 * Enum BestHTTP.BestHTTP.ServerSentEvents.States
	 */
	enum class States : int32_t
	{
		Initial    = 0x0000000000000000,
		Connecting = 0x0000000000000001,
		Open       = 0x0000000000000002,
		Retrying   = 0x0000000000000003,
		Closing    = 0x0000000000000004,
		Closed     = 0x0000000000000005
	};

	/**
	 * Enum BestHTTP.BestHTTP.SecureProtocol.Org.BouncyCastle.Tsp.Resolution
	 */
	enum class Resolution : int32_t
	{
		R_SECONDS               = 0x0000000000000000,
		R_TENTHS_OF_SECONDS     = 0x0000000000000001,
		R_HUNDREDTHS_OF_SECONDS = 0x0000000000000002,
		R_MILLISECONDS          = 0x0000000000000003
	};

	/**
	 * Enum BestHTTP.BestHTTP.SecureProtocol.Org.BouncyCastle.OpenSsl.PemUtilities+PemBaseAlg
	 */
	enum class PemUtilities_PemBaseAlg : int32_t
	{
		AES_128  = 0x0000000000000000,
		AES_192  = 0x0000000000000001,
		AES_256  = 0x0000000000000002,
		BF       = 0x0000000000000003,
		DES      = 0x0000000000000004,
		DES_EDE  = 0x0000000000000005,
		DES_EDE3 = 0x0000000000000006,
		RC2      = 0x0000000000000007,
		RC2_40   = 0x0000000000000008,
		RC2_64   = 0x0000000000000009
	};

	/**
	 * Enum BestHTTP.BestHTTP.SecureProtocol.Org.BouncyCastle.OpenSsl.PemUtilities+PemMode
	 */
	enum class PemUtilities_PemMode : int32_t
	{
		CBC = 0x0000000000000000,
		CFB = 0x0000000000000001,
		ECB = 0x0000000000000002,
		OFB = 0x0000000000000003
	};

	/**
	 * Enum BestHTTP.BestHTTP.SecureProtocol.Org.BouncyCastle.Security.CipherUtilities+CipherAlgorithm
	 */
	enum class CipherUtilities_CipherAlgorithm : int32_t
	{
		AES                    = 0x0000000000000000,
		ARC4                   = 0x0000000000000001,
		ARIA                   = 0x0000000000000002,
		BLOWFISH               = 0x0000000000000003,
		CAMELLIA               = 0x0000000000000004,
		CAST5                  = 0x0000000000000005,
		CAST6                  = 0x0000000000000006,
		CHACHA                 = 0x0000000000000007,
		CHACHA20_POLY1305      = 0x0000000000000008,
		CHACHA7539             = 0x0000000000000009,
		DES                    = 0x000000000000000A,
		DESEDE                 = 0x000000000000000B,
		ELGAMAL                = 0x000000000000000C,
		GOST28147              = 0x000000000000000D,
		HC128                  = 0x000000000000000E,
		HC256                  = 0x000000000000000F,
		IDEA                   = 0x0000000000000010,
		NOEKEON                = 0x0000000000000011,
		PBEWITHSHAAND128BITRC4 = 0x0000000000000012,
		PBEWITHSHAAND40BITRC4  = 0x0000000000000013,
		RC2                    = 0x0000000000000014,
		RC5                    = 0x0000000000000015,
		RC5_64                 = 0x0000000000000016,
		RC6                    = 0x0000000000000017,
		RIJNDAEL               = 0x0000000000000018,
		RSA                    = 0x0000000000000019,
		SALSA20                = 0x000000000000001A,
		SEED                   = 0x000000000000001B,
		SERPENT                = 0x000000000000001C,
		SKIPJACK               = 0x000000000000001D,
		SM4                    = 0x000000000000001E,
		TEA                    = 0x000000000000001F,
		THREEFISH_256          = 0x0000000000000020,
		THREEFISH_512          = 0x0000000000000021,
		THREEFISH_1024         = 0x0000000000000022,
		TNEPRES                = 0x0000000000000023,
		TWOFISH                = 0x0000000000000024,
		VMPC                   = 0x0000000000000025,
		VMPC_KSA3              = 0x0000000000000026,
		XTEA                   = 0x0000000000000027
	};

	/**
	 * Enum BestHTTP.BestHTTP.SecureProtocol.Org.BouncyCastle.Security.CipherUtilities+CipherMode
	 */
	enum class CipherUtilities_CipherMode : int32_t
	{
		ECB        = 0x0000000000000000,
		NONE       = 0x0000000000000001,
		CBC        = 0x0000000000000002,
		CCM        = 0x0000000000000003,
		CFB        = 0x0000000000000004,
		CTR        = 0x0000000000000005,
		CTS        = 0x0000000000000006,
		EAX        = 0x0000000000000007,
		GCM        = 0x0000000000000008,
		GOFB       = 0x0000000000000009,
		OCB        = 0x000000000000000A,
		OFB        = 0x000000000000000B,
		OPENPGPCFB = 0x000000000000000C,
		SIC        = 0x000000000000000D
	};

	/**
	 * Enum BestHTTP.BestHTTP.SecureProtocol.Org.BouncyCastle.Security.CipherUtilities+CipherPadding
	 */
	enum class CipherUtilities_CipherPadding : int32_t
	{
		NOPADDING                                = 0x0000000000000000,
		RAW                                      = 0x0000000000000001,
		ISO10126PADDING                          = 0x0000000000000002,
		ISO10126D2PADDING                        = 0x0000000000000003,
		ISO10126_2PADDING                        = 0x0000000000000004,
		ISO7816_4PADDING                         = 0x0000000000000005,
		ISO9797_1PADDING                         = 0x0000000000000006,
		ISO9796_1                                = 0x0000000000000007,
		ISO9796_1PADDING                         = 0x0000000000000008,
		OAEP                                     = 0x0000000000000009,
		OAEPPADDING                              = 0x000000000000000A,
		OAEPWITHMD5ANDMGF1PADDING                = 0x000000000000000B,
		OAEPWITHSHA1ANDMGF1PADDING               = 0x000000000000000C,
		OAEPWITHSHA_1ANDMGF1PADDING              = 0x000000000000000D,
		OAEPWITHSHA224ANDMGF1PADDING             = 0x000000000000000E,
		OAEPWITHSHA_224ANDMGF1PADDING            = 0x000000000000000F,
		OAEPWITHSHA256ANDMGF1PADDING             = 0x0000000000000010,
		OAEPWITHSHA_256ANDMGF1PADDING            = 0x0000000000000011,
		OAEPWITHSHA256ANDMGF1WITHSHA256PADDING   = 0x0000000000000012,
		OAEPWITHSHA_256ANDMGF1WITHSHA_256PADDING = 0x0000000000000013,
		OAEPWITHSHA256ANDMGF1WITHSHA1PADDING     = 0x0000000000000014,
		OAEPWITHSHA_256ANDMGF1WITHSHA_1PADDING   = 0x0000000000000015,
		OAEPWITHSHA384ANDMGF1PADDING             = 0x0000000000000016,
		OAEPWITHSHA_384ANDMGF1PADDING            = 0x0000000000000017,
		OAEPWITHSHA512ANDMGF1PADDING             = 0x0000000000000018,
		OAEPWITHSHA_512ANDMGF1PADDING            = 0x0000000000000019,
		PKCS1                                    = 0x000000000000001A,
		PKCS1PADDING                             = 0x000000000000001B,
		PKCS5                                    = 0x000000000000001C,
		PKCS5PADDING                             = 0x000000000000001D,
		PKCS7                                    = 0x000000000000001E,
		PKCS7PADDING                             = 0x000000000000001F,
		TBCPADDING                               = 0x0000000000000020,
		WITHCTS                                  = 0x0000000000000021,
		X923PADDING                              = 0x0000000000000022,
		ZEROBYTEPADDING                          = 0x0000000000000023
	};

	/**
	 * Enum BestHTTP.BestHTTP.SecureProtocol.Org.BouncyCastle.Security.DigestUtilities+DigestAlgorithm
	 */
	enum class DigestUtilities_DigestAlgorithm : int32_t
	{
		BLAKE2B_160       = 0x0000000000000000,
		BLAKE2B_256       = 0x0000000000000001,
		BLAKE2B_384       = 0x0000000000000002,
		BLAKE2B_512       = 0x0000000000000003,
		BLAKE2S_128       = 0x0000000000000004,
		BLAKE2S_160       = 0x0000000000000005,
		BLAKE2S_224       = 0x0000000000000006,
		BLAKE2S_256       = 0x0000000000000007,
		DSTU7564_256      = 0x0000000000000008,
		DSTU7564_384      = 0x0000000000000009,
		DSTU7564_512      = 0x000000000000000A,
		GOST3411          = 0x000000000000000B,
		GOST3411_2012_256 = 0x000000000000000C,
		GOST3411_2012_512 = 0x000000000000000D,
		KECCAK_224        = 0x000000000000000E,
		KECCAK_256        = 0x000000000000000F,
		KECCAK_288        = 0x0000000000000010,
		KECCAK_384        = 0x0000000000000011,
		KECCAK_512        = 0x0000000000000012,
		MD2               = 0x0000000000000013,
		MD4               = 0x0000000000000014,
		MD5               = 0x0000000000000015,
		NONE              = 0x0000000000000016,
		RIPEMD128         = 0x0000000000000017,
		RIPEMD160         = 0x0000000000000018,
		RIPEMD256         = 0x0000000000000019,
		RIPEMD320         = 0x000000000000001A,
		SHA_1             = 0x000000000000001B,
		SHA_224           = 0x000000000000001C,
		SHA_256           = 0x000000000000001D,
		SHA_384           = 0x000000000000001E,
		SHA_512           = 0x000000000000001F,
		SHA_512_224       = 0x0000000000000020,
		SHA_512_256       = 0x0000000000000021,
		SHA3_224          = 0x0000000000000022,
		SHA3_256          = 0x0000000000000023,
		SHA3_384          = 0x0000000000000024,
		SHA3_512          = 0x0000000000000025,
		SHAKE128_256      = 0x0000000000000026,
		SHAKE256_512      = 0x0000000000000027,
		SM3               = 0x0000000000000028,
		TIGER             = 0x0000000000000029,
		WHIRLPOOL         = 0x000000000000002A
	};

	/**
	 * Enum BestHTTP.BestHTTP.SecureProtocol.Org.BouncyCastle.Security.WrapperUtilities+WrapAlgorithm
	 */
	enum class WrapperUtilities_WrapAlgorithm : int32_t
	{
		AESWRAP             = 0x0000000000000000,
		CAMELLIAWRAP        = 0x0000000000000001,
		DESEDEWRAP          = 0x0000000000000002,
		RC2WRAP             = 0x0000000000000003,
		SEEDWRAP            = 0x0000000000000004,
		DESEDERFC3211WRAP   = 0x0000000000000005,
		AESRFC3211WRAP      = 0x0000000000000006,
		CAMELLIARFC3211WRAP = 0x0000000000000007
	};

	/**
	 * Enum BestHTTP.BestHTTP.SecureProtocol.Org.BouncyCastle.Math.EC.Rfc8032.Ed25519+Algorithm
	 */
	enum class Ed25519_Algorithm : int32_t
	{
		Ed25519    = 0x0000000000000000,
		Ed25519ctx = 0x0000000000000001,
		Ed25519ph  = 0x0000000000000002
	};

	/**
	 * Enum BestHTTP.BestHTTP.SecureProtocol.Org.BouncyCastle.Math.EC.Rfc8032.Ed448+Algorithm
	 */
	enum class Ed448_Algorithm : int32_t
	{
		Ed448   = 0x0000000000000000,
		Ed448ph = 0x0000000000000001
	};

	/**
	 * Enum BestHTTP.BestHTTP.SecureProtocol.Org.BouncyCastle.Crypto.Modes.ChaCha20Poly1305+State
	 */
	enum class ChaCha20Poly1305_State : int32_t
	{
		Uninitialized = 0x0000000000000000,
		EncInit       = 0x0000000000000001,
		EncAad        = 0x0000000000000002,
		EncData       = 0x0000000000000003,
		EncFinal      = 0x0000000000000004,
		DecInit       = 0x0000000000000005,
		DecAad        = 0x0000000000000006,
		DecData       = 0x0000000000000007,
		DecFinal      = 0x0000000000000008
	};

	/**
	 * Enum BestHTTP.BestHTTP.SecureProtocol.Org.BouncyCastle.Crypto.Modes.EaxBlockCipher+Tag
	 */
	enum class EaxBlockCipher_Tag : uint8_t
	{
		N = 0x0000000000000000,
		H = 0x0000000000000001,
		C = 0x0000000000000002
	};

	/**
	 * Enum BestHTTP.BestHTTP.SecureProtocol.Org.BouncyCastle.Cms.CmsAttributeTableParameter
	 */
	enum class CmsAttributeTableParameter : int32_t
	{
		ContentType               = 0x0000000000000000,
		Digest                    = 0x0000000000000001,
		Signature                 = 0x0000000000000002,
		DigestAlgorithmIdentifier = 0x0000000000000003
	};

	/**
	 * Enum BestHTTP.BestHTTP.SecureProtocol.Org.BouncyCastle.Bcpg.CompressionAlgorithmTag
	 */
	enum class CompressionAlgorithmTag : int32_t
	{
		Uncompressed = 0x0000000000000000,
		Zip          = 0x0000000000000001,
		ZLib         = 0x0000000000000002,
		BZip2        = 0x0000000000000003
	};

	/**
	 * Enum BestHTTP.BestHTTP.SecureProtocol.Org.BouncyCastle.Bcpg.HashAlgorithmTag
	 */
	enum class HashAlgorithmTag : int32_t
	{
		MD5           = 0x0000000000000001,
		Sha1          = 0x0000000000000002,
		RipeMD160     = 0x0000000000000003,
		DoubleSha     = 0x0000000000000004,
		MD2           = 0x0000000000000005,
		Tiger192      = 0x0000000000000006,
		Haval5pass160 = 0x0000000000000007,
		Sha256        = 0x0000000000000008,
		Sha384        = 0x0000000000000009,
		Sha512        = 0x000000000000000A,
		Sha224        = 0x000000000000000B
	};

	/**
	 * Enum BestHTTP.BestHTTP.SecureProtocol.Org.BouncyCastle.Bcpg.PacketTag
	 */
	enum class PacketTag : int32_t
	{
		Reserved                             = 0x0000000000000000,
		PublicKeyEncryptedSession            = 0x0000000000000001,
		Signature                            = 0x0000000000000002,
		SymmetricKeyEncryptedSessionKey      = 0x0000000000000003,
		OnePassSignature                     = 0x0000000000000004,
		SecretKey                            = 0x0000000000000005,
		PublicKey                            = 0x0000000000000006,
		SecretSubkey                         = 0x0000000000000007,
		CompressedData                       = 0x0000000000000008,
		SymmetricKeyEncrypted                = 0x0000000000000009,
		Marker                               = 0x000000000000000A,
		LiteralData                          = 0x000000000000000B,
		Trust                                = 0x000000000000000C,
		UserId                               = 0x000000000000000D,
		PublicSubkey                         = 0x000000000000000E,
		UserAttribute                        = 0x0000000000000011,
		SymmetricEncryptedIntegrityProtected = 0x0000000000000012,
		ModificationDetectionCode            = 0x0000000000000013,
		Experimental1                        = 0x000000000000003C,
		Experimental2                        = 0x000000000000003D,
		Experimental3                        = 0x000000000000003E,
		Experimental4                        = 0x000000000000003F
	};

	/**
	 * Enum BestHTTP.BestHTTP.SecureProtocol.Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag
	 */
	enum class PublicKeyAlgorithmTag : int32_t
	{
		RsaGeneral      = 0x0000000000000001,
		RsaEncrypt      = 0x0000000000000002,
		RsaSign         = 0x0000000000000003,
		ElGamalEncrypt  = 0x0000000000000010,
		Dsa             = 0x0000000000000011,
		EC              = 0x0000000000000012,
		ECDH            = 0x0000000000000012,
		ECDsa           = 0x0000000000000013,
		ElGamalGeneral  = 0x0000000000000014,
		DiffieHellman   = 0x0000000000000015,
		EdDsa           = 0x0000000000000016,
		Experimental_1  = 0x0000000000000064,
		Experimental_2  = 0x0000000000000065,
		Experimental_3  = 0x0000000000000066,
		Experimental_4  = 0x0000000000000067,
		Experimental_5  = 0x0000000000000068,
		Experimental_6  = 0x0000000000000069,
		Experimental_7  = 0x000000000000006A,
		Experimental_8  = 0x000000000000006B,
		Experimental_9  = 0x000000000000006C,
		Experimental_10 = 0x000000000000006D,
		Experimental_11 = 0x000000000000006E
	};

	/**
	 * Enum BestHTTP.BestHTTP.SecureProtocol.Org.BouncyCastle.Bcpg.RevocationKeyTag
	 */
	enum class RevocationKeyTag : uint8_t
	{
		ClassDefault   = 0x0000000000000080,
		ClassSensitive = 0x0000000000000040
	};

	/**
	 * Enum BestHTTP.BestHTTP.SecureProtocol.Org.BouncyCastle.Bcpg.RevocationReasonTag
	 */
	enum class RevocationReasonTag : uint8_t
	{
		NoReason          = 0x0000000000000000,
		KeySuperseded     = 0x0000000000000001,
		KeyCompromised    = 0x0000000000000002,
		KeyRetired        = 0x0000000000000003,
		UserNoLongerValid = 0x0000000000000020
	};

	/**
	 * Enum BestHTTP.BestHTTP.SecureProtocol.Org.BouncyCastle.Bcpg.SignatureSubpacketTag
	 */
	enum class SignatureSubpacketTag : int32_t
	{
		CreationTime                   = 0x0000000000000002,
		ExpireTime                     = 0x0000000000000003,
		Exportable                     = 0x0000000000000004,
		TrustSig                       = 0x0000000000000005,
		RegExp                         = 0x0000000000000006,
		Revocable                      = 0x0000000000000007,
		KeyExpireTime                  = 0x0000000000000009,
		Placeholder                    = 0x000000000000000A,
		PreferredSymmetricAlgorithms   = 0x000000000000000B,
		RevocationKey                  = 0x000000000000000C,
		IssuerKeyId                    = 0x0000000000000010,
		NotationData                   = 0x0000000000000014,
		PreferredHashAlgorithms        = 0x0000000000000015,
		PreferredCompressionAlgorithms = 0x0000000000000016,
		KeyServerPreferences           = 0x0000000000000017,
		PreferredKeyServer             = 0x0000000000000018,
		PrimaryUserId                  = 0x0000000000000019,
		PolicyUrl                      = 0x000000000000001A,
		KeyFlags                       = 0x000000000000001B,
		SignerUserId                   = 0x000000000000001C,
		RevocationReason               = 0x000000000000001D,
		Features                       = 0x000000000000001E,
		SignatureTarget                = 0x000000000000001F,
		EmbeddedSignature              = 0x0000000000000020
	};

	/**
	 * Enum BestHTTP.BestHTTP.SecureProtocol.Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag
	 */
	enum class SymmetricKeyAlgorithmTag : int32_t
	{
		Null        = 0x0000000000000000,
		Idea        = 0x0000000000000001,
		TripleDes   = 0x0000000000000002,
		Cast5       = 0x0000000000000003,
		Blowfish    = 0x0000000000000004,
		Safer       = 0x0000000000000005,
		Des         = 0x0000000000000006,
		Aes128      = 0x0000000000000007,
		Aes192      = 0x0000000000000008,
		Aes256      = 0x0000000000000009,
		Twofish     = 0x000000000000000A,
		Camellia128 = 0x000000000000000B,
		Camellia192 = 0x000000000000000C,
		Camellia256 = 0x000000000000000D
	};

	/**
	 * Enum BestHTTP.BestHTTP.SecureProtocol.Org.BouncyCastle.Bcpg.UserAttributeSubpacketTag
	 */
	enum class UserAttributeSubpacketTag : int32_t
	{
		ImageAttribute = 0x0000000000000001
	};

	/**
	 * Enum BestHTTP.BestHTTP.SecureProtocol.Org.BouncyCastle.Bcpg.Attr.ImageAttrib+Format
	 */
	enum class ImageAttrib_Format : uint8_t
	{
		Jpeg = 0x0000000000000001
	};

	/**
	 * Enum BestHTTP.BestHTTP.SecureProtocol.Org.BouncyCastle.Asn1.X509.Target+Choice
	 */
	enum class Target_Choice : int32_t
	{
		Name  = 0x0000000000000000,
		Group = 0x0000000000000001
	};

	/**
	 * Enum BestHTTP.BestHTTP.SecureProtocol.Org.BouncyCastle.Asn1.IsisMtt.X509.DeclarationOfMajority+Choice
	 */
	enum class DeclarationOfMajority_Choice : int32_t
	{
		NotYoungerThan   = 0x0000000000000000,
		FullAgeAtCountry = 0x0000000000000001,
		DateOfBirth      = 0x0000000000000002
	};

	/**
	 * Enum BestHTTP.BestHTTP.SecureProtocol.Org.BouncyCastle.Asn1.IsisMtt.Ocsp.RequestedCertificate+Choice
	 */
	enum class RequestedCertificate_Choice : int32_t
	{
		Certificate          = -1,
		PublicKeyCertificate = 0x0000000000000000,
		AttributeCertificate = 0x0000000000000001
	};

	/**
	 * Enum BestHTTP.BestHTTP.SecureProtocol.Org.BouncyCastle.Asn1.Cmp.PkiStatus
	 */
	enum class PkiStatus : int32_t
	{
		Granted                = 0x0000000000000000,
		GrantedWithMods        = 0x0000000000000001,
		Rejection              = 0x0000000000000002,
		Waiting                = 0x0000000000000003,
		RevocationWarning      = 0x0000000000000004,
		RevocationNotification = 0x0000000000000005,
		KeyUpdateWarning       = 0x0000000000000006
	};

	/**
	 * Enum BestHTTP.BestHTTP.PlatformSupport.TcpClient.General.TcpClient+Properties
	 */
	enum class TcpClient_Properties : uint32_t
	{
		LingerState       = 0x0000000000000001,
		NoDelay           = 0x0000000000000002,
		ReceiveBufferSize = 0x0000000000000004,
		ReceiveTimeout    = 0x0000000000000008,
		SendBufferSize    = 0x0000000000000010,
		SendTimeout       = 0x0000000000000020
	};

	/**
	 * Enum BestHTTP.BestHTTP.PlatformSupport.IL2CPP.Option
	 */
	enum class Option : int32_t
	{
		NullChecks         = 0x0000000000000001,
		ArrayBoundsChecks  = 0x0000000000000002,
		DivideByZeroChecks = 0x0000000000000003
	};

	/**
	 * Enum BestHTTP.BestHTTP.PlatformSupport.FileSystem.FileStreamModes
	 */
	enum class FileStreamModes : int32_t
	{
		Create        = 0x0000000000000000,
		OpenRead      = 0x0000000000000001,
		OpenReadWrite = 0x0000000000000002,
		Append        = 0x0000000000000003
	};

	/**
	 * Enum BestHTTP.BestHTTP.Logger.Loglevels
	 */
	enum class Loglevels : int32_t
	{
		All         = 0x0000000000000000,
		Information = 0x0000000000000001,
		Warning     = 0x0000000000000002,
		Error       = 0x0000000000000003,
		Exception   = 0x0000000000000004,
		None        = 0x0000000000000005
	};

	/**
	 * Enum BestHTTP.BestHTTP.Logger.LoggingContext+LoggingContextFieldType
	 */
	enum class LoggingContext_LoggingContextFieldType : int32_t
	{
		Long           = 0x0000000000000000,
		Bool           = 0x0000000000000001,
		String         = 0x0000000000000002,
		AnotherContext = 0x0000000000000003
	};

	/**
	 * Enum BestHTTP.BestHTTP.JSON.LitJson.JsonType
	 */
	enum class JsonType_1 : int32_t
	{
		None    = 0x0000000000000000,
		Object  = 0x0000000000000001,
		Array   = 0x0000000000000002,
		String  = 0x0000000000000003,
		Int     = 0x0000000000000004,
		Long    = 0x0000000000000005,
		Double  = 0x0000000000000006,
		Boolean = 0x0000000000000007
	};

	/**
	 * Enum BestHTTP.BestHTTP.JSON.LitJson.JsonToken
	 */
	enum class JsonToken_1 : int32_t
	{
		None         = 0x0000000000000000,
		ObjectStart  = 0x0000000000000001,
		PropertyName = 0x0000000000000002,
		ObjectEnd    = 0x0000000000000003,
		ArrayStart   = 0x0000000000000004,
		ArrayEnd     = 0x0000000000000005,
		Int          = 0x0000000000000006,
		Long         = 0x0000000000000007,
		Double       = 0x0000000000000008,
		String       = 0x0000000000000009,
		Boolean      = 0x000000000000000A,
		Null         = 0x000000000000000B
	};

	/**
	 * Enum BestHTTP.BestHTTP.JSON.LitJson.Condition
	 */
	enum class Condition_1 : int32_t
	{
		InArray      = 0x0000000000000000,
		InObject     = 0x0000000000000001,
		NotAProperty = 0x0000000000000002,
		Property     = 0x0000000000000003,
		Value        = 0x0000000000000004
	};

	/**
	 * Enum BestHTTP.BestHTTP.JSON.LitJson.ParserToken
	 */
	enum class ParserToken_1 : int32_t
	{
		None        = 0x0000000000010000,
		Number      = 0x0000000000010001,
		True        = 0x0000000000010002,
		False       = 0x0000000000010003,
		Null        = 0x0000000000010004,
		CharSeq     = 0x0000000000010005,
		Char        = 0x0000000000010006,
		Text        = 0x0000000000010007,
		Object      = 0x0000000000010008,
		ObjectPrime = 0x0000000000010009,
		Pair        = 0x000000000001000A,
		PairRest    = 0x000000000001000B,
		Array       = 0x000000000001000C,
		ArrayPrime  = 0x000000000001000D,
		Value       = 0x000000000001000E,
		ValueRest   = 0x000000000001000F,
		String      = 0x0000000000010010,
		End         = 0x0000000000010011,
		Epsilon     = 0x0000000000010012
	};

	/**
	 * Enum BestHTTP.BestHTTP.Forms.HTTPFormUsage
	 */
	enum class HTTPFormUsage : int32_t
	{
		Automatic  = 0x0000000000000000,
		UrlEncoded = 0x0000000000000001,
		Multipart  = 0x0000000000000002
	};

	/**
	 * Enum BestHTTP.BestHTTP.Futures.FutureState
	 */
	enum class FutureState : int32_t
	{
		Pending    = 0x0000000000000000,
		Processing = 0x0000000000000001,
		Success    = 0x0000000000000002,
		Error      = 0x0000000000000003
	};

	/**
	 * Enum BestHTTP.BestHTTP.Decompression.Zlib.BlockState
	 */
	enum class BlockState : int32_t
	{
		NeedMore      = 0x0000000000000000,
		BlockDone     = 0x0000000000000001,
		FinishStarted = 0x0000000000000002,
		FinishDone    = 0x0000000000000003
	};

	/**
	 * Enum BestHTTP.BestHTTP.Decompression.Zlib.DeflateFlavor
	 */
	enum class DeflateFlavor : int32_t
	{
		Store = 0x0000000000000000,
		Fast  = 0x0000000000000001,
		Slow  = 0x0000000000000002
	};

	/**
	 * Enum BestHTTP.BestHTTP.Decompression.Zlib.InflateBlocks+InflateBlockMode
	 */
	enum class InflateBlocks_InflateBlockMode : int32_t
	{
		TYPE   = 0x0000000000000000,
		LENS   = 0x0000000000000001,
		STORED = 0x0000000000000002,
		TABLE  = 0x0000000000000003,
		BTREE  = 0x0000000000000004,
		DTREE  = 0x0000000000000005,
		CODES  = 0x0000000000000006,
		DRY    = 0x0000000000000007,
		DONE   = 0x0000000000000008,
		BAD    = 0x0000000000000009
	};

	/**
	 * Enum BestHTTP.BestHTTP.Decompression.Zlib.InflateManager+InflateManagerMode
	 */
	enum class InflateManager_InflateManagerMode : int32_t
	{
		METHOD = 0x0000000000000000,
		FLAG   = 0x0000000000000001,
		DICT4  = 0x0000000000000002,
		DICT3  = 0x0000000000000003,
		DICT2  = 0x0000000000000004,
		DICT1  = 0x0000000000000005,
		DICT0  = 0x0000000000000006,
		BLOCKS = 0x0000000000000007,
		CHECK4 = 0x0000000000000008,
		CHECK3 = 0x0000000000000009,
		CHECK2 = 0x000000000000000A,
		CHECK1 = 0x000000000000000B,
		DONE   = 0x000000000000000C,
		BAD    = 0x000000000000000D
	};

	/**
	 * Enum BestHTTP.BestHTTP.Decompression.Zlib.FlushType
	 */
	enum class FlushType : int32_t
	{
		None    = 0x0000000000000000,
		Partial = 0x0000000000000001,
		Sync    = 0x0000000000000002,
		Full    = 0x0000000000000003,
		Finish  = 0x0000000000000004
	};

	/**
	 * Enum BestHTTP.BestHTTP.Decompression.Zlib.CompressionLevel
	 */
	enum class CompressionLevel : int32_t
	{
		None            = 0x0000000000000000,
		Level0          = 0x0000000000000000,
		BestSpeed       = 0x0000000000000001,
		Level1          = 0x0000000000000001,
		Level2          = 0x0000000000000002,
		Level3          = 0x0000000000000003,
		Level4          = 0x0000000000000004,
		Level5          = 0x0000000000000005,
		Default         = 0x0000000000000006,
		Level6          = 0x0000000000000006,
		Level7          = 0x0000000000000007,
		Level8          = 0x0000000000000008,
		BestCompression = 0x0000000000000009,
		Level9          = 0x0000000000000009
	};

	/**
	 * Enum BestHTTP.BestHTTP.Decompression.Zlib.CompressionStrategy
	 */
	enum class CompressionStrategy : int32_t
	{
		Default     = 0x0000000000000000,
		Filtered    = 0x0000000000000001,
		HuffmanOnly = 0x0000000000000002
	};

	/**
	 * Enum BestHTTP.BestHTTP.Decompression.Zlib.CompressionMode
	 */
	enum class CompressionMode : int32_t
	{
		Compress   = 0x0000000000000000,
		Decompress = 0x0000000000000001
	};

	/**
	 * Enum BestHTTP.BestHTTP.Decompression.Zlib.ZlibStreamFlavor
	 */
	enum class ZlibStreamFlavor : int32_t
	{
		ZLIB    = 0x000000000000079E,
		DEFLATE = 0x000000000000079F,
		GZIP    = 0x00000000000007A0
	};

	/**
	 * Enum BestHTTP.BestHTTP.Decompression.Zlib.ZlibBaseStream+StreamMode
	 */
	enum class ZlibBaseStream_StreamMode : int32_t
	{
		Writer    = 0x0000000000000000,
		Reader    = 0x0000000000000001,
		Undefined = 0x0000000000000002
	};

	/**
	 * Enum BestHTTP.BestHTTP.Core.ConnectionEvents
	 */
	enum class ConnectionEvents : int32_t
	{
		StateChange     = 0x0000000000000000,
		ProtocolSupport = 0x0000000000000001
	};

	/**
	 * Enum BestHTTP.BestHTTP.Core.HostProtocolSupport
	 */
	enum class HostProtocolSupport : uint8_t
	{
		Unknown = 0x0000000000000000,
		HTTP1   = 0x0000000000000001,
		HTTP2   = 0x0000000000000002
	};

	/**
	 * Enum BestHTTP.BestHTTP.Core.PluginEvents
	 */
	enum class PluginEvents : int32_t
	{
		SaveCookieLibrary    = 0x0000000000000000,
		SaveCacheLibrary     = 0x0000000000000001,
		AltSvcHeader         = 0x0000000000000002,
		HTTP2ConnectProtocol = 0x0000000000000003
	};

	/**
	 * Enum BestHTTP.BestHTTP.Core.RequestEvents
	 */
	enum class RequestEvents : int32_t
	{
		Upgraded         = 0x0000000000000000,
		DownloadProgress = 0x0000000000000001,
		UploadProgress   = 0x0000000000000002,
		StreamingData    = 0x0000000000000003,
		StateChange      = 0x0000000000000004,
		Resend           = 0x0000000000000005,
		Headers          = 0x0000000000000006,
		TimingData       = 0x0000000000000007
	};

	/**
	 * Enum BestHTTP.BestHTTP.Connections.HTTPConnectionStates
	 */
	enum class HTTPConnectionStates : int32_t
	{
		Initial                 = 0x0000000000000000,
		Processing              = 0x0000000000000001,
		WaitForProtocolShutdown = 0x0000000000000002,
		Recycle                 = 0x0000000000000003,
		Free                    = 0x0000000000000004,
		Closed                  = 0x0000000000000005,
		ClosedResendRequest     = 0x0000000000000006
	};

	/**
	 * Enum BestHTTP.BestHTTP.Connections.SupportedProtocols
	 */
	enum class SupportedProtocols : int32_t
	{
		Unknown          = 0x0000000000000000,
		HTTP             = 0x0000000000000001,
		WebSocket        = 0x0000000000000002,
		ServerSentEvents = 0x0000000000000003
	};

	/**
	 * Enum BestHTTP.BestHTTP.Connections.HTTP2.HTTP2ErrorCodes
	 */
	enum class HTTP2ErrorCodes : int32_t
	{
		NO_ERROR            = 0x0000000000000000,
		PROTOCOL_ERROR      = 0x0000000000000001,
		INTERNAL_ERROR      = 0x0000000000000002,
		FLOW_CONTROL_ERROR  = 0x0000000000000003,
		SETTINGS_TIMEOUT    = 0x0000000000000004,
		STREAM_CLOSED       = 0x0000000000000005,
		FRAME_SIZE_ERROR    = 0x0000000000000006,
		REFUSED_STREAM      = 0x0000000000000007,
		CANCEL              = 0x0000000000000008,
		COMPRESSION_ERROR   = 0x0000000000000009,
		CONNECT_ERROR       = 0x000000000000000A,
		ENHANCE_YOUR_CALM   = 0x000000000000000B,
		INADEQUATE_SECURITY = 0x000000000000000C,
		HTTP_1_1_REQUIRED   = 0x000000000000000D
	};

	/**
	 * Enum BestHTTP.BestHTTP.Connections.HTTP2.HTTP2FrameTypes
	 */
	enum class HTTP2FrameTypes : uint8_t
	{
		DATA          = 0x0000000000000000,
		HEADERS       = 0x0000000000000001,
		PRIORITY      = 0x0000000000000002,
		RST_STREAM    = 0x0000000000000003,
		SETTINGS      = 0x0000000000000004,
		PUSH_PROMISE  = 0x0000000000000005,
		PING          = 0x0000000000000006,
		GOAWAY        = 0x0000000000000007,
		WINDOW_UPDATE = 0x0000000000000008,
		CONTINUATION  = 0x0000000000000009,
		ALT_SVC       = 0x000000000000000A
	};

	/**
	 * Enum BestHTTP.BestHTTP.Connections.HTTP2.HTTP2DataFlags
	 */
	enum class HTTP2DataFlags : uint8_t
	{
		None       = 0x0000000000000000,
		END_STREAM = 0x0000000000000001,
		PADDED     = 0x0000000000000008
	};

	/**
	 * Enum BestHTTP.BestHTTP.Connections.HTTP2.HTTP2HeadersFlags
	 */
	enum class HTTP2HeadersFlags : uint8_t
	{
		None        = 0x0000000000000000,
		END_STREAM  = 0x0000000000000001,
		END_HEADERS = 0x0000000000000004,
		PADDED      = 0x0000000000000008,
		PRIORITY    = 0x0000000000000020
	};

	/**
	 * Enum BestHTTP.BestHTTP.Connections.HTTP2.HTTP2SettingsFlags
	 */
	enum class HTTP2SettingsFlags : uint8_t
	{
		None = 0x0000000000000000,
		ACK  = 0x0000000000000001
	};

	/**
	 * Enum BestHTTP.BestHTTP.Connections.HTTP2.HTTP2PushPromiseFlags
	 */
	enum class HTTP2PushPromiseFlags : uint8_t
	{
		None        = 0x0000000000000000,
		END_HEADERS = 0x0000000000000004,
		PADDED      = 0x0000000000000008
	};

	/**
	 * Enum BestHTTP.BestHTTP.Connections.HTTP2.HTTP2PingFlags
	 */
	enum class HTTP2PingFlags : uint8_t
	{
		None = 0x0000000000000000,
		ACK  = 0x0000000000000001
	};

	/**
	 * Enum BestHTTP.BestHTTP.Connections.HTTP2.HTTP2ContinuationFlags
	 */
	enum class HTTP2ContinuationFlags : uint8_t
	{
		None        = 0x0000000000000000,
		END_HEADERS = 0x0000000000000004
	};

	/**
	 * Enum BestHTTP.BestHTTP.Connections.HTTP2.HTTP2Settings
	 */
	enum class HTTP2Settings : uint16_t
	{
		HEADER_TABLE_SIZE       = 0x0000000000000001,
		ENABLE_PUSH             = 0x0000000000000002,
		MAX_CONCURRENT_STREAMS  = 0x0000000000000003,
		INITIAL_WINDOW_SIZE     = 0x0000000000000004,
		MAX_FRAME_SIZE          = 0x0000000000000005,
		MAX_HEADER_LIST_SIZE    = 0x0000000000000006,
		RESERVED                = 0x0000000000000007,
		ENABLE_CONNECT_PROTOCOL = 0x0000000000000008
	};

	/**
	 * Enum BestHTTP.BestHTTP.Connections.HTTP2.HTTP2StreamStates
	 */
	enum class HTTP2StreamStates : int32_t
	{
		Idle             = 0x0000000000000000,
		Open             = 0x0000000000000001,
		HalfClosedLocal  = 0x0000000000000002,
		HalfClosedRemote = 0x0000000000000003,
		Closed           = 0x0000000000000004
	};

	/**
	 * Enum BestHTTP.BestHTTP.Authentication.AuthenticationTypes
	 */
	enum class AuthenticationTypes : int32_t
	{
		Unknown = 0x0000000000000000,
		Basic   = 0x0000000000000001,
		Digest  = 0x0000000000000002
	};

	/**
	 * Enum BestHTTP.BestHTTP.SocketIO.TransportEventTypes
	 */
	enum class TransportEventTypes_1 : int32_t
	{
		Unknown = -1,
		Open    = 0x0000000000000000,
		Close   = 0x0000000000000001,
		Ping    = 0x0000000000000002,
		Pong    = 0x0000000000000003,
		Message = 0x0000000000000004,
		Upgrade = 0x0000000000000005,
		Noop    = 0x0000000000000006
	};

	/**
	 * Enum BestHTTP.BestHTTP.SocketIO.SocketIOEventTypes
	 */
	enum class SocketIOEventTypes_1 : int32_t
	{
		Unknown     = -1,
		Connect     = 0x0000000000000000,
		Disconnect  = 0x0000000000000001,
		Event       = 0x0000000000000002,
		Ack         = 0x0000000000000003,
		Error       = 0x0000000000000004,
		BinaryEvent = 0x0000000000000005,
		BinaryAck   = 0x0000000000000006
	};

	/**
	 * Enum BestHTTP.BestHTTP.SocketIO.SocketIOErrors
	 */
	enum class SocketIOErrors : int32_t
	{
		UnknownTransport   = 0x0000000000000000,
		UnknownSid         = 0x0000000000000001,
		BadHandshakeMethod = 0x0000000000000002,
		BadRequest         = 0x0000000000000003,
		Forbidden          = 0x0000000000000004,
		Internal           = 0x0000000000000005,
		User               = 0x0000000000000006,
		Custom             = 0x0000000000000007
	};

	/**
	 * Enum BestHTTP.BestHTTP.SocketIO.Packet+PayloadTypes
	 */
	enum class Packet_PayloadTypes : uint8_t
	{
		Textual = 0x0000000000000000,
		Binary  = 0x0000000000000001
	};

	/**
	 * Enum BestHTTP.BestHTTP.SocketIO.SocketManager+States
	 */
	enum class SocketManager_States_1 : int32_t
	{
		Initial      = 0x0000000000000000,
		Opening      = 0x0000000000000001,
		Open         = 0x0000000000000002,
		Paused       = 0x0000000000000003,
		Reconnecting = 0x0000000000000004,
		Closed       = 0x0000000000000005
	};

	/**
	 * Enum BestHTTP.BestHTTP.SocketIO.SupportedSocketIOVersions
	 */
	enum class SupportedSocketIOVersions : int32_t
	{
		Unknown = 0x0000000000000000,
		v2      = 0x0000000000000001,
		v3      = 0x0000000000000002
	};

	/**
	 * Enum BestHTTP.BestHTTP.SocketIO.Transports.TransportTypes
	 */
	enum class TransportTypes_1 : int32_t
	{
		Polling   = 0x0000000000000000,
		WebSocket = 0x0000000000000001
	};

	/**
	 * Enum BestHTTP.BestHTTP.SocketIO.Transports.TransportStates
	 */
	enum class TransportStates_1 : int32_t
	{
		Connecting = 0x0000000000000000,
		Opening    = 0x0000000000000001,
		Open       = 0x0000000000000002,
		Closed     = 0x0000000000000003,
		Paused     = 0x0000000000000004
	};

	/**
	 * Enum BestHTTP.BestHTTP.SocketIO.Transports.PollingTransport+PayloadTypes
	 */
	enum class PollingTransport_PayloadTypes : uint8_t
	{
		Text   = 0x0000000000000000,
		Binary = 0x0000000000000001
	};

	/**
	 * Enum BestHTTP.BestHTTP.SignalRCore.TransportTypes
	 */
	enum class TransportTypes_2 : int32_t
	{
		WebSocket   = 0x0000000000000000,
		LongPolling = 0x0000000000000001
	};

	/**
	 * Enum BestHTTP.BestHTTP.SignalRCore.TransferModes
	 */
	enum class TransferModes : int32_t
	{
		Binary = 0x0000000000000000,
		Text   = 0x0000000000000001
	};

	/**
	 * Enum BestHTTP.BestHTTP.SignalRCore.TransportStates
	 */
	enum class TransportStates_2 : int32_t
	{
		Initial    = 0x0000000000000000,
		Connecting = 0x0000000000000001,
		Connected  = 0x0000000000000002,
		Closing    = 0x0000000000000003,
		Failed     = 0x0000000000000004,
		Closed     = 0x0000000000000005
	};

	/**
	 * Enum BestHTTP.BestHTTP.SignalRCore.ConnectionStates
	 */
	enum class ConnectionStates : int32_t
	{
		Initial        = 0x0000000000000000,
		Authenticating = 0x0000000000000001,
		Negotiating    = 0x0000000000000002,
		Redirected     = 0x0000000000000003,
		Reconnecting   = 0x0000000000000004,
		Connected      = 0x0000000000000005,
		CloseInitiated = 0x0000000000000006,
		Closed         = 0x0000000000000007
	};

	/**
	 * Enum BestHTTP.BestHTTP.SignalRCore.TransportEvents
	 */
	enum class TransportEvents : int32_t
	{
		SelectedToConnect = 0x0000000000000000,
		FailedToConnect   = 0x0000000000000001,
		Connected         = 0x0000000000000002,
		Closed            = 0x0000000000000003,
		ClosedWithError   = 0x0000000000000004
	};

	/**
	 * Enum BestHTTP.BestHTTP.SignalRCore.Messages.MessageTypes
	 */
	enum class MessageTypes : int32_t
	{
		Handshake        = 0x0000000000000000,
		Invocation       = 0x0000000000000001,
		StreamItem       = 0x0000000000000002,
		Completion       = 0x0000000000000003,
		StreamInvocation = 0x0000000000000004,
		CancelInvocation = 0x0000000000000005,
		Ping             = 0x0000000000000006,
		Close            = 0x0000000000000007
	};

	/**
	 * Enum BestHTTP.BestHTTP.SignalR.ProtocolVersions
	 */
	enum class ProtocolVersions : uint8_t
	{
		Protocol_2_0 = 0x0000000000000000,
		Protocol_2_1 = 0x0000000000000001,
		Protocol_2_2 = 0x0000000000000002
	};

	/**
	 * Enum BestHTTP.BestHTTP.SignalR.TransportTypes
	 */
	enum class TransportTypes_3 : int32_t
	{
		WebSocket        = 0x0000000000000000,
		ServerSentEvents = 0x0000000000000001,
		LongPoll         = 0x0000000000000002
	};

	/**
	 * Enum BestHTTP.BestHTTP.SignalR.MessageTypes
	 */
	enum class MessageTypes_1 : int32_t
	{
		KeepAlive  = 0x0000000000000000,
		Data       = 0x0000000000000001,
		Multiple   = 0x0000000000000002,
		Result     = 0x0000000000000003,
		Failure    = 0x0000000000000004,
		MethodCall = 0x0000000000000005,
		Progress   = 0x0000000000000006
	};

	/**
	 * Enum BestHTTP.BestHTTP.SignalR.ConnectionStates
	 */
	enum class ConnectionStates_1 : int32_t
	{
		Initial        = 0x0000000000000000,
		Authenticating = 0x0000000000000001,
		Negotiating    = 0x0000000000000002,
		Connecting     = 0x0000000000000003,
		Connected      = 0x0000000000000004,
		Reconnecting   = 0x0000000000000005,
		Closed         = 0x0000000000000006
	};

	/**
	 * Enum BestHTTP.BestHTTP.SignalR.RequestTypes
	 */
	enum class RequestTypes : int32_t
	{
		Negotiate = 0x0000000000000000,
		Connect   = 0x0000000000000001,
		Start     = 0x0000000000000002,
		Poll      = 0x0000000000000003,
		Send      = 0x0000000000000004,
		Reconnect = 0x0000000000000005,
		Abort     = 0x0000000000000006,
		Ping      = 0x0000000000000007
	};

	/**
	 * Enum BestHTTP.BestHTTP.SignalR.TransportStates
	 */
	enum class TransportStates_3 : int32_t
	{
		Initial      = 0x0000000000000000,
		Connecting   = 0x0000000000000001,
		Reconnecting = 0x0000000000000002,
		Starting     = 0x0000000000000003,
		Started      = 0x0000000000000004,
		Closing      = 0x0000000000000005,
		Closed       = 0x0000000000000006
	};

	/**
	 * Enum BestHTTP.BestHTTP.Examples.PersonStates
	 */
	enum class PersonStates : int32_t
	{
		Unknown = 0x0000000000000000,
		Joined  = 0x0000000000000001
	};

	/**
	 * Enum BestHTTP.BestHTTP.Examples.MyEnum
	 */
	enum class MyEnum : int32_t
	{
		None = 0x0000000000000000,
		One  = 0x0000000000000001,
		Two  = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.Interop.Kernel32+FILE_INFO_BY_HANDLE_CLASS
	 */
	enum class Interop_Kernel32_FILE_INFO_BY_HANDLE_CLASS : uint32_t
	{
		FileBasicInfo                  = 0x0000000000000000,
		FileStandardInfo               = 0x0000000000000001,
		FileNameInfo                   = 0x0000000000000002,
		FileRenameInfo                 = 0x0000000000000003,
		FileDispositionInfo            = 0x0000000000000004,
		FileAllocationInfo             = 0x0000000000000005,
		FileEndOfFileInfo              = 0x0000000000000006,
		FileStreamInfo                 = 0x0000000000000007,
		FileCompressionInfo            = 0x0000000000000008,
		FileAttributeTagInfo           = 0x0000000000000009,
		FileIdBothDirectoryInfo        = 0x000000000000000A,
		FileIdBothDirectoryRestartInfo = 0x000000000000000B,
		FileIoPriorityHintInfo         = 0x000000000000000C,
		FileRemoteProtocolInfo         = 0x000000000000000D,
		FileFullDirectoryInfo          = 0x000000000000000E,
		FileFullDirectoryRestartInfo   = 0x000000000000000F
	};

	/**
	 * Enum mscorlib.Interop.Kernel32+FINDEX_INFO_LEVELS
	 */
	enum class Interop_Kernel32_FINDEX_INFO_LEVELS : uint32_t
	{
		FindExInfoStandard     = 0x0000000000000000,
		FindExInfoBasic        = 0x0000000000000001,
		FindExInfoMaxInfoLevel = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.Interop.Kernel32+FINDEX_SEARCH_OPS
	 */
	enum class Interop_Kernel32_FINDEX_SEARCH_OPS : uint32_t
	{
		FindExSearchNameMatch          = 0x0000000000000000,
		FindExSearchLimitToDirectories = 0x0000000000000001,
		FindExSearchLimitToDevices     = 0x0000000000000002,
		FindExSearchMaxSearchOp        = 0x0000000000000003
	};

	/**
	 * Enum mscorlib.Interop.Kernel32+GET_FILEEX_INFO_LEVELS
	 */
	enum class Interop_Kernel32_GET_FILEEX_INFO_LEVELS : uint32_t
	{
		GetFileExInfoStandard = 0x0000000000000000,
		GetFileExMaxInfoLevel = 0x0000000000000001
	};

	/**
	 * Enum mscorlib.Interop.BCrypt+NTSTATUS
	 */
	enum class Interop_BCrypt_NTSTATUS : uint32_t
	{
		STATUS_SUCCESS           = 0x0000000000000000,
		STATUS_NOT_FOUND         = 0x00000000C0000225,
		STATUS_INVALID_PARAMETER = 0x00000000C000000D,
		STATUS_NO_MEMORY         = 0x00000000C0000017
	};

	/**
	 * Enum mscorlib.Interop+BOOL
	 */
	enum class Interop_BOOL : int32_t
	{
		_FALSE_ = 0x0000000000000000,
		_TRUE_  = 0x0000000000000001
	};

	/**
	 * Enum mscorlib.Interop+BOOLEAN
	 */
	enum class Interop_BOOLEAN : uint8_t
	{
		_FALSE_ = 0x0000000000000000,
		_TRUE_  = 0x0000000000000001
	};

	/**
	 * Enum mscorlib.Interop.NtDll+FILE_INFORMATION_CLASS
	 */
	enum class Interop_NtDll_FILE_INFORMATION_CLASS : uint32_t
	{
		FileDirectoryInformation                 = 0x0000000000000001,
		FileFullDirectoryInformation             = 0x0000000000000002,
		FileBothDirectoryInformation             = 0x0000000000000003,
		FileBasicInformation                     = 0x0000000000000004,
		FileStandardInformation                  = 0x0000000000000005,
		FileInternalInformation                  = 0x0000000000000006,
		FileEaInformation                        = 0x0000000000000007,
		FileAccessInformation                    = 0x0000000000000008,
		FileNameInformation                      = 0x0000000000000009,
		FileRenameInformation                    = 0x000000000000000A,
		FileLinkInformation                      = 0x000000000000000B,
		FileNamesInformation                     = 0x000000000000000C,
		FileDispositionInformation               = 0x000000000000000D,
		FilePositionInformation                  = 0x000000000000000E,
		FileFullEaInformation                    = 0x000000000000000F,
		FileModeInformation                      = 0x0000000000000010,
		FileAlignmentInformation                 = 0x0000000000000011,
		FileAllInformation                       = 0x0000000000000012,
		FileAllocationInformation                = 0x0000000000000013,
		FileEndOfFileInformation                 = 0x0000000000000014,
		FileAlternateNameInformation             = 0x0000000000000015,
		FileStreamInformation                    = 0x0000000000000016,
		FilePipeInformation                      = 0x0000000000000017,
		FilePipeLocalInformation                 = 0x0000000000000018,
		FilePipeRemoteInformation                = 0x0000000000000019,
		FileMailslotQueryInformation             = 0x000000000000001A,
		FileMailslotSetInformation               = 0x000000000000001B,
		FileCompressionInformation               = 0x000000000000001C,
		FileObjectIdInformation                  = 0x000000000000001D,
		FileCompletionInformation                = 0x000000000000001E,
		FileMoveClusterInformation               = 0x000000000000001F,
		FileQuotaInformation                     = 0x0000000000000020,
		FileReparsePointInformation              = 0x0000000000000021,
		FileNetworkOpenInformation               = 0x0000000000000022,
		FileAttributeTagInformation              = 0x0000000000000023,
		FileTrackingInformation                  = 0x0000000000000024,
		FileIdBothDirectoryInformation           = 0x0000000000000025,
		FileIdFullDirectoryInformation           = 0x0000000000000026,
		FileValidDataLengthInformation           = 0x0000000000000027,
		FileShortNameInformation                 = 0x0000000000000028,
		FileIoCompletionNotificationInformation  = 0x0000000000000029,
		FileIoStatusBlockRangeInformation        = 0x000000000000002A,
		FileIoPriorityHintInformation            = 0x000000000000002B,
		FileSfioReserveInformation               = 0x000000000000002C,
		FileSfioVolumeInformation                = 0x000000000000002D,
		FileHardLinkInformation                  = 0x000000000000002E,
		FileProcessIdsUsingFileInformation       = 0x000000000000002F,
		FileNormalizedNameInformation            = 0x0000000000000030,
		FileNetworkPhysicalNameInformation       = 0x0000000000000031,
		FileIdGlobalTxDirectoryInformation       = 0x0000000000000032,
		FileIsRemoteDeviceInformation            = 0x0000000000000033,
		FileUnusedInformation                    = 0x0000000000000034,
		FileNumaNodeInformation                  = 0x0000000000000035,
		FileStandardLinkInformation              = 0x0000000000000036,
		FileRemoteProtocolInformation            = 0x0000000000000037,
		FileRenameInformationBypassAccessCheck   = 0x0000000000000038,
		FileLinkInformationBypassAccessCheck     = 0x0000000000000039,
		FileVolumeNameInformation                = 0x000000000000003A,
		FileIdInformation                        = 0x000000000000003B,
		FileIdExtdDirectoryInformation           = 0x000000000000003C,
		FileReplaceCompletionInformation         = 0x000000000000003D,
		FileHardLinkFullIdInformation            = 0x000000000000003E,
		FileIdExtdBothDirectoryInformation       = 0x000000000000003F,
		FileDispositionInformationEx             = 0x0000000000000040,
		FileRenameInformationEx                  = 0x0000000000000041,
		FileRenameInformationExBypassAccessCheck = 0x0000000000000042,
		FileDesiredStorageClassInformation       = 0x0000000000000043,
		FileStatInformation                      = 0x0000000000000044
	};

	/**
	 * Enum mscorlib.Interop.NtDll+ObjectAttributes
	 */
	enum class Interop_NtDll_ObjectAttributes : uint32_t
	{
		OBJ_INHERIT          = 0x0000000000000002,
		OBJ_PERMANENT        = 0x0000000000000010,
		OBJ_EXCLUSIVE        = 0x0000000000000020,
		OBJ_CASE_INSENSITIVE = 0x0000000000000040,
		OBJ_OPENIF           = 0x0000000000000080,
		OBJ_OPENLINK         = 0x0000000000000100
	};

	/**
	 * Enum mscorlib.Interop.NtDll+CreateDisposition
	 */
	enum class Interop_NtDll_CreateDisposition : uint32_t
	{
		FILE_SUPERSEDE    = 0x0000000000000000,
		FILE_OPEN         = 0x0000000000000001,
		FILE_CREATE       = 0x0000000000000002,
		FILE_OPEN_IF      = 0x0000000000000003,
		FILE_OVERWRITE    = 0x0000000000000004,
		FILE_OVERWRITE_IF = 0x0000000000000005
	};

	/**
	 * Enum mscorlib.Interop.NtDll+CreateOptions
	 */
	enum class Interop_NtDll_CreateOptions : uint32_t
	{
		FILE_DIRECTORY_FILE            = 0x0000000000000001,
		FILE_WRITE_THROUGH             = 0x0000000000000002,
		FILE_SEQUENTIAL_ONLY           = 0x0000000000000004,
		FILE_NO_INTERMEDIATE_BUFFERING = 0x0000000000000008,
		FILE_SYNCHRONOUS_IO_ALERT      = 0x0000000000000010,
		FILE_SYNCHRONOUS_IO_NONALERT   = 0x0000000000000020,
		FILE_NON_DIRECTORY_FILE        = 0x0000000000000040,
		FILE_CREATE_TREE_CONNECTION    = 0x0000000000000080,
		FILE_COMPLETE_IF_OPLOCKED      = 0x0000000000000100,
		FILE_NO_EA_KNOWLEDGE           = 0x0000000000000200,
		FILE_RANDOM_ACCESS             = 0x0000000000000800,
		FILE_DELETE_ON_CLOSE           = 0x0000000000001000,
		FILE_OPEN_BY_FILE_ID           = 0x0000000000002000,
		FILE_OPEN_FOR_BACKUP_INTENT    = 0x0000000000004000,
		FILE_NO_COMPRESSION            = 0x0000000000008000,
		FILE_OPEN_REQUIRING_OPLOCK     = 0x0000000000010000,
		FILE_DISALLOW_EXCLUSIVE        = 0x0000000000020000,
		FILE_SESSION_AWARE             = 0x0000000000040000,
		FILE_RESERVE_OPFILTER          = 0x0000000000100000,
		FILE_OPEN_REPARSE_POINT        = 0x0000000000200000,
		FILE_OPEN_NO_RECALL            = 0x0000000000400000
	};

	/**
	 * Enum mscorlib.Interop.NtDll+DesiredAccess
	 */
	enum class Interop_NtDll_DesiredAccess : uint32_t
	{
		FILE_READ_DATA            = 0x0000000000000001,
		FILE_LIST_DIRECTORY       = 0x0000000000000001,
		FILE_WRITE_DATA           = 0x0000000000000002,
		FILE_ADD_FILE             = 0x0000000000000002,
		FILE_APPEND_DATA          = 0x0000000000000004,
		FILE_ADD_SUBDIRECTORY     = 0x0000000000000004,
		FILE_CREATE_PIPE_INSTANCE = 0x0000000000000004,
		FILE_READ_EA              = 0x0000000000000008,
		FILE_WRITE_EA             = 0x0000000000000010,
		FILE_EXECUTE              = 0x0000000000000020,
		FILE_TRAVERSE             = 0x0000000000000020,
		FILE_DELETE_CHILD         = 0x0000000000000040,
		FILE_READ_ATTRIBUTES      = 0x0000000000000080,
		FILE_WRITE_ATTRIBUTES     = 0x0000000000000100,
		FILE_ALL_ACCESS           = 0x00000000000F01FF,
		_DELETE_                  = 0x0000000000010000,
		READ_CONTROL              = 0x0000000000020000,
		WRITE_DAC                 = 0x0000000000040000,
		WRITE_OWNER               = 0x0000000000080000,
		_SYNCHRONIZE_             = 0x0000000000100000,
		STANDARD_RIGHTS_READ      = 0x0000000000020000,
		STANDARD_RIGHTS_WRITE     = 0x0000000000020000,
		STANDARD_RIGHTS_EXECUTE   = 0x0000000000020000,
		FILE_GENERIC_READ         = 0x0000000080000000,
		FILE_GENERIC_WRITE        = 0x0000000040000000,
		FILE_GENERIC_EXECUTE      = 0x0000000020000000
	};

	/**
	 * Enum mscorlib.Mono.CertificateImportFlags
	 */
	enum class CertificateImportFlags : int32_t
	{
		None                     = 0x0000000000000000,
		DisableNativeBackend     = 0x0000000000000001,
		DisableAutomaticFallback = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.Mono.Globalization.Unicode.SimpleCollator+ExtenderType
	 */
	enum class SimpleCollator_ExtenderType : int32_t
	{
		None        = 0x0000000000000000,
		Simple      = 0x0000000000000001,
		Voiced      = 0x0000000000000002,
		Conditional = 0x0000000000000003,
		Buggy       = 0x0000000000000004
	};

	/**
	 * Enum mscorlib.Mono.Math.BigInteger+Sign
	 */
	enum class BigInteger_Sign : int32_t
	{
		Negative = -1,
		Zero     = 0x0000000000000000,
		Positive = 0x0000000000000001
	};

	/**
	 * Enum mscorlib.Mono.Math.Prime.ConfidenceFactor
	 */
	enum class ConfidenceFactor : int32_t
	{
		ExtraLow  = 0x0000000000000000,
		Low       = 0x0000000000000001,
		Medium    = 0x0000000000000002,
		High      = 0x0000000000000003,
		ExtraHigh = 0x0000000000000004,
		Provable  = 0x0000000000000005
	};

	/**
	 * Enum mscorlib.Microsoft.Win32.RegistryHive
	 */
	enum class RegistryHive : int32_t
	{
		ClassesRoot     = -2147483648,
		CurrentUser     = -2147483647,
		LocalMachine    = -2147483646,
		Users           = -2147483645,
		PerformanceData = -2147483644,
		CurrentConfig   = -2147483643,
		DynData         = -2147483642
	};

	/**
	 * Enum mscorlib.Microsoft.Win32.RegistryKey+StateFlags
	 */
	enum class RegistryKey_StateFlags : int32_t
	{
		Dirty       = 0x0000000000000001,
		SystemKey   = 0x0000000000000002,
		WriteAccess = 0x0000000000000004,
		PerfData    = 0x0000000000000008
	};

	/**
	 * Enum mscorlib.Microsoft.Win32.RegistryKeyPermissionCheck
	 */
	enum class RegistryKeyPermissionCheck : int32_t
	{
		Default          = 0x0000000000000000,
		ReadSubTree      = 0x0000000000000001,
		ReadWriteSubTree = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.Microsoft.Win32.RegistryOptions
	 */
	enum class RegistryOptions : int32_t
	{
		None     = 0x0000000000000000,
		Volatile = 0x0000000000000001
	};

	/**
	 * Enum mscorlib.Microsoft.Win32.RegistryValueKind
	 */
	enum class RegistryValueKind : int32_t
	{
		String       = 0x0000000000000001,
		ExpandString = 0x0000000000000002,
		Binary       = 0x0000000000000003,
		DWord        = 0x0000000000000004,
		MultiString  = 0x0000000000000007,
		QWord        = 0x000000000000000B,
		Unknown      = 0x0000000000000000,
		None         = -1
	};

	/**
	 * Enum mscorlib.Microsoft.Win32.RegistryValueOptions
	 */
	enum class RegistryValueOptions : int32_t
	{
		None                        = 0x0000000000000000,
		DoNotExpandEnvironmentNames = 0x0000000000000001
	};

	/**
	 * Enum mscorlib.Microsoft.Win32.RegistryView
	 */
	enum class RegistryView : int32_t
	{
		Default    = 0x0000000000000000,
		Registry64 = 0x0000000000000100,
		Registry32 = 0x0000000000000200
	};

	/**
	 * Enum mscorlib.Internal.Runtime.Augments.AsyncStatus
	 */
	enum class AsyncStatus : int32_t
	{
		Started   = 0x0000000000000000,
		Completed = 0x0000000000000001,
		Canceled  = 0x0000000000000002,
		Error     = 0x0000000000000003
	};

	/**
	 * Enum mscorlib.string+TrimType
	 */
	enum class string_TrimType : int32_t
	{
		Head = 0x0000000000000000,
		Tail = 0x0000000000000001,
		Both = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.System.TimeZoneInfo+TimeZoneInfoResult
	 */
	enum class TimeZoneInfo_TimeZoneInfoResult : int32_t
	{
		Success                   = 0x0000000000000000,
		TimeZoneNotFoundException = 0x0000000000000001,
		InvalidTimeZoneException  = 0x0000000000000002,
		SecurityException         = 0x0000000000000003
	};

	/**
	 * Enum mscorlib.System.TimeZoneInfoOptions
	 */
	enum class TimeZoneInfoOptions : int32_t
	{
		None                 = 0x0000000000000001,
		NoThrowOnInvalidTime = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.System.AttributeTargets
	 */
	enum class AttributeTargets : int32_t
	{
		Assembly         = 0x0000000000000001,
		Module           = 0x0000000000000002,
		Class            = 0x0000000000000004,
		Struct           = 0x0000000000000008,
		Enum             = 0x0000000000000010,
		Constructor      = 0x0000000000000020,
		Method           = 0x0000000000000040,
		Property         = 0x0000000000000080,
		Field            = 0x0000000000000100,
		Event            = 0x0000000000000200,
		Interface        = 0x0000000000000400,
		Parameter        = 0x0000000000000800,
		Delegate         = 0x0000000000001000,
		ReturnValue      = 0x0000000000002000,
		GenericParameter = 0x0000000000004000,
		All              = 0x0000000000007FFF
	};

	/**
	 * Enum mscorlib.System.Base64FormattingOptions
	 */
	enum class Base64FormattingOptions : int32_t
	{
		None             = 0x0000000000000000,
		InsertLineBreaks = 0x0000000000000001
	};

	/**
	 * Enum mscorlib.System.DateTimeKind
	 */
	enum class DateTimeKind : int32_t
	{
		Unspecified = 0x0000000000000000,
		Utc         = 0x0000000000000001,
		Local       = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.System.DayOfWeek
	 */
	enum class DayOfWeek : int32_t
	{
		Sunday    = 0x0000000000000000,
		Monday    = 0x0000000000000001,
		Tuesday   = 0x0000000000000002,
		Wednesday = 0x0000000000000003,
		Thursday  = 0x0000000000000004,
		Friday    = 0x0000000000000005,
		Saturday  = 0x0000000000000006
	};

	/**
	 * Enum mscorlib.System.DateTimeParse+DTT
	 */
	enum class DateTimeParse_DTT : int32_t
	{
		End              = 0x0000000000000000,
		NumEnd           = 0x0000000000000001,
		NumAmpm          = 0x0000000000000002,
		NumSpace         = 0x0000000000000003,
		NumDatesep       = 0x0000000000000004,
		NumTimesep       = 0x0000000000000005,
		MonthEnd         = 0x0000000000000006,
		MonthSpace       = 0x0000000000000007,
		MonthDatesep     = 0x0000000000000008,
		NumDatesuff      = 0x0000000000000009,
		NumTimesuff      = 0x000000000000000A,
		DayOfWeek        = 0x000000000000000B,
		YearSpace        = 0x000000000000000C,
		YearDateSep      = 0x000000000000000D,
		YearEnd          = 0x000000000000000E,
		TimeZone         = 0x000000000000000F,
		Era              = 0x0000000000000010,
		NumUTCTimeMark   = 0x0000000000000011,
		Unk              = 0x0000000000000012,
		NumLocalTimeMark = 0x0000000000000013,
		Max              = 0x0000000000000014
	};

	/**
	 * Enum mscorlib.System.DateTimeParse+TM
	 */
	enum class DateTimeParse_TM : int32_t
	{
		NotSet = -1,
		AM     = 0x0000000000000000,
		PM     = 0x0000000000000001
	};

	/**
	 * Enum mscorlib.System.DateTimeParse+DS
	 */
	enum class DateTimeParse_DS : int32_t
	{
		BEGIN   = 0x0000000000000000,
		N       = 0x0000000000000001,
		NN      = 0x0000000000000002,
		D_Nd    = 0x0000000000000003,
		D_NN    = 0x0000000000000004,
		D_NNd   = 0x0000000000000005,
		D_M     = 0x0000000000000006,
		D_MN    = 0x0000000000000007,
		D_NM    = 0x0000000000000008,
		D_MNd   = 0x0000000000000009,
		D_NDS   = 0x000000000000000A,
		D_Y     = 0x000000000000000B,
		D_YN    = 0x000000000000000C,
		D_YNd   = 0x000000000000000D,
		D_YM    = 0x000000000000000E,
		D_YMd   = 0x000000000000000F,
		D_S     = 0x0000000000000010,
		T_S     = 0x0000000000000011,
		T_Nt    = 0x0000000000000012,
		T_NNt   = 0x0000000000000013,
		_ERROR_ = 0x0000000000000014,
		DX_NN   = 0x0000000000000015,
		DX_NNN  = 0x0000000000000016,
		DX_MN   = 0x0000000000000017,
		DX_NM   = 0x0000000000000018,
		DX_MNN  = 0x0000000000000019,
		DX_DS   = 0x000000000000001A,
		DX_DSN  = 0x000000000000001B,
		DX_NDS  = 0x000000000000001C,
		DX_NNDS = 0x000000000000001D,
		DX_YNN  = 0x000000000000001E,
		DX_YMN  = 0x000000000000001F,
		DX_YN   = 0x0000000000000020,
		DX_YM   = 0x0000000000000021,
		TX_N    = 0x0000000000000022,
		TX_NN   = 0x0000000000000023,
		TX_NNN  = 0x0000000000000024,
		TX_TS   = 0x0000000000000025,
		DX_NNY  = 0x0000000000000026
	};

	/**
	 * Enum mscorlib.System.DTSubStringType
	 */
	enum class DTSubStringType : int32_t
	{
		Unknown = 0x0000000000000000,
		Invalid = 0x0000000000000001,
		Number  = 0x0000000000000002,
		End     = 0x0000000000000003,
		Other   = 0x0000000000000004
	};

	/**
	 * Enum mscorlib.System.ParseFailureKind
	 */
	enum class ParseFailureKind : int32_t
	{
		None                                   = 0x0000000000000000,
		ArgumentNull                           = 0x0000000000000001,
		Format                                 = 0x0000000000000002,
		FormatWithParameter                    = 0x0000000000000003,
		FormatWithOriginalDateTime             = 0x0000000000000004,
		FormatWithFormatSpecifier              = 0x0000000000000005,
		FormatWithOriginalDateTimeAndParameter = 0x0000000000000006,
		FormatBadDateTimeCalendar              = 0x0000000000000007
	};

	/**
	 * Enum mscorlib.System.ParseFlags
	 */
	enum class ParseFlags : int32_t
	{
		HaveYear        = 0x0000000000000001,
		HaveMonth       = 0x0000000000000002,
		HaveDay         = 0x0000000000000004,
		HaveHour        = 0x0000000000000008,
		HaveMinute      = 0x0000000000000010,
		HaveSecond      = 0x0000000000000020,
		HaveTime        = 0x0000000000000040,
		HaveDate        = 0x0000000000000080,
		TimeZoneUsed    = 0x0000000000000100,
		TimeZoneUtc     = 0x0000000000000200,
		ParsedMonthName = 0x0000000000000400,
		CaptureOffset   = 0x0000000000000800,
		YearDefault     = 0x0000000000001000,
		Rfc1123Pattern  = 0x0000000000002000,
		UtcSortPattern  = 0x0000000000004000
	};

	/**
	 * Enum mscorlib.System.TokenType
	 */
	enum class TokenType : int32_t
	{
		NumberToken        = 0x0000000000000001,
		YearNumberToken    = 0x0000000000000002,
		Am                 = 0x0000000000000003,
		Pm                 = 0x0000000000000004,
		MonthToken         = 0x0000000000000005,
		EndOfString        = 0x0000000000000006,
		DayOfWeekToken     = 0x0000000000000007,
		TimeZoneToken      = 0x0000000000000008,
		EraToken           = 0x0000000000000009,
		DateWordToken      = 0x000000000000000A,
		UnknownToken       = 0x000000000000000B,
		HebrewNumber       = 0x000000000000000C,
		JapaneseEraToken   = 0x000000000000000D,
		TEraToken          = 0x000000000000000E,
		IgnorableSymbol    = 0x000000000000000F,
		SEP_Unk            = 0x0000000000000100,
		SEP_End            = 0x0000000000000200,
		SEP_Space          = 0x0000000000000300,
		SEP_Am             = 0x0000000000000400,
		SEP_Pm             = 0x0000000000000500,
		SEP_Date           = 0x0000000000000600,
		SEP_Time           = 0x0000000000000700,
		SEP_YearSuff       = 0x0000000000000800,
		SEP_MonthSuff      = 0x0000000000000900,
		SEP_DaySuff        = 0x0000000000000A00,
		SEP_HourSuff       = 0x0000000000000B00,
		SEP_MinuteSuff     = 0x0000000000000C00,
		SEP_SecondSuff     = 0x0000000000000D00,
		SEP_LocalTimeMark  = 0x0000000000000E00,
		SEP_DateOrOffset   = 0x0000000000000F00,
		RegularTokenMask   = 0x00000000000000FF,
		SeparatorTokenMask = 0x000000000000FF00
	};

	/**
	 * Enum mscorlib.System.Guid+GuidStyles
	 */
	enum class Guid_GuidStyles : int32_t
	{
		None               = 0x0000000000000000,
		AllowParenthesis   = 0x0000000000000001,
		AllowBraces        = 0x0000000000000002,
		AllowDashes        = 0x0000000000000004,
		AllowHexPrefix     = 0x0000000000000008,
		RequireParenthesis = 0x0000000000000010,
		RequireBraces      = 0x0000000000000020,
		RequireDashes      = 0x0000000000000040,
		RequireHexPrefix   = 0x0000000000000080,
		HexFormat          = 0x00000000000000A0,
		NumberFormat       = 0x0000000000000000,
		DigitFormat        = 0x0000000000000040,
		BraceFormat        = 0x0000000000000060,
		ParenthesisFormat  = 0x0000000000000050,
		Any                = 0x000000000000000F
	};

	/**
	 * Enum mscorlib.System.Guid+GuidParseThrowStyle
	 */
	enum class Guid_GuidParseThrowStyle : int32_t
	{
		None           = 0x0000000000000000,
		All            = 0x0000000000000001,
		AllButOverflow = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.System.Guid+ParseFailureKind
	 */
	enum class Guid_ParseFailureKind : int32_t
	{
		None                     = 0x0000000000000000,
		ArgumentNull             = 0x0000000000000001,
		Format                   = 0x0000000000000002,
		FormatWithParameter      = 0x0000000000000003,
		NativeException          = 0x0000000000000004,
		FormatWithInnerException = 0x0000000000000005
	};

	/**
	 * Enum mscorlib.System.LazyState
	 */
	enum class LazyState : int32_t
	{
		NoneViaConstructor                    = 0x0000000000000000,
		NoneViaFactory                        = 0x0000000000000001,
		NoneException                         = 0x0000000000000002,
		PublicationOnlyViaConstructor         = 0x0000000000000003,
		PublicationOnlyViaFactory             = 0x0000000000000004,
		PublicationOnlyWait                   = 0x0000000000000005,
		PublicationOnlyException              = 0x0000000000000006,
		ExecutionAndPublicationViaConstructor = 0x0000000000000007,
		ExecutionAndPublicationViaFactory     = 0x0000000000000008,
		ExecutionAndPublicationException      = 0x0000000000000009
	};

	/**
	 * Enum mscorlib.System.MidpointRounding
	 */
	enum class MidpointRounding : int32_t
	{
		ToEven       = 0x0000000000000000,
		AwayFromZero = 0x0000000000000001
	};

	/**
	 * Enum mscorlib.System.StringComparison
	 */
	enum class StringComparison : int32_t
	{
		CurrentCulture             = 0x0000000000000000,
		CurrentCultureIgnoreCase   = 0x0000000000000001,
		InvariantCulture           = 0x0000000000000002,
		InvariantCultureIgnoreCase = 0x0000000000000003,
		Ordinal                    = 0x0000000000000004,
		OrdinalIgnoreCase          = 0x0000000000000005
	};

	/**
	 * Enum mscorlib.System.StringSplitOptions
	 */
	enum class StringSplitOptions : int32_t
	{
		None               = 0x0000000000000000,
		RemoveEmptyEntries = 0x0000000000000001
	};

	/**
	 * Enum mscorlib.System.TypeCode
	 */
	enum class TypeCode : int32_t
	{
		Empty    = 0x0000000000000000,
		Object   = 0x0000000000000001,
		DBNull   = 0x0000000000000002,
		Boolean  = 0x0000000000000003,
		Char     = 0x0000000000000004,
		SByte    = 0x0000000000000005,
		Byte     = 0x0000000000000006,
		Int16    = 0x0000000000000007,
		UInt16   = 0x0000000000000008,
		Int32    = 0x0000000000000009,
		UInt32   = 0x000000000000000A,
		Int64    = 0x000000000000000B,
		UInt64   = 0x000000000000000C,
		Single   = 0x000000000000000D,
		Double   = 0x000000000000000E,
		Decimal  = 0x000000000000000F,
		DateTime = 0x0000000000000010,
		String   = 0x0000000000000012
	};

	/**
	 * Enum mscorlib.System.ConsoleColor
	 */
	enum class ConsoleColor : int32_t
	{
		Black       = 0x0000000000000000,
		DarkBlue    = 0x0000000000000001,
		DarkGreen   = 0x0000000000000002,
		DarkCyan    = 0x0000000000000003,
		DarkRed     = 0x0000000000000004,
		DarkMagenta = 0x0000000000000005,
		DarkYellow  = 0x0000000000000006,
		Gray        = 0x0000000000000007,
		DarkGray    = 0x0000000000000008,
		Blue        = 0x0000000000000009,
		Green       = 0x000000000000000A,
		Cyan        = 0x000000000000000B,
		Red         = 0x000000000000000C,
		Magenta     = 0x000000000000000D,
		Yellow      = 0x000000000000000E,
		White       = 0x000000000000000F
	};

	/**
	 * Enum mscorlib.System.ConsoleKey
	 */
	enum class ConsoleKey : int32_t
	{
		Backspace         = 0x0000000000000008,
		Tab               = 0x0000000000000009,
		Clear             = 0x000000000000000C,
		Enter             = 0x000000000000000D,
		Pause             = 0x0000000000000013,
		Escape            = 0x000000000000001B,
		Spacebar          = 0x0000000000000020,
		PageUp            = 0x0000000000000021,
		PageDown          = 0x0000000000000022,
		End               = 0x0000000000000023,
		Home              = 0x0000000000000024,
		LeftArrow         = 0x0000000000000025,
		UpArrow           = 0x0000000000000026,
		RightArrow        = 0x0000000000000027,
		DownArrow         = 0x0000000000000028,
		Select            = 0x0000000000000029,
		Print             = 0x000000000000002A,
		Execute           = 0x000000000000002B,
		PrintScreen       = 0x000000000000002C,
		Insert            = 0x000000000000002D,
		Delete            = 0x000000000000002E,
		Help              = 0x000000000000002F,
		D0                = 0x0000000000000030,
		D1                = 0x0000000000000031,
		D2                = 0x0000000000000032,
		D3                = 0x0000000000000033,
		D4                = 0x0000000000000034,
		D5                = 0x0000000000000035,
		D6                = 0x0000000000000036,
		D7                = 0x0000000000000037,
		D8                = 0x0000000000000038,
		D9                = 0x0000000000000039,
		A                 = 0x0000000000000041,
		B                 = 0x0000000000000042,
		C                 = 0x0000000000000043,
		D                 = 0x0000000000000044,
		E                 = 0x0000000000000045,
		F                 = 0x0000000000000046,
		G                 = 0x0000000000000047,
		H                 = 0x0000000000000048,
		I                 = 0x0000000000000049,
		J                 = 0x000000000000004A,
		K                 = 0x000000000000004B,
		L                 = 0x000000000000004C,
		M                 = 0x000000000000004D,
		N                 = 0x000000000000004E,
		O                 = 0x000000000000004F,
		P                 = 0x0000000000000050,
		Q                 = 0x0000000000000051,
		R                 = 0x0000000000000052,
		S                 = 0x0000000000000053,
		T                 = 0x0000000000000054,
		U                 = 0x0000000000000055,
		V                 = 0x0000000000000056,
		W                 = 0x0000000000000057,
		X                 = 0x0000000000000058,
		Y                 = 0x0000000000000059,
		Z                 = 0x000000000000005A,
		LeftWindows       = 0x000000000000005B,
		RightWindows      = 0x000000000000005C,
		Applications      = 0x000000000000005D,
		Sleep             = 0x000000000000005F,
		NumPad0           = 0x0000000000000060,
		NumPad1           = 0x0000000000000061,
		NumPad2           = 0x0000000000000062,
		NumPad3           = 0x0000000000000063,
		NumPad4           = 0x0000000000000064,
		NumPad5           = 0x0000000000000065,
		NumPad6           = 0x0000000000000066,
		NumPad7           = 0x0000000000000067,
		NumPad8           = 0x0000000000000068,
		NumPad9           = 0x0000000000000069,
		Multiply          = 0x000000000000006A,
		Add               = 0x000000000000006B,
		Separator         = 0x000000000000006C,
		Subtract          = 0x000000000000006D,
		Decimal           = 0x000000000000006E,
		Divide            = 0x000000000000006F,
		F1                = 0x0000000000000070,
		F2                = 0x0000000000000071,
		F3                = 0x0000000000000072,
		F4                = 0x0000000000000073,
		F5                = 0x0000000000000074,
		F6                = 0x0000000000000075,
		F7                = 0x0000000000000076,
		F8                = 0x0000000000000077,
		F9                = 0x0000000000000078,
		F10               = 0x0000000000000079,
		F11               = 0x000000000000007A,
		F12               = 0x000000000000007B,
		F13               = 0x000000000000007C,
		F14               = 0x000000000000007D,
		F15               = 0x000000000000007E,
		F16               = 0x000000000000007F,
		F17               = 0x0000000000000080,
		F18               = 0x0000000000000081,
		F19               = 0x0000000000000082,
		F20               = 0x0000000000000083,
		F21               = 0x0000000000000084,
		F22               = 0x0000000000000085,
		F23               = 0x0000000000000086,
		F24               = 0x0000000000000087,
		BrowserBack       = 0x00000000000000A6,
		BrowserForward    = 0x00000000000000A7,
		BrowserRefresh    = 0x00000000000000A8,
		BrowserStop       = 0x00000000000000A9,
		BrowserSearch     = 0x00000000000000AA,
		BrowserFavorites  = 0x00000000000000AB,
		BrowserHome       = 0x00000000000000AC,
		VolumeMute        = 0x00000000000000AD,
		VolumeDown        = 0x00000000000000AE,
		VolumeUp          = 0x00000000000000AF,
		MediaNext         = 0x00000000000000B0,
		MediaPrevious     = 0x00000000000000B1,
		MediaStop         = 0x00000000000000B2,
		MediaPlay         = 0x00000000000000B3,
		LaunchMail        = 0x00000000000000B4,
		LaunchMediaSelect = 0x00000000000000B5,
		LaunchApp1        = 0x00000000000000B6,
		LaunchApp2        = 0x00000000000000B7,
		Oem1              = 0x00000000000000BA,
		OemPlus           = 0x00000000000000BB,
		OemComma          = 0x00000000000000BC,
		OemMinus          = 0x00000000000000BD,
		OemPeriod         = 0x00000000000000BE,
		Oem2              = 0x00000000000000BF,
		Oem3              = 0x00000000000000C0,
		Oem4              = 0x00000000000000DB,
		Oem5              = 0x00000000000000DC,
		Oem6              = 0x00000000000000DD,
		Oem7              = 0x00000000000000DE,
		Oem8              = 0x00000000000000DF,
		Oem102            = 0x00000000000000E2,
		Process           = 0x00000000000000E5,
		Packet            = 0x00000000000000E7,
		Attention         = 0x00000000000000F6,
		CrSel             = 0x00000000000000F7,
		ExSel             = 0x00000000000000F8,
		EraseEndOfFile    = 0x00000000000000F9,
		Play              = 0x00000000000000FA,
		Zoom              = 0x00000000000000FB,
		NoName            = 0x00000000000000FC,
		Pa1               = 0x00000000000000FD,
		OemClear          = 0x00000000000000FE
	};

	/**
	 * Enum mscorlib.System.ConsoleModifiers
	 */
	enum class ConsoleModifiers : int32_t
	{
		Alt     = 0x0000000000000001,
		Shift   = 0x0000000000000002,
		Control = 0x0000000000000004
	};

	/**
	 * Enum mscorlib.System.ConsoleSpecialKey
	 */
	enum class ConsoleSpecialKey : int32_t
	{
		ControlC     = 0x0000000000000000,
		ControlBreak = 0x0000000000000001
	};

	/**
	 * Enum mscorlib.System.DefaultBinder+Primitives
	 */
	enum class DefaultBinder_Primitives : int32_t
	{
		Boolean  = 0x0000000000000008,
		Char     = 0x0000000000000010,
		SByte    = 0x0000000000000020,
		Byte     = 0x0000000000000040,
		Int16    = 0x0000000000000080,
		UInt16   = 0x0000000000000100,
		Int32    = 0x0000000000000200,
		UInt32   = 0x0000000000000400,
		Int64    = 0x0000000000000800,
		UInt64   = 0x0000000000001000,
		Single   = 0x0000000000002000,
		Double   = 0x0000000000004000,
		Decimal  = 0x0000000000008000,
		DateTime = 0x0000000000010000,
		String   = 0x0000000000040000
	};

	/**
	 * Enum mscorlib.System.Enum+ParseFailureKind
	 */
	enum class Enum_ParseFailureKind : int32_t
	{
		None                  = 0x0000000000000000,
		Argument              = 0x0000000000000001,
		ArgumentNull          = 0x0000000000000002,
		ArgumentWithParameter = 0x0000000000000003,
		UnhandledException    = 0x0000000000000004
	};

	/**
	 * Enum mscorlib.System.Exception+ExceptionMessageKind
	 */
	enum class Exception_ExceptionMessageKind : int32_t
	{
		ThreadAbort       = 0x0000000000000001,
		ThreadInterrupted = 0x0000000000000002,
		OutOfMemory       = 0x0000000000000003
	};

	/**
	 * Enum mscorlib.System.TypeNameFormatFlags
	 */
	enum class TypeNameFormatFlags : int32_t
	{
		FormatBasic         = 0x0000000000000000,
		FormatNamespace     = 0x0000000000000001,
		FormatFullInst      = 0x0000000000000002,
		FormatAssembly      = 0x0000000000000004,
		FormatSignature     = 0x0000000000000008,
		FormatNoVersion     = 0x0000000000000010,
		FormatAngleBrackets = 0x0000000000000040,
		FormatStubInfo      = 0x0000000000000080,
		FormatGenericParam  = 0x0000000000000100,
		FormatSerialization = 0x0000000000000103
	};

	/**
	 * Enum mscorlib.System.TypeNameKind
	 */
	enum class TypeNameKind : int32_t
	{
		Name              = 0x0000000000000000,
		ToString          = 0x0000000000000001,
		SerializationName = 0x0000000000000002,
		FullName          = 0x0000000000000003
	};

	/**
	 * Enum mscorlib.System.RuntimeType+MemberListType
	 */
	enum class RuntimeType_MemberListType : int32_t
	{
		All             = 0x0000000000000000,
		CaseSensitive   = 0x0000000000000001,
		CaseInsensitive = 0x0000000000000002,
		HandleToInfo    = 0x0000000000000003
	};

	/**
	 * Enum mscorlib.System.ExceptionArgument
	 */
	enum class ExceptionArgument : int32_t
	{
		obj                         = 0x0000000000000000,
		dictionary                  = 0x0000000000000001,
		dictionaryCreationThreshold = 0x0000000000000002,
		array                       = 0x0000000000000003,
		info                        = 0x0000000000000004,
		key                         = 0x0000000000000005,
		collection                  = 0x0000000000000006,
		list                        = 0x0000000000000007,
		match                       = 0x0000000000000008,
		converter                   = 0x0000000000000009,
		queue                       = 0x000000000000000A,
		stack                       = 0x000000000000000B,
		capacity                    = 0x000000000000000C,
		index                       = 0x000000000000000D,
		startIndex                  = 0x000000000000000E,
		value_16                    = 0x000000000000000F,
		count                       = 0x0000000000000010,
		arrayIndex                  = 0x0000000000000011,
		name                        = 0x0000000000000012,
		mode                        = 0x0000000000000013,
		item                        = 0x0000000000000014,
		options                     = 0x0000000000000015,
		view                        = 0x0000000000000016,
		sourceBytesToCopy           = 0x0000000000000017,
		start                       = 0x0000000000000018,
		pointer                     = 0x0000000000000019,
		ownedMemory                 = 0x000000000000001A,
		text                        = 0x000000000000001B,
		length                      = 0x000000000000001C,
		comparer                    = 0x000000000000001D,
		comparable                  = 0x000000000000001E,
		exceptions                  = 0x000000000000001F,
		exception                   = 0x0000000000000020,
		action                      = 0x0000000000000021,
		comparison                  = 0x0000000000000022,
		startSegment                = 0x0000000000000023,
		endSegment                  = 0x0000000000000024,
		endIndex                    = 0x0000000000000025,
		task                        = 0x0000000000000026,
		source                      = 0x0000000000000027,
		state                       = 0x0000000000000028,
		culture                     = 0x0000000000000029,
		destination                 = 0x000000000000002A,
		byteOffset                  = 0x000000000000002B,
		minimumBufferSize           = 0x000000000000002C,
		offset                      = 0x000000000000002D,
		values                      = 0x000000000000002E,
		comparisonType              = 0x000000000000002F,
		s                           = 0x0000000000000030,
		input                       = 0x0000000000000031,
		format                      = 0x0000000000000032
	};

	/**
	 * Enum mscorlib.System.ExceptionResource
	 */
	enum class ExceptionResource : int32_t
	{
		Argument_ImplementIComparable                       = 0x0000000000000000,
		Argument_InvalidType                                = 0x0000000000000001,
		Argument_InvalidArgumentForComparison               = 0x0000000000000002,
		Argument_InvalidRegistryKeyPermissionCheck          = 0x0000000000000003,
		ArgumentOutOfRange_NeedNonNegNum                    = 0x0000000000000004,
		Arg_ArrayPlusOffTooSmall                            = 0x0000000000000005,
		Arg_NonZeroLowerBound                               = 0x0000000000000006,
		Arg_RankMultiDimNotSupported                        = 0x0000000000000007,
		Arg_RegKeyDelHive                                   = 0x0000000000000008,
		Arg_RegKeyStrLenBug                                 = 0x0000000000000009,
		Arg_RegSetStrArrNull                                = 0x000000000000000A,
		Arg_RegSetMismatchedKind                            = 0x000000000000000B,
		Arg_RegSubKeyAbsent                                 = 0x000000000000000C,
		Arg_RegSubKeyValueAbsent                            = 0x000000000000000D,
		Argument_AddingDuplicate                            = 0x000000000000000E,
		Serialization_InvalidOnDeser                        = 0x000000000000000F,
		Serialization_MissingKeys                           = 0x0000000000000010,
		Serialization_NullKey                               = 0x0000000000000011,
		Argument_InvalidArrayType                           = 0x0000000000000012,
		NotSupported_KeyCollectionSet                       = 0x0000000000000013,
		NotSupported_ValueCollectionSet                     = 0x0000000000000014,
		ArgumentOutOfRange_SmallCapacity                    = 0x0000000000000015,
		ArgumentOutOfRange_Index                            = 0x0000000000000016,
		Argument_InvalidOffLen                              = 0x0000000000000017,
		Argument_ItemNotExist                               = 0x0000000000000018,
		ArgumentOutOfRange_Count                            = 0x0000000000000019,
		ArgumentOutOfRange_InvalidThreshold                 = 0x000000000000001A,
		ArgumentOutOfRange_ListInsert                       = 0x000000000000001B,
		NotSupported_ReadOnlyCollection                     = 0x000000000000001C,
		InvalidOperation_CannotRemoveFromStackOrQueue       = 0x000000000000001D,
		InvalidOperation_EmptyQueue                         = 0x000000000000001E,
		InvalidOperation_EnumOpCantHappen                   = 0x000000000000001F,
		InvalidOperation_EnumFailedVersion                  = 0x0000000000000020,
		InvalidOperation_EmptyStack                         = 0x0000000000000021,
		ArgumentOutOfRange_BiggerThanCollection             = 0x0000000000000022,
		InvalidOperation_EnumNotStarted                     = 0x0000000000000023,
		InvalidOperation_EnumEnded                          = 0x0000000000000024,
		NotSupported_SortedListNestedWrite                  = 0x0000000000000025,
		InvalidOperation_NoValue                            = 0x0000000000000026,
		InvalidOperation_RegRemoveSubKey                    = 0x0000000000000027,
		Security_RegistryPermission                         = 0x0000000000000028,
		UnauthorizedAccess_RegistryNoWrite                  = 0x0000000000000029,
		ObjectDisposed_RegKeyClosed                         = 0x000000000000002A,
		NotSupported_InComparableType                       = 0x000000000000002B,
		Argument_InvalidRegistryOptionsCheck                = 0x000000000000002C,
		Argument_InvalidRegistryViewCheck                   = 0x000000000000002D,
		TaskT_TransitionToFinal_AlreadyCompleted            = 0x000000000000002E,
		TaskCompletionSourceT_TrySetException_NullException = 0x000000000000002F,
		TaskCompletionSourceT_TrySetException_NoExceptions  = 0x0000000000000030,
		NotSupported_StringComparison                       = 0x0000000000000031,
		InvalidOperation_NullArray                          = 0x0000000000000032
	};

	/**
	 * Enum mscorlib.System.Environment+SpecialFolder
	 */
	enum class Environment_SpecialFolder : int32_t
	{
		MyDocuments            = 0x0000000000000005,
		Desktop                = 0x0000000000000000,
		MyComputer             = 0x0000000000000011,
		Programs               = 0x0000000000000002,
		Personal               = 0x0000000000000005,
		Favorites              = 0x0000000000000006,
		Startup                = 0x0000000000000007,
		Recent                 = 0x0000000000000008,
		SendTo                 = 0x0000000000000009,
		StartMenu              = 0x000000000000000B,
		MyMusic                = 0x000000000000000D,
		DesktopDirectory       = 0x0000000000000010,
		Templates              = 0x0000000000000015,
		ApplicationData        = 0x000000000000001A,
		LocalApplicationData   = 0x000000000000001C,
		InternetCache          = 0x0000000000000020,
		Cookies                = 0x0000000000000021,
		History                = 0x0000000000000022,
		CommonApplicationData  = 0x0000000000000023,
		System                 = 0x0000000000000025,
		ProgramFiles           = 0x0000000000000026,
		MyPictures             = 0x0000000000000027,
		CommonProgramFiles     = 0x000000000000002B,
		MyVideos               = 0x000000000000000E,
		NetworkShortcuts       = 0x0000000000000013,
		Fonts                  = 0x0000000000000014,
		CommonStartMenu        = 0x0000000000000016,
		CommonPrograms         = 0x0000000000000017,
		CommonStartup          = 0x0000000000000018,
		CommonDesktopDirectory = 0x0000000000000019,
		PrinterShortcuts       = 0x000000000000001B,
		Windows                = 0x0000000000000024,
		UserProfile            = 0x0000000000000028,
		SystemX86              = 0x0000000000000029,
		ProgramFilesX86        = 0x000000000000002A,
		CommonProgramFilesX86  = 0x000000000000002C,
		CommonTemplates        = 0x000000000000002D,
		CommonDocuments        = 0x000000000000002E,
		CommonAdminTools       = 0x000000000000002F,
		AdminTools             = 0x0000000000000030,
		CommonMusic            = 0x0000000000000035,
		CommonPictures         = 0x0000000000000036,
		CommonVideos           = 0x0000000000000037,
		Resources              = 0x0000000000000038,
		LocalizedResources     = 0x0000000000000039,
		CommonOemLinks         = 0x000000000000003A,
		CDBurning              = 0x000000000000003B
	};

	/**
	 * Enum mscorlib.System.Environment+SpecialFolderOption
	 */
	enum class Environment_SpecialFolderOption : int32_t
	{
		None        = 0x0000000000000000,
		DoNotVerify = 0x0000000000004000,
		Create      = 0x0000000000008000
	};

	/**
	 * Enum mscorlib.System.SByteEnum
	 */
	enum class SByteEnum : int8_t
	{

	};

	/**
	 * Enum mscorlib.System.Int16Enum
	 */
	enum class Int16Enum : int16_t
	{

	};

	/**
	 * Enum mscorlib.System.Int32Enum
	 */
	enum class Int32Enum : int32_t
	{

	};

	/**
	 * Enum mscorlib.System.Int64Enum
	 */
	enum class Int64Enum : int64_t
	{

	};

	/**
	 * Enum mscorlib.System.ByteEnum
	 */
	enum class ByteEnum : uint8_t
	{

	};

	/**
	 * Enum mscorlib.System.UInt16Enum
	 */
	enum class UInt16Enum : uint16_t
	{

	};

	/**
	 * Enum mscorlib.System.UInt32Enum
	 */
	enum class UInt32Enum : uint32_t
	{

	};

	/**
	 * Enum mscorlib.System.UInt64Enum
	 */
	enum class UInt64Enum : uint64_t
	{

	};

	/**
	 * Enum mscorlib.System.PlatformID
	 */
	enum class PlatformID : int32_t
	{
		Win32S       = 0x0000000000000000,
		Win32Windows = 0x0000000000000001,
		Win32NT      = 0x0000000000000002,
		WinCE        = 0x0000000000000003,
		Unix         = 0x0000000000000004,
		Xbox         = 0x0000000000000005,
		MacOSX       = 0x0000000000000006
	};

	/**
	 * Enum mscorlib.System.TermInfoNumbers
	 */
	enum class TermInfoNumbers : int32_t
	{
		Columns           = 0x0000000000000000,
		InitTabs          = 0x0000000000000001,
		Lines             = 0x0000000000000002,
		LinesOfMemory     = 0x0000000000000003,
		MagicCookieGlitch = 0x0000000000000004,
		PaddingBaudRate   = 0x0000000000000005,
		VirtualTerminal   = 0x0000000000000006,
		WidthStatusLine   = 0x0000000000000007,
		NumLabels         = 0x0000000000000008,
		LabelHeight       = 0x0000000000000009,
		LabelWidth        = 0x000000000000000A,
		MaxAttributes     = 0x000000000000000B,
		MaximumWindows    = 0x000000000000000C,
		MaxColors         = 0x000000000000000D,
		MaxPairs          = 0x000000000000000E,
		NoColorVideo      = 0x000000000000000F,
		BufferCapacity    = 0x0000000000000010,
		DotVertSpacing    = 0x0000000000000011,
		DotHorzSpacing    = 0x0000000000000012,
		MaxMicroAddress   = 0x0000000000000013,
		MaxMicroJump      = 0x0000000000000014,
		MicroColSize      = 0x0000000000000015,
		MicroLineSize     = 0x0000000000000016,
		NumberOfPins      = 0x0000000000000017,
		OutputResChar     = 0x0000000000000018,
		OutputResLine     = 0x0000000000000019,
		OutputResHorzInch = 0x000000000000001A,
		OutputResVertInch = 0x000000000000001B,
		PrintRate         = 0x000000000000001C,
		WideCharSize      = 0x000000000000001D,
		Buttons           = 0x000000000000001E,
		BitImageEntwining = 0x000000000000001F,
		BitImageType      = 0x0000000000000020,
		Last              = 0x0000000000000021
	};

	/**
	 * Enum mscorlib.System.TermInfoStrings
	 */
	enum class TermInfoStrings : int32_t
	{
		BackTab                = 0x0000000000000000,
		Bell                   = 0x0000000000000001,
		CarriageReturn         = 0x0000000000000002,
		ChangeScrollRegion     = 0x0000000000000003,
		ClearAllTabs           = 0x0000000000000004,
		ClearScreen            = 0x0000000000000005,
		ClrEol                 = 0x0000000000000006,
		ClrEos                 = 0x0000000000000007,
		ColumnAddress          = 0x0000000000000008,
		CommandCharacter       = 0x0000000000000009,
		CursorAddress          = 0x000000000000000A,
		CursorDown             = 0x000000000000000B,
		CursorHome             = 0x000000000000000C,
		CursorInvisible        = 0x000000000000000D,
		CursorLeft             = 0x000000000000000E,
		CursorMemAddress       = 0x000000000000000F,
		CursorNormal           = 0x0000000000000010,
		CursorRight            = 0x0000000000000011,
		CursorToLl             = 0x0000000000000012,
		CursorUp               = 0x0000000000000013,
		CursorVisible          = 0x0000000000000014,
		DeleteCharacter        = 0x0000000000000015,
		DeleteLine             = 0x0000000000000016,
		DisStatusLine          = 0x0000000000000017,
		DownHalfLine           = 0x0000000000000018,
		EnterAltCharsetMode    = 0x0000000000000019,
		EnterBlinkMode         = 0x000000000000001A,
		EnterBoldMode          = 0x000000000000001B,
		EnterCaMode            = 0x000000000000001C,
		EnterDeleteMode        = 0x000000000000001D,
		EnterDimMode           = 0x000000000000001E,
		EnterInsertMode        = 0x000000000000001F,
		EnterSecureMode        = 0x0000000000000020,
		EnterProtectedMode     = 0x0000000000000021,
		EnterReverseMode       = 0x0000000000000022,
		EnterStandoutMode      = 0x0000000000000023,
		EnterUnderlineMode     = 0x0000000000000024,
		EraseChars             = 0x0000000000000025,
		ExitAltCharsetMode     = 0x0000000000000026,
		ExitAttributeMode      = 0x0000000000000027,
		ExitCaMode             = 0x0000000000000028,
		ExitDeleteMode         = 0x0000000000000029,
		ExitInsertMode         = 0x000000000000002A,
		ExitStandoutMode       = 0x000000000000002B,
		ExitUnderlineMode      = 0x000000000000002C,
		FlashScreen            = 0x000000000000002D,
		FormFeed               = 0x000000000000002E,
		FromStatusLine         = 0x000000000000002F,
		Init1string            = 0x0000000000000030,
		Init2string            = 0x0000000000000031,
		Init3string            = 0x0000000000000032,
		InitFile               = 0x0000000000000033,
		InsertCharacter        = 0x0000000000000034,
		InsertLine             = 0x0000000000000035,
		InsertPadding          = 0x0000000000000036,
		KeyBackspace           = 0x0000000000000037,
		KeyCatab               = 0x0000000000000038,
		KeyClear               = 0x0000000000000039,
		KeyCtab                = 0x000000000000003A,
		KeyDc                  = 0x000000000000003B,
		KeyDl                  = 0x000000000000003C,
		KeyDown                = 0x000000000000003D,
		KeyEic                 = 0x000000000000003E,
		KeyEol                 = 0x000000000000003F,
		KeyEos                 = 0x0000000000000040,
		KeyF0                  = 0x0000000000000041,
		KeyF1                  = 0x0000000000000042,
		KeyF10                 = 0x0000000000000043,
		KeyF2                  = 0x0000000000000044,
		KeyF3                  = 0x0000000000000045,
		KeyF4                  = 0x0000000000000046,
		KeyF5                  = 0x0000000000000047,
		KeyF6                  = 0x0000000000000048,
		KeyF7                  = 0x0000000000000049,
		KeyF8                  = 0x000000000000004A,
		KeyF9                  = 0x000000000000004B,
		KeyHome                = 0x000000000000004C,
		KeyIc                  = 0x000000000000004D,
		KeyIl                  = 0x000000000000004E,
		KeyLeft                = 0x000000000000004F,
		KeyLl                  = 0x0000000000000050,
		KeyNpage               = 0x0000000000000051,
		KeyPpage               = 0x0000000000000052,
		KeyRight               = 0x0000000000000053,
		KeySf                  = 0x0000000000000054,
		KeySr                  = 0x0000000000000055,
		KeyStab                = 0x0000000000000056,
		KeyUp                  = 0x0000000000000057,
		KeypadLocal            = 0x0000000000000058,
		KeypadXmit             = 0x0000000000000059,
		LabF0                  = 0x000000000000005A,
		LabF1                  = 0x000000000000005B,
		LabF10                 = 0x000000000000005C,
		LabF2                  = 0x000000000000005D,
		LabF3                  = 0x000000000000005E,
		LabF4                  = 0x000000000000005F,
		LabF5                  = 0x0000000000000060,
		LabF6                  = 0x0000000000000061,
		LabF7                  = 0x0000000000000062,
		LabF8                  = 0x0000000000000063,
		LabF9                  = 0x0000000000000064,
		MetaOff                = 0x0000000000000065,
		MetaOn                 = 0x0000000000000066,
		Newline                = 0x0000000000000067,
		PadChar                = 0x0000000000000068,
		ParmDch                = 0x0000000000000069,
		ParmDeleteLine         = 0x000000000000006A,
		ParmDownCursor         = 0x000000000000006B,
		ParmIch                = 0x000000000000006C,
		ParmIndex              = 0x000000000000006D,
		ParmInsertLine         = 0x000000000000006E,
		ParmLeftCursor         = 0x000000000000006F,
		ParmRightCursor        = 0x0000000000000070,
		ParmRindex             = 0x0000000000000071,
		ParmUpCursor           = 0x0000000000000072,
		PkeyKey                = 0x0000000000000073,
		PkeyLocal              = 0x0000000000000074,
		PkeyXmit               = 0x0000000000000075,
		PrintScreen            = 0x0000000000000076,
		PrtrOff                = 0x0000000000000077,
		PrtrOn                 = 0x0000000000000078,
		RepeatChar             = 0x0000000000000079,
		Reset1string           = 0x000000000000007A,
		Reset2string           = 0x000000000000007B,
		Reset3string           = 0x000000000000007C,
		ResetFile              = 0x000000000000007D,
		RestoreCursor          = 0x000000000000007E,
		RowAddress             = 0x000000000000007F,
		SaveCursor             = 0x0000000000000080,
		ScrollForward          = 0x0000000000000081,
		ScrollReverse          = 0x0000000000000082,
		SetAttributes          = 0x0000000000000083,
		SetTab                 = 0x0000000000000084,
		SetWindow              = 0x0000000000000085,
		Tab                    = 0x0000000000000086,
		ToStatusLine           = 0x0000000000000087,
		UnderlineChar          = 0x0000000000000088,
		UpHalfLine             = 0x0000000000000089,
		InitProg               = 0x000000000000008A,
		KeyA1                  = 0x000000000000008B,
		KeyA3                  = 0x000000000000008C,
		KeyB2                  = 0x000000000000008D,
		KeyC1                  = 0x000000000000008E,
		KeyC3                  = 0x000000000000008F,
		PrtrNon                = 0x0000000000000090,
		CharPadding            = 0x0000000000000091,
		AcsChars               = 0x0000000000000092,
		PlabNorm               = 0x0000000000000093,
		KeyBtab                = 0x0000000000000094,
		EnterXonMode           = 0x0000000000000095,
		ExitXonMode            = 0x0000000000000096,
		EnterAmMode            = 0x0000000000000097,
		ExitAmMode             = 0x0000000000000098,
		XonCharacter           = 0x0000000000000099,
		XoffCharacter          = 0x000000000000009A,
		EnaAcs                 = 0x000000000000009B,
		LabelOn                = 0x000000000000009C,
		LabelOff               = 0x000000000000009D,
		KeyBeg                 = 0x000000000000009E,
		KeyCancel              = 0x000000000000009F,
		KeyClose               = 0x00000000000000A0,
		KeyCommand             = 0x00000000000000A1,
		KeyCopy                = 0x00000000000000A2,
		KeyCreate              = 0x00000000000000A3,
		KeyEnd                 = 0x00000000000000A4,
		KeyEnter               = 0x00000000000000A5,
		KeyExit                = 0x00000000000000A6,
		KeyFind                = 0x00000000000000A7,
		KeyHelp                = 0x00000000000000A8,
		KeyMark                = 0x00000000000000A9,
		KeyMessage             = 0x00000000000000AA,
		KeyMove                = 0x00000000000000AB,
		KeyNext                = 0x00000000000000AC,
		KeyOpen                = 0x00000000000000AD,
		KeyOptions             = 0x00000000000000AE,
		KeyPrevious            = 0x00000000000000AF,
		KeyPrint               = 0x00000000000000B0,
		KeyRedo                = 0x00000000000000B1,
		KeyReference           = 0x00000000000000B2,
		KeyRefresh             = 0x00000000000000B3,
		KeyReplace             = 0x00000000000000B4,
		KeyRestart             = 0x00000000000000B5,
		KeyResume              = 0x00000000000000B6,
		KeySave                = 0x00000000000000B7,
		KeySuspend             = 0x00000000000000B8,
		KeyUndo                = 0x00000000000000B9,
		KeySbeg                = 0x00000000000000BA,
		KeyScancel             = 0x00000000000000BB,
		KeyScommand            = 0x00000000000000BC,
		KeyScopy               = 0x00000000000000BD,
		KeyScreate             = 0x00000000000000BE,
		KeySdc                 = 0x00000000000000BF,
		KeySdl                 = 0x00000000000000C0,
		KeySelect              = 0x00000000000000C1,
		KeySend                = 0x00000000000000C2,
		KeySeol                = 0x00000000000000C3,
		KeySexit               = 0x00000000000000C4,
		KeySfind               = 0x00000000000000C5,
		KeyShelp               = 0x00000000000000C6,
		KeyShome               = 0x00000000000000C7,
		KeySic                 = 0x00000000000000C8,
		KeySleft               = 0x00000000000000C9,
		KeySmessage            = 0x00000000000000CA,
		KeySmove               = 0x00000000000000CB,
		KeySnext               = 0x00000000000000CC,
		KeySoptions            = 0x00000000000000CD,
		KeySprevious           = 0x00000000000000CE,
		KeySprint              = 0x00000000000000CF,
		KeySredo               = 0x00000000000000D0,
		KeySreplace            = 0x00000000000000D1,
		KeySright              = 0x00000000000000D2,
		KeySrsume              = 0x00000000000000D3,
		KeySsave               = 0x00000000000000D4,
		KeySsuspend            = 0x00000000000000D5,
		KeySundo               = 0x00000000000000D6,
		ReqForInput            = 0x00000000000000D7,
		KeyF11                 = 0x00000000000000D8,
		KeyF12                 = 0x00000000000000D9,
		KeyF13                 = 0x00000000000000DA,
		KeyF14                 = 0x00000000000000DB,
		KeyF15                 = 0x00000000000000DC,
		KeyF16                 = 0x00000000000000DD,
		KeyF17                 = 0x00000000000000DE,
		KeyF18                 = 0x00000000000000DF,
		KeyF19                 = 0x00000000000000E0,
		KeyF20                 = 0x00000000000000E1,
		KeyF21                 = 0x00000000000000E2,
		KeyF22                 = 0x00000000000000E3,
		KeyF23                 = 0x00000000000000E4,
		KeyF24                 = 0x00000000000000E5,
		KeyF25                 = 0x00000000000000E6,
		KeyF26                 = 0x00000000000000E7,
		KeyF27                 = 0x00000000000000E8,
		KeyF28                 = 0x00000000000000E9,
		KeyF29                 = 0x00000000000000EA,
		KeyF30                 = 0x00000000000000EB,
		KeyF31                 = 0x00000000000000EC,
		KeyF32                 = 0x00000000000000ED,
		KeyF33                 = 0x00000000000000EE,
		KeyF34                 = 0x00000000000000EF,
		KeyF35                 = 0x00000000000000F0,
		KeyF36                 = 0x00000000000000F1,
		KeyF37                 = 0x00000000000000F2,
		KeyF38                 = 0x00000000000000F3,
		KeyF39                 = 0x00000000000000F4,
		KeyF40                 = 0x00000000000000F5,
		KeyF41                 = 0x00000000000000F6,
		KeyF42                 = 0x00000000000000F7,
		KeyF43                 = 0x00000000000000F8,
		KeyF44                 = 0x00000000000000F9,
		KeyF45                 = 0x00000000000000FA,
		KeyF46                 = 0x00000000000000FB,
		KeyF47                 = 0x00000000000000FC,
		KeyF48                 = 0x00000000000000FD,
		KeyF49                 = 0x00000000000000FE,
		KeyF50                 = 0x00000000000000FF,
		KeyF51                 = 0x0000000000000100,
		KeyF52                 = 0x0000000000000101,
		KeyF53                 = 0x0000000000000102,
		KeyF54                 = 0x0000000000000103,
		KeyF55                 = 0x0000000000000104,
		KeyF56                 = 0x0000000000000105,
		KeyF57                 = 0x0000000000000106,
		KeyF58                 = 0x0000000000000107,
		KeyF59                 = 0x0000000000000108,
		KeyF60                 = 0x0000000000000109,
		KeyF61                 = 0x000000000000010A,
		KeyF62                 = 0x000000000000010B,
		KeyF63                 = 0x000000000000010C,
		ClrBol                 = 0x000000000000010D,
		ClearMargins           = 0x000000000000010E,
		SetLeftMargin          = 0x000000000000010F,
		SetRightMargin         = 0x0000000000000110,
		LabelFormat            = 0x0000000000000111,
		SetClock               = 0x0000000000000112,
		DisplayClock           = 0x0000000000000113,
		RemoveClock            = 0x0000000000000114,
		CreateWindow           = 0x0000000000000115,
		GotoWindow             = 0x0000000000000116,
		Hangup                 = 0x0000000000000117,
		DialPhone              = 0x0000000000000118,
		QuickDial              = 0x0000000000000119,
		Tone                   = 0x000000000000011A,
		Pulse                  = 0x000000000000011B,
		FlashHook              = 0x000000000000011C,
		FixedPause             = 0x000000000000011D,
		WaitTone               = 0x000000000000011E,
		User0                  = 0x000000000000011F,
		User1                  = 0x0000000000000120,
		User2                  = 0x0000000000000121,
		User3                  = 0x0000000000000122,
		User4                  = 0x0000000000000123,
		User5                  = 0x0000000000000124,
		User6                  = 0x0000000000000125,
		User7                  = 0x0000000000000126,
		User8                  = 0x0000000000000127,
		User9                  = 0x0000000000000128,
		OrigPair               = 0x0000000000000129,
		OrigColors             = 0x000000000000012A,
		InitializeColor        = 0x000000000000012B,
		InitializePair         = 0x000000000000012C,
		SetColorPair           = 0x000000000000012D,
		SetForeground          = 0x000000000000012E,
		SetBackground          = 0x000000000000012F,
		ChangeCharPitch        = 0x0000000000000130,
		ChangeLinePitch        = 0x0000000000000131,
		ChangeResHorz          = 0x0000000000000132,
		ChangeResVert          = 0x0000000000000133,
		DefineChar             = 0x0000000000000134,
		EnterDoublewideMode    = 0x0000000000000135,
		EnterDraftQuality      = 0x0000000000000136,
		EnterItalicsMode       = 0x0000000000000137,
		EnterLeftwardMode      = 0x0000000000000138,
		EnterMicroMode         = 0x0000000000000139,
		EnterNearLetterQuality = 0x000000000000013A,
		EnterNormalQuality     = 0x000000000000013B,
		EnterShadowMode        = 0x000000000000013C,
		EnterSubscriptMode     = 0x000000000000013D,
		EnterSuperscriptMode   = 0x000000000000013E,
		EnterUpwardMode        = 0x000000000000013F,
		ExitDoublewideMode     = 0x0000000000000140,
		ExitItalicsMode        = 0x0000000000000141,
		ExitLeftwardMode       = 0x0000000000000142,
		ExitMicroMode          = 0x0000000000000143,
		ExitShadowMode         = 0x0000000000000144,
		ExitSubscriptMode      = 0x0000000000000145,
		ExitSuperscriptMode    = 0x0000000000000146,
		ExitUpwardMode         = 0x0000000000000147,
		MicroColumnAddress     = 0x0000000000000148,
		MicroDown              = 0x0000000000000149,
		MicroLeft              = 0x000000000000014A,
		MicroRight             = 0x000000000000014B,
		MicroRowAddress        = 0x000000000000014C,
		MicroUp                = 0x000000000000014D,
		OrderOfPins            = 0x000000000000014E,
		ParmDownMicro          = 0x000000000000014F,
		ParmLeftMicro          = 0x0000000000000150,
		ParmRightMicro         = 0x0000000000000151,
		ParmUpMicro            = 0x0000000000000152,
		SelectCharSet          = 0x0000000000000153,
		SetBottomMargin        = 0x0000000000000154,
		SetBottomMarginParm    = 0x0000000000000155,
		SetLeftMarginParm      = 0x0000000000000156,
		SetRightMarginParm     = 0x0000000000000157,
		SetTopMargin           = 0x0000000000000158,
		SetTopMarginParm       = 0x0000000000000159,
		StartBitImage          = 0x000000000000015A,
		StartCharSetDef        = 0x000000000000015B,
		StopBitImage           = 0x000000000000015C,
		StopCharSetDef         = 0x000000000000015D,
		SubscriptCharacters    = 0x000000000000015E,
		SuperscriptCharacters  = 0x000000000000015F,
		TheseCauseCr           = 0x0000000000000160,
		ZeroMotion             = 0x0000000000000161,
		CharSetNames           = 0x0000000000000162,
		KeyMouse               = 0x0000000000000163,
		MouseInfo              = 0x0000000000000164,
		ReqMousePos            = 0x0000000000000165,
		GetMouse               = 0x0000000000000166,
		SetAForeground         = 0x0000000000000167,
		SetABackground         = 0x0000000000000168,
		PkeyPlab               = 0x0000000000000169,
		DeviceType             = 0x000000000000016A,
		CodeSetInit            = 0x000000000000016B,
		Set0DesSeq             = 0x000000000000016C,
		Set1DesSeq             = 0x000000000000016D,
		Set2DesSeq             = 0x000000000000016E,
		Set3DesSeq             = 0x000000000000016F,
		SetLrMargin            = 0x0000000000000170,
		SetTbMargin            = 0x0000000000000171,
		BitImageRepeat         = 0x0000000000000172,
		BitImageNewline        = 0x0000000000000173,
		BitImageCarriageReturn = 0x0000000000000174,
		ColorNames             = 0x0000000000000175,
		DefineBitImageRegion   = 0x0000000000000176,
		EndBitImageRegion      = 0x0000000000000177,
		SetColorBand           = 0x0000000000000178,
		SetPageLength          = 0x0000000000000179,
		DisplayPcChar          = 0x000000000000017A,
		EnterPcCharsetMode     = 0x000000000000017B,
		ExitPcCharsetMode      = 0x000000000000017C,
		EnterScancodeMode      = 0x000000000000017D,
		ExitScancodeMode       = 0x000000000000017E,
		PcTermOptions          = 0x000000000000017F,
		ScancodeEscape         = 0x0000000000000180,
		AltScancodeEsc         = 0x0000000000000181,
		EnterHorizontalHlMode  = 0x0000000000000182,
		EnterLeftHlMode        = 0x0000000000000183,
		EnterLowHlMode         = 0x0000000000000184,
		EnterRightHlMode       = 0x0000000000000185,
		EnterTopHlMode         = 0x0000000000000186,
		EnterVerticalHlMode    = 0x0000000000000187,
		SetAAttributes         = 0x0000000000000188,
		SetPglenInch           = 0x0000000000000189,
		Last                   = 0x000000000000018A
	};

	/**
	 * Enum mscorlib.System.TypeSpec+DisplayNameFormat
	 */
	enum class TypeSpec_DisplayNameFormat : int32_t
	{
		Default       = 0x0000000000000000,
		WANT_ASSEMBLY = 0x0000000000000001,
		NO_MODIFIERS  = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.System.Handles
	 */
	enum class Handles : int32_t
	{
		STD_INPUT  = -10,
		STD_OUTPUT = -11,
		STD_ERROR  = -12
	};

	/**
	 * Enum mscorlib.System.Decimal.DecCalc+RoundingMode
	 */
	enum class Decimal_DecCalc_RoundingMode : int32_t
	{
		ToEven       = 0x0000000000000000,
		AwayFromZero = 0x0000000000000001,
		Truncate     = 0x0000000000000002,
		Floor        = 0x0000000000000003,
		Ceiling      = 0x0000000000000004
	};

	/**
	 * Enum mscorlib.System.Threading.EventResetMode
	 */
	enum class EventResetMode : int32_t
	{
		AutoReset   = 0x0000000000000000,
		ManualReset = 0x0000000000000001
	};

	/**
	 * Enum mscorlib.System.Threading.LazyThreadSafetyMode
	 */
	enum class LazyThreadSafetyMode : int32_t
	{
		None                    = 0x0000000000000000,
		PublicationOnly         = 0x0000000000000001,
		ExecutionAndPublication = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.System.Threading.ThreadPriority
	 */
	enum class ThreadPriority : int32_t
	{
		Lowest      = 0x0000000000000000,
		BelowNormal = 0x0000000000000001,
		Normal      = 0x0000000000000002,
		AboveNormal = 0x0000000000000003,
		Highest     = 0x0000000000000004
	};

	/**
	 * Enum mscorlib.System.Threading.ThreadState
	 */
	enum class ThreadState : int32_t
	{
		Running          = 0x0000000000000000,
		StopRequested    = 0x0000000000000001,
		SuspendRequested = 0x0000000000000002,
		Background       = 0x0000000000000004,
		Unstarted        = 0x0000000000000008,
		Stopped          = 0x0000000000000010,
		WaitSleepJoin    = 0x0000000000000020,
		Suspended        = 0x0000000000000040,
		AbortRequested   = 0x0000000000000080,
		Aborted          = 0x0000000000000100
	};

	/**
	 * Enum mscorlib.System.Threading.ExecutionContext+Flags
	 */
	enum class ExecutionContext_Flags : int32_t
	{
		None                  = 0x0000000000000000,
		IsNewCapture          = 0x0000000000000001,
		IsFlowSuppressed      = 0x0000000000000002,
		IsPreAllocatedDefault = 0x0000000000000004
	};

	/**
	 * Enum mscorlib.System.Threading.ExecutionContext+CaptureOptions
	 */
	enum class ExecutionContext_CaptureOptions : int32_t
	{
		None                = 0x0000000000000000,
		IgnoreSyncCtx       = 0x0000000000000001,
		OptimizeDefaultCase = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.System.Threading.SynchronizationContextProperties
	 */
	enum class SynchronizationContextProperties : int32_t
	{
		None                    = 0x0000000000000000,
		RequireWaitNotification = 0x0000000000000001
	};

	/**
	 * Enum mscorlib.System.Threading.StackCrawlMark
	 */
	enum class StackCrawlMark : int32_t
	{
		LookForMe              = 0x0000000000000000,
		LookForMyCaller        = 0x0000000000000001,
		LookForMyCallersCaller = 0x0000000000000002,
		LookForThread          = 0x0000000000000003
	};

	/**
	 * Enum mscorlib.System.Threading.Tasks.TaskStatus
	 */
	enum class TaskStatus : int32_t
	{
		Created                      = 0x0000000000000000,
		WaitingForActivation         = 0x0000000000000001,
		WaitingToRun                 = 0x0000000000000002,
		Running                      = 0x0000000000000003,
		WaitingForChildrenToComplete = 0x0000000000000004,
		RanToCompletion              = 0x0000000000000005,
		Canceled                     = 0x0000000000000006,
		Faulted                      = 0x0000000000000007
	};

	/**
	 * Enum mscorlib.System.Threading.Tasks.TaskCreationOptions
	 */
	enum class TaskCreationOptions : int32_t
	{
		None                           = 0x0000000000000000,
		PreferFairness                 = 0x0000000000000001,
		LongRunning                    = 0x0000000000000002,
		AttachedToParent               = 0x0000000000000004,
		DenyChildAttach                = 0x0000000000000008,
		HideScheduler                  = 0x0000000000000010,
		RunContinuationsAsynchronously = 0x0000000000000040
	};

	/**
	 * Enum mscorlib.System.Threading.Tasks.InternalTaskOptions
	 */
	enum class InternalTaskOptions : int32_t
	{
		None                = 0x0000000000000000,
		InternalOptionsMask = 0x000000000000FF00,
		ContinuationTask    = 0x0000000000000200,
		PromiseTask         = 0x0000000000000400,
		LazyCancellation    = 0x0000000000001000,
		QueuedByRuntime     = 0x0000000000002000,
		DoNotDispose        = 0x0000000000004000
	};

	/**
	 * Enum mscorlib.System.Threading.Tasks.TaskContinuationOptions
	 */
	enum class TaskContinuationOptions : int32_t
	{
		None                           = 0x0000000000000000,
		PreferFairness                 = 0x0000000000000001,
		LongRunning                    = 0x0000000000000002,
		AttachedToParent               = 0x0000000000000004,
		DenyChildAttach                = 0x0000000000000008,
		HideScheduler                  = 0x0000000000000010,
		LazyCancellation               = 0x0000000000000020,
		RunContinuationsAsynchronously = 0x0000000000000040,
		NotOnRanToCompletion           = 0x0000000000010000,
		NotOnFaulted                   = 0x0000000000020000,
		NotOnCanceled                  = 0x0000000000040000,
		OnlyOnRanToCompletion          = 0x0000000000060000,
		OnlyOnFaulted                  = 0x0000000000050000,
		OnlyOnCanceled                 = 0x0000000000030000,
		ExecuteSynchronously           = 0x0000000000080000
	};

	/**
	 * Enum mscorlib.System.Threading.Tasks.CausalityTraceLevel
	 */
	enum class CausalityTraceLevel : int32_t
	{
		Required  = 0x0000000000000000,
		Important = 0x0000000000000001,
		Verbose   = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.System.Threading.Tasks.AsyncCausalityStatus
	 */
	enum class AsyncCausalityStatus : int32_t
	{
		Started   = 0x0000000000000000,
		Completed = 0x0000000000000001,
		Canceled  = 0x0000000000000002,
		Error     = 0x0000000000000003
	};

	/**
	 * Enum mscorlib.System.Threading.Tasks.CausalityRelation
	 */
	enum class CausalityRelation : int32_t
	{
		AssignDelegate = 0x0000000000000000,
		Join           = 0x0000000000000001,
		Choice         = 0x0000000000000002,
		Cancel         = 0x0000000000000003,
		Error          = 0x0000000000000004
	};

	/**
	 * Enum mscorlib.System.Threading.Tasks.CausalitySynchronousWork
	 */
	enum class CausalitySynchronousWork : int32_t
	{
		CompletionNotification = 0x0000000000000000,
		ProgressNotification   = 0x0000000000000001,
		Execution              = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.System.Threading.Tasks.Sources.ValueTaskSourceOnCompletedFlags
	 */
	enum class ValueTaskSourceOnCompletedFlags : int32_t
	{
		None                 = 0x0000000000000000,
		UseSchedulingContext = 0x0000000000000001,
		FlowExecutionContext = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.System.Threading.Tasks.Sources.ValueTaskSourceStatus
	 */
	enum class ValueTaskSourceStatus : int32_t
	{
		Pending   = 0x0000000000000000,
		Succeeded = 0x0000000000000001,
		Faulted   = 0x0000000000000002,
		Canceled  = 0x0000000000000003
	};

	/**
	 * Enum mscorlib.System.Text.NormalizationForm
	 */
	enum class NormalizationForm : int32_t
	{
		FormC  = 0x0000000000000001,
		FormD  = 0x0000000000000002,
		FormKC = 0x0000000000000005,
		FormKD = 0x0000000000000006
	};

	/**
	 * Enum mscorlib.System.Text.NormalizationCheck
	 */
	enum class NormalizationCheck : int32_t
	{
		Yes   = 0x0000000000000000,
		No    = 0x0000000000000001,
		Maybe = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.System.Security.SecurityElementType
	 */
	enum class SecurityElementType : int32_t
	{
		Regular = 0x0000000000000000,
		Format  = 0x0000000000000001,
		Comment = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.System.Security.Util.Tokenizer+TokenSource
	 */
	enum class Tokenizer_TokenSource : int32_t
	{
		UnicodeByteArray = 0x0000000000000000,
		UTF8ByteArray    = 0x0000000000000001,
		ASCIIByteArray   = 0x0000000000000002,
		CharArray        = 0x0000000000000003,
		String           = 0x0000000000000004,
		NestedStrings    = 0x0000000000000005,
		Other            = 0x0000000000000006
	};

	/**
	 * Enum mscorlib.System.Security.Permissions.PermissionState
	 */
	enum class PermissionState : int32_t
	{
		None         = 0x0000000000000000,
		Unrestricted = 0x0000000000000001
	};

	/**
	 * Enum mscorlib.System.Security.Permissions.SecurityAction
	 */
	enum class SecurityAction : int32_t
	{
		Demand            = 0x0000000000000002,
		Assert            = 0x0000000000000003,
		Deny              = 0x0000000000000004,
		PermitOnly        = 0x0000000000000005,
		LinkDemand        = 0x0000000000000006,
		InheritanceDemand = 0x0000000000000007,
		RequestMinimum    = 0x0000000000000008,
		RequestOptional   = 0x0000000000000009,
		RequestRefuse     = 0x000000000000000A
	};

	/**
	 * Enum mscorlib.System.Security.Cryptography.KeyNumber
	 */
	enum class KeyNumber : int32_t
	{
		Exchange  = 0x0000000000000001,
		Signature = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.System.Security.Cryptography.CryptoStreamMode
	 */
	enum class CryptoStreamMode : int32_t
	{
		Read  = 0x0000000000000000,
		Write = 0x0000000000000001
	};

	/**
	 * Enum mscorlib.System.Security.Cryptography.RSAEncryptionPaddingMode
	 */
	enum class RSAEncryptionPaddingMode : int32_t
	{
		Pkcs1 = 0x0000000000000000,
		Oaep  = 0x0000000000000001
	};

	/**
	 * Enum mscorlib.System.Security.Cryptography.RSASignaturePaddingMode
	 */
	enum class RSASignaturePaddingMode : int32_t
	{
		Pkcs1 = 0x0000000000000000,
		Pss   = 0x0000000000000001
	};

	/**
	 * Enum mscorlib.System.Security.Cryptography.FromBase64TransformMode
	 */
	enum class FromBase64TransformMode : int32_t
	{
		IgnoreWhiteSpaces      = 0x0000000000000000,
		DoNotIgnoreWhiteSpaces = 0x0000000000000001
	};

	/**
	 * Enum mscorlib.System.Security.Cryptography.CipherMode
	 */
	enum class CipherMode : int32_t
	{
		CBC = 0x0000000000000001,
		ECB = 0x0000000000000002,
		OFB = 0x0000000000000003,
		CFB = 0x0000000000000004,
		CTS = 0x0000000000000005
	};

	/**
	 * Enum mscorlib.System.Security.Cryptography.PaddingMode
	 */
	enum class PaddingMode : int32_t
	{
		None     = 0x0000000000000001,
		PKCS7    = 0x0000000000000002,
		Zeros    = 0x0000000000000003,
		ANSIX923 = 0x0000000000000004,
		ISO10126 = 0x0000000000000005
	};

	/**
	 * Enum mscorlib.System.Security.Cryptography.CspProviderFlags
	 */
	enum class CspProviderFlags : int32_t
	{
		NoFlags                = 0x0000000000000000,
		UseMachineKeyStore     = 0x0000000000000001,
		UseDefaultKeyContainer = 0x0000000000000002,
		UseNonExportableKey    = 0x0000000000000004,
		UseExistingKey         = 0x0000000000000008,
		UseArchivableKey       = 0x0000000000000010,
		UseUserProtectedKey    = 0x0000000000000020,
		NoPrompt               = 0x0000000000000040,
		CreateEphemeralKey     = 0x0000000000000080
	};

	/**
	 * Enum mscorlib.System.Security.Cryptography.RijndaelManagedTransformMode
	 */
	enum class RijndaelManagedTransformMode : int32_t
	{
		Encrypt = 0x0000000000000000,
		Decrypt = 0x0000000000000001
	};

	/**
	 * Enum mscorlib.System.Security.Cryptography.CspAlgorithmType
	 */
	enum class CspAlgorithmType : int32_t
	{
		Rsa = 0x0000000000000000,
		Dss = 0x0000000000000001
	};

	/**
	 * Enum mscorlib.System.Security.Cryptography.PbeEncryptionAlgorithm
	 */
	enum class PbeEncryptionAlgorithm : int32_t
	{
		Unknown             = 0x0000000000000000,
		Aes128Cbc           = 0x0000000000000001,
		Aes192Cbc           = 0x0000000000000002,
		Aes256Cbc           = 0x0000000000000003,
		TripleDes3KeyPkcs12 = 0x0000000000000004
	};

	/**
	 * Enum mscorlib.System.Security.Cryptography.X509Certificates.X509ContentType
	 */
	enum class X509ContentType : int32_t
	{
		Unknown         = 0x0000000000000000,
		Cert            = 0x0000000000000001,
		SerializedCert  = 0x0000000000000002,
		Pfx             = 0x0000000000000003,
		Pkcs12          = 0x0000000000000003,
		SerializedStore = 0x0000000000000004,
		Pkcs7           = 0x0000000000000005,
		Authenticode    = 0x0000000000000006
	};

	/**
	 * Enum mscorlib.System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
	 */
	enum class X509KeyStorageFlags : int32_t
	{
		DefaultKeySet   = 0x0000000000000000,
		UserKeySet      = 0x0000000000000001,
		MachineKeySet   = 0x0000000000000002,
		Exportable      = 0x0000000000000004,
		UserProtected   = 0x0000000000000008,
		PersistKeySet   = 0x0000000000000010,
		EphemeralKeySet = 0x0000000000000020
	};

	/**
	 * Enum mscorlib.System.Security.Principal.TokenImpersonationLevel
	 */
	enum class TokenImpersonationLevel : int32_t
	{
		None           = 0x0000000000000000,
		Anonymous      = 0x0000000000000001,
		Identification = 0x0000000000000002,
		Impersonation  = 0x0000000000000003,
		Delegation     = 0x0000000000000004
	};

	/**
	 * Enum mscorlib.System.Security.Principal.WindowsAccountType
	 */
	enum class WindowsAccountType : int32_t
	{
		Normal    = 0x0000000000000000,
		Guest     = 0x0000000000000001,
		System    = 0x0000000000000002,
		Anonymous = 0x0000000000000003
	};

	/**
	 * Enum mscorlib.System.Runtime.Remoting.CustomErrorsModes
	 */
	enum class CustomErrorsModes : int32_t
	{
		On         = 0x0000000000000000,
		Off        = 0x0000000000000001,
		RemoteOnly = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.System.Runtime.Remoting.WellKnownObjectMode
	 */
	enum class WellKnownObjectMode : int32_t
	{
		Singleton  = 0x0000000000000001,
		SingleCall = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.System.Runtime.Remoting.Lifetime.LeaseState
	 */
	enum class LeaseState : int32_t
	{
		Null     = 0x0000000000000000,
		Initial  = 0x0000000000000001,
		Active   = 0x0000000000000002,
		Renewing = 0x0000000000000003,
		Expired  = 0x0000000000000004
	};

	/**
	 * Enum mscorlib.System.Runtime.Remoting.Messaging.ArgInfoType
	 */
	enum class ArgInfoType : uint8_t
	{
		In  = 0x0000000000000000,
		Out = 0x0000000000000001
	};

	/**
	 * Enum mscorlib.System.Runtime.Remoting.Messaging.CallType
	 */
	enum class CallType : int32_t
	{
		Sync        = 0x0000000000000000,
		BeginInvoke = 0x0000000000000001,
		EndInvoke   = 0x0000000000000002,
		OneWay      = 0x0000000000000003
	};

	/**
	 * Enum mscorlib.System.Runtime.Serialization.StreamingContextStates
	 */
	enum class StreamingContextStates : int32_t
	{
		CrossProcess   = 0x0000000000000001,
		CrossMachine   = 0x0000000000000002,
		File           = 0x0000000000000004,
		Persistence    = 0x0000000000000008,
		Remoting       = 0x0000000000000010,
		Other          = 0x0000000000000020,
		Clone          = 0x0000000000000040,
		CrossAppDomain = 0x0000000000000080,
		All            = 0x00000000000000FF
	};

	/**
	 * Enum mscorlib.System.Runtime.Serialization.Formatters.FormatterTypeStyle
	 */
	enum class FormatterTypeStyle : int32_t
	{
		TypesWhenNeeded = 0x0000000000000000,
		TypesAlways     = 0x0000000000000001,
		XsdString       = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.System.Runtime.Serialization.Formatters.FormatterAssemblyStyle
	 */
	enum class FormatterAssemblyStyle : int32_t
	{
		Simple = 0x0000000000000000,
		Full   = 0x0000000000000001
	};

	/**
	 * Enum mscorlib.System.Runtime.Serialization.Formatters.TypeFilterLevel
	 */
	enum class TypeFilterLevel : int32_t
	{
		Low  = 0x0000000000000002,
		Full = 0x0000000000000003
	};

	/**
	 * Enum mscorlib.System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum
	 */
	enum class BinaryHeaderEnum : int32_t
	{
		SerializedStreamHeader    = 0x0000000000000000,
		Object                    = 0x0000000000000001,
		ObjectWithMap             = 0x0000000000000002,
		ObjectWithMapAssemId      = 0x0000000000000003,
		ObjectWithMapTyped        = 0x0000000000000004,
		ObjectWithMapTypedAssemId = 0x0000000000000005,
		ObjectString              = 0x0000000000000006,
		Array                     = 0x0000000000000007,
		MemberPrimitiveTyped      = 0x0000000000000008,
		MemberReference           = 0x0000000000000009,
		ObjectNull                = 0x000000000000000A,
		MessageEnd                = 0x000000000000000B,
		Assembly                  = 0x000000000000000C,
		ObjectNullMultiple256     = 0x000000000000000D,
		ObjectNullMultiple        = 0x000000000000000E,
		ArraySinglePrimitive      = 0x000000000000000F,
		ArraySingleObject         = 0x0000000000000010,
		ArraySingleString         = 0x0000000000000011,
		CrossAppDomainMap         = 0x0000000000000012,
		CrossAppDomainString      = 0x0000000000000013,
		CrossAppDomainAssembly    = 0x0000000000000014,
		MethodCall                = 0x0000000000000015,
		MethodReturn              = 0x0000000000000016
	};

	/**
	 * Enum mscorlib.System.Runtime.Serialization.Formatters.Binary.BinaryTypeEnum
	 */
	enum class BinaryTypeEnum : int32_t
	{
		Primitive      = 0x0000000000000000,
		String         = 0x0000000000000001,
		Object         = 0x0000000000000002,
		ObjectUrt      = 0x0000000000000003,
		ObjectUser     = 0x0000000000000004,
		ObjectArray    = 0x0000000000000005,
		StringArray    = 0x0000000000000006,
		PrimitiveArray = 0x0000000000000007
	};

	/**
	 * Enum mscorlib.System.Runtime.Serialization.Formatters.Binary.BinaryArrayTypeEnum
	 */
	enum class BinaryArrayTypeEnum : int32_t
	{
		Single            = 0x0000000000000000,
		Jagged            = 0x0000000000000001,
		Rectangular       = 0x0000000000000002,
		SingleOffset      = 0x0000000000000003,
		JaggedOffset      = 0x0000000000000004,
		RectangularOffset = 0x0000000000000005
	};

	/**
	 * Enum mscorlib.System.Runtime.Serialization.Formatters.Binary.InternalSerializerTypeE
	 */
	enum class InternalSerializerTypeE : int32_t
	{
		Soap   = 0x0000000000000001,
		Binary = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.System.Runtime.Serialization.Formatters.Binary.InternalParseTypeE
	 */
	enum class InternalParseTypeE : int32_t
	{
		Empty                     = 0x0000000000000000,
		SerializedStreamHeader    = 0x0000000000000001,
		Object                    = 0x0000000000000002,
		Member                    = 0x0000000000000003,
		ObjectEnd                 = 0x0000000000000004,
		MemberEnd                 = 0x0000000000000005,
		Headers                   = 0x0000000000000006,
		HeadersEnd                = 0x0000000000000007,
		SerializedStreamHeaderEnd = 0x0000000000000008,
		Envelope                  = 0x0000000000000009,
		EnvelopeEnd               = 0x000000000000000A,
		Body                      = 0x000000000000000B,
		BodyEnd                   = 0x000000000000000C
	};

	/**
	 * Enum mscorlib.System.Runtime.Serialization.Formatters.Binary.InternalObjectTypeE
	 */
	enum class InternalObjectTypeE : int32_t
	{
		Empty  = 0x0000000000000000,
		Object = 0x0000000000000001,
		Array  = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.System.Runtime.Serialization.Formatters.Binary.InternalObjectPositionE
	 */
	enum class InternalObjectPositionE : int32_t
	{
		Empty   = 0x0000000000000000,
		Top     = 0x0000000000000001,
		Child   = 0x0000000000000002,
		Headers = 0x0000000000000003
	};

	/**
	 * Enum mscorlib.System.Runtime.Serialization.Formatters.Binary.InternalArrayTypeE
	 */
	enum class InternalArrayTypeE : int32_t
	{
		Empty       = 0x0000000000000000,
		Single      = 0x0000000000000001,
		Jagged      = 0x0000000000000002,
		Rectangular = 0x0000000000000003,
		Base64      = 0x0000000000000004
	};

	/**
	 * Enum mscorlib.System.Runtime.Serialization.Formatters.Binary.InternalMemberTypeE
	 */
	enum class InternalMemberTypeE : int32_t
	{
		Empty  = 0x0000000000000000,
		Header = 0x0000000000000001,
		Field  = 0x0000000000000002,
		Item   = 0x0000000000000003
	};

	/**
	 * Enum mscorlib.System.Runtime.Serialization.Formatters.Binary.InternalMemberValueE
	 */
	enum class InternalMemberValueE : int32_t
	{
		Empty       = 0x0000000000000000,
		InlineValue = 0x0000000000000001,
		Nested      = 0x0000000000000002,
		Reference   = 0x0000000000000003,
		Null        = 0x0000000000000004
	};

	/**
	 * Enum mscorlib.System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE
	 */
	enum class InternalPrimitiveTypeE : int32_t
	{
		Invalid  = 0x0000000000000000,
		Boolean  = 0x0000000000000001,
		Byte     = 0x0000000000000002,
		Char     = 0x0000000000000003,
		Currency = 0x0000000000000004,
		Decimal  = 0x0000000000000005,
		Double   = 0x0000000000000006,
		Int16    = 0x0000000000000007,
		Int32    = 0x0000000000000008,
		Int64    = 0x0000000000000009,
		SByte    = 0x000000000000000A,
		Single   = 0x000000000000000B,
		TimeSpan = 0x000000000000000C,
		DateTime = 0x000000000000000D,
		UInt16   = 0x000000000000000E,
		UInt32   = 0x000000000000000F,
		UInt64   = 0x0000000000000010,
		Null     = 0x0000000000000011,
		String   = 0x0000000000000012
	};

	/**
	 * Enum mscorlib.System.Runtime.Serialization.Formatters.Binary.ValueFixupEnum
	 */
	enum class ValueFixupEnum : int32_t
	{
		Empty  = 0x0000000000000000,
		Array  = 0x0000000000000001,
		Header = 0x0000000000000002,
		Member = 0x0000000000000003
	};

	/**
	 * Enum mscorlib.System.Runtime.Serialization.Formatters.Binary.MessageEnum
	 */
	enum class MessageEnum : int32_t
	{
		NoArgs                 = 0x0000000000000001,
		ArgsInline             = 0x0000000000000002,
		ArgsIsArray            = 0x0000000000000004,
		ArgsInArray            = 0x0000000000000008,
		NoContext              = 0x0000000000000010,
		ContextInline          = 0x0000000000000020,
		ContextInArray         = 0x0000000000000040,
		MethodSignatureInArray = 0x0000000000000080,
		PropertyInArray        = 0x0000000000000100,
		NoReturnValue          = 0x0000000000000200,
		ReturnValueVoid        = 0x0000000000000400,
		ReturnValueInline      = 0x0000000000000800,
		ReturnValueInArray     = 0x0000000000001000,
		ExceptionInArray       = 0x0000000000002000,
		GenericMethod          = 0x0000000000008000
	};

	/**
	 * Enum mscorlib.System.Runtime.InteropServices.CharSet
	 */
	enum class CharSet : int32_t
	{
		None    = 0x0000000000000001,
		Ansi    = 0x0000000000000002,
		Unicode = 0x0000000000000003,
		Auto    = 0x0000000000000004
	};

	/**
	 * Enum mscorlib.System.Runtime.InteropServices.Architecture
	 */
	enum class Architecture : int32_t
	{
		X86   = 0x0000000000000000,
		X64   = 0x0000000000000001,
		Arm   = 0x0000000000000002,
		Arm64 = 0x0000000000000003
	};

	/**
	 * Enum mscorlib.System.Runtime.InteropServices.GCHandleType
	 */
	enum class GCHandleType : int32_t
	{
		Weak                  = 0x0000000000000000,
		WeakTrackResurrection = 0x0000000000000001,
		Normal                = 0x0000000000000002,
		Pinned                = 0x0000000000000003
	};

	/**
	 * Enum mscorlib.System.Runtime.InteropServices.ComInterfaceType
	 */
	enum class ComInterfaceType : int32_t
	{
		InterfaceIsDual         = 0x0000000000000000,
		InterfaceIsIUnknown     = 0x0000000000000001,
		InterfaceIsIDispatch    = 0x0000000000000002,
		InterfaceIsIInspectable = 0x0000000000000003
	};

	/**
	 * Enum mscorlib.System.Runtime.InteropServices.ClassInterfaceType
	 */
	enum class ClassInterfaceType : int32_t
	{
		None         = 0x0000000000000000,
		AutoDispatch = 0x0000000000000001,
		AutoDual     = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.System.Runtime.InteropServices.VarEnum
	 */
	enum class VarEnum : int32_t
	{
		VT_EMPTY           = 0x0000000000000000,
		VT_NULL            = 0x0000000000000001,
		VT_I2              = 0x0000000000000002,
		VT_I4              = 0x0000000000000003,
		VT_R4              = 0x0000000000000004,
		VT_R8              = 0x0000000000000005,
		VT_CY              = 0x0000000000000006,
		VT_DATE            = 0x0000000000000007,
		VT_BSTR            = 0x0000000000000008,
		VT_DISPATCH        = 0x0000000000000009,
		VT_ERROR           = 0x000000000000000A,
		VT_BOOL            = 0x000000000000000B,
		VT_VARIANT         = 0x000000000000000C,
		VT_UNKNOWN         = 0x000000000000000D,
		VT_DECIMAL         = 0x000000000000000E,
		VT_I1              = 0x0000000000000010,
		VT_UI1             = 0x0000000000000011,
		VT_UI2             = 0x0000000000000012,
		VT_UI4             = 0x0000000000000013,
		VT_I8              = 0x0000000000000014,
		VT_UI8             = 0x0000000000000015,
		VT_INT             = 0x0000000000000016,
		VT_UINT            = 0x0000000000000017,
		VT_VOID            = 0x0000000000000018,
		VT_HRESULT         = 0x0000000000000019,
		VT_PTR             = 0x000000000000001A,
		VT_SAFEARRAY       = 0x000000000000001B,
		VT_CARRAY          = 0x000000000000001C,
		VT_USERDEFINED     = 0x000000000000001D,
		VT_LPSTR           = 0x000000000000001E,
		VT_LPWSTR          = 0x000000000000001F,
		VT_RECORD          = 0x0000000000000024,
		VT_FILETIME        = 0x0000000000000040,
		VT_BLOB            = 0x0000000000000041,
		VT_STREAM          = 0x0000000000000042,
		VT_STORAGE         = 0x0000000000000043,
		VT_STREAMED_OBJECT = 0x0000000000000044,
		VT_STORED_OBJECT   = 0x0000000000000045,
		VT_BLOB_OBJECT     = 0x0000000000000046,
		VT_CF              = 0x0000000000000047,
		VT_CLSID           = 0x0000000000000048,
		VT_VECTOR          = 0x0000000000001000,
		VT_ARRAY           = 0x0000000000002000,
		VT_BYREF           = 0x0000000000004000
	};

	/**
	 * Enum mscorlib.System.Runtime.InteropServices.UnmanagedType
	 */
	enum class UnmanagedType : int32_t
	{
		Bool            = 0x0000000000000002,
		I1              = 0x0000000000000003,
		U1              = 0x0000000000000004,
		I2              = 0x0000000000000005,
		U2              = 0x0000000000000006,
		I4              = 0x0000000000000007,
		U4              = 0x0000000000000008,
		I8              = 0x0000000000000009,
		U8              = 0x000000000000000A,
		R4              = 0x000000000000000B,
		R8              = 0x000000000000000C,
		Currency        = 0x000000000000000F,
		BStr            = 0x0000000000000013,
		LPStr           = 0x0000000000000014,
		LPWStr          = 0x0000000000000015,
		LPTStr          = 0x0000000000000016,
		ByValTStr       = 0x0000000000000017,
		IUnknown        = 0x0000000000000019,
		IDispatch       = 0x000000000000001A,
		Struct          = 0x000000000000001B,
		Interface       = 0x000000000000001C,
		SafeArray       = 0x000000000000001D,
		ByValArray      = 0x000000000000001E,
		SysInt          = 0x000000000000001F,
		SysUInt         = 0x0000000000000020,
		VBByRefStr      = 0x0000000000000022,
		AnsiBStr        = 0x0000000000000023,
		TBStr           = 0x0000000000000024,
		VariantBool     = 0x0000000000000025,
		FunctionPtr     = 0x0000000000000026,
		AsAny           = 0x0000000000000028,
		LPArray         = 0x000000000000002A,
		LPStruct        = 0x000000000000002B,
		CustomMarshaler = 0x000000000000002C,
		Error           = 0x000000000000002D,
		IInspectable    = 0x000000000000002E,
		HString         = 0x000000000000002F,
		LPUTF8Str       = 0x0000000000000030
	};

	/**
	 * Enum mscorlib.System.Runtime.InteropServices.DllImportSearchPath
	 */
	enum class DllImportSearchPath : int32_t
	{
		UseDllDirectoryForDependencies = 0x0000000000000100,
		ApplicationDirectory           = 0x0000000000000200,
		UserDirectories                = 0x0000000000000400,
		System32                       = 0x0000000000000800,
		SafeDirectories                = 0x0000000000001000,
		AssemblyDirectory              = 0x0000000000000002,
		LegacyBehavior                 = 0x0000000000000000
	};

	/**
	 * Enum mscorlib.System.Runtime.InteropServices.CallingConvention
	 */
	enum class CallingConvention : int32_t
	{
		Winapi   = 0x0000000000000001,
		Cdecl    = 0x0000000000000002,
		StdCall  = 0x0000000000000003,
		ThisCall = 0x0000000000000004,
		FastCall = 0x0000000000000005
	};

	/**
	 * Enum mscorlib.System.Runtime.ConstrainedExecution.Cer
	 */
	enum class Cer : int32_t
	{
		None    = 0x0000000000000000,
		MayFail = 0x0000000000000001,
		Success = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.System.Runtime.ConstrainedExecution.Consistency
	 */
	enum class Consistency : int32_t
	{
		MayCorruptProcess   = 0x0000000000000000,
		MayCorruptAppDomain = 0x0000000000000001,
		MayCorruptInstance  = 0x0000000000000002,
		WillNotCorruptState = 0x0000000000000003
	};

	/**
	 * Enum mscorlib.System.Runtime.CompilerServices.LoadHint
	 */
	enum class LoadHint : int32_t
	{
		Default   = 0x0000000000000000,
		Always    = 0x0000000000000001,
		Sometimes = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.System.Runtime.CompilerServices.CompilationRelaxations
	 */
	enum class CompilationRelaxations : int32_t
	{
		NoStringInterning = 0x0000000000000008
	};

	/**
	 * Enum mscorlib.System.Resources.ResourceTypeCode
	 */
	enum class ResourceTypeCode : int32_t
	{
		Null             = 0x0000000000000000,
		String           = 0x0000000000000001,
		Boolean          = 0x0000000000000002,
		Char             = 0x0000000000000003,
		Byte             = 0x0000000000000004,
		SByte            = 0x0000000000000005,
		Int16            = 0x0000000000000006,
		UInt16           = 0x0000000000000007,
		Int32            = 0x0000000000000008,
		UInt32           = 0x0000000000000009,
		Int64            = 0x000000000000000A,
		UInt64           = 0x000000000000000B,
		Single           = 0x000000000000000C,
		Double           = 0x000000000000000D,
		Decimal          = 0x000000000000000E,
		DateTime         = 0x000000000000000F,
		TimeSpan         = 0x0000000000000010,
		LastPrimitive    = 0x0000000000000010,
		ByteArray        = 0x0000000000000020,
		Stream           = 0x0000000000000021,
		StartOfUserTypes = 0x0000000000000040
	};

	/**
	 * Enum mscorlib.System.Resources.UltimateResourceFallbackLocation
	 */
	enum class UltimateResourceFallbackLocation : int32_t
	{
		MainAssembly = 0x0000000000000000,
		Satellite    = 0x0000000000000001
	};

	/**
	 * Enum mscorlib.System.Reflection.AssemblyContentType
	 */
	enum class AssemblyContentType : int32_t
	{
		Default        = 0x0000000000000000,
		WindowsRuntime = 0x0000000000000001
	};

	/**
	 * Enum mscorlib.System.Reflection.AssemblyNameFlags
	 */
	enum class AssemblyNameFlags : int32_t
	{
		None                      = 0x0000000000000000,
		PublicKey                 = 0x0000000000000001,
		EnableJITcompileOptimizer = 0x0000000000004000,
		EnableJITcompileTracking  = 0x0000000000008000,
		Retargetable              = 0x0000000000000100
	};

	/**
	 * Enum mscorlib.System.Reflection.BindingFlags
	 */
	enum class BindingFlags : int32_t
	{
		Default              = 0x0000000000000000,
		IgnoreCase           = 0x0000000000000001,
		DeclaredOnly         = 0x0000000000000002,
		Instance             = 0x0000000000000004,
		Static               = 0x0000000000000008,
		Public               = 0x0000000000000010,
		NonPublic            = 0x0000000000000020,
		FlattenHierarchy     = 0x0000000000000040,
		InvokeMethod         = 0x0000000000000100,
		CreateInstance       = 0x0000000000000200,
		GetField             = 0x0000000000000400,
		SetField             = 0x0000000000000800,
		GetProperty          = 0x0000000000001000,
		SetProperty          = 0x0000000000002000,
		PutDispProperty      = 0x0000000000004000,
		PutRefDispProperty   = 0x0000000000008000,
		ExactBinding         = 0x0000000000010000,
		SuppressChangeType   = 0x0000000000020000,
		OptionalParamBinding = 0x0000000000040000,
		IgnoreReturn         = 0x0000000001000000,
		DoNotWrapExceptions  = 0x0000000002000000
	};

	/**
	 * Enum mscorlib.System.Reflection.CallingConventions
	 */
	enum class CallingConventions : int32_t
	{
		Standard     = 0x0000000000000001,
		VarArgs      = 0x0000000000000002,
		Any          = 0x0000000000000003,
		HasThis      = 0x0000000000000020,
		ExplicitThis = 0x0000000000000040
	};

	/**
	 * Enum mscorlib.System.Reflection.EventAttributes
	 */
	enum class EventAttributes : int32_t
	{
		None          = 0x0000000000000000,
		SpecialName   = 0x0000000000000200,
		RTSpecialName = 0x0000000000000400,
		ReservedMask  = 0x0000000000000400
	};

	/**
	 * Enum mscorlib.System.Reflection.ExceptionHandlingClauseOptions
	 */
	enum class ExceptionHandlingClauseOptions : int32_t
	{
		Clause  = 0x0000000000000000,
		Filter  = 0x0000000000000001,
		Finally = 0x0000000000000002,
		Fault   = 0x0000000000000004
	};

	/**
	 * Enum mscorlib.System.Reflection.FieldAttributes
	 */
	enum class FieldAttributes : int32_t
	{
		FieldAccessMask = 0x0000000000000007,
		PrivateScope    = 0x0000000000000000,
		Private         = 0x0000000000000001,
		FamANDAssem     = 0x0000000000000002,
		Assembly        = 0x0000000000000003,
		Family          = 0x0000000000000004,
		FamORAssem      = 0x0000000000000005,
		Public          = 0x0000000000000006,
		Static          = 0x0000000000000010,
		InitOnly        = 0x0000000000000020,
		Literal         = 0x0000000000000040,
		NotSerialized   = 0x0000000000000080,
		SpecialName     = 0x0000000000000200,
		PinvokeImpl     = 0x0000000000002000,
		RTSpecialName   = 0x0000000000000400,
		HasFieldMarshal = 0x0000000000001000,
		HasDefault      = 0x0000000000008000,
		HasFieldRVA     = 0x0000000000000100,
		ReservedMask    = 0x0000000000009500
	};

	/**
	 * Enum mscorlib.System.Reflection.GenericParameterAttributes
	 */
	enum class GenericParameterAttributes : int32_t
	{
		None                           = 0x0000000000000000,
		VarianceMask                   = 0x0000000000000003,
		Covariant                      = 0x0000000000000001,
		Contravariant                  = 0x0000000000000002,
		SpecialConstraintMask          = 0x000000000000001C,
		ReferenceTypeConstraint        = 0x0000000000000004,
		NotNullableValueTypeConstraint = 0x0000000000000008,
		DefaultConstructorConstraint   = 0x0000000000000010
	};

	/**
	 * Enum mscorlib.System.Reflection.MemberTypes
	 */
	enum class MemberTypes : int32_t
	{
		Constructor = 0x0000000000000001,
		Event       = 0x0000000000000002,
		Field       = 0x0000000000000004,
		Method      = 0x0000000000000008,
		Property    = 0x0000000000000010,
		TypeInfo    = 0x0000000000000020,
		Custom      = 0x0000000000000040,
		NestedType  = 0x0000000000000080,
		All         = 0x00000000000000BF
	};

	/**
	 * Enum mscorlib.System.Reflection.MethodAttributes
	 */
	enum class MethodAttributes : int32_t
	{
		MemberAccessMask      = 0x0000000000000007,
		PrivateScope          = 0x0000000000000000,
		Private               = 0x0000000000000001,
		FamANDAssem           = 0x0000000000000002,
		Assembly              = 0x0000000000000003,
		Family                = 0x0000000000000004,
		FamORAssem            = 0x0000000000000005,
		Public                = 0x0000000000000006,
		Static                = 0x0000000000000010,
		Final                 = 0x0000000000000020,
		Virtual               = 0x0000000000000040,
		HideBySig             = 0x0000000000000080,
		CheckAccessOnOverride = 0x0000000000000200,
		VtableLayoutMask      = 0x0000000000000100,
		ReuseSlot             = 0x0000000000000000,
		NewSlot               = 0x0000000000000100,
		Abstract              = 0x0000000000000400,
		SpecialName           = 0x0000000000000800,
		PinvokeImpl           = 0x0000000000002000,
		UnmanagedExport       = 0x0000000000000008,
		RTSpecialName         = 0x0000000000001000,
		HasSecurity           = 0x0000000000004000,
		RequireSecObject      = 0x0000000000008000,
		ReservedMask          = 0x000000000000D000
	};

	/**
	 * Enum mscorlib.System.Reflection.MethodImplAttributes
	 */
	enum class MethodImplAttributes : int32_t
	{
		CodeTypeMask        = 0x0000000000000003,
		IL                  = 0x0000000000000000,
		Native              = 0x0000000000000001,
		OPTIL               = 0x0000000000000002,
		Runtime             = 0x0000000000000003,
		ManagedMask         = 0x0000000000000004,
		Unmanaged           = 0x0000000000000004,
		Managed             = 0x0000000000000000,
		ForwardRef          = 0x0000000000000010,
		PreserveSig         = 0x0000000000000080,
		InternalCall        = 0x0000000000001000,
		Synchronized        = 0x0000000000000020,
		NoInlining          = 0x0000000000000008,
		AggressiveInlining  = 0x0000000000000100,
		NoOptimization      = 0x0000000000000040,
		MaxMethodImplVal    = 0x000000000000FFFF,
		SecurityMitigations = 0x0000000000000400
	};

	/**
	 * Enum mscorlib.System.Reflection.ParameterAttributes
	 */
	enum class ParameterAttributes : int32_t
	{
		None            = 0x0000000000000000,
		In              = 0x0000000000000001,
		Out             = 0x0000000000000002,
		Lcid            = 0x0000000000000004,
		Retval          = 0x0000000000000008,
		Optional        = 0x0000000000000010,
		HasDefault      = 0x0000000000001000,
		HasFieldMarshal = 0x0000000000002000,
		Reserved3       = 0x0000000000004000,
		Reserved4       = 0x0000000000008000,
		ReservedMask    = 0x000000000000F000
	};

	/**
	 * Enum mscorlib.System.Reflection.ProcessorArchitecture
	 */
	enum class ProcessorArchitecture : int32_t
	{
		None  = 0x0000000000000000,
		MSIL  = 0x0000000000000001,
		X86   = 0x0000000000000002,
		IA64  = 0x0000000000000003,
		Amd64 = 0x0000000000000004,
		Arm   = 0x0000000000000005
	};

	/**
	 * Enum mscorlib.System.Reflection.PropertyAttributes
	 */
	enum class PropertyAttributes : int32_t
	{
		None          = 0x0000000000000000,
		SpecialName   = 0x0000000000000200,
		RTSpecialName = 0x0000000000000400,
		HasDefault    = 0x0000000000001000,
		Reserved2     = 0x0000000000002000,
		Reserved3     = 0x0000000000004000,
		Reserved4     = 0x0000000000008000,
		ReservedMask  = 0x000000000000F400
	};

	/**
	 * Enum mscorlib.System.Reflection.ResourceLocation
	 */
	enum class ResourceLocation : int32_t
	{
		ContainedInAnotherAssembly = 0x0000000000000002,
		ContainedInManifestFile    = 0x0000000000000004,
		Embedded                   = 0x0000000000000001
	};

	/**
	 * Enum mscorlib.System.Reflection.TypeAttributes
	 */
	enum class TypeAttributes : int32_t
	{
		VisibilityMask     = 0x0000000000000007,
		NotPublic          = 0x0000000000000000,
		Public             = 0x0000000000000001,
		NestedPublic       = 0x0000000000000002,
		NestedPrivate      = 0x0000000000000003,
		NestedFamily       = 0x0000000000000004,
		NestedAssembly     = 0x0000000000000005,
		NestedFamANDAssem  = 0x0000000000000006,
		NestedFamORAssem   = 0x0000000000000007,
		LayoutMask         = 0x0000000000000018,
		AutoLayout         = 0x0000000000000000,
		SequentialLayout   = 0x0000000000000008,
		ExplicitLayout     = 0x0000000000000010,
		ClassSemanticsMask = 0x0000000000000020,
		Class              = 0x0000000000000000,
		Interface          = 0x0000000000000020,
		Abstract           = 0x0000000000000080,
		Sealed             = 0x0000000000000100,
		SpecialName        = 0x0000000000000400,
		Import             = 0x0000000000001000,
		Serializable       = 0x0000000000002000,
		WindowsRuntime     = 0x0000000000004000,
		StringFormatMask   = 0x0000000000030000,
		AnsiClass          = 0x0000000000000000,
		UnicodeClass       = 0x0000000000010000,
		AutoClass          = 0x0000000000020000,
		CustomFormatClass  = 0x0000000000030000,
		CustomFormatMask   = 0x0000000000C00000,
		BeforeFieldInit    = 0x0000000000100000,
		RTSpecialName      = 0x0000000000000800,
		HasSecurity        = 0x0000000000040000,
		ReservedMask       = 0x0000000000040800
	};

	/**
	 * Enum mscorlib.System.Reflection.CorElementType
	 */
	enum class CorElementType : uint8_t
	{
		End                      = 0x0000000000000000,
		Void                     = 0x0000000000000001,
		Boolean                  = 0x0000000000000002,
		Char                     = 0x0000000000000003,
		I1                       = 0x0000000000000004,
		U1                       = 0x0000000000000005,
		I2                       = 0x0000000000000006,
		U2                       = 0x0000000000000007,
		I4                       = 0x0000000000000008,
		U4                       = 0x0000000000000009,
		I8                       = 0x000000000000000A,
		U8                       = 0x000000000000000B,
		R4                       = 0x000000000000000C,
		R8                       = 0x000000000000000D,
		String                   = 0x000000000000000E,
		Ptr                      = 0x000000000000000F,
		ByRef                    = 0x0000000000000010,
		ValueType                = 0x0000000000000011,
		Class                    = 0x0000000000000012,
		Var                      = 0x0000000000000013,
		Array                    = 0x0000000000000014,
		GenericInst              = 0x0000000000000015,
		TypedByRef               = 0x0000000000000016,
		I                        = 0x0000000000000018,
		U                        = 0x0000000000000019,
		FnPtr                    = 0x000000000000001B,
		Object                   = 0x000000000000001C,
		SzArray                  = 0x000000000000001D,
		MVar                     = 0x000000000000001E,
		CModReqd                 = 0x000000000000001F,
		CModOpt                  = 0x0000000000000020,
		Internal                 = 0x0000000000000021,
		Max                      = 0x0000000000000022,
		Modifier                 = 0x0000000000000040,
		Sentinel                 = 0x0000000000000041,
		Pinned                   = 0x0000000000000045,
		ELEMENT_TYPE_END         = 0x0000000000000000,
		ELEMENT_TYPE_VOID        = 0x0000000000000001,
		ELEMENT_TYPE_BOOLEAN     = 0x0000000000000002,
		ELEMENT_TYPE_CHAR        = 0x0000000000000003,
		ELEMENT_TYPE_I1          = 0x0000000000000004,
		ELEMENT_TYPE_U1          = 0x0000000000000005,
		ELEMENT_TYPE_I2          = 0x0000000000000006,
		ELEMENT_TYPE_U2          = 0x0000000000000007,
		ELEMENT_TYPE_I4          = 0x0000000000000008,
		ELEMENT_TYPE_U4          = 0x0000000000000009,
		ELEMENT_TYPE_I8          = 0x000000000000000A,
		ELEMENT_TYPE_U8          = 0x000000000000000B,
		ELEMENT_TYPE_R4          = 0x000000000000000C,
		ELEMENT_TYPE_R8          = 0x000000000000000D,
		ELEMENT_TYPE_STRING      = 0x000000000000000E,
		ELEMENT_TYPE_PTR         = 0x000000000000000F,
		ELEMENT_TYPE_BYREF       = 0x0000000000000010,
		ELEMENT_TYPE_VALUETYPE   = 0x0000000000000011,
		ELEMENT_TYPE_CLASS       = 0x0000000000000012,
		ELEMENT_TYPE_VAR         = 0x0000000000000013,
		ELEMENT_TYPE_ARRAY       = 0x0000000000000014,
		ELEMENT_TYPE_GENERICINST = 0x0000000000000015,
		ELEMENT_TYPE_TYPEDBYREF  = 0x0000000000000016,
		ELEMENT_TYPE_I           = 0x0000000000000018,
		ELEMENT_TYPE_U           = 0x0000000000000019,
		ELEMENT_TYPE_FNPTR       = 0x000000000000001B,
		ELEMENT_TYPE_OBJECT      = 0x000000000000001C,
		ELEMENT_TYPE_SZARRAY     = 0x000000000000001D,
		ELEMENT_TYPE_MVAR        = 0x000000000000001E,
		ELEMENT_TYPE_CMOD_REQD   = 0x000000000000001F,
		ELEMENT_TYPE_CMOD_OPT    = 0x0000000000000020,
		ELEMENT_TYPE_INTERNAL    = 0x0000000000000021,
		ELEMENT_TYPE_MAX         = 0x0000000000000022,
		ELEMENT_TYPE_MODIFIER    = 0x0000000000000040,
		ELEMENT_TYPE_SENTINEL    = 0x0000000000000041,
		ELEMENT_TYPE_PINNED      = 0x0000000000000045
	};

	/**
	 * Enum mscorlib.System.Reflection.PInvokeAttributes
	 */
	enum class PInvokeAttributes : int32_t
	{
		NoMangle                      = 0x0000000000000001,
		CharSetMask                   = 0x0000000000000006,
		CharSetNotSpec                = 0x0000000000000000,
		CharSetAnsi                   = 0x0000000000000002,
		CharSetUnicode                = 0x0000000000000004,
		CharSetAuto                   = 0x0000000000000006,
		BestFitUseAssem               = 0x0000000000000000,
		BestFitEnabled                = 0x0000000000000010,
		BestFitDisabled               = 0x0000000000000020,
		BestFitMask                   = 0x0000000000000030,
		ThrowOnUnmappableCharUseAssem = 0x0000000000000000,
		ThrowOnUnmappableCharEnabled  = 0x0000000000001000,
		ThrowOnUnmappableCharDisabled = 0x0000000000002000,
		ThrowOnUnmappableCharMask     = 0x0000000000003000,
		SupportsLastError             = 0x0000000000000040,
		CallConvMask                  = 0x0000000000000700,
		CallConvWinapi                = 0x0000000000000100,
		CallConvCdecl                 = 0x0000000000000200,
		CallConvStdcall               = 0x0000000000000300,
		CallConvThiscall              = 0x0000000000000400,
		CallConvFastcall              = 0x0000000000000500,
		MaxValue                      = 0x000000000000FFFF
	};

	/**
	 * Enum mscorlib.System.Reflection.PInfo
	 */
	enum class PInfo : int32_t
	{
		Attributes    = 0x0000000000000001,
		GetMethod     = 0x0000000000000002,
		SetMethod     = 0x0000000000000004,
		ReflectedType = 0x0000000000000008,
		DeclaringType = 0x0000000000000010,
		Name          = 0x0000000000000020
	};

	/**
	 * Enum mscorlib.System.Globalization.CompareOptions
	 */
	enum class CompareOptions : int32_t
	{
		None              = 0x0000000000000000,
		IgnoreCase        = 0x0000000000000001,
		IgnoreNonSpace    = 0x0000000000000002,
		IgnoreSymbols     = 0x0000000000000004,
		IgnoreKanaType    = 0x0000000000000008,
		IgnoreWidth       = 0x0000000000000010,
		OrdinalIgnoreCase = 0x0000000010000000,
		StringSort        = 0x0000000020000000,
		Ordinal           = 0x0000000040000000
	};

	/**
	 * Enum mscorlib.System.Globalization.CultureTypes
	 */
	enum class CultureTypes : int32_t
	{
		NeutralCultures        = 0x0000000000000001,
		SpecificCultures       = 0x0000000000000002,
		InstalledWin32Cultures = 0x0000000000000004,
		AllCultures            = 0x0000000000000007,
		UserCustomCulture      = 0x0000000000000008,
		ReplacementCultures    = 0x0000000000000010,
		WindowsOnlyCultures    = 0x0000000000000020,
		FrameworkCultures      = 0x0000000000000040
	};

	/**
	 * Enum mscorlib.System.Globalization.MonthNameStyles
	 */
	enum class MonthNameStyles : int32_t
	{
		Regular  = 0x0000000000000000,
		Genitive = 0x0000000000000001,
		LeapYear = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.System.Globalization.DateTimeFormatFlags
	 */
	enum class DateTimeFormatFlags : int32_t
	{
		None                   = 0x0000000000000000,
		UseGenitiveMonth       = 0x0000000000000001,
		UseLeapYearMonth       = 0x0000000000000002,
		UseSpacesInMonthNames  = 0x0000000000000004,
		UseHebrewRule          = 0x0000000000000008,
		UseSpacesInDayNames    = 0x0000000000000010,
		UseDigitPrefixInTokens = 0x0000000000000020,
		NotInitialized         = -1
	};

	/**
	 * Enum mscorlib.System.Globalization.FORMATFLAGS
	 */
	enum class FORMATFLAGS : int32_t
	{
		None                   = 0x0000000000000000,
		UseGenitiveMonth       = 0x0000000000000001,
		UseLeapYearMonth       = 0x0000000000000002,
		UseSpacesInMonthNames  = 0x0000000000000004,
		UseHebrewParsing       = 0x0000000000000008,
		UseSpacesInDayNames    = 0x0000000000000010,
		UseDigitPrefixInTokens = 0x0000000000000020
	};

	/**
	 * Enum mscorlib.System.Globalization.CalendarId
	 */
	enum class CalendarId : uint16_t
	{
		UNINITIALIZED_VALUE    = 0x0000000000000000,
		GREGORIAN              = 0x0000000000000001,
		GREGORIAN_US           = 0x0000000000000002,
		JAPAN                  = 0x0000000000000003,
		TAIWAN                 = 0x0000000000000004,
		KOREA                  = 0x0000000000000005,
		HIJRI                  = 0x0000000000000006,
		THAI                   = 0x0000000000000007,
		HEBREW                 = 0x0000000000000008,
		GREGORIAN_ME_FRENCH    = 0x0000000000000009,
		GREGORIAN_ARABIC       = 0x000000000000000A,
		GREGORIAN_XLIT_ENGLISH = 0x000000000000000B,
		GREGORIAN_XLIT_FRENCH  = 0x000000000000000C,
		JULIAN                 = 0x000000000000000D,
		JAPANESELUNISOLAR      = 0x000000000000000E,
		CHINESELUNISOLAR       = 0x000000000000000F,
		SAKA                   = 0x0000000000000010,
		LUNAR_ETO_CHN          = 0x0000000000000011,
		LUNAR_ETO_KOR          = 0x0000000000000012,
		LUNAR_ETO_ROKUYOU      = 0x0000000000000013,
		KOREANLUNISOLAR        = 0x0000000000000014,
		TAIWANLUNISOLAR        = 0x0000000000000015,
		PERSIAN                = 0x0000000000000016,
		UMALQURA               = 0x0000000000000017,
		LAST_CALENDAR          = 0x0000000000000017
	};

	/**
	 * Enum mscorlib.System.Globalization.DateTimeFormatInfoScanner+FoundDatePattern
	 */
	enum class DateTimeFormatInfoScanner_FoundDatePattern : int32_t
	{
		None                  = 0x0000000000000000,
		FoundYearPatternFlag  = 0x0000000000000001,
		FoundMonthPatternFlag = 0x0000000000000002,
		FoundDayPatternFlag   = 0x0000000000000004,
		FoundYMDPatternFlag   = 0x0000000000000007
	};

	/**
	 * Enum mscorlib.System.Globalization.DateTimeStyles
	 */
	enum class DateTimeStyles : int32_t
	{
		None                 = 0x0000000000000000,
		AllowLeadingWhite    = 0x0000000000000001,
		AllowTrailingWhite   = 0x0000000000000002,
		AllowInnerWhite      = 0x0000000000000004,
		AllowWhiteSpaces     = 0x0000000000000007,
		NoCurrentDateDefault = 0x0000000000000008,
		AdjustToUniversal    = 0x0000000000000010,
		AssumeLocal          = 0x0000000000000020,
		AssumeUniversal      = 0x0000000000000040,
		RoundtripKind        = 0x0000000000000080
	};

	/**
	 * Enum mscorlib.System.Globalization.HebrewNumberParsingState
	 */
	enum class HebrewNumberParsingState : int32_t
	{
		InvalidHebrewNumber    = 0x0000000000000000,
		NotHebrewDigit         = 0x0000000000000001,
		FoundEndOfHebrewNumber = 0x0000000000000002,
		ContinueParsing        = 0x0000000000000003
	};

	/**
	 * Enum mscorlib.System.Globalization.HebrewNumber+HebrewToken
	 */
	enum class HebrewNumber_HebrewToken : int16_t
	{
		Invalid      = -1,
		Digit400     = 0x0000000000000000,
		Digit200_300 = 0x0000000000000001,
		Digit100     = 0x0000000000000002,
		Digit10      = 0x0000000000000003,
		Digit1       = 0x0000000000000004,
		Digit6_7     = 0x0000000000000005,
		Digit7       = 0x0000000000000006,
		Digit9       = 0x0000000000000007,
		SingleQuote  = 0x0000000000000008,
		DoubleQuote  = 0x0000000000000009
	};

	/**
	 * Enum mscorlib.System.Globalization.HebrewNumber+HS
	 */
	enum class HebrewNumber_HS : int8_t
	{
		err          = -1,
		Start        = 0x0000000000000000,
		S400         = 0x0000000000000001,
		S400_400     = 0x0000000000000002,
		S400_X00     = 0x0000000000000003,
		S400_X0      = 0x0000000000000004,
		X00_DQ       = 0x0000000000000005,
		S400_X00_X0  = 0x0000000000000006,
		X0_DQ        = 0x0000000000000007,
		X            = 0x0000000000000008,
		X0           = 0x0000000000000009,
		X00          = 0x000000000000000A,
		S400_DQ      = 0x000000000000000B,
		S400_400_DQ  = 0x000000000000000C,
		S400_400_100 = 0x000000000000000D,
		S9           = 0x000000000000000E,
		X00_S9       = 0x000000000000000F,
		S9_DQ        = 0x0000000000000010,
		END          = 0x0000000000000064
	};

	/**
	 * Enum mscorlib.System.Globalization.NumberStyles
	 */
	enum class NumberStyles : int32_t
	{
		None                = 0x0000000000000000,
		AllowLeadingWhite   = 0x0000000000000001,
		AllowTrailingWhite  = 0x0000000000000002,
		AllowLeadingSign    = 0x0000000000000004,
		AllowTrailingSign   = 0x0000000000000008,
		AllowParentheses    = 0x0000000000000010,
		AllowDecimalPoint   = 0x0000000000000020,
		AllowThousands      = 0x0000000000000040,
		AllowExponent       = 0x0000000000000080,
		AllowCurrencySymbol = 0x0000000000000100,
		AllowHexSpecifier   = 0x0000000000000200,
		Integer             = 0x0000000000000007,
		HexNumber           = 0x0000000000000203,
		Number              = 0x000000000000006F,
		Float               = 0x00000000000000A7,
		Currency            = 0x000000000000017F,
		Any                 = 0x00000000000001FF
	};

	/**
	 * Enum mscorlib.System.Globalization.TimeSpanFormat+Pattern
	 */
	enum class TimeSpanFormat_Pattern : int32_t
	{
		None    = 0x0000000000000000,
		Minimum = 0x0000000000000001,
		Full    = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.System.Globalization.TimeSpanParse+ParseFailureKind
	 */
	enum class TimeSpanParse_ParseFailureKind : uint8_t
	{
		None                = 0x0000000000000000,
		ArgumentNull        = 0x0000000000000001,
		Format              = 0x0000000000000002,
		FormatWithParameter = 0x0000000000000003,
		Overflow            = 0x0000000000000004
	};

	/**
	 * Enum mscorlib.System.Globalization.TimeSpanParse+TimeSpanStandardStyles
	 */
	enum class TimeSpanParse_TimeSpanStandardStyles : uint8_t
	{
		None        = 0x0000000000000000,
		Invariant   = 0x0000000000000001,
		Localized   = 0x0000000000000002,
		RequireFull = 0x0000000000000004,
		Any         = 0x0000000000000003
	};

	/**
	 * Enum mscorlib.System.Globalization.TimeSpanParse+TTT
	 */
	enum class TimeSpanParse_TTT : uint8_t
	{
		None        = 0x0000000000000000,
		End         = 0x0000000000000001,
		Num         = 0x0000000000000002,
		Sep         = 0x0000000000000003,
		NumOverflow = 0x0000000000000004
	};

	/**
	 * Enum mscorlib.System.Globalization.UnicodeCategory
	 */
	enum class UnicodeCategory : int32_t
	{
		UppercaseLetter         = 0x0000000000000000,
		LowercaseLetter         = 0x0000000000000001,
		TitlecaseLetter         = 0x0000000000000002,
		ModifierLetter          = 0x0000000000000003,
		OtherLetter             = 0x0000000000000004,
		NonSpacingMark          = 0x0000000000000005,
		SpacingCombiningMark    = 0x0000000000000006,
		EnclosingMark           = 0x0000000000000007,
		DecimalDigitNumber      = 0x0000000000000008,
		LetterNumber            = 0x0000000000000009,
		OtherNumber             = 0x000000000000000A,
		SpaceSeparator          = 0x000000000000000B,
		LineSeparator           = 0x000000000000000C,
		ParagraphSeparator      = 0x000000000000000D,
		Control                 = 0x000000000000000E,
		Format                  = 0x000000000000000F,
		Surrogate               = 0x0000000000000010,
		PrivateUse              = 0x0000000000000011,
		ConnectorPunctuation    = 0x0000000000000012,
		DashPunctuation         = 0x0000000000000013,
		OpenPunctuation         = 0x0000000000000014,
		ClosePunctuation        = 0x0000000000000015,
		InitialQuotePunctuation = 0x0000000000000016,
		FinalQuotePunctuation   = 0x0000000000000017,
		OtherPunctuation        = 0x0000000000000018,
		MathSymbol              = 0x0000000000000019,
		CurrencySymbol          = 0x000000000000001A,
		ModifierSymbol          = 0x000000000000001B,
		OtherSymbol             = 0x000000000000001C,
		OtherNotAssigned        = 0x000000000000001D
	};

	/**
	 * Enum mscorlib.System.Globalization.CalendricalCalculationsHelper+CorrectionAlgorithm
	 */
	enum class CalendricalCalculationsHelper_CorrectionAlgorithm : int32_t
	{
		Default        = 0x0000000000000000,
		Year1988to2019 = 0x0000000000000001,
		Year1900to1987 = 0x0000000000000002,
		Year1800to1899 = 0x0000000000000003,
		Year1700to1799 = 0x0000000000000004,
		Year1620to1699 = 0x0000000000000005
	};

	/**
	 * Enum mscorlib.System.Globalization.GregorianCalendarTypes
	 */
	enum class GregorianCalendarTypes : int32_t
	{
		Localized             = 0x0000000000000001,
		USEnglish             = 0x0000000000000002,
		MiddleEastFrench      = 0x0000000000000009,
		Arabic                = 0x000000000000000A,
		TransliteratedEnglish = 0x000000000000000B,
		TransliteratedFrench  = 0x000000000000000C
	};

	/**
	 * Enum mscorlib.System.Diagnostics.DebuggableAttribute+DebuggingModes
	 */
	enum class DebuggableAttribute_DebuggingModes : int32_t
	{
		None                            = 0x0000000000000000,
		Default                         = 0x0000000000000001,
		DisableOptimizations            = 0x0000000000000100,
		IgnoreSymbolStoreSequencePoints = 0x0000000000000002,
		EnableEditAndContinue           = 0x0000000000000004
	};

	/**
	 * Enum mscorlib.System.Diagnostics.DebuggerBrowsableState
	 */
	enum class DebuggerBrowsableState : int32_t
	{
		Never      = 0x0000000000000000,
		Collapsed  = 0x0000000000000002,
		RootHidden = 0x0000000000000003
	};

	/**
	 * Enum mscorlib.System.Diagnostics.StackTrace+TraceFormat
	 */
	enum class StackTrace_TraceFormat : int32_t
	{
		Normal           = 0x0000000000000000,
		TrailingNewLine  = 0x0000000000000001,
		NoResourceLookup = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.System.Diagnostics.Tracing.EventLevel
	 */
	enum class EventLevel : int32_t
	{
		LogAlways     = 0x0000000000000000,
		Critical      = 0x0000000000000001,
		Error         = 0x0000000000000002,
		Warning       = 0x0000000000000003,
		Informational = 0x0000000000000004,
		Verbose       = 0x0000000000000005
	};

	/**
	 * Enum mscorlib.System.Diagnostics.Tracing.EventKeywords
	 */
	enum class EventKeywords : int64_t
	{
		None               = 0x0000000000000000,
		All                = -1,
		MicrosoftTelemetry = 0x0002000000000000,
		WdiContext         = 0x0002000000000000,
		WdiDiagnostic      = 0x0004000000000000,
		Sqm                = 0x0008000000000000,
		AuditFailure       = 0x0010000000000000,
		AuditSuccess       = 0x0020000000000000,
		CorrelationHint    = 0x0010000000000000,
		EventLogClassic    = 0x0080000000000000
	};

	/**
	 * Enum mscorlib.System.Configuration.Assemblies.AssemblyHashAlgorithm
	 */
	enum class AssemblyHashAlgorithm : int32_t
	{
		None   = 0x0000000000000000,
		MD5    = 0x0000000000008003,
		SHA1   = 0x0000000000008004,
		SHA256 = 0x000000000000800C,
		SHA384 = 0x000000000000800D,
		SHA512 = 0x000000000000800E
	};

	/**
	 * Enum mscorlib.System.Configuration.Assemblies.AssemblyVersionCompatibility
	 */
	enum class AssemblyVersionCompatibility : int32_t
	{
		SameMachine = 0x0000000000000001,
		SameProcess = 0x0000000000000002,
		SameDomain  = 0x0000000000000003
	};

	/**
	 * Enum mscorlib.System.Collections.Generic.InsertionBehavior
	 */
	enum class InsertionBehavior : uint8_t
	{
		None              = 0x0000000000000000,
		OverwriteExisting = 0x0000000000000001,
		ThrowOnExisting   = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.System.Buffers.ArrayPoolEventSource+BufferAllocatedReason
	 */
	enum class ArrayPoolEventSource_BufferAllocatedReason : int32_t
	{
		Pooled          = 0x0000000000000000,
		OverMaximumSize = 0x0000000000000001,
		PoolExhausted   = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.System.Buffers.TlsOverPerCoreLockedStacksArrayPool+MemoryPressure<T>
	 */
	enum class TlsOverPerCoreLockedStacksArrayPool_MemoryPressure_T : int32_t
	{
		Low    = 0x0000000000000000,
		Medium = 0x0000000000000001,
		High   = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.System.IO.FileAccess
	 */
	enum class FileAccess : int32_t
	{
		Read      = 0x0000000000000001,
		Write     = 0x0000000000000002,
		ReadWrite = 0x0000000000000003
	};

	/**
	 * Enum mscorlib.System.IO.FileMode
	 */
	enum class FileMode : int32_t
	{
		CreateNew    = 0x0000000000000001,
		Create       = 0x0000000000000002,
		Open         = 0x0000000000000003,
		OpenOrCreate = 0x0000000000000004,
		Truncate     = 0x0000000000000005,
		Append       = 0x0000000000000006
	};

	/**
	 * Enum mscorlib.System.IO.FileOptions
	 */
	enum class FileOptions : int32_t
	{
		None           = 0x0000000000000000,
		WriteThrough   = -2147483648,
		Asynchronous   = 0x0000000040000000,
		RandomAccess   = 0x0000000010000000,
		DeleteOnClose  = 0x0000000004000000,
		SequentialScan = 0x0000000008000000,
		Encrypted      = 0x0000000000004000
	};

	/**
	 * Enum mscorlib.System.IO.FileShare
	 */
	enum class FileShare : int32_t
	{
		None        = 0x0000000000000000,
		Read        = 0x0000000000000001,
		Write       = 0x0000000000000002,
		ReadWrite   = 0x0000000000000003,
		Delete      = 0x0000000000000004,
		Inheritable = 0x0000000000000010
	};

	/**
	 * Enum mscorlib.System.IO.SeekOrigin
	 */
	enum class SeekOrigin : int32_t
	{
		Begin   = 0x0000000000000000,
		Current = 0x0000000000000001,
		End     = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.System.IO.MatchCasing
	 */
	enum class MatchCasing : int32_t
	{
		PlatformDefault = 0x0000000000000000,
		CaseSensitive   = 0x0000000000000001,
		CaseInsensitive = 0x0000000000000002
	};

	/**
	 * Enum mscorlib.System.IO.MatchType
	 */
	enum class MatchType : int32_t
	{
		Simple = 0x0000000000000000,
		Win32  = 0x0000000000000001
	};

	/**
	 * Enum mscorlib.System.IO.SearchOption
	 */
	enum class SearchOption : int32_t
	{
		TopDirectoryOnly = 0x0000000000000000,
		AllDirectories   = 0x0000000000000001
	};

	/**
	 * Enum mscorlib.System.IO.SearchTarget
	 */
	enum class SearchTarget : int32_t
	{
		Files       = 0x0000000000000001,
		Directories = 0x0000000000000002,
		Both        = 0x0000000000000003
	};

	/**
	 * Enum mscorlib.System.IO.FileAttributes
	 */
	enum class FileAttributes : int32_t
	{
		ReadOnly          = 0x0000000000000001,
		Hidden            = 0x0000000000000002,
		System            = 0x0000000000000004,
		Directory         = 0x0000000000000010,
		Archive           = 0x0000000000000020,
		Device            = 0x0000000000000040,
		Normal            = 0x0000000000000080,
		Temporary         = 0x0000000000000100,
		SparseFile        = 0x0000000000000200,
		ReparsePoint      = 0x0000000000000400,
		Compressed        = 0x0000000000000800,
		Offline           = 0x0000000000001000,
		NotContentIndexed = 0x0000000000002000,
		Encrypted         = 0x0000000000004000,
		IntegrityStream   = 0x0000000000008000,
		NoScrubData       = 0x0000000000020000
	};

	/**
	 * Enum mscorlib.System.IO.MonoFileType
	 */
	enum class MonoFileType : int32_t
	{
		Unknown = 0x0000000000000000,
		Disk    = 0x0000000000000001,
		Char    = 0x0000000000000002,
		Pipe    = 0x0000000000000003,
		Remote  = 0x0000000000008000
	};

	/**
	 * Enum mscorlib.System.IO.MonoIOError
	 */
	enum class MonoIOError : int32_t
	{
		_ERROR_SUCCESS_              = 0x0000000000000000,
		_ERROR_FILE_NOT_FOUND_       = 0x0000000000000002,
		_ERROR_PATH_NOT_FOUND_       = 0x0000000000000003,
		_ERROR_TOO_MANY_OPEN_FILES_  = 0x0000000000000004,
		_ERROR_ACCESS_DENIED_        = 0x0000000000000005,
		_ERROR_INVALID_HANDLE_       = 0x0000000000000006,
		_ERROR_INVALID_DRIVE_        = 0x000000000000000F,
		_ERROR_NOT_SAME_DEVICE_      = 0x0000000000000011,
		_ERROR_NO_MORE_FILES_        = 0x0000000000000012,
		_ERROR_NOT_READY_            = 0x0000000000000015,
		_ERROR_WRITE_FAULT_          = 0x000000000000001D,
		_ERROR_READ_FAULT_           = 0x000000000000001E,
		_ERROR_GEN_FAILURE_          = 0x000000000000001F,
		_ERROR_SHARING_VIOLATION_    = 0x0000000000000020,
		_ERROR_LOCK_VIOLATION_       = 0x0000000000000021,
		_ERROR_HANDLE_DISK_FULL_     = 0x0000000000000027,
		ERROR_NOT_SUPPORTED          = 0x0000000000000032,
		_ERROR_FILE_EXISTS_          = 0x0000000000000050,
		_ERROR_CANNOT_MAKE_          = 0x0000000000000052,
		_ERROR_INVALID_PARAMETER_    = 0x0000000000000057,
		_ERROR_BROKEN_PIPE_          = 0x000000000000006D,
		_ERROR_INVALID_NAME_         = 0x000000000000007B,
		_ERROR_DIR_NOT_EMPTY_        = 0x0000000000000091,
		_ERROR_ALREADY_EXISTS_       = 0x00000000000000B7,
		_ERROR_FILENAME_EXCED_RANGE_ = 0x00000000000000CE,
		_ERROR_DIRECTORY_            = 0x000000000000010B,
		_ERROR_ENCRYPTION_FAILED_    = 0x0000000000001770
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.BaseSlider.SliderKey<float>
	 */
	enum class BaseSlider_SliderKey_float : int32_t
	{
		None       = 0x0000000000000000,
		Lowest     = 0x0000000000000001,
		LowerPage  = 0x0000000000000002,
		Lower      = 0x0000000000000003,
		Higher     = 0x0000000000000004,
		HigherPage = 0x0000000000000005,
		Highest    = 0x0000000000000006
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.BaseSlider.SliderKey<int>
	 */
	enum class BaseSlider_SliderKey_int : int32_t
	{
		None       = 0x0000000000000000,
		Lowest     = 0x0000000000000001,
		LowerPage  = 0x0000000000000002,
		Lower      = 0x0000000000000003,
		Higher     = 0x0000000000000004,
		HigherPage = 0x0000000000000005,
		Highest    = 0x0000000000000006
	};

	/**
	 * Enum System.Mono.Unity.UnityTls+unitytls_error_code
	 */
	enum class UnityTls_unitytls_error_code : uint32_t
	{
		UNITYTLS_SUCCESS                 = 0x0000000000000000,
		UNITYTLS_INVALID_ARGUMENT        = 0x0000000000000001,
		UNITYTLS_INVALID_FORMAT          = 0x0000000000000002,
		UNITYTLS_INVALID_PASSWORD        = 0x0000000000000003,
		UNITYTLS_INVALID_STATE           = 0x0000000000000004,
		UNITYTLS_BUFFER_OVERFLOW         = 0x0000000000000005,
		UNITYTLS_OUT_OF_MEMORY           = 0x0000000000000006,
		UNITYTLS_INTERNAL_ERROR          = 0x0000000000000007,
		UNITYTLS_NOT_SUPPORTED           = 0x0000000000000008,
		UNITYTLS_ENTROPY_SOURCE_FAILED   = 0x0000000000000009,
		UNITYTLS_STREAM_CLOSED           = 0x000000000000000A,
		UNITYTLS_USER_CUSTOM_ERROR_START = 0x0000000000100000,
		UNITYTLS_USER_WOULD_BLOCK        = 0x0000000000100001,
		UNITYTLS_USER_READ_FAILED        = 0x0000000000100002,
		UNITYTLS_USER_WRITE_FAILED       = 0x0000000000100003,
		UNITYTLS_USER_UNKNOWN_ERROR      = 0x0000000000100004,
		UNITYTLS_USER_CUSTOM_ERROR_END   = 0x0000000000200000
	};

	/**
	 * Enum System.Mono.Unity.UnityTls+unitytls_x509verify_result
	 */
	enum class UnityTls_unitytls_x509verify_result : uint32_t
	{
		UNITYTLS_X509VERIFY_SUCCESS            = 0x0000000000000000,
		UNITYTLS_X509VERIFY_NOT_DONE           = 0x0000000080000000,
		UNITYTLS_X509VERIFY_FATAL_ERROR        = 0x00000000FFFFFFFF,
		UNITYTLS_X509VERIFY_FLAG_EXPIRED       = 0x0000000000000001,
		UNITYTLS_X509VERIFY_FLAG_REVOKED       = 0x0000000000000002,
		UNITYTLS_X509VERIFY_FLAG_CN_MISMATCH   = 0x0000000000000004,
		UNITYTLS_X509VERIFY_FLAG_NOT_TRUSTED   = 0x0000000000000008,
		UNITYTLS_X509VERIFY_FLAG_USER_ERROR1   = 0x0000000000010000,
		UNITYTLS_X509VERIFY_FLAG_USER_ERROR2   = 0x0000000000020000,
		UNITYTLS_X509VERIFY_FLAG_USER_ERROR3   = 0x0000000000040000,
		UNITYTLS_X509VERIFY_FLAG_USER_ERROR4   = 0x0000000000080000,
		UNITYTLS_X509VERIFY_FLAG_USER_ERROR5   = 0x0000000000100000,
		UNITYTLS_X509VERIFY_FLAG_USER_ERROR6   = 0x0000000000200000,
		UNITYTLS_X509VERIFY_FLAG_USER_ERROR7   = 0x0000000000400000,
		UNITYTLS_X509VERIFY_FLAG_USER_ERROR8   = 0x0000000000800000,
		UNITYTLS_X509VERIFY_FLAG_UNKNOWN_ERROR = 0x0000000008000000
	};

	/**
	 * Enum System.Mono.Unity.UnityTls+unitytls_ciphersuite
	 */
	enum class UnityTls_unitytls_ciphersuite : uint32_t
	{
		UNITYTLS_CIPHERSUITE_INVALID = 0x0000000000FFFFFF
	};

	/**
	 * Enum System.Mono.Unity.UnityTls+unitytls_protocol
	 */
	enum class UnityTls_unitytls_protocol : uint32_t
	{
		UNITYTLS_PROTOCOL_TLS_1_0 = 0x0000000000000000,
		UNITYTLS_PROTOCOL_TLS_1_1 = 0x0000000000000001,
		UNITYTLS_PROTOCOL_TLS_1_2 = 0x0000000000000002,
		UNITYTLS_PROTOCOL_INVALID = 0x0000000000000003
	};

	/**
	 * Enum System.Mono.Net.Security.AsyncOperationStatus
	 */
	enum class AsyncOperationStatus : int32_t
	{
		Initialize = 0x0000000000000000,
		Continue   = 0x0000000000000001,
		ReadDone   = 0x0000000000000002,
		Complete   = 0x0000000000000003
	};

	/**
	 * Enum System.Mono.Net.Security.MobileAuthenticatedStream+Operation
	 */
	enum class MobileAuthenticatedStream_Operation : int32_t
	{
		None          = 0x0000000000000000,
		Handshake     = 0x0000000000000001,
		Authenticated = 0x0000000000000002,
		Renegotiate   = 0x0000000000000003,
		Read          = 0x0000000000000004,
		Write         = 0x0000000000000005,
		Close         = 0x0000000000000006
	};

	/**
	 * Enum System.Mono.Net.Security.MobileAuthenticatedStream+OperationType
	 */
	enum class MobileAuthenticatedStream_OperationType : int32_t
	{
		Read        = 0x0000000000000000,
		Write       = 0x0000000000000001,
		Renegotiate = 0x0000000000000002,
		Shutdown    = 0x0000000000000003
	};

	/**
	 * Enum System.Mono.Btls.MonoBtlsBioMono+ControlCommand
	 */
	enum class MonoBtlsBioMono_ControlCommand : int32_t
	{
		Flush = 0x0000000000000001
	};

	/**
	 * Enum System.Mono.Btls.MonoBtlsSslError
	 */
	enum class MonoBtlsSslError : int32_t
	{
		None                    = 0x0000000000000000,
		Ssl                     = 0x0000000000000001,
		WantRead                = 0x0000000000000002,
		WantWrite               = 0x0000000000000003,
		WantX509Lookup          = 0x0000000000000004,
		Syscall                 = 0x0000000000000005,
		ZeroReturn              = 0x0000000000000006,
		WantConnect             = 0x0000000000000007,
		WantAccept              = 0x0000000000000008,
		WantChannelIdLookup     = 0x0000000000000009,
		PendingSession          = 0x000000000000000B,
		PendingCertificate      = 0x000000000000000C,
		WantPrivateKeyOperation = 0x000000000000000D
	};

	/**
	 * Enum System.Mono.Btls.MonoBtlsSslRenegotiateMode
	 */
	enum class MonoBtlsSslRenegotiateMode : int32_t
	{
		NEVER    = 0x0000000000000000,
		ONCE     = 0x0000000000000001,
		FREELY   = 0x0000000000000002,
		_IGNORE_ = 0x0000000000000003
	};

	/**
	 * Enum System.Mono.Btls.MonoBtlsX509Error
	 */
	enum class MonoBtlsX509Error : int32_t
	{
		OK                                   = 0x0000000000000000,
		UNABLE_TO_GET_ISSUER_CERT            = 0x0000000000000002,
		UNABLE_TO_GET_CRL                    = 0x0000000000000003,
		UNABLE_TO_DECRYPT_CERT_SIGNATURE     = 0x0000000000000004,
		UNABLE_TO_DECRYPT_CRL_SIGNATURE      = 0x0000000000000005,
		UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY   = 0x0000000000000006,
		CERT_SIGNATURE_FAILURE               = 0x0000000000000007,
		CRL_SIGNATURE_FAILURE                = 0x0000000000000008,
		CERT_NOT_YET_VALID                   = 0x0000000000000009,
		CERT_HAS_EXPIRED                     = 0x000000000000000A,
		CRL_NOT_YET_VALID                    = 0x000000000000000B,
		CRL_HAS_EXPIRED                      = 0x000000000000000C,
		ERROR_IN_CERT_NOT_BEFORE_FIELD       = 0x000000000000000D,
		ERROR_IN_CERT_NOT_AFTER_FIELD        = 0x000000000000000E,
		ERROR_IN_CRL_LAST_UPDATE_FIELD       = 0x000000000000000F,
		ERROR_IN_CRL_NEXT_UPDATE_FIELD       = 0x0000000000000010,
		OUT_OF_MEM                           = 0x0000000000000011,
		DEPTH_ZERO_SELF_SIGNED_CERT          = 0x0000000000000012,
		SELF_SIGNED_CERT_IN_CHAIN            = 0x0000000000000013,
		UNABLE_TO_GET_ISSUER_CERT_LOCALLY    = 0x0000000000000014,
		UNABLE_TO_VERIFY_LEAF_SIGNATURE      = 0x0000000000000015,
		CERT_CHAIN_TOO_LONG                  = 0x0000000000000016,
		CERT_REVOKED                         = 0x0000000000000017,
		INVALID_CA                           = 0x0000000000000018,
		PATH_LENGTH_EXCEEDED                 = 0x0000000000000019,
		INVALID_PURPOSE                      = 0x000000000000001A,
		CERT_UNTRUSTED                       = 0x000000000000001B,
		CERT_REJECTED                        = 0x000000000000001C,
		SUBJECT_ISSUER_MISMATCH              = 0x000000000000001D,
		AKID_SKID_MISMATCH                   = 0x000000000000001E,
		AKID_ISSUER_SERIAL_MISMATCH          = 0x000000000000001F,
		KEYUSAGE_NO_CERTSIGN                 = 0x0000000000000020,
		UNABLE_TO_GET_CRL_ISSUER             = 0x0000000000000021,
		UNHANDLED_CRITICAL_EXTENSION         = 0x0000000000000022,
		KEYUSAGE_NO_CRL_SIGN                 = 0x0000000000000023,
		UNHANDLED_CRITICAL_CRL_EXTENSION     = 0x0000000000000024,
		INVALID_NON_CA                       = 0x0000000000000025,
		PROXY_PATH_LENGTH_EXCEEDED           = 0x0000000000000026,
		KEYUSAGE_NO_DIGITAL_SIGNATURE        = 0x0000000000000027,
		PROXY_CERTIFICATES_NOT_ALLOWED       = 0x0000000000000028,
		INVALID_EXTENSION                    = 0x0000000000000029,
		INVALID_POLICY_EXTENSION             = 0x000000000000002A,
		NO_EXPLICIT_POLICY                   = 0x000000000000002B,
		DIFFERENT_CRL_SCOPE                  = 0x000000000000002C,
		UNSUPPORTED_EXTENSION_FEATURE        = 0x000000000000002D,
		UNNESTED_RESOURCE                    = 0x000000000000002E,
		PERMITTED_VIOLATION                  = 0x000000000000002F,
		EXCLUDED_VIOLATION                   = 0x0000000000000030,
		SUBTREE_MINMAX                       = 0x0000000000000031,
		UNSUPPORTED_CONSTRAINT_TYPE          = 0x0000000000000033,
		UNSUPPORTED_CONSTRAINT_SYNTAX        = 0x0000000000000034,
		UNSUPPORTED_NAME_SYNTAX              = 0x0000000000000035,
		CRL_PATH_VALIDATION_ERROR            = 0x0000000000000036,
		SUITE_B_INVALID_VERSION              = 0x0000000000000038,
		SUITE_B_INVALID_ALGORITHM            = 0x0000000000000039,
		SUITE_B_INVALID_CURVE                = 0x000000000000003A,
		SUITE_B_INVALID_SIGNATURE_ALGORITHM  = 0x000000000000003B,
		SUITE_B_LOS_NOT_ALLOWED              = 0x000000000000003C,
		SUITE_B_CANNOT_SIGN_P_384_WITH_P_256 = 0x000000000000003D,
		HOSTNAME_MISMATCH                    = 0x000000000000003E,
		EMAIL_MISMATCH                       = 0x000000000000003F,
		IP_ADDRESS_MISMATCH                  = 0x0000000000000040,
		APPLICATION_VERIFICATION             = 0x0000000000000032
	};

	/**
	 * Enum System.Mono.Btls.MonoBtlsX509FileType
	 */
	enum class MonoBtlsX509FileType : int32_t
	{
		PEM     = 0x0000000000000001,
		ASN1    = 0x0000000000000002,
		DEFAULT = 0x0000000000000003
	};

	/**
	 * Enum System.Mono.Btls.MonoBtlsX509Format
	 */
	enum class MonoBtlsX509Format : int32_t
	{
		DER = 0x0000000000000001,
		PEM = 0x0000000000000002
	};

	/**
	 * Enum System.Mono.Btls.MonoBtlsX509LookupType
	 */
	enum class MonoBtlsX509LookupType : int32_t
	{
		UNKNOWN  = 0x0000000000000000,
		FILE     = 0x0000000000000001,
		HASH_DIR = 0x0000000000000002,
		MONO     = 0x0000000000000003
	};

	/**
	 * Enum System.Mono.Btls.MonoBtlsX509NameEntryType
	 */
	enum class MonoBtlsX509NameEntryType : int32_t
	{
		Unknown                = 0x0000000000000000,
		CountryName            = 0x0000000000000001,
		OrganizationName       = 0x0000000000000002,
		OrganizationalUnitName = 0x0000000000000003,
		CommonName             = 0x0000000000000004,
		LocalityName           = 0x0000000000000005,
		StateOrProvinceName    = 0x0000000000000006,
		StreetAddress          = 0x0000000000000007,
		SerialNumber           = 0x0000000000000008,
		DomainComponent        = 0x0000000000000009,
		UserId                 = 0x000000000000000A,
		Email                  = 0x000000000000000B,
		DnQualifier            = 0x000000000000000C,
		Title                  = 0x000000000000000D,
		Surname                = 0x000000000000000E,
		GivenName              = 0x000000000000000F,
		Initial                = 0x0000000000000010
	};

	/**
	 * Enum System.Mono.Btls.MonoBtlsX509StoreType
	 */
	enum class MonoBtlsX509StoreType : int32_t
	{
		Custom                = 0x0000000000000000,
		MachineTrustedRoots   = 0x0000000000000001,
		MachineIntermediateCA = 0x0000000000000002,
		MachineUntrusted      = 0x0000000000000003,
		UserTrustedRoots      = 0x0000000000000004,
		UserIntermediateCA    = 0x0000000000000005,
		UserUntrusted         = 0x0000000000000006
	};

	/**
	 * Enum System.Mono.Btls.MonoBtlsX509TrustKind
	 */
	enum class MonoBtlsX509TrustKind : int32_t
	{
		DEFAULT       = 0x0000000000000000,
		TRUST_CLIENT  = 0x0000000000000001,
		TRUST_SERVER  = 0x0000000000000002,
		TRUST_ALL     = 0x0000000000000004,
		REJECT_CLIENT = 0x0000000000000020,
		REJECT_SERVER = 0x0000000000000040,
		REJECT_ALL    = 0x0000000000000080
	};

	/**
	 * Enum System.Internal.Cryptography.Pal.GeneralNameType
	 */
	enum class GeneralNameType : int32_t
	{
		OtherName                 = 0x0000000000000000,
		Rfc822Name                = 0x0000000000000001,
		Email                     = 0x0000000000000001,
		DnsName                   = 0x0000000000000002,
		X400Address               = 0x0000000000000003,
		DirectoryName             = 0x0000000000000004,
		EdiPartyName              = 0x0000000000000005,
		UniformResourceIdentifier = 0x0000000000000006,
		IPAddress                 = 0x0000000000000007,
		RegisteredId              = 0x0000000000000008
	};

	/**
	 * Enum System.System.GenericUriParserOptions
	 */
	enum class GenericUriParserOptions : int32_t
	{
		Default                        = 0x0000000000000000,
		GenericAuthority               = 0x0000000000000001,
		AllowEmptyAuthority            = 0x0000000000000002,
		NoUserInfo                     = 0x0000000000000004,
		NoPort                         = 0x0000000000000008,
		NoQuery                        = 0x0000000000000010,
		NoFragment                     = 0x0000000000000020,
		DontConvertPathBackslashes     = 0x0000000000000040,
		DontCompressPath               = 0x0000000000000080,
		DontUnescapePathDotsAndSlashes = 0x0000000000000100,
		Idn                            = 0x0000000000000200,
		IriParsing                     = 0x0000000000000400
	};

	/**
	 * Enum System.System.Uri+Flags
	 */
	enum class Uri_Flags : uint64_t
	{
		Zero                     = 0x0000000000000000,
		SchemeNotCanonical       = 0x0000000000000001,
		UserNotCanonical         = 0x0000000000000002,
		HostNotCanonical         = 0x0000000000000004,
		PortNotCanonical         = 0x0000000000000008,
		PathNotCanonical         = 0x0000000000000010,
		QueryNotCanonical        = 0x0000000000000020,
		FragmentNotCanonical     = 0x0000000000000040,
		CannotDisplayCanonical   = 0x000000000000007F,
		E_UserNotCanonical       = 0x0000000000000080,
		E_HostNotCanonical       = 0x0000000000000100,
		E_PortNotCanonical       = 0x0000000000000200,
		E_PathNotCanonical       = 0x0000000000000400,
		E_QueryNotCanonical      = 0x0000000000000800,
		E_FragmentNotCanonical   = 0x0000000000001000,
		E_CannotDisplayCanonical = 0x0000000000001F80,
		ShouldBeCompressed       = 0x0000000000002000,
		FirstSlashAbsent         = 0x0000000000004000,
		BackslashInPath          = 0x0000000000008000,
		IndexMask                = 0x000000000000FFFF,
		HostTypeMask             = 0x0000000000070000,
		HostNotParsed            = 0x0000000000000000,
		IPv6HostType             = 0x0000000000010000,
		IPv4HostType             = 0x0000000000020000,
		DnsHostType              = 0x0000000000030000,
		UncHostType              = 0x0000000000040000,
		BasicHostType            = 0x0000000000050000,
		UnusedHostType           = 0x0000000000060000,
		UnknownHostType          = 0x0000000000070000,
		UserEscaped              = 0x0000000000080000,
		AuthorityFound           = 0x0000000000100000,
		HasUserInfo              = 0x0000000000200000,
		LoopbackHost             = 0x0000000000400000,
		NotDefaultPort           = 0x0000000000800000,
		UserDrivenParsing        = 0x0000000001000000,
		CanonicalDnsHost         = 0x0000000002000000,
		ErrorOrParsingRecursion  = 0x0000000004000000,
		DosPath                  = 0x0000000008000000,
		UncPath                  = 0x0000000010000000,
		ImplicitFile             = 0x0000000020000000,
		MinimalUriInfoSet        = 0x0000000040000000,
		AllUriInfoSet            = 0x0000000080000000,
		IdnHost                  = 0x0000000100000000,
		HasUnicode               = 0x0000000200000000,
		HostUnicodeNormalized    = 0x0000000400000000,
		RestUnicodeNormalized    = 0x0000000800000000,
		UnicodeHost              = 0x0000001000000000,
		IntranetUri              = 0x0000002000000000,
		UseOrigUncdStrOffset     = 0x0000004000000000,
		UserIriCanonical         = 0x0000008000000000,
		PathIriCanonical         = 0x0000010000000000,
		QueryIriCanonical        = 0x0000020000000000,
		FragmentIriCanonical     = 0x0000040000000000,
		IriCanonical             = 0x0000078000000000,
		CompressedSlashes        = 0x0000100000000000
	};

	/**
	 * Enum System.System.Uri+Check
	 */
	enum class Uri_Check : int32_t
	{
		None             = 0x0000000000000000,
		EscapedCanonical = 0x0000000000000001,
		DisplayCanonical = 0x0000000000000002,
		DotSlashAttn     = 0x0000000000000004,
		DotSlashEscaped  = 0x0000000000000080,
		BackslashInPath  = 0x0000000000000010,
		ReservedFound    = 0x0000000000000020,
		NotIriCanonical  = 0x0000000000000040,
		FoundNonAscii    = 0x0000000000000008
	};

	/**
	 * Enum System.System.UriKind
	 */
	enum class UriKind : int32_t
	{
		RelativeOrAbsolute = 0x0000000000000000,
		Absolute           = 0x0000000000000001,
		Relative           = 0x0000000000000002
	};

	/**
	 * Enum System.System.UriComponents
	 */
	enum class UriComponents : int32_t
	{
		Scheme                  = 0x0000000000000001,
		UserInfo                = 0x0000000000000002,
		Host                    = 0x0000000000000004,
		Port                    = 0x0000000000000008,
		Path                    = 0x0000000000000010,
		Query                   = 0x0000000000000020,
		Fragment                = 0x0000000000000040,
		StrongPort              = 0x0000000000000080,
		NormalizedHost          = 0x0000000000000100,
		KeepDelimiter           = 0x0000000040000000,
		SerializationInfoString = -2147483648,
		AbsoluteUri             = 0x000000000000007F,
		HostAndPort             = 0x0000000000000084,
		StrongAuthority         = 0x0000000000000086,
		SchemeAndServer         = 0x000000000000000D,
		HttpRequestUrl          = 0x000000000000003D,
		PathAndQuery            = 0x0000000000000030
	};

	/**
	 * Enum System.System.UriFormat
	 */
	enum class UriFormat : int32_t
	{
		UriEscaped    = 0x0000000000000001,
		Unescaped     = 0x0000000000000002,
		SafeUnescaped = 0x0000000000000003
	};

	/**
	 * Enum System.System.UriIdnScope
	 */
	enum class UriIdnScope : int32_t
	{
		None              = 0x0000000000000000,
		AllExceptIntranet = 0x0000000000000001,
		All               = 0x0000000000000002
	};

	/**
	 * Enum System.System.ParsingError
	 */
	enum class ParsingError : int32_t
	{
		None                      = 0x0000000000000000,
		BadFormat                 = 0x0000000000000001,
		BadScheme                 = 0x0000000000000002,
		BadAuthority              = 0x0000000000000003,
		EmptyUriString            = 0x0000000000000004,
		LastRelativeUriOkErrIndex = 0x0000000000000004,
		SchemeLimit               = 0x0000000000000005,
		SizeLimit                 = 0x0000000000000006,
		MustRootedPath            = 0x0000000000000007,
		BadHostName               = 0x0000000000000008,
		NonEmptyHost              = 0x0000000000000009,
		BadPort                   = 0x000000000000000A,
		BadAuthorityTerminator    = 0x000000000000000B,
		CannotCreateRelative      = 0x000000000000000C
	};

	/**
	 * Enum System.System.UnescapeMode
	 */
	enum class UnescapeMode : int32_t
	{
		CopyOnly           = 0x0000000000000000,
		Escape             = 0x0000000000000001,
		Unescape           = 0x0000000000000002,
		EscapeUnescape     = 0x0000000000000003,
		V1ToStringFlag     = 0x0000000000000004,
		UnescapeAll        = 0x0000000000000008,
		UnescapeAllOrThrow = 0x0000000000000018
	};

	/**
	 * Enum System.System.UriHostNameType
	 */
	enum class UriHostNameType : int32_t
	{
		Unknown = 0x0000000000000000,
		Basic   = 0x0000000000000001,
		Dns     = 0x0000000000000002,
		IPv4    = 0x0000000000000003,
		IPv6    = 0x0000000000000004
	};

	/**
	 * Enum System.System.UriParser+UriQuirksVersion
	 */
	enum class UriParser_UriQuirksVersion : int32_t
	{
		V2 = 0x0000000000000002,
		V3 = 0x0000000000000003
	};

	/**
	 * Enum System.System.UriSyntaxFlags
	 */
	enum class UriSyntaxFlags : int32_t
	{
		None                   = 0x0000000000000000,
		MustHaveAuthority      = 0x0000000000000001,
		OptionalAuthority      = 0x0000000000000002,
		MayHaveUserInfo        = 0x0000000000000004,
		MayHavePort            = 0x0000000000000008,
		MayHavePath            = 0x0000000000000010,
		MayHaveQuery           = 0x0000000000000020,
		MayHaveFragment        = 0x0000000000000040,
		AllowEmptyHost         = 0x0000000000000080,
		AllowUncHost           = 0x0000000000000100,
		AllowDnsHost           = 0x0000000000000200,
		AllowIPv4Host          = 0x0000000000000400,
		AllowIPv6Host          = 0x0000000000000800,
		AllowAnInternetHost    = 0x0000000000000E00,
		AllowAnyOtherHost      = 0x0000000000001000,
		FileLikeUri            = 0x0000000000002000,
		MailToLikeUri          = 0x0000000000004000,
		V1_UnknownUri          = 0x0000000000010000,
		SimpleUserSyntax       = 0x0000000000020000,
		BuiltInSyntax          = 0x0000000000040000,
		ParserSchemeOnly       = 0x0000000000080000,
		AllowDOSPath           = 0x0000000000100000,
		PathIsRooted           = 0x0000000000200000,
		ConvertPathSlashes     = 0x0000000000400000,
		CompressPath           = 0x0000000000800000,
		CanonicalizeAsFilePath = 0x0000000001000000,
		UnEscapeDotsAndSlashes = 0x0000000002000000,
		AllowIdn               = 0x0000000004000000,
		AllowIriParsing        = 0x0000000010000000
	};

	/**
	 * Enum System.System.IOOperation
	 */
	enum class IOOperation : int32_t
	{
		Read  = 0x0000000000000001,
		Write = 0x0000000000000002
	};

	/**
	 * Enum System.System.Text.RegularExpressions.RegexOptions
	 */
	enum class RegexOptions : int32_t
	{
		None                    = 0x0000000000000000,
		IgnoreCase              = 0x0000000000000001,
		Multiline               = 0x0000000000000002,
		ExplicitCapture         = 0x0000000000000004,
		Compiled                = 0x0000000000000008,
		Singleline              = 0x0000000000000010,
		IgnorePatternWhitespace = 0x0000000000000020,
		RightToLeft             = 0x0000000000000040,
		ECMAScript              = 0x0000000000000100,
		CultureInvariant        = 0x0000000000000200
	};

	/**
	 * Enum System.System.Diagnostics.SourceLevels
	 */
	enum class SourceLevels : int32_t
	{
		Off             = 0x0000000000000000,
		Critical        = 0x0000000000000001,
		Error           = 0x0000000000000003,
		Warning         = 0x0000000000000007,
		Information     = 0x000000000000000F,
		Verbose         = 0x000000000000001F,
		ActivityTracing = 0x000000000000FF00,
		All             = -1
	};

	/**
	 * Enum System.System.Diagnostics.TraceEventType
	 */
	enum class TraceEventType : int32_t
	{
		Critical    = 0x0000000000000001,
		Error       = 0x0000000000000002,
		Warning     = 0x0000000000000004,
		Information = 0x0000000000000008,
		Verbose     = 0x0000000000000010,
		Start       = 0x0000000000000100,
		Stop        = 0x0000000000000200,
		Suspend     = 0x0000000000000400,
		Resume      = 0x0000000000000800,
		Transfer    = 0x0000000000001000
	};

	/**
	 * Enum System.System.Diagnostics.TraceLevel
	 */
	enum class TraceLevel : int32_t
	{
		Off     = 0x0000000000000000,
		Error   = 0x0000000000000001,
		Warning = 0x0000000000000002,
		Info    = 0x0000000000000003,
		Verbose = 0x0000000000000004
	};

	/**
	 * Enum System.System.Diagnostics.TraceOptions
	 */
	enum class TraceOptions : int32_t
	{
		None                  = 0x0000000000000000,
		LogicalOperationStack = 0x0000000000000001,
		DateTime              = 0x0000000000000002,
		Timestamp             = 0x0000000000000004,
		ProcessId             = 0x0000000000000008,
		ThreadId              = 0x0000000000000010,
		Callstack             = 0x0000000000000020
	};

	/**
	 * Enum System.System.Diagnostics.Process+StreamReadMode
	 */
	enum class Process_StreamReadMode : int32_t
	{
		undefined = 0x0000000000000000,
		syncMode  = 0x0000000000000001,
		asyncMode = 0x0000000000000002
	};

	/**
	 * Enum System.System.Diagnostics.Process+State
	 */
	enum class Process_State : int32_t
	{
		HaveId            = 0x0000000000000001,
		IsLocal           = 0x0000000000000002,
		IsNt              = 0x0000000000000004,
		HaveProcessInfo   = 0x0000000000000008,
		Exited            = 0x0000000000000010,
		Associated        = 0x0000000000000020,
		IsWin2k           = 0x0000000000000040,
		HaveNtProcessInfo = 0x000000000000000C
	};

	/**
	 * Enum System.System.Diagnostics.ProcessPriorityClass
	 */
	enum class ProcessPriorityClass : int32_t
	{
		AboveNormal = 0x0000000000008000,
		BelowNormal = 0x0000000000004000,
		High        = 0x0000000000000080,
		Idle        = 0x0000000000000040,
		Normal      = 0x0000000000000020,
		RealTime    = 0x0000000000000100
	};

	/**
	 * Enum System.System.Diagnostics.ProcessWindowStyle
	 */
	enum class ProcessWindowStyle : int32_t
	{
		Hidden    = 0x0000000000000001,
		Maximized = 0x0000000000000003,
		Minimized = 0x0000000000000002,
		Normal    = 0x0000000000000000
	};

	/**
	 * Enum System.System.Diagnostics.ThreadPriorityLevel
	 */
	enum class ThreadPriorityLevel : int32_t
	{
		AboveNormal  = 0x0000000000000001,
		BelowNormal  = -1,
		Highest      = 0x0000000000000002,
		Idle         = -15,
		Lowest       = -2,
		Normal       = 0x0000000000000000,
		TimeCritical = 0x000000000000000F
	};

	/**
	 * Enum System.System.Diagnostics.ThreadState
	 */
	enum class ThreadState_1 : int32_t
	{
		Initialized = 0x0000000000000000,
		Ready       = 0x0000000000000001,
		Running     = 0x0000000000000002,
		Standby     = 0x0000000000000003,
		Terminated  = 0x0000000000000004,
		Transition  = 0x0000000000000006,
		Unknown     = 0x0000000000000007,
		Wait        = 0x0000000000000005
	};

	/**
	 * Enum System.System.Diagnostics.ThreadWaitReason
	 */
	enum class ThreadWaitReason : int32_t
	{
		EventPairHigh    = 0x0000000000000007,
		EventPairLow     = 0x0000000000000008,
		ExecutionDelay   = 0x0000000000000004,
		Executive        = 0x0000000000000000,
		FreePage         = 0x0000000000000001,
		LpcReceive       = 0x0000000000000009,
		LpcReply         = 0x000000000000000A,
		PageIn           = 0x0000000000000002,
		PageOut          = 0x000000000000000C,
		Suspended        = 0x0000000000000005,
		SystemAllocation = 0x0000000000000003,
		Unknown          = 0x000000000000000D,
		UserRequest      = 0x0000000000000006,
		VirtualMemory    = 0x000000000000000B
	};

	/**
	 * Enum System.System.Security.Authentication.SslProtocols
	 */
	enum class SslProtocols : int32_t
	{
		None    = 0x0000000000000000,
		Ssl2    = 0x000000000000000C,
		Ssl3    = 0x0000000000000030,
		Tls     = 0x00000000000000C0,
		Tls11   = 0x0000000000000300,
		Tls12   = 0x0000000000000C00,
		Tls13   = 0x0000000000003000,
		Default = 0x00000000000000F0
	};

	/**
	 * Enum System.System.Security.Authentication.ExtendedProtection.PolicyEnforcement
	 */
	enum class PolicyEnforcement : int32_t
	{
		Never         = 0x0000000000000000,
		WhenSupported = 0x0000000000000001,
		Always        = 0x0000000000000002
	};

	/**
	 * Enum System.System.Security.Cryptography.DerSequenceReader+DerTag
	 */
	enum class DerSequenceReader_DerTag : uint8_t
	{
		Boolean          = 0x0000000000000001,
		Integer          = 0x0000000000000002,
		BitString        = 0x0000000000000003,
		OctetString      = 0x0000000000000004,
		Null             = 0x0000000000000005,
		ObjectIdentifier = 0x0000000000000006,
		UTF8String       = 0x000000000000000C,
		Sequence         = 0x0000000000000010,
		Set              = 0x0000000000000011,
		PrintableString  = 0x0000000000000013,
		T61String        = 0x0000000000000014,
		IA5String        = 0x0000000000000016,
		UTCTime          = 0x0000000000000017,
		GeneralizedTime  = 0x0000000000000018,
		BMPString        = 0x000000000000001E
	};

	/**
	 * Enum System.System.Security.Cryptography.OidGroup
	 */
	enum class OidGroup : int32_t
	{
		All                   = 0x0000000000000000,
		HashAlgorithm         = 0x0000000000000001,
		EncryptionAlgorithm   = 0x0000000000000002,
		PublicKeyAlgorithm    = 0x0000000000000003,
		SignatureAlgorithm    = 0x0000000000000004,
		Attribute             = 0x0000000000000005,
		ExtensionOrAttribute  = 0x0000000000000006,
		EnhancedKeyUsage      = 0x0000000000000007,
		Policy                = 0x0000000000000008,
		Template              = 0x0000000000000009,
		KeyDerivationFunction = 0x000000000000000A
	};

	/**
	 * Enum System.System.Security.Cryptography.AsnDecodeStatus
	 */
	enum class AsnDecodeStatus : int32_t
	{
		NotDecoded              = -1,
		Ok                      = 0x0000000000000000,
		BadAsn                  = 0x0000000000000001,
		BadTag                  = 0x0000000000000002,
		BadLength               = 0x0000000000000003,
		InformationNotAvailable = 0x0000000000000004
	};

	/**
	 * Enum System.System.Security.Cryptography.X509Certificates.OpenFlags
	 */
	enum class OpenFlags : int32_t
	{
		ReadOnly         = 0x0000000000000000,
		ReadWrite        = 0x0000000000000001,
		MaxAllowed       = 0x0000000000000002,
		OpenExistingOnly = 0x0000000000000004,
		IncludeArchived  = 0x0000000000000008
	};

	/**
	 * Enum System.System.Security.Cryptography.X509Certificates.StoreLocation
	 */
	enum class StoreLocation : int32_t
	{
		CurrentUser  = 0x0000000000000001,
		LocalMachine = 0x0000000000000002
	};

	/**
	 * Enum System.System.Security.Cryptography.X509Certificates.StoreName
	 */
	enum class StoreName : int32_t
	{
		AddressBook          = 0x0000000000000001,
		AuthRoot             = 0x0000000000000002,
		CertificateAuthority = 0x0000000000000003,
		Disallowed           = 0x0000000000000004,
		My                   = 0x0000000000000005,
		Root                 = 0x0000000000000006,
		TrustedPeople        = 0x0000000000000007,
		TrustedPublisher     = 0x0000000000000008
	};

	/**
	 * Enum System.System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags
	 */
	enum class X500DistinguishedNameFlags : int32_t
	{
		None              = 0x0000000000000000,
		Reversed          = 0x0000000000000001,
		UseSemicolons     = 0x0000000000000010,
		DoNotUsePlusSign  = 0x0000000000000020,
		DoNotUseQuotes    = 0x0000000000000040,
		UseCommas         = 0x0000000000000080,
		UseNewLines       = 0x0000000000000100,
		UseUTF8Encoding   = 0x0000000000001000,
		UseT61Encoding    = 0x0000000000002000,
		ForceUTF8Encoding = 0x0000000000004000
	};

	/**
	 * Enum System.System.Security.Cryptography.X509Certificates.X509ChainStatusFlags
	 */
	enum class X509ChainStatusFlags : int32_t
	{
		NoError                          = 0x0000000000000000,
		NotTimeValid                     = 0x0000000000000001,
		NotTimeNested                    = 0x0000000000000002,
		Revoked                          = 0x0000000000000004,
		NotSignatureValid                = 0x0000000000000008,
		NotValidForUsage                 = 0x0000000000000010,
		UntrustedRoot                    = 0x0000000000000020,
		RevocationStatusUnknown          = 0x0000000000000040,
		Cyclic                           = 0x0000000000000080,
		InvalidExtension                 = 0x0000000000000100,
		InvalidPolicyConstraints         = 0x0000000000000200,
		InvalidBasicConstraints          = 0x0000000000000400,
		InvalidNameConstraints           = 0x0000000000000800,
		HasNotSupportedNameConstraint    = 0x0000000000001000,
		HasNotDefinedNameConstraint      = 0x0000000000002000,
		HasNotPermittedNameConstraint    = 0x0000000000004000,
		HasExcludedNameConstraint        = 0x0000000000008000,
		PartialChain                     = 0x0000000000010000,
		CtlNotTimeValid                  = 0x0000000000020000,
		CtlNotSignatureValid             = 0x0000000000040000,
		CtlNotValidForUsage              = 0x0000000000080000,
		OfflineRevocation                = 0x0000000001000000,
		NoIssuanceChainPolicy            = 0x0000000002000000,
		ExplicitDistrust                 = 0x0000000004000000,
		HasNotSupportedCriticalExtension = 0x0000000008000000,
		HasWeakSignature                 = 0x0000000000100000
	};

	/**
	 * Enum System.System.Security.Cryptography.X509Certificates.X509FindType
	 */
	enum class X509FindType : int32_t
	{
		FindByThumbprint               = 0x0000000000000000,
		FindBySubjectName              = 0x0000000000000001,
		FindBySubjectDistinguishedName = 0x0000000000000002,
		FindByIssuerName               = 0x0000000000000003,
		FindByIssuerDistinguishedName  = 0x0000000000000004,
		FindBySerialNumber             = 0x0000000000000005,
		FindByTimeValid                = 0x0000000000000006,
		FindByTimeNotYetValid          = 0x0000000000000007,
		FindByTimeExpired              = 0x0000000000000008,
		FindByTemplateName             = 0x0000000000000009,
		FindByApplicationPolicy        = 0x000000000000000A,
		FindByCertificatePolicy        = 0x000000000000000B,
		FindByExtension                = 0x000000000000000C,
		FindByKeyUsage                 = 0x000000000000000D,
		FindBySubjectKeyIdentifier     = 0x000000000000000E
	};

	/**
	 * Enum System.System.Security.Cryptography.X509Certificates.X509KeyUsageFlags
	 */
	enum class X509KeyUsageFlags : int32_t
	{
		None             = 0x0000000000000000,
		EncipherOnly     = 0x0000000000000001,
		CrlSign          = 0x0000000000000002,
		KeyCertSign      = 0x0000000000000004,
		KeyAgreement     = 0x0000000000000008,
		DataEncipherment = 0x0000000000000010,
		KeyEncipherment  = 0x0000000000000020,
		NonRepudiation   = 0x0000000000000040,
		DigitalSignature = 0x0000000000000080,
		DecipherOnly     = 0x0000000000008000
	};

	/**
	 * Enum System.System.Security.Cryptography.X509Certificates.X509NameType
	 */
	enum class X509NameType : int32_t
	{
		SimpleName             = 0x0000000000000000,
		EmailName              = 0x0000000000000001,
		UpnName                = 0x0000000000000002,
		DnsName                = 0x0000000000000003,
		DnsFromAlternativeName = 0x0000000000000004,
		UrlName                = 0x0000000000000005
	};

	/**
	 * Enum System.System.Security.Cryptography.X509Certificates.X509RevocationFlag
	 */
	enum class X509RevocationFlag : int32_t
	{
		EndCertificateOnly = 0x0000000000000000,
		EntireChain        = 0x0000000000000001,
		ExcludeRoot        = 0x0000000000000002
	};

	/**
	 * Enum System.System.Security.Cryptography.X509Certificates.X509RevocationMode
	 */
	enum class X509RevocationMode : int32_t
	{
		NoCheck = 0x0000000000000000,
		Online  = 0x0000000000000001,
		Offline = 0x0000000000000002
	};

	/**
	 * Enum System.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm
	 */
	enum class X509SubjectKeyIdentifierHashAlgorithm : int32_t
	{
		Sha1      = 0x0000000000000000,
		ShortSha1 = 0x0000000000000001,
		CapiSha1  = 0x0000000000000002
	};

	/**
	 * Enum System.System.Security.Cryptography.X509Certificates.X509VerificationFlags
	 */
	enum class X509VerificationFlags : int32_t
	{
		NoFlag                                      = 0x0000000000000000,
		IgnoreNotTimeValid                          = 0x0000000000000001,
		IgnoreCtlNotTimeValid                       = 0x0000000000000002,
		IgnoreNotTimeNested                         = 0x0000000000000004,
		IgnoreInvalidBasicConstraints               = 0x0000000000000008,
		AllowUnknownCertificateAuthority            = 0x0000000000000010,
		IgnoreWrongUsage                            = 0x0000000000000020,
		IgnoreInvalidName                           = 0x0000000000000040,
		IgnoreInvalidPolicy                         = 0x0000000000000080,
		IgnoreEndRevocationUnknown                  = 0x0000000000000100,
		IgnoreCtlSignerRevocationUnknown            = 0x0000000000000200,
		IgnoreCertificateAuthorityRevocationUnknown = 0x0000000000000400,
		IgnoreRootRevocationUnknown                 = 0x0000000000000800,
		AllFlags                                    = 0x0000000000000FFF
	};

	/**
	 * Enum System.System.Net.ContextAwareResult+StateFlags
	 */
	enum class ContextAwareResult_StateFlags : uint8_t
	{
		None                  = 0x0000000000000000,
		CaptureIdentity       = 0x0000000000000001,
		CaptureContext        = 0x0000000000000002,
		ThreadSafeContextCopy = 0x0000000000000004,
		PostBlockStarted      = 0x0000000000000008,
		PostBlockFinished     = 0x0000000000000010
	};

	/**
	 * Enum System.System.Net.HttpStatusCode
	 */
	enum class HttpStatusCode : int32_t
	{
		Continue                      = 0x0000000000000064,
		SwitchingProtocols            = 0x0000000000000065,
		Processing                    = 0x0000000000000066,
		EarlyHints                    = 0x0000000000000067,
		OK                            = 0x00000000000000C8,
		Created                       = 0x00000000000000C9,
		Accepted                      = 0x00000000000000CA,
		NonAuthoritativeInformation   = 0x00000000000000CB,
		NoContent                     = 0x00000000000000CC,
		ResetContent                  = 0x00000000000000CD,
		PartialContent                = 0x00000000000000CE,
		MultiStatus                   = 0x00000000000000CF,
		AlreadyReported               = 0x00000000000000D0,
		IMUsed                        = 0x00000000000000E2,
		MultipleChoices               = 0x000000000000012C,
		Ambiguous                     = 0x000000000000012C,
		MovedPermanently              = 0x000000000000012D,
		Moved                         = 0x000000000000012D,
		Found                         = 0x000000000000012E,
		Redirect                      = 0x000000000000012E,
		SeeOther                      = 0x000000000000012F,
		RedirectMethod                = 0x000000000000012F,
		NotModified                   = 0x0000000000000130,
		UseProxy                      = 0x0000000000000131,
		Unused                        = 0x0000000000000132,
		TemporaryRedirect             = 0x0000000000000133,
		RedirectKeepVerb              = 0x0000000000000133,
		PermanentRedirect             = 0x0000000000000134,
		BadRequest                    = 0x0000000000000190,
		Unauthorized                  = 0x0000000000000191,
		PaymentRequired               = 0x0000000000000192,
		Forbidden                     = 0x0000000000000193,
		NotFound                      = 0x0000000000000194,
		MethodNotAllowed              = 0x0000000000000195,
		NotAcceptable                 = 0x0000000000000196,
		ProxyAuthenticationRequired   = 0x0000000000000197,
		RequestTimeout                = 0x0000000000000198,
		Conflict                      = 0x0000000000000199,
		Gone                          = 0x000000000000019A,
		LengthRequired                = 0x000000000000019B,
		PreconditionFailed            = 0x000000000000019C,
		RequestEntityTooLarge         = 0x000000000000019D,
		RequestUriTooLong             = 0x000000000000019E,
		UnsupportedMediaType          = 0x000000000000019F,
		RequestedRangeNotSatisfiable  = 0x00000000000001A0,
		ExpectationFailed             = 0x00000000000001A1,
		MisdirectedRequest            = 0x00000000000001A5,
		UnprocessableEntity           = 0x00000000000001A6,
		Locked                        = 0x00000000000001A7,
		FailedDependency              = 0x00000000000001A8,
		UpgradeRequired               = 0x00000000000001AA,
		PreconditionRequired          = 0x00000000000001AC,
		TooManyRequests               = 0x00000000000001AD,
		RequestHeaderFieldsTooLarge   = 0x00000000000001AF,
		UnavailableForLegalReasons    = 0x00000000000001C3,
		InternalServerError           = 0x00000000000001F4,
		NotImplemented                = 0x00000000000001F5,
		BadGateway                    = 0x00000000000001F6,
		ServiceUnavailable            = 0x00000000000001F7,
		GatewayTimeout                = 0x00000000000001F8,
		HttpVersionNotSupported       = 0x00000000000001F9,
		VariantAlsoNegotiates         = 0x00000000000001FA,
		InsufficientStorage           = 0x00000000000001FB,
		LoopDetected                  = 0x00000000000001FC,
		NotExtended                   = 0x00000000000001FE,
		NetworkAuthenticationRequired = 0x00000000000001FF
	};

	/**
	 * Enum System.System.Net.CommandStream+PipelineInstruction
	 */
	enum class CommandStream_PipelineInstruction : int32_t
	{
		Abort      = 0x0000000000000000,
		Advance    = 0x0000000000000001,
		Pause      = 0x0000000000000002,
		Reread     = 0x0000000000000003,
		GiveStream = 0x0000000000000004
	};

	/**
	 * Enum System.System.Net.CommandStream+PipelineEntryFlags
	 */
	enum class CommandStream_PipelineEntryFlags : int32_t
	{
		UserCommand          = 0x0000000000000001,
		GiveDataStream       = 0x0000000000000002,
		CreateDataConnection = 0x0000000000000004,
		DontLogParameter     = 0x0000000000000008
	};

	/**
	 * Enum System.System.Net.FtpLoginState
	 */
	enum class FtpLoginState : uint8_t
	{
		NotLoggedIn             = 0x0000000000000000,
		LoggedIn                = 0x0000000000000001,
		LoggedInButNeedsRelogin = 0x0000000000000002,
		ReloginFailed           = 0x0000000000000003
	};

	/**
	 * Enum System.System.Net.FtpControlStream+GetPathOption
	 */
	enum class FtpControlStream_GetPathOption : int32_t
	{
		Normal           = 0x0000000000000000,
		AssumeFilename   = 0x0000000000000001,
		AssumeNoFilename = 0x0000000000000002
	};

	/**
	 * Enum System.System.Net.FtpOperation
	 */
	enum class FtpOperation : int32_t
	{
		DownloadFile          = 0x0000000000000000,
		ListDirectory         = 0x0000000000000001,
		ListDirectoryDetails  = 0x0000000000000002,
		UploadFile            = 0x0000000000000003,
		UploadFileUnique      = 0x0000000000000004,
		AppendFile            = 0x0000000000000005,
		DeleteFile            = 0x0000000000000006,
		GetDateTimestamp      = 0x0000000000000007,
		GetFileSize           = 0x0000000000000008,
		Rename                = 0x0000000000000009,
		MakeDirectory         = 0x000000000000000A,
		RemoveDirectory       = 0x000000000000000B,
		PrintWorkingDirectory = 0x000000000000000C,
		Other                 = 0x000000000000000D
	};

	/**
	 * Enum System.System.Net.FtpMethodFlags
	 */
	enum class FtpMethodFlags : int32_t
	{
		None                             = 0x0000000000000000,
		IsDownload                       = 0x0000000000000001,
		IsUpload                         = 0x0000000000000002,
		TakesParameter                   = 0x0000000000000004,
		MayTakeParameter                 = 0x0000000000000008,
		DoesNotTakeParameter             = 0x0000000000000010,
		ParameterIsDirectory             = 0x0000000000000020,
		ShouldParseForResponseUri        = 0x0000000000000040,
		HasHttpCommand                   = 0x0000000000000080,
		MustChangeWorkingDirectoryToPath = 0x0000000000000100
	};

	/**
	 * Enum System.System.Net.FtpWebRequest+RequestStage
	 */
	enum class FtpWebRequest_RequestStage : int32_t
	{
		CheckForError     = 0x0000000000000000,
		RequestStarted    = 0x0000000000000001,
		WriteReady        = 0x0000000000000002,
		ReadReady         = 0x0000000000000003,
		ReleaseConnection = 0x0000000000000004
	};

	/**
	 * Enum System.System.Net.SecurityProtocolType
	 */
	enum class SecurityProtocolType : int32_t
	{
		SystemDefault = 0x0000000000000000,
		Ssl3          = 0x0000000000000030,
		Tls           = 0x00000000000000C0,
		Tls11         = 0x0000000000000300,
		Tls12         = 0x0000000000000C00,
		Tls13         = 0x0000000000003000
	};

	/**
	 * Enum System.System.Net.AuthenticationSchemes
	 */
	enum class AuthenticationSchemes : int32_t
	{
		None                            = 0x0000000000000000,
		Digest                          = 0x0000000000000001,
		Negotiate                       = 0x0000000000000002,
		Ntlm                            = 0x0000000000000004,
		Basic                           = 0x0000000000000008,
		Anonymous                       = 0x0000000000008000,
		IntegratedWindowsAuthentication = 0x0000000000000006
	};

	/**
	 * Enum System.System.Net.FtpStatusCode
	 */
	enum class FtpStatusCode : int32_t
	{
		Undefined                           = 0x0000000000000000,
		RestartMarker                       = 0x000000000000006E,
		ServiceTemporarilyNotAvailable      = 0x0000000000000078,
		DataAlreadyOpen                     = 0x000000000000007D,
		OpeningData                         = 0x0000000000000096,
		CommandOK                           = 0x00000000000000C8,
		CommandExtraneous                   = 0x00000000000000CA,
		DirectoryStatus                     = 0x00000000000000D4,
		FileStatus                          = 0x00000000000000D5,
		SystemType                          = 0x00000000000000D7,
		SendUserCommand                     = 0x00000000000000DC,
		ClosingControl                      = 0x00000000000000DD,
		ClosingData                         = 0x00000000000000E2,
		EnteringPassive                     = 0x00000000000000E3,
		LoggedInProceed                     = 0x00000000000000E6,
		ServerWantsSecureSession            = 0x00000000000000EA,
		FileActionOK                        = 0x00000000000000FA,
		PathnameCreated                     = 0x0000000000000101,
		SendPasswordCommand                 = 0x000000000000014B,
		NeedLoginAccount                    = 0x000000000000014C,
		FileCommandPending                  = 0x000000000000015E,
		ServiceNotAvailable                 = 0x00000000000001A5,
		CantOpenData                        = 0x00000000000001A9,
		ConnectionClosed                    = 0x00000000000001AA,
		ActionNotTakenFileUnavailableOrBusy = 0x00000000000001C2,
		ActionAbortedLocalProcessingError   = 0x00000000000001C3,
		ActionNotTakenInsufficientSpace     = 0x00000000000001C4,
		CommandSyntaxError                  = 0x00000000000001F4,
		ArgumentSyntaxError                 = 0x00000000000001F5,
		CommandNotImplemented               = 0x00000000000001F6,
		BadCommandSequence                  = 0x00000000000001F7,
		NotLoggedIn                         = 0x0000000000000212,
		AccountNeeded                       = 0x0000000000000214,
		ActionNotTakenFileUnavailable       = 0x0000000000000226,
		ActionAbortedUnknownPageType        = 0x0000000000000227,
		FileActionAborted                   = 0x0000000000000228,
		ActionNotTakenFilenameNotAllowed    = 0x0000000000000229
	};

	/**
	 * Enum System.System.Net.HttpListenerRequestUriBuilder+ParsingResult
	 */
	enum class HttpListenerRequestUriBuilder_ParsingResult : int32_t
	{
		Success       = 0x0000000000000000,
		InvalidString = 0x0000000000000001,
		EncodingError = 0x0000000000000002
	};

	/**
	 * Enum System.System.Net.HttpListenerRequestUriBuilder+EncodingType
	 */
	enum class HttpListenerRequestUriBuilder_EncodingType : int32_t
	{
		Primary   = 0x0000000000000000,
		Secondary = 0x0000000000000001
	};

	/**
	 * Enum System.System.Net.HttpRequestHeader
	 */
	enum class HttpRequestHeader : int32_t
	{
		CacheControl       = 0x0000000000000000,
		Connection         = 0x0000000000000001,
		Date               = 0x0000000000000002,
		KeepAlive          = 0x0000000000000003,
		Pragma             = 0x0000000000000004,
		Trailer            = 0x0000000000000005,
		TransferEncoding   = 0x0000000000000006,
		Upgrade            = 0x0000000000000007,
		Via                = 0x0000000000000008,
		Warning            = 0x0000000000000009,
		Allow              = 0x000000000000000A,
		ContentLength      = 0x000000000000000B,
		ContentType        = 0x000000000000000C,
		ContentEncoding    = 0x000000000000000D,
		ContentLanguage    = 0x000000000000000E,
		ContentLocation    = 0x000000000000000F,
		ContentMd5         = 0x0000000000000010,
		ContentRange       = 0x0000000000000011,
		Expires            = 0x0000000000000012,
		LastModified       = 0x0000000000000013,
		Accept             = 0x0000000000000014,
		AcceptCharset      = 0x0000000000000015,
		AcceptEncoding     = 0x0000000000000016,
		AcceptLanguage     = 0x0000000000000017,
		Authorization      = 0x0000000000000018,
		Cookie             = 0x0000000000000019,
		Expect             = 0x000000000000001A,
		From               = 0x000000000000001B,
		Host               = 0x000000000000001C,
		IfMatch            = 0x000000000000001D,
		IfModifiedSince    = 0x000000000000001E,
		IfNoneMatch        = 0x000000000000001F,
		IfRange            = 0x0000000000000020,
		IfUnmodifiedSince  = 0x0000000000000021,
		MaxForwards        = 0x0000000000000022,
		ProxyAuthorization = 0x0000000000000023,
		Referer            = 0x0000000000000024,
		Range              = 0x0000000000000025,
		Te                 = 0x0000000000000026,
		Translate          = 0x0000000000000027,
		UserAgent          = 0x0000000000000028
	};

	/**
	 * Enum System.System.Net.TriState
	 */
	enum class TriState : int32_t
	{
		Unspecified = -1,
		False       = 0x0000000000000000,
		True        = 0x0000000000000001
	};

	/**
	 * Enum System.System.Net.WebExceptionInternalStatus
	 */
	enum class WebExceptionInternalStatus : int32_t
	{
		RequestFatal      = 0x0000000000000000,
		ServicePointFatal = 0x0000000000000001,
		Recoverable       = 0x0000000000000002,
		Isolated          = 0x0000000000000003
	};

	/**
	 * Enum System.System.Net.WebExceptionStatus
	 */
	enum class WebExceptionStatus : int32_t
	{
		Success                        = 0x0000000000000000,
		NameResolutionFailure          = 0x0000000000000001,
		ConnectFailure                 = 0x0000000000000002,
		ReceiveFailure                 = 0x0000000000000003,
		SendFailure                    = 0x0000000000000004,
		PipelineFailure                = 0x0000000000000005,
		RequestCanceled                = 0x0000000000000006,
		ProtocolError                  = 0x0000000000000007,
		ConnectionClosed               = 0x0000000000000008,
		TrustFailure                   = 0x0000000000000009,
		SecureChannelFailure           = 0x000000000000000A,
		ServerProtocolViolation        = 0x000000000000000B,
		KeepAliveFailure               = 0x000000000000000C,
		Pending                        = 0x000000000000000D,
		Timeout                        = 0x000000000000000E,
		ProxyNameResolutionFailure     = 0x000000000000000F,
		UnknownError                   = 0x0000000000000010,
		MessageLengthLimitExceeded     = 0x0000000000000011,
		CacheEntryNotFound             = 0x0000000000000012,
		RequestProhibitedByCachePolicy = 0x0000000000000013,
		RequestProhibitedByProxy       = 0x0000000000000014
	};

	/**
	 * Enum System.System.Net.WebHeaderCollectionType
	 */
	enum class WebHeaderCollectionType : uint16_t
	{
		Unknown              = 0x0000000000000000,
		WebRequest           = 0x0000000000000001,
		WebResponse          = 0x0000000000000002,
		HttpWebRequest       = 0x0000000000000003,
		HttpWebResponse      = 0x0000000000000004,
		HttpListenerRequest  = 0x0000000000000005,
		HttpListenerResponse = 0x0000000000000006,
		FtpWebRequest        = 0x0000000000000007,
		FtpWebResponse       = 0x0000000000000008,
		FileWebRequest       = 0x0000000000000009,
		FileWebResponse      = 0x000000000000000A
	};

	/**
	 * Enum System.System.Net.WebHeaderCollection+RfcChar
	 */
	enum class WebHeaderCollection_RfcChar : uint8_t
	{
		High  = 0x0000000000000000,
		Reg   = 0x0000000000000001,
		Ctl   = 0x0000000000000002,
		CR    = 0x0000000000000003,
		LF    = 0x0000000000000004,
		WS    = 0x0000000000000005,
		Colon = 0x0000000000000006,
		Delim = 0x0000000000000007
	};

	/**
	 * Enum System.System.Net.CloseExState
	 */
	enum class CloseExState : int32_t
	{
		Normal = 0x0000000000000000,
		Abort  = 0x0000000000000001,
		Silent = 0x0000000000000002
	};

	/**
	 * Enum System.System.Net.TimerThread.TimerNode+TimerState
	 */
	enum class TimerThread_TimerNode_TimerState : int32_t
	{
		Ready     = 0x0000000000000000,
		Fired     = 0x0000000000000001,
		Cancelled = 0x0000000000000002,
		Sentinel  = 0x0000000000000003
	};

	/**
	 * Enum System.System.Net.CookieVariant
	 */
	enum class CookieVariant : int32_t
	{
		Unknown = 0x0000000000000000,
		Plain   = 0x0000000000000001,
		Rfc2109 = 0x0000000000000002,
		Rfc2965 = 0x0000000000000003,
		Default = 0x0000000000000002
	};

	/**
	 * Enum System.System.Net.CookieToken
	 */
	enum class CookieToken : int32_t
	{
		Nothing       = 0x0000000000000000,
		NameValuePair = 0x0000000000000001,
		Attribute     = 0x0000000000000002,
		EndToken      = 0x0000000000000003,
		EndCookie     = 0x0000000000000004,
		End           = 0x0000000000000005,
		Equals        = 0x0000000000000006,
		Comment       = 0x0000000000000007,
		CommentUrl    = 0x0000000000000008,
		CookieName    = 0x0000000000000009,
		Discard       = 0x000000000000000A,
		Domain        = 0x000000000000000B,
		Expires       = 0x000000000000000C,
		MaxAge        = 0x000000000000000D,
		Path          = 0x000000000000000E,
		Port          = 0x000000000000000F,
		Secure        = 0x0000000000000010,
		HttpOnly      = 0x0000000000000011,
		Unknown       = 0x0000000000000012,
		Version       = 0x0000000000000013
	};

	/**
	 * Enum System.System.Net.CookieCollection+Stamp
	 */
	enum class CookieCollection_Stamp : int32_t
	{
		Check        = 0x0000000000000000,
		Set          = 0x0000000000000001,
		SetToUnused  = 0x0000000000000002,
		SetToMaxUsed = 0x0000000000000003
	};

	/**
	 * Enum System.System.Net.ContentDecodeStream+Mode
	 */
	enum class ContentDecodeStream_Mode : int32_t
	{
		GZip    = 0x0000000000000000,
		Deflate = 0x0000000000000001
	};

	/**
	 * Enum System.System.Net.DecompressionMethods
	 */
	enum class DecompressionMethods : int32_t
	{
		None    = 0x0000000000000000,
		GZip    = 0x0000000000000001,
		Deflate = 0x0000000000000002
	};

	/**
	 * Enum System.System.Net.HttpConnection+InputState
	 */
	enum class HttpConnection_InputState : int32_t
	{
		RequestLine = 0x0000000000000000,
		Headers     = 0x0000000000000001
	};

	/**
	 * Enum System.System.Net.HttpConnection+LineState
	 */
	enum class HttpConnection_LineState : int32_t
	{
		None = 0x0000000000000000,
		CR   = 0x0000000000000001,
		LF   = 0x0000000000000002
	};

	/**
	 * Enum System.System.Net.HttpWebRequest+NtlmAuthState
	 */
	enum class HttpWebRequest_NtlmAuthState : int32_t
	{
		None      = 0x0000000000000000,
		Challenge = 0x0000000000000001,
		Response  = 0x0000000000000002
	};

	/**
	 * Enum System.System.Net.MonoChunkParser+State
	 */
	enum class MonoChunkParser_State : int32_t
	{
		None         = 0x0000000000000000,
		PartialSize  = 0x0000000000000001,
		Body         = 0x0000000000000002,
		BodyFinished = 0x0000000000000003,
		Trailer      = 0x0000000000000004
	};

	/**
	 * Enum System.System.Net.WebCompletionSource+Status<T>
	 */
	enum class WebCompletionSource_Status_T : int32_t
	{
		Running   = 0x0000000000000000,
		Completed = 0x0000000000000001,
		Canceled  = 0x0000000000000002,
		Faulted   = 0x0000000000000003
	};

	/**
	 * Enum System.System.Net.ReadState
	 */
	enum class ReadState : int32_t
	{
		None    = 0x0000000000000000,
		Status  = 0x0000000000000001,
		Headers = 0x0000000000000002,
		Content = 0x0000000000000003,
		Aborted = 0x0000000000000004
	};

	/**
	 * Enum System.System.Net.WebConnectionTunnel+NtlmAuthState
	 */
	enum class WebConnectionTunnel_NtlmAuthState : int32_t
	{
		None      = 0x0000000000000000,
		Challenge = 0x0000000000000001,
		Response  = 0x0000000000000002
	};

	/**
	 * Enum System.System.Net.NetworkInformation.NetworkInterfaceComponent
	 */
	enum class NetworkInterfaceComponent : int32_t
	{
		IPv4 = 0x0000000000000000,
		IPv6 = 0x0000000000000001
	};

	/**
	 * Enum System.System.Net.NetworkInformation.NetBiosNodeType
	 */
	enum class NetBiosNodeType : int32_t
	{
		Unknown   = 0x0000000000000000,
		Broadcast = 0x0000000000000001,
		Peer2Peer = 0x0000000000000002,
		Mixed     = 0x0000000000000004,
		Hybrid    = 0x0000000000000008
	};

	/**
	 * Enum System.System.Net.Configuration.UnicodeDecodingConformance
	 */
	enum class UnicodeDecodingConformance : int32_t
	{
		Auto   = 0x0000000000000000,
		Strict = 0x0000000000000001,
		Compat = 0x0000000000000002,
		Loose  = 0x0000000000000003
	};

	/**
	 * Enum System.System.Net.Configuration.UnicodeEncodingConformance
	 */
	enum class UnicodeEncodingConformance : int32_t
	{
		Auto   = 0x0000000000000000,
		Strict = 0x0000000000000001,
		Compat = 0x0000000000000002
	};

	/**
	 * Enum System.System.Net.Cache.RequestCacheLevel
	 */
	enum class RequestCacheLevel : int32_t
	{
		Default          = 0x0000000000000000,
		BypassCache      = 0x0000000000000001,
		CacheOnly        = 0x0000000000000002,
		CacheIfAvailable = 0x0000000000000003,
		Revalidate       = 0x0000000000000004,
		Reload           = 0x0000000000000005,
		NoCacheNoStore   = 0x0000000000000006
	};

	/**
	 * Enum System.System.Net.Cache.HttpRequestCacheLevel
	 */
	enum class HttpRequestCacheLevel : int32_t
	{
		Default              = 0x0000000000000000,
		BypassCache          = 0x0000000000000001,
		CacheOnly            = 0x0000000000000002,
		CacheIfAvailable     = 0x0000000000000003,
		Revalidate           = 0x0000000000000004,
		Reload               = 0x0000000000000005,
		NoCacheNoStore       = 0x0000000000000006,
		CacheOrNextCacheOnly = 0x0000000000000007,
		Refresh              = 0x0000000000000008
	};

	/**
	 * Enum System.System.Net.Sockets.AddressFamily
	 */
	enum class AddressFamily : int32_t
	{
		Unknown          = -1,
		Unspecified      = 0x0000000000000000,
		Unix             = 0x0000000000000001,
		InterNetwork     = 0x0000000000000002,
		ImpLink          = 0x0000000000000003,
		Pup              = 0x0000000000000004,
		Chaos            = 0x0000000000000005,
		NS               = 0x0000000000000006,
		Ipx              = 0x0000000000000006,
		Iso              = 0x0000000000000007,
		Osi              = 0x0000000000000007,
		Ecma             = 0x0000000000000008,
		DataKit          = 0x0000000000000009,
		Ccitt            = 0x000000000000000A,
		Sna              = 0x000000000000000B,
		DecNet           = 0x000000000000000C,
		DataLink         = 0x000000000000000D,
		Lat              = 0x000000000000000E,
		HyperChannel     = 0x000000000000000F,
		AppleTalk        = 0x0000000000000010,
		NetBios          = 0x0000000000000011,
		VoiceView        = 0x0000000000000012,
		FireFox          = 0x0000000000000013,
		Banyan           = 0x0000000000000015,
		Atm              = 0x0000000000000016,
		InterNetworkV6   = 0x0000000000000017,
		Cluster          = 0x0000000000000018,
		Ieee12844        = 0x0000000000000019,
		Irda             = 0x000000000000001A,
		NetworkDesigners = 0x000000000000001C,
		Max              = 0x000000000000001D
	};

	/**
	 * Enum System.System.Net.Sockets.IOControlCode
	 */
	enum class IOControlCode : int64_t
	{
		AsyncIO                           = 0x000000008004667D,
		NonBlockingIO                     = 0x000000008004667E,
		DataToRead                        = 0x000000004004667F,
		OobDataRead                       = 0x0000000040047307,
		AssociateHandle                   = 0x0000000088000001,
		EnableCircularQueuing             = 0x0000000028000002,
		Flush                             = 0x0000000028000004,
		GetBroadcastAddress               = 0x0000000048000005,
		GetExtensionFunctionPointer       = 0x00000000C8000006,
		GetQos                            = 0x00000000C8000007,
		GetGroupQos                       = 0x00000000C8000008,
		MultipointLoopback                = 0x0000000088000009,
		MulticastScope                    = 0x000000008800000A,
		SetQos                            = 0x000000008800000B,
		SetGroupQos                       = 0x000000008800000C,
		TranslateHandle                   = 0x00000000C800000D,
		RoutingInterfaceQuery             = 0x00000000C8000014,
		RoutingInterfaceChange            = 0x0000000088000015,
		AddressListQuery                  = 0x0000000048000016,
		AddressListChange                 = 0x0000000028000017,
		QueryTargetPnpHandle              = 0x0000000048000018,
		NamespaceChange                   = 0x0000000088000019,
		AddressListSort                   = 0x00000000C8000019,
		ReceiveAll                        = 0x0000000098000001,
		ReceiveAllMulticast               = 0x0000000098000002,
		ReceiveAllIgmpMulticast           = 0x0000000098000003,
		KeepAliveValues                   = 0x0000000098000004,
		AbsorbRouterAlert                 = 0x0000000098000005,
		UnicastInterface                  = 0x0000000098000006,
		LimitBroadcasts                   = 0x0000000098000007,
		BindToInterface                   = 0x0000000098000008,
		MulticastInterface                = 0x0000000098000009,
		AddMulticastGroupOnInterface      = 0x000000009800000A,
		DeleteMulticastGroupFromInterface = 0x000000009800000B
	};

	/**
	 * Enum System.System.Net.Sockets.IPProtectionLevel
	 */
	enum class IPProtectionLevel : int32_t
	{
		Unspecified    = -1,
		Unrestricted   = 0x000000000000000A,
		EdgeRestricted = 0x0000000000000014,
		Restricted     = 0x000000000000001E
	};

	/**
	 * Enum System.System.Net.Sockets.ProtocolType
	 */
	enum class ProtocolType : int32_t
	{
		IP                                = 0x0000000000000000,
		IPv6HopByHopOptions               = 0x0000000000000000,
		Icmp                              = 0x0000000000000001,
		Igmp                              = 0x0000000000000002,
		Ggp                               = 0x0000000000000003,
		IPv4                              = 0x0000000000000004,
		Tcp                               = 0x0000000000000006,
		Pup                               = 0x000000000000000C,
		Udp                               = 0x0000000000000011,
		Idp                               = 0x0000000000000016,
		IPv6                              = 0x0000000000000029,
		IPv6RoutingHeader                 = 0x000000000000002B,
		IPv6FragmentHeader                = 0x000000000000002C,
		IPSecEncapsulatingSecurityPayload = 0x0000000000000032,
		IPSecAuthenticationHeader         = 0x0000000000000033,
		IcmpV6                            = 0x000000000000003A,
		IPv6NoNextHeader                  = 0x000000000000003B,
		IPv6DestinationOptions            = 0x000000000000003C,
		ND                                = 0x000000000000004D,
		Raw                               = 0x00000000000000FF,
		Unspecified                       = 0x0000000000000000,
		Ipx                               = 0x00000000000003E8,
		Spx                               = 0x00000000000004E8,
		SpxII                             = 0x00000000000004E9,
		Unknown                           = -1
	};

	/**
	 * Enum System.System.Net.Sockets.SelectMode
	 */
	enum class SelectMode : int32_t
	{
		SelectRead  = 0x0000000000000000,
		SelectWrite = 0x0000000000000001,
		SelectError = 0x0000000000000002
	};

	/**
	 * Enum System.System.Net.Sockets.SocketAsyncOperation
	 */
	enum class SocketAsyncOperation : int32_t
	{
		None               = 0x0000000000000000,
		Accept             = 0x0000000000000001,
		Connect            = 0x0000000000000002,
		Disconnect         = 0x0000000000000003,
		Receive            = 0x0000000000000004,
		ReceiveFrom        = 0x0000000000000005,
		ReceiveMessageFrom = 0x0000000000000006,
		Send               = 0x0000000000000007,
		SendPackets        = 0x0000000000000008,
		SendTo             = 0x0000000000000009
	};

	/**
	 * Enum System.System.Net.Sockets.SocketError
	 */
	enum class SocketError : int32_t
	{
		Success                    = 0x0000000000000000,
		SocketError                = -1,
		Interrupted                = 0x0000000000002714,
		AccessDenied               = 0x000000000000271D,
		Fault                      = 0x000000000000271E,
		InvalidArgument            = 0x0000000000002726,
		TooManyOpenSockets         = 0x0000000000002728,
		WouldBlock                 = 0x0000000000002733,
		InProgress                 = 0x0000000000002734,
		AlreadyInProgress          = 0x0000000000002735,
		NotSocket                  = 0x0000000000002736,
		DestinationAddressRequired = 0x0000000000002737,
		MessageSize                = 0x0000000000002738,
		ProtocolType               = 0x0000000000002739,
		ProtocolOption             = 0x000000000000273A,
		ProtocolNotSupported       = 0x000000000000273B,
		SocketNotSupported         = 0x000000000000273C,
		OperationNotSupported      = 0x000000000000273D,
		ProtocolFamilyNotSupported = 0x000000000000273E,
		AddressFamilyNotSupported  = 0x000000000000273F,
		AddressAlreadyInUse        = 0x0000000000002740,
		AddressNotAvailable        = 0x0000000000002741,
		NetworkDown                = 0x0000000000002742,
		NetworkUnreachable         = 0x0000000000002743,
		NetworkReset               = 0x0000000000002744,
		ConnectionAborted          = 0x0000000000002745,
		ConnectionReset            = 0x0000000000002746,
		NoBufferSpaceAvailable     = 0x0000000000002747,
		IsConnected                = 0x0000000000002748,
		NotConnected               = 0x0000000000002749,
		Shutdown                   = 0x000000000000274A,
		TimedOut                   = 0x000000000000274C,
		ConnectionRefused          = 0x000000000000274D,
		HostDown                   = 0x0000000000002750,
		HostUnreachable            = 0x0000000000002751,
		ProcessLimit               = 0x0000000000002753,
		SystemNotReady             = 0x000000000000276B,
		VersionNotSupported        = 0x000000000000276C,
		NotInitialized             = 0x000000000000276D,
		Disconnecting              = 0x0000000000002775,
		TypeNotFound               = 0x000000000000277D,
		HostNotFound               = 0x0000000000002AF9,
		TryAgain                   = 0x0000000000002AFA,
		NoRecovery                 = 0x0000000000002AFB,
		NoData                     = 0x0000000000002AFC,
		IOPending                  = 0x00000000000003E5,
		OperationAborted           = 0x00000000000003E3
	};

	/**
	 * Enum System.System.Net.Sockets.SocketFlags
	 */
	enum class SocketFlags : int32_t
	{
		None                 = 0x0000000000000000,
		OutOfBand            = 0x0000000000000001,
		Peek                 = 0x0000000000000002,
		DontRoute            = 0x0000000000000004,
		MaxIOVectorLength    = 0x0000000000000010,
		Truncated            = 0x0000000000000100,
		ControlDataTruncated = 0x0000000000000200,
		Broadcast            = 0x0000000000000400,
		Multicast            = 0x0000000000000800,
		Partial              = 0x0000000000008000
	};

	/**
	 * Enum System.System.Net.Sockets.SocketOptionLevel
	 */
	enum class SocketOptionLevel : int32_t
	{
		Socket = 0x000000000000FFFF,
		IP     = 0x0000000000000000,
		IPv6   = 0x0000000000000029,
		Tcp    = 0x0000000000000006,
		Udp    = 0x0000000000000011
	};

	/**
	 * Enum System.System.Net.Sockets.SocketOptionName
	 */
	enum class SocketOptionName : int32_t
	{
		Debug                = 0x0000000000000001,
		AcceptConnection     = 0x0000000000000002,
		ReuseAddress         = 0x0000000000000004,
		KeepAlive            = 0x0000000000000008,
		DontRoute            = 0x0000000000000010,
		Broadcast            = 0x0000000000000020,
		UseLoopback          = 0x0000000000000040,
		Linger               = 0x0000000000000080,
		OutOfBandInline      = 0x0000000000000100,
		DontLinger           = -129,
		ExclusiveAddressUse  = -5,
		SendBuffer           = 0x0000000000001001,
		ReceiveBuffer        = 0x0000000000001002,
		SendLowWater         = 0x0000000000001003,
		ReceiveLowWater      = 0x0000000000001004,
		SendTimeout          = 0x0000000000001005,
		ReceiveTimeout       = 0x0000000000001006,
		Error                = 0x0000000000001007,
		Type                 = 0x0000000000001008,
		ReuseUnicastPort     = 0x0000000000003007,
		MaxConnections       = 0x000000007FFFFFFF,
		IPOptions            = 0x0000000000000001,
		HeaderIncluded       = 0x0000000000000002,
		TypeOfService        = 0x0000000000000003,
		IpTimeToLive         = 0x0000000000000004,
		MulticastInterface   = 0x0000000000000009,
		MulticastTimeToLive  = 0x000000000000000A,
		MulticastLoopback    = 0x000000000000000B,
		AddMembership        = 0x000000000000000C,
		DropMembership       = 0x000000000000000D,
		DontFragment         = 0x000000000000000E,
		AddSourceMembership  = 0x000000000000000F,
		DropSourceMembership = 0x0000000000000010,
		BlockSource          = 0x0000000000000011,
		UnblockSource        = 0x0000000000000012,
		PacketInformation    = 0x0000000000000013,
		HopLimit             = 0x0000000000000015,
		IPProtectionLevel    = 0x0000000000000017,
		IPv6Only             = 0x000000000000001B,
		NoDelay              = 0x0000000000000001,
		BsdUrgent            = 0x0000000000000002,
		Expedited            = 0x0000000000000002,
		NoChecksum           = 0x0000000000000001,
		ChecksumCoverage     = 0x0000000000000014,
		UpdateAcceptContext  = 0x000000000000700B,
		UpdateConnectContext = 0x0000000000007010
	};

	/**
	 * Enum System.System.Net.Sockets.SocketShutdown
	 */
	enum class SocketShutdown : int32_t
	{
		Receive = 0x0000000000000000,
		Send    = 0x0000000000000001,
		Both    = 0x0000000000000002
	};

	/**
	 * Enum System.System.Net.Sockets.SocketType
	 */
	enum class SocketType : int32_t
	{
		Stream    = 0x0000000000000001,
		Dgram     = 0x0000000000000002,
		Raw       = 0x0000000000000003,
		Rdm       = 0x0000000000000004,
		Seqpacket = 0x0000000000000005,
		Unknown   = -1
	};

	/**
	 * Enum System.System.Net.Sockets.SocketOperation
	 */
	enum class SocketOperation : int32_t
	{
		Accept           = 0x0000000000000000,
		Connect          = 0x0000000000000001,
		Receive          = 0x0000000000000002,
		ReceiveFrom      = 0x0000000000000003,
		Send             = 0x0000000000000004,
		SendTo           = 0x0000000000000005,
		RecvJustCallback = 0x0000000000000006,
		SendJustCallback = 0x0000000000000007,
		Disconnect       = 0x0000000000000008,
		AcceptReceive    = 0x0000000000000009,
		ReceiveGeneric   = 0x000000000000000A,
		SendGeneric      = 0x000000000000000B
	};

	/**
	 * Enum System.System.Net.WebSockets.ManagedWebSocket+MessageOpcode
	 */
	enum class ManagedWebSocket_MessageOpcode : uint8_t
	{
		Continuation = 0x0000000000000000,
		Text         = 0x0000000000000001,
		Binary       = 0x0000000000000002,
		Close        = 0x0000000000000008,
		Ping         = 0x0000000000000009,
		Pong         = 0x000000000000000A
	};

	/**
	 * Enum System.System.Net.WebSockets.ClientWebSocket+InternalState
	 */
	enum class ClientWebSocket_InternalState : int32_t
	{
		Created    = 0x0000000000000000,
		Connecting = 0x0000000000000001,
		Connected  = 0x0000000000000002,
		Disposed   = 0x0000000000000003
	};

	/**
	 * Enum System.System.Net.WebSockets.WebSocketCloseStatus
	 */
	enum class WebSocketCloseStatus : int32_t
	{
		NormalClosure       = 0x00000000000003E8,
		EndpointUnavailable = 0x00000000000003E9,
		ProtocolError       = 0x00000000000003EA,
		InvalidMessageType  = 0x00000000000003EB,
		Empty               = 0x00000000000003ED,
		InvalidPayloadData  = 0x00000000000003EF,
		PolicyViolation     = 0x00000000000003F0,
		MessageTooBig       = 0x00000000000003F1,
		MandatoryExtension  = 0x00000000000003F2,
		InternalServerError = 0x00000000000003F3
	};

	/**
	 * Enum System.System.Net.WebSockets.WebSocketError
	 */
	enum class WebSocketError : int32_t
	{
		Success                     = 0x0000000000000000,
		InvalidMessageType          = 0x0000000000000001,
		Faulted                     = 0x0000000000000002,
		NativeError                 = 0x0000000000000003,
		NotAWebSocket               = 0x0000000000000004,
		UnsupportedVersion          = 0x0000000000000005,
		UnsupportedProtocol         = 0x0000000000000006,
		HeaderError                 = 0x0000000000000007,
		ConnectionClosedPrematurely = 0x0000000000000008,
		InvalidState                = 0x0000000000000009
	};

	/**
	 * Enum System.System.Net.WebSockets.WebSocketMessageType
	 */
	enum class WebSocketMessageType : int32_t
	{
		Text   = 0x0000000000000000,
		Binary = 0x0000000000000001,
		Close  = 0x0000000000000002
	};

	/**
	 * Enum System.System.Net.WebSockets.WebSocketState
	 */
	enum class WebSocketState : int32_t
	{
		None          = 0x0000000000000000,
		Connecting    = 0x0000000000000001,
		Open          = 0x0000000000000002,
		CloseSent     = 0x0000000000000003,
		CloseReceived = 0x0000000000000004,
		Closed        = 0x0000000000000005,
		Aborted       = 0x0000000000000006
	};

	/**
	 * Enum System.System.Net.Mail.SmtpDeliveryFormat
	 */
	enum class SmtpDeliveryFormat : int32_t
	{
		SevenBit      = 0x0000000000000000,
		International = 0x0000000000000001
	};

	/**
	 * Enum System.System.Net.Mail.SmtpDeliveryMethod
	 */
	enum class SmtpDeliveryMethod : int32_t
	{
		Network                  = 0x0000000000000000,
		SpecifiedPickupDirectory = 0x0000000000000001,
		PickupDirectoryFromIis   = 0x0000000000000002
	};

	/**
	 * Enum System.System.Net.Security.AuthenticationLevel
	 */
	enum class AuthenticationLevel : int32_t
	{
		None                = 0x0000000000000000,
		MutualAuthRequested = 0x0000000000000001,
		MutualAuthRequired  = 0x0000000000000002
	};

	/**
	 * Enum System.System.Net.Security.EncryptionPolicy
	 */
	enum class EncryptionPolicy : int32_t
	{
		RequireEncryption = 0x0000000000000000,
		AllowNoEncryption = 0x0000000000000001,
		NoEncryption      = 0x0000000000000002
	};

	/**
	 * Enum System.System.Net.Security.SslPolicyErrors
	 */
	enum class SslPolicyErrors : int32_t
	{
		None                          = 0x0000000000000000,
		RemoteCertificateNotAvailable = 0x0000000000000001,
		RemoteCertificateNameMismatch = 0x0000000000000002,
		RemoteCertificateChainErrors  = 0x0000000000000004
	};

	/**
	 * Enum System.System.ComponentModel.EditorBrowsableState
	 */
	enum class EditorBrowsableState : int32_t
	{
		Always   = 0x0000000000000000,
		Never    = 0x0000000000000001,
		Advanced = 0x0000000000000002
	};

	/**
	 * Enum System.System.ComponentModel.DesignerSerializationVisibility
	 */
	enum class DesignerSerializationVisibility : int32_t
	{
		Hidden  = 0x0000000000000000,
		Visible = 0x0000000000000001,
		Content = 0x0000000000000002
	};

	/**
	 * Enum System.System.ComponentModel.BindableSupport
	 */
	enum class BindableSupport : int32_t
	{
		No      = 0x0000000000000000,
		Yes     = 0x0000000000000001,
		Default = 0x0000000000000002
	};

	/**
	 * Enum System.System.ComponentModel.BindingDirection
	 */
	enum class BindingDirection : int32_t
	{
		OneWay = 0x0000000000000000,
		TwoWay = 0x0000000000000001
	};

	/**
	 * Enum System.System.ComponentModel.CollectionChangeAction
	 */
	enum class CollectionChangeAction : int32_t
	{
		Add     = 0x0000000000000001,
		Remove  = 0x0000000000000002,
		Refresh = 0x0000000000000003
	};

	/**
	 * Enum System.System.ComponentModel.DataObjectMethodType
	 */
	enum class DataObjectMethodType : int32_t
	{
		Fill   = 0x0000000000000000,
		Select = 0x0000000000000001,
		Update = 0x0000000000000002,
		Insert = 0x0000000000000003,
		Delete = 0x0000000000000004
	};

	/**
	 * Enum System.System.ComponentModel.InheritanceLevel
	 */
	enum class InheritanceLevel : int32_t
	{
		Inherited         = 0x0000000000000001,
		InheritedReadOnly = 0x0000000000000002,
		NotInherited      = 0x0000000000000003
	};

	/**
	 * Enum System.System.ComponentModel.PropertyTabScope
	 */
	enum class PropertyTabScope : int32_t
	{
		Static    = 0x0000000000000000,
		Global    = 0x0000000000000001,
		Document  = 0x0000000000000002,
		Component = 0x0000000000000003
	};

	/**
	 * Enum System.System.ComponentModel.LicenseUsageMode
	 */
	enum class LicenseUsageMode : int32_t
	{
		Runtime    = 0x0000000000000000,
		Designtime = 0x0000000000000001
	};

	/**
	 * Enum System.System.ComponentModel.ListChangedType
	 */
	enum class ListChangedType : int32_t
	{
		Reset                     = 0x0000000000000000,
		ItemAdded                 = 0x0000000000000001,
		ItemDeleted               = 0x0000000000000002,
		ItemMoved                 = 0x0000000000000003,
		ItemChanged               = 0x0000000000000004,
		PropertyDescriptorAdded   = 0x0000000000000005,
		PropertyDescriptorDeleted = 0x0000000000000006,
		PropertyDescriptorChanged = 0x0000000000000007
	};

	/**
	 * Enum System.System.ComponentModel.ListSortDirection
	 */
	enum class ListSortDirection : int32_t
	{
		Ascending  = 0x0000000000000000,
		Descending = 0x0000000000000001
	};

	/**
	 * Enum System.System.ComponentModel.MaskedTextProvider+CaseConversion
	 */
	enum class MaskedTextProvider_CaseConversion : int32_t
	{
		None    = 0x0000000000000000,
		ToLower = 0x0000000000000001,
		ToUpper = 0x0000000000000002
	};

	/**
	 * Enum System.System.ComponentModel.MaskedTextProvider+CharType
	 */
	enum class MaskedTextProvider_CharType : int32_t
	{
		EditOptional = 0x0000000000000001,
		EditRequired = 0x0000000000000002,
		Separator    = 0x0000000000000004,
		Literal      = 0x0000000000000008,
		Modifier     = 0x0000000000000010
	};

	/**
	 * Enum System.System.ComponentModel.MaskedTextResultHint
	 */
	enum class MaskedTextResultHint : int32_t
	{
		Unknown                       = 0x0000000000000000,
		CharacterEscaped              = 0x0000000000000001,
		NoEffect                      = 0x0000000000000002,
		SideEffect                    = 0x0000000000000003,
		Success                       = 0x0000000000000004,
		AsciiCharacterExpected        = -1,
		AlphanumericCharacterExpected = -2,
		DigitExpected                 = -3,
		LetterExpected                = -4,
		SignedDigitExpected           = -5,
		InvalidInput                  = -51,
		PromptCharNotAllowed          = -52,
		UnavailableEditPosition       = -53,
		NonEditPosition               = -54,
		PositionOutOfRange            = -55
	};

	/**
	 * Enum System.System.ComponentModel.ToolboxItemFilterType
	 */
	enum class ToolboxItemFilterType : int32_t
	{
		Allow   = 0x0000000000000000,
		Custom  = 0x0000000000000001,
		Prevent = 0x0000000000000002,
		Require = 0x0000000000000003
	};

	/**
	 * Enum System.System.ComponentModel.RefreshProperties
	 */
	enum class RefreshProperties : int32_t
	{
		None    = 0x0000000000000000,
		All     = 0x0000000000000001,
		Repaint = 0x0000000000000002
	};

	/**
	 * Enum System.System.Collections.Specialized.NotifyCollectionChangedAction
	 */
	enum class NotifyCollectionChangedAction_1 : int32_t
	{
		Add     = 0x0000000000000000,
		Remove  = 0x0000000000000001,
		Replace = 0x0000000000000002,
		Move    = 0x0000000000000003,
		Reset   = 0x0000000000000004
	};

	/**
	 * Enum System.System.Collections.Specialized.GenericAdapter+KeyOrValue
	 */
	enum class GenericAdapter_KeyOrValue : int32_t
	{
		Key   = 0x0000000000000000,
		Value = 0x0000000000000001
	};

	/**
	 * Enum System.System.IO.Compression.CompressionMode
	 */
	enum class CompressionMode_1 : int32_t
	{
		Decompress = 0x0000000000000000,
		Compress   = 0x0000000000000001
	};

	/**
	 * Enum System.System.Diagnostics.PerformanceCounterCategoryType
	 */
	enum class PerformanceCounterCategoryType : int32_t
	{
		MultiInstance  = 0x0000000000000001,
		SingleInstance = 0x0000000000000000,
		Unknown        = -1
	};

	/**
	 * Enum System.System.Diagnostics.PerformanceCounterType
	 */
	enum class PerformanceCounterType : int32_t
	{
		AverageBase                   = 0x0000000040030402,
		AverageCount64                = 0x0000000040020500,
		AverageTimer32                = 0x0000000030020400,
		CounterDelta32                = 0x0000000000400400,
		CounterDelta64                = 0x0000000000400500,
		CounterMultiBase              = 0x0000000042030500,
		CounterMultiTimer             = 0x0000000022410500,
		CounterMultiTimer100Ns        = 0x0000000022510500,
		CounterMultiTimer100NsInverse = 0x0000000023510500,
		CounterMultiTimerInverse      = 0x0000000023410500,
		CounterTimer                  = 0x0000000020410500,
		CounterTimerInverse           = 0x0000000021410500,
		CountPerTimeInterval32        = 0x0000000000450400,
		CountPerTimeInterval64        = 0x0000000000450500,
		ElapsedTime                   = 0x0000000030240500,
		NumberOfItems32               = 0x0000000000010000,
		NumberOfItems64               = 0x0000000000010100,
		NumberOfItemsHEX32            = 0x0000000000000000,
		NumberOfItemsHEX64            = 0x0000000000000100,
		RateOfCountsPerSecond32       = 0x0000000010410400,
		RateOfCountsPerSecond64       = 0x0000000010410500,
		RawBase                       = 0x0000000040030403,
		RawFraction                   = 0x0000000020020400,
		SampleBase                    = 0x0000000040030401,
		SampleCounter                 = 0x0000000000410400,
		SampleFraction                = 0x0000000020C20400,
		Timer100Ns                    = 0x0000000020510500,
		Timer100NsInverse             = 0x0000000021510500
	};

	/**
	 * Enum System.System.Configuration.SettingsSerializeAs
	 */
	enum class SettingsSerializeAs : int32_t
	{
		Binary           = 0x0000000000000002,
		ProviderSpecific = 0x0000000000000003,
		String           = 0x0000000000000000,
		Xml              = 0x0000000000000001
	};

	/**
	 * Enum System.System.Diagnostics.EventLogEntryType
	 */
	enum class EventLogEntryType : int32_t
	{
		Error        = 0x0000000000000001,
		FailureAudit = 0x0000000000000010,
		Information  = 0x0000000000000004,
		SuccessAudit = 0x0000000000000008,
		Warning      = 0x0000000000000002
	};

	/**
	 * Enum System.System.Diagnostics.OverflowAction
	 */
	enum class OverflowAction : int32_t
	{
		DoNotOverwrite    = -1,
		OverwriteAsNeeded = 0x0000000000000000,
		OverwriteOlder    = 0x0000000000000001
	};

	/**
	 * Enum System.System.Net.Configuration.ProxyElement+AutoDetectValues
	 */
	enum class ProxyElement_AutoDetectValues : int32_t
	{
		False       = 0x0000000000000000,
		True        = 0x0000000000000001,
		Unspecified = -1
	};

	/**
	 * Enum System.System.Net.Configuration.ProxyElement+BypassOnLocalValues
	 */
	enum class ProxyElement_BypassOnLocalValues : int32_t
	{
		False       = 0x0000000000000000,
		True        = 0x0000000000000001,
		Unspecified = -1
	};

	/**
	 * Enum System.System.Net.Configuration.ProxyElement+UseSystemDefaultValues
	 */
	enum class ProxyElement_UseSystemDefaultValues : int32_t
	{
		False       = 0x0000000000000000,
		True        = 0x0000000000000001,
		Unspecified = -1
	};

	/**
	 * Enum System.System.Diagnostics.EventLogPermissionAccess
	 */
	enum class EventLogPermissionAccess : int32_t
	{
		Administer = 0x0000000000000030,
		Audit      = 0x000000000000000A,
		Browse     = 0x0000000000000002,
		Instrument = 0x0000000000000006,
		None       = 0x0000000000000000,
		Write      = 0x0000000000000010
	};

	/**
	 * Enum System.System.Diagnostics.PerformanceCounterInstanceLifetime
	 */
	enum class PerformanceCounterInstanceLifetime : int32_t
	{
		Global  = 0x0000000000000000,
		Process = 0x0000000000000001
	};

	/**
	 * Enum System.System.Diagnostics.PerformanceCounterPermissionAccess
	 */
	enum class PerformanceCounterPermissionAccess : int32_t
	{
		Administer = 0x0000000000000007,
		Browse     = 0x0000000000000001,
		Instrument = 0x0000000000000003,
		None       = 0x0000000000000000,
		Read       = 0x0000000000000001,
		Write      = 0x0000000000000002
	};

	/**
	 * Enum System.System.Configuration.SettingsManageability
	 */
	enum class SettingsManageability : int32_t
	{
		Roaming = 0x0000000000000000
	};

	/**
	 * Enum System.System.Configuration.SpecialSetting
	 */
	enum class SpecialSetting : int32_t
	{
		ConnectionString = 0x0000000000000000,
		WebServiceUrl    = 0x0000000000000001
	};

	/**
	 * Enum System.Xml.System.Xml.BinXmlToken
	 */
	enum class BinXmlToken : int32_t
	{
		Error                     = 0x0000000000000000,
		NotImpl                   = -2,
		_EOF_                     = -1,
		XmlDecl                   = 0x00000000000000FE,
		Encoding                  = 0x00000000000000FD,
		DocType                   = 0x00000000000000FC,
		System                    = 0x00000000000000FB,
		Public                    = 0x00000000000000FA,
		Subset                    = 0x00000000000000F9,
		Element                   = 0x00000000000000F8,
		EndElem                   = 0x00000000000000F7,
		Attr                      = 0x00000000000000F6,
		EndAttrs                  = 0x00000000000000F5,
		PI                        = 0x00000000000000F4,
		Comment                   = 0x00000000000000F3,
		CData                     = 0x00000000000000F2,
		EndCData                  = 0x00000000000000F1,
		Name                      = 0x00000000000000F0,
		QName                     = 0x00000000000000EF,
		XmlText                   = 0x00000000000000ED,
		Nest                      = 0x00000000000000EC,
		EndNest                   = 0x00000000000000EB,
		Extn                      = 0x00000000000000EA,
		NmFlush                   = 0x00000000000000E9,
		SQL_BIT                   = 0x0000000000000006,
		SQL_TINYINT               = 0x0000000000000007,
		SQL_SMALLINT              = 0x0000000000000001,
		SQL_INT                   = 0x0000000000000002,
		SQL_BIGINT                = 0x0000000000000008,
		SQL_REAL                  = 0x0000000000000003,
		SQL_FLOAT                 = 0x0000000000000004,
		SQL_MONEY                 = 0x0000000000000005,
		SQL_SMALLMONEY            = 0x0000000000000014,
		SQL_DATETIME              = 0x0000000000000012,
		SQL_SMALLDATETIME         = 0x0000000000000013,
		SQL_DECIMAL               = 0x000000000000000A,
		SQL_NUMERIC               = 0x000000000000000B,
		SQL_UUID                  = 0x0000000000000009,
		SQL_VARBINARY             = 0x000000000000000F,
		SQL_BINARY                = 0x000000000000000C,
		SQL_IMAGE                 = 0x0000000000000017,
		SQL_CHAR                  = 0x000000000000000D,
		SQL_VARCHAR               = 0x0000000000000010,
		SQL_TEXT                  = 0x0000000000000016,
		SQL_NVARCHAR              = 0x0000000000000011,
		SQL_NCHAR                 = 0x000000000000000E,
		SQL_NTEXT                 = 0x0000000000000018,
		SQL_UDT                   = 0x000000000000001B,
		XSD_KATMAI_DATE           = 0x000000000000007F,
		XSD_KATMAI_DATETIME       = 0x000000000000007E,
		XSD_KATMAI_TIME           = 0x000000000000007D,
		XSD_KATMAI_DATEOFFSET     = 0x000000000000007C,
		XSD_KATMAI_DATETIMEOFFSET = 0x000000000000007B,
		XSD_KATMAI_TIMEOFFSET     = 0x000000000000007A,
		XSD_BOOLEAN               = 0x0000000000000086,
		XSD_TIME                  = 0x0000000000000081,
		XSD_DATETIME              = 0x0000000000000082,
		XSD_DATE                  = 0x0000000000000083,
		XSD_BINHEX                = 0x0000000000000084,
		XSD_BASE64                = 0x0000000000000085,
		XSD_DECIMAL               = 0x0000000000000087,
		XSD_BYTE                  = 0x0000000000000088,
		XSD_UNSIGNEDSHORT         = 0x0000000000000089,
		XSD_UNSIGNEDINT           = 0x000000000000008A,
		XSD_UNSIGNEDLONG          = 0x000000000000008B,
		XSD_QNAME                 = 0x000000000000008C
	};

	/**
	 * Enum System.Xml.System.Xml.XmlSqlBinaryReader+ScanState
	 */
	enum class XmlSqlBinaryReader_ScanState : int32_t
	{
		Doc                = 0x0000000000000000,
		XmlText            = 0x0000000000000001,
		Attr               = 0x0000000000000002,
		AttrVal            = 0x0000000000000003,
		AttrValPseudoValue = 0x0000000000000004,
		Init               = 0x0000000000000005,
		Error              = 0x0000000000000006,
		_EOF_              = 0x0000000000000007,
		Closed             = 0x0000000000000008
	};

	/**
	 * Enum System.Xml.System.Xml.ConformanceLevel
	 */
	enum class ConformanceLevel : int32_t
	{
		Auto     = 0x0000000000000000,
		Fragment = 0x0000000000000001,
		Document = 0x0000000000000002
	};

	/**
	 * Enum System.Xml.System.Xml.DtdProcessing
	 */
	enum class DtdProcessing : int32_t
	{
		Prohibit = 0x0000000000000000,
		Ignore   = 0x0000000000000001,
		Parse    = 0x0000000000000002
	};

	/**
	 * Enum System.Xml.System.Xml.EntityHandling
	 */
	enum class EntityHandling : int32_t
	{
		ExpandEntities     = 0x0000000000000001,
		ExpandCharEntities = 0x0000000000000002
	};

	/**
	 * Enum System.Xml.System.Xml.NamespaceHandling
	 */
	enum class NamespaceHandling : int32_t
	{
		Default        = 0x0000000000000000,
		OmitDuplicates = 0x0000000000000001
	};

	/**
	 * Enum System.Xml.System.Xml.NewLineHandling
	 */
	enum class NewLineHandling : int32_t
	{
		Replace  = 0x0000000000000000,
		Entitize = 0x0000000000000001,
		None     = 0x0000000000000002
	};

	/**
	 * Enum System.Xml.System.Xml.ReadContentAsBinaryHelper+State
	 */
	enum class ReadContentAsBinaryHelper_State : int32_t
	{
		None                 = 0x0000000000000000,
		InReadContent        = 0x0000000000000001,
		InReadElementContent = 0x0000000000000002
	};

	/**
	 * Enum System.Xml.System.Xml.ElementProperties
	 */
	enum class ElementProperties : uint32_t
	{
		DEFAULT     = 0x0000000000000000,
		URI_PARENT  = 0x0000000000000001,
		BOOL_PARENT = 0x0000000000000002,
		NAME_PARENT = 0x0000000000000004,
		EMPTY       = 0x0000000000000008,
		NO_ENTITIES = 0x0000000000000010,
		HEAD        = 0x0000000000000020,
		BLOCK_WS    = 0x0000000000000040,
		HAS_NS      = 0x0000000000000080
	};

	/**
	 * Enum System.Xml.System.Xml.AttributeProperties
	 */
	enum class AttributeProperties : uint32_t
	{
		DEFAULT = 0x0000000000000000,
		URI     = 0x0000000000000001,
		BOOLEAN = 0x0000000000000002,
		NAME    = 0x0000000000000004
	};

	/**
	 * Enum System.Xml.System.Xml.ReadState
	 */
	enum class ReadState_1 : int32_t
	{
		Initial     = 0x0000000000000000,
		Interactive = 0x0000000000000001,
		Error       = 0x0000000000000002,
		EndOfFile   = 0x0000000000000003,
		Closed      = 0x0000000000000004
	};

	/**
	 * Enum System.Xml.System.Xml.ValidationType
	 */
	enum class ValidationType : int32_t
	{
		None   = 0x0000000000000000,
		Auto   = 0x0000000000000001,
		DTD    = 0x0000000000000002,
		XDR    = 0x0000000000000003,
		Schema = 0x0000000000000004
	};

	/**
	 * Enum System.Xml.System.Xml.WhitespaceHandling
	 */
	enum class WhitespaceHandling : int32_t
	{
		All         = 0x0000000000000000,
		Significant = 0x0000000000000001,
		None        = 0x0000000000000002
	};

	/**
	 * Enum System.Xml.System.Xml.XmlEventCache+XmlEventType
	 */
	enum class XmlEventCache_XmlEventType : int32_t
	{
		Unknown      = 0x0000000000000000,
		DocType      = 0x0000000000000001,
		StartElem    = 0x0000000000000002,
		StartAttr    = 0x0000000000000003,
		EndAttr      = 0x0000000000000004,
		CData        = 0x0000000000000005,
		Comment      = 0x0000000000000006,
		PI           = 0x0000000000000007,
		Whitespace   = 0x0000000000000008,
		String       = 0x0000000000000009,
		Raw          = 0x000000000000000A,
		EntRef       = 0x000000000000000B,
		CharEnt      = 0x000000000000000C,
		SurrCharEnt  = 0x000000000000000D,
		Base64       = 0x000000000000000E,
		BinHex       = 0x000000000000000F,
		XmlDecl1     = 0x0000000000000010,
		XmlDecl2     = 0x0000000000000011,
		StartContent = 0x0000000000000012,
		EndElem      = 0x0000000000000013,
		FullEndElem  = 0x0000000000000014,
		Nmsp         = 0x0000000000000015,
		EndBase64    = 0x0000000000000016,
		Close        = 0x0000000000000017,
		Flush        = 0x0000000000000018,
		Dispose      = 0x0000000000000019
	};

	/**
	 * Enum System.Xml.System.Xml.XmlSpace
	 */
	enum class XmlSpace : int32_t
	{
		None     = 0x0000000000000000,
		Default  = 0x0000000000000001,
		Preserve = 0x0000000000000002
	};

	/**
	 * Enum System.Xml.System.Xml.XmlTextReaderImpl+ParsingFunction
	 */
	enum class XmlTextReaderImpl_ParsingFunction : int32_t
	{
		ElementContent                   = 0x0000000000000000,
		NoData                           = 0x0000000000000001,
		OpenUrl                          = 0x0000000000000002,
		SwitchToInteractive              = 0x0000000000000003,
		SwitchToInteractiveXmlDecl       = 0x0000000000000004,
		DocumentContent                  = 0x0000000000000005,
		MoveToElementContent             = 0x0000000000000006,
		PopElementContext                = 0x0000000000000007,
		PopEmptyElementContext           = 0x0000000000000008,
		ResetAttributesRootLevel         = 0x0000000000000009,
		Error                            = 0x000000000000000A,
		Eof                              = 0x000000000000000B,
		ReaderClosed                     = 0x000000000000000C,
		EntityReference                  = 0x000000000000000D,
		InIncrementalRead                = 0x000000000000000E,
		FragmentAttribute                = 0x000000000000000F,
		ReportEndEntity                  = 0x0000000000000010,
		AfterResolveEntityInContent      = 0x0000000000000011,
		AfterResolveEmptyEntityInContent = 0x0000000000000012,
		XmlDeclarationFragment           = 0x0000000000000013,
		GoToEof                          = 0x0000000000000014,
		PartialTextValue                 = 0x0000000000000015,
		InReadAttributeValue             = 0x0000000000000016,
		InReadValueChunk                 = 0x0000000000000017,
		InReadContentAsBinary            = 0x0000000000000018,
		InReadElementContentAsBinary     = 0x0000000000000019
	};

	/**
	 * Enum System.Xml.System.Xml.XmlTextReaderImpl+ParsingMode
	 */
	enum class XmlTextReaderImpl_ParsingMode : int32_t
	{
		Full        = 0x0000000000000000,
		SkipNode    = 0x0000000000000001,
		SkipContent = 0x0000000000000002
	};

	/**
	 * Enum System.Xml.System.Xml.XmlTextReaderImpl+EntityType
	 */
	enum class XmlTextReaderImpl_EntityType : int32_t
	{
		CharacterDec        = 0x0000000000000000,
		CharacterHex        = 0x0000000000000001,
		CharacterNamed      = 0x0000000000000002,
		Expanded            = 0x0000000000000003,
		Skipped             = 0x0000000000000004,
		FakeExpanded        = 0x0000000000000005,
		Unexpanded          = 0x0000000000000006,
		ExpandedInAttribute = 0x0000000000000007
	};

	/**
	 * Enum System.Xml.System.Xml.XmlTextReaderImpl+EntityExpandType
	 */
	enum class XmlTextReaderImpl_EntityExpandType : int32_t
	{
		All           = 0x0000000000000000,
		OnlyGeneral   = 0x0000000000000001,
		OnlyCharacter = 0x0000000000000002
	};

	/**
	 * Enum System.Xml.System.Xml.XmlTextReaderImpl+IncrementalReadState
	 */
	enum class XmlTextReaderImpl_IncrementalReadState : int32_t
	{
		Text                               = 0x0000000000000000,
		StartTag                           = 0x0000000000000001,
		PI                                 = 0x0000000000000002,
		CDATA                              = 0x0000000000000003,
		Comment                            = 0x0000000000000004,
		Attributes                         = 0x0000000000000005,
		AttributeValue                     = 0x0000000000000006,
		ReadData                           = 0x0000000000000007,
		EndElement                         = 0x0000000000000008,
		End                                = 0x0000000000000009,
		ReadValueChunk_OnCachedValue       = 0x000000000000000A,
		ReadValueChunk_OnPartialValue      = 0x000000000000000B,
		ReadContentAsBinary_OnCachedValue  = 0x000000000000000C,
		ReadContentAsBinary_OnPartialValue = 0x000000000000000D,
		ReadContentAsBinary_End            = 0x000000000000000E
	};

	/**
	 * Enum System.Xml.System.Xml.XmlTextReaderImpl+InitInputType
	 */
	enum class XmlTextReaderImpl_InitInputType : int32_t
	{
		UriString  = 0x0000000000000000,
		Stream     = 0x0000000000000001,
		TextReader = 0x0000000000000002,
		Invalid    = 0x0000000000000003
	};

	/**
	 * Enum System.Xml.System.Xml.Formatting
	 */
	enum class Formatting : int32_t
	{
		None     = 0x0000000000000000,
		Indented = 0x0000000000000001
	};

	/**
	 * Enum System.Xml.System.Xml.XmlTextWriter+NamespaceState
	 */
	enum class XmlTextWriter_NamespaceState : int32_t
	{
		Uninitialized            = 0x0000000000000000,
		NotDeclaredButInScope    = 0x0000000000000001,
		DeclaredButNotWrittenOut = 0x0000000000000002,
		DeclaredAndWrittenOut    = 0x0000000000000003
	};

	/**
	 * Enum System.Xml.System.Xml.XmlTextWriter+SpecialAttr
	 */
	enum class XmlTextWriter_SpecialAttr : int32_t
	{
		None     = 0x0000000000000000,
		XmlSpace = 0x0000000000000001,
		XmlLang  = 0x0000000000000002,
		XmlNs    = 0x0000000000000003
	};

	/**
	 * Enum System.Xml.System.Xml.XmlTextWriter+State
	 */
	enum class XmlTextWriter_State : int32_t
	{
		Start     = 0x0000000000000000,
		Prolog    = 0x0000000000000001,
		PostDTD   = 0x0000000000000002,
		Element   = 0x0000000000000003,
		Attribute = 0x0000000000000004,
		Content   = 0x0000000000000005,
		AttrOnly  = 0x0000000000000006,
		Epilog    = 0x0000000000000007,
		Error     = 0x0000000000000008,
		Closed    = 0x0000000000000009
	};

	/**
	 * Enum System.Xml.System.Xml.XmlTextWriter+Token
	 */
	enum class XmlTextWriter_Token : int32_t
	{
		PI             = 0x0000000000000000,
		Doctype        = 0x0000000000000001,
		Comment        = 0x0000000000000002,
		CData          = 0x0000000000000003,
		StartElement   = 0x0000000000000004,
		EndElement     = 0x0000000000000005,
		LongEndElement = 0x0000000000000006,
		StartAttribute = 0x0000000000000007,
		EndAttribute   = 0x0000000000000008,
		Content        = 0x0000000000000009,
		Base64         = 0x000000000000000A,
		RawData        = 0x000000000000000B,
		Whitespace     = 0x000000000000000C,
		Empty          = 0x000000000000000D
	};

	/**
	 * Enum System.Xml.System.Xml.XmlValidatingReaderImpl+ParsingFunction
	 */
	enum class XmlValidatingReaderImpl_ParsingFunction : int32_t
	{
		Read                    = 0x0000000000000000,
		Init                    = 0x0000000000000001,
		ParseDtdFromContext     = 0x0000000000000002,
		ResolveEntityInternally = 0x0000000000000003,
		InReadBinaryContent     = 0x0000000000000004,
		ReaderClosed            = 0x0000000000000005,
		Error                   = 0x0000000000000006,
		None                    = 0x0000000000000007
	};

	/**
	 * Enum System.Xml.System.Xml.XmlWellFormedWriter+State
	 */
	enum class XmlWellFormedWriter_State : int32_t
	{
		Start              = 0x0000000000000000,
		TopLevel           = 0x0000000000000001,
		Document           = 0x0000000000000002,
		Element            = 0x0000000000000003,
		Content            = 0x0000000000000004,
		B64Content         = 0x0000000000000005,
		B64Attribute       = 0x0000000000000006,
		AfterRootEle       = 0x0000000000000007,
		Attribute          = 0x0000000000000008,
		SpecialAttr        = 0x0000000000000009,
		EndDocument        = 0x000000000000000A,
		RootLevelAttr      = 0x000000000000000B,
		RootLevelSpecAttr  = 0x000000000000000C,
		RootLevelB64Attr   = 0x000000000000000D,
		AfterRootLevelAttr = 0x000000000000000E,
		Closed             = 0x000000000000000F,
		Error              = 0x0000000000000010,
		StartContent       = 0x0000000000000065,
		StartContentEle    = 0x0000000000000066,
		StartContentB64    = 0x0000000000000067,
		StartDoc           = 0x0000000000000068,
		StartDocEle        = 0x000000000000006A,
		EndAttrSEle        = 0x000000000000006B,
		EndAttrEEle        = 0x000000000000006C,
		EndAttrSCont       = 0x000000000000006D,
		EndAttrSAttr       = 0x000000000000006F,
		PostB64Cont        = 0x0000000000000070,
		PostB64Attr        = 0x0000000000000071,
		PostB64RootAttr    = 0x0000000000000072,
		StartFragEle       = 0x0000000000000073,
		StartFragCont      = 0x0000000000000074,
		StartFragB64       = 0x0000000000000075,
		StartRootLevelAttr = 0x0000000000000076
	};

	/**
	 * Enum System.Xml.System.Xml.XmlWellFormedWriter+Token
	 */
	enum class XmlWellFormedWriter_Token : int32_t
	{
		StartDocument  = 0x0000000000000000,
		EndDocument    = 0x0000000000000001,
		PI             = 0x0000000000000002,
		Comment        = 0x0000000000000003,
		Dtd            = 0x0000000000000004,
		StartElement   = 0x0000000000000005,
		EndElement     = 0x0000000000000006,
		StartAttribute = 0x0000000000000007,
		EndAttribute   = 0x0000000000000008,
		Text           = 0x0000000000000009,
		CData          = 0x000000000000000A,
		AtomicValue    = 0x000000000000000B,
		Base64         = 0x000000000000000C,
		RawData        = 0x000000000000000D,
		Whitespace     = 0x000000000000000E
	};

	/**
	 * Enum System.Xml.System.Xml.XmlWellFormedWriter+NamespaceKind
	 */
	enum class XmlWellFormedWriter_NamespaceKind : int32_t
	{
		Written     = 0x0000000000000000,
		NeedToWrite = 0x0000000000000001,
		Implied     = 0x0000000000000002,
		Special     = 0x0000000000000003
	};

	/**
	 * Enum System.Xml.System.Xml.XmlWellFormedWriter+SpecialAttribute
	 */
	enum class XmlWellFormedWriter_SpecialAttribute : int32_t
	{
		No            = 0x0000000000000000,
		DefaultXmlns  = 0x0000000000000001,
		PrefixedXmlns = 0x0000000000000002,
		XmlSpace      = 0x0000000000000003,
		XmlLang       = 0x0000000000000004
	};

	/**
	 * Enum System.Xml.System.Xml.XmlWellFormedWriter.AttributeValueCache+ItemType
	 */
	enum class XmlWellFormedWriter_AttributeValueCache_ItemType : int32_t
	{
		EntityRef           = 0x0000000000000000,
		CharEntity          = 0x0000000000000001,
		SurrogateCharEntity = 0x0000000000000002,
		Whitespace          = 0x0000000000000003,
		String              = 0x0000000000000004,
		StringChars         = 0x0000000000000005,
		Raw                 = 0x0000000000000006,
		RawChars            = 0x0000000000000007,
		ValueString         = 0x0000000000000008
	};

	/**
	 * Enum System.Xml.System.Xml.WriteState
	 */
	enum class WriteState : int32_t
	{
		Start     = 0x0000000000000000,
		Prolog    = 0x0000000000000001,
		Element   = 0x0000000000000002,
		Attribute = 0x0000000000000003,
		Content   = 0x0000000000000004,
		Closed    = 0x0000000000000005,
		Error     = 0x0000000000000006
	};

	/**
	 * Enum System.Xml.System.Xml.XmlOutputMethod
	 */
	enum class XmlOutputMethod : int32_t
	{
		Xml        = 0x0000000000000000,
		Html       = 0x0000000000000001,
		Text       = 0x0000000000000002,
		AutoDetect = 0x0000000000000003
	};

	/**
	 * Enum System.Xml.System.Xml.TriState
	 */
	enum class TriState_1 : int32_t
	{
		Unknown = -1,
		False   = 0x0000000000000000,
		True    = 0x0000000000000001
	};

	/**
	 * Enum System.Xml.System.Xml.XmlStandalone
	 */
	enum class XmlStandalone : int32_t
	{
		Omit = 0x0000000000000000,
		Yes  = 0x0000000000000001,
		No   = 0x0000000000000002
	};

	/**
	 * Enum System.Xml.System.Xml.XsdCachingReader+CachingReaderState
	 */
	enum class XsdCachingReader_CachingReaderState : int32_t
	{
		None         = 0x0000000000000000,
		Init         = 0x0000000000000001,
		Record       = 0x0000000000000002,
		Replay       = 0x0000000000000003,
		ReaderClosed = 0x0000000000000004,
		Error        = 0x0000000000000005
	};

	/**
	 * Enum System.Xml.System.Xml.XsdValidatingReader+ValidatingReaderState
	 */
	enum class XsdValidatingReader_ValidatingReaderState : int32_t
	{
		None                 = 0x0000000000000000,
		Init                 = 0x0000000000000001,
		Read                 = 0x0000000000000002,
		OnDefaultAttribute   = -1,
		OnReadAttributeValue = -2,
		OnAttribute          = 0x0000000000000003,
		ClearAttributes      = 0x0000000000000004,
		ParseInlineSchema    = 0x0000000000000005,
		ReadAhead            = 0x0000000000000006,
		OnReadBinaryContent  = 0x0000000000000007,
		ReaderClosed         = 0x0000000000000008,
		_EOF_                = 0x0000000000000009,
		Error                = 0x000000000000000A
	};

	/**
	 * Enum System.Xml.System.Xml.XmlNodeChangedAction
	 */
	enum class XmlNodeChangedAction : int32_t
	{
		Insert = 0x0000000000000000,
		Remove = 0x0000000000000001,
		Change = 0x0000000000000002
	};

	/**
	 * Enum System.Xml.System.Xml.DtdParser+Token
	 */
	enum class DtdParser_Token : int32_t
	{
		CDATA            = 0x0000000000000000,
		ID               = 0x0000000000000001,
		IDREF            = 0x0000000000000002,
		IDREFS           = 0x0000000000000003,
		ENTITY           = 0x0000000000000004,
		ENTITIES         = 0x0000000000000005,
		NMTOKEN          = 0x0000000000000006,
		NMTOKENS         = 0x0000000000000007,
		NOTATION         = 0x0000000000000008,
		None             = 0x0000000000000009,
		PERef            = 0x000000000000000A,
		AttlistDecl      = 0x000000000000000B,
		ElementDecl      = 0x000000000000000C,
		EntityDecl       = 0x000000000000000D,
		NotationDecl     = 0x000000000000000E,
		Comment          = 0x000000000000000F,
		PI               = 0x0000000000000010,
		CondSectionStart = 0x0000000000000011,
		CondSectionEnd   = 0x0000000000000012,
		Eof              = 0x0000000000000013,
		REQUIRED         = 0x0000000000000014,
		IMPLIED          = 0x0000000000000015,
		FIXED            = 0x0000000000000016,
		QName            = 0x0000000000000017,
		Name             = 0x0000000000000018,
		Nmtoken          = 0x0000000000000019,
		Quote            = 0x000000000000001A,
		LeftParen        = 0x000000000000001B,
		RightParen       = 0x000000000000001C,
		GreaterThan      = 0x000000000000001D,
		Or               = 0x000000000000001E,
		LeftBracket      = 0x000000000000001F,
		RightBracket     = 0x0000000000000020,
		PUBLIC           = 0x0000000000000021,
		SYSTEM           = 0x0000000000000022,
		Literal          = 0x0000000000000023,
		DOCTYPE          = 0x0000000000000024,
		NData            = 0x0000000000000025,
		Percent          = 0x0000000000000026,
		Star             = 0x0000000000000027,
		QMark            = 0x0000000000000028,
		Plus             = 0x0000000000000029,
		PCDATA           = 0x000000000000002A,
		Comma            = 0x000000000000002B,
		ANY              = 0x000000000000002C,
		EMPTY            = 0x000000000000002D,
		_IGNORE_         = 0x000000000000002E,
		INCLUDE          = 0x000000000000002F
	};

	/**
	 * Enum System.Xml.System.Xml.DtdParser+ScanningFunction
	 */
	enum class DtdParser_ScanningFunction : int32_t
	{
		SubsetContent    = 0x0000000000000000,
		Name             = 0x0000000000000001,
		QName            = 0x0000000000000002,
		Nmtoken          = 0x0000000000000003,
		Doctype1         = 0x0000000000000004,
		Doctype2         = 0x0000000000000005,
		Element1         = 0x0000000000000006,
		Element2         = 0x0000000000000007,
		Element3         = 0x0000000000000008,
		Element4         = 0x0000000000000009,
		Element5         = 0x000000000000000A,
		Element6         = 0x000000000000000B,
		Element7         = 0x000000000000000C,
		Attlist1         = 0x000000000000000D,
		Attlist2         = 0x000000000000000E,
		Attlist3         = 0x000000000000000F,
		Attlist4         = 0x0000000000000010,
		Attlist5         = 0x0000000000000011,
		Attlist6         = 0x0000000000000012,
		Attlist7         = 0x0000000000000013,
		Entity1          = 0x0000000000000014,
		Entity2          = 0x0000000000000015,
		Entity3          = 0x0000000000000016,
		Notation1        = 0x0000000000000017,
		CondSection1     = 0x0000000000000018,
		CondSection2     = 0x0000000000000019,
		CondSection3     = 0x000000000000001A,
		Literal          = 0x000000000000001B,
		SystemId         = 0x000000000000001C,
		PublicId1        = 0x000000000000001D,
		PublicId2        = 0x000000000000001E,
		ClosingTag       = 0x000000000000001F,
		ParamEntitySpace = 0x0000000000000020,
		None             = 0x0000000000000021
	};

	/**
	 * Enum System.Xml.System.Xml.DtdParser+LiteralType
	 */
	enum class DtdParser_LiteralType : int32_t
	{
		AttributeValue   = 0x0000000000000000,
		EntityReplText   = 0x0000000000000001,
		SystemOrPublicID = 0x0000000000000002
	};

	/**
	 * Enum System.Xml.System.Xml.XmlTokenizedType
	 */
	enum class XmlTokenizedType : int32_t
	{
		CDATA       = 0x0000000000000000,
		ID          = 0x0000000000000001,
		IDREF       = 0x0000000000000002,
		IDREFS      = 0x0000000000000003,
		ENTITY      = 0x0000000000000004,
		ENTITIES    = 0x0000000000000005,
		NMTOKEN     = 0x0000000000000006,
		NMTOKENS    = 0x0000000000000007,
		NOTATION    = 0x0000000000000008,
		ENUMERATION = 0x0000000000000009,
		QName       = 0x000000000000000A,
		NCName      = 0x000000000000000B,
		None        = 0x000000000000000C
	};

	/**
	 * Enum System.Xml.System.Xml.ExceptionType
	 */
	enum class ExceptionType : int32_t
	{
		ArgumentException = 0x0000000000000000,
		XmlException      = 0x0000000000000001
	};

	/**
	 * Enum System.Xml.System.Xml.XmlDateTimeSerializationMode
	 */
	enum class XmlDateTimeSerializationMode : int32_t
	{
		Local         = 0x0000000000000000,
		Utc           = 0x0000000000000001,
		Unspecified   = 0x0000000000000002,
		RoundtripKind = 0x0000000000000003
	};

	/**
	 * Enum System.Xml.System.Xml.XmlNamespaceScope
	 */
	enum class XmlNamespaceScope : int32_t
	{
		All        = 0x0000000000000000,
		ExcludeXml = 0x0000000000000001,
		Local      = 0x0000000000000002
	};

	/**
	 * Enum System.Xml.System.Xml.XmlNodeType
	 */
	enum class XmlNodeType : int32_t
	{
		None                  = 0x0000000000000000,
		Element               = 0x0000000000000001,
		Attribute             = 0x0000000000000002,
		Text                  = 0x0000000000000003,
		CDATA                 = 0x0000000000000004,
		EntityReference       = 0x0000000000000005,
		Entity                = 0x0000000000000006,
		ProcessingInstruction = 0x0000000000000007,
		Comment               = 0x0000000000000008,
		Document              = 0x0000000000000009,
		DocumentType          = 0x000000000000000A,
		DocumentFragment      = 0x000000000000000B,
		Notation              = 0x000000000000000C,
		Whitespace            = 0x000000000000000D,
		SignificantWhitespace = 0x000000000000000E,
		EndElement            = 0x000000000000000F,
		EndEntity             = 0x0000000000000010,
		XmlDeclaration        = 0x0000000000000011
	};

	/**
	 * Enum System.Xml.System.Xml.XPath.XPathResultType
	 */
	enum class XPathResultType : int32_t
	{
		Number    = 0x0000000000000000,
		String    = 0x0000000000000001,
		Boolean   = 0x0000000000000002,
		NodeSet   = 0x0000000000000003,
		Navigator = 0x0000000000000001,
		Any       = 0x0000000000000005,
		Error     = 0x0000000000000006
	};

	/**
	 * Enum System.Xml.System.Xml.XPath.XPathNamespaceScope
	 */
	enum class XPathNamespaceScope : int32_t
	{
		All        = 0x0000000000000000,
		ExcludeXml = 0x0000000000000001,
		Local      = 0x0000000000000002
	};

	/**
	 * Enum System.Xml.System.Xml.XPath.XPathNodeType
	 */
	enum class XPathNodeType : int32_t
	{
		Root                  = 0x0000000000000000,
		Element               = 0x0000000000000001,
		Attribute             = 0x0000000000000002,
		Namespace             = 0x0000000000000003,
		Text                  = 0x0000000000000004,
		SignificantWhitespace = 0x0000000000000005,
		Whitespace            = 0x0000000000000006,
		ProcessingInstruction = 0x0000000000000007,
		Comment               = 0x0000000000000008,
		All                   = 0x0000000000000009
	};

	/**
	 * Enum System.Xml.System.Xml.Serialization.SchemaTypes
	 */
	enum class SchemaTypes : int32_t
	{
		NotSet          = 0x0000000000000000,
		Primitive       = 0x0000000000000001,
		Enum            = 0x0000000000000002,
		Array           = 0x0000000000000003,
		Class           = 0x0000000000000004,
		XmlSerializable = 0x0000000000000005,
		XmlNode         = 0x0000000000000006,
		Void            = 0x0000000000000007
	};

	/**
	 * Enum System.Xml.System.Xml.Serialization.SerializationFormat
	 */
	enum class SerializationFormat : int32_t
	{
		Encoded = 0x0000000000000000,
		Literal = 0x0000000000000001
	};

	/**
	 * Enum System.Xml.System.Xml.Schema.CompiledIdentityConstraint+ConstraintRole
	 */
	enum class CompiledIdentityConstraint_ConstraintRole : int32_t
	{
		Unique = 0x0000000000000000,
		Key    = 0x0000000000000001,
		Keyref = 0x0000000000000002
	};

	/**
	 * Enum System.Xml.System.Xml.Schema.XmlSchemaDatatypeVariety
	 */
	enum class XmlSchemaDatatypeVariety : int32_t
	{
		Atomic = 0x0000000000000000,
		List   = 0x0000000000000001,
		Union  = 0x0000000000000002
	};

	/**
	 * Enum System.Xml.System.Xml.Schema.RestrictionFlags
	 */
	enum class RestrictionFlags : int32_t
	{
		Length         = 0x0000000000000001,
		MinLength      = 0x0000000000000002,
		MaxLength      = 0x0000000000000004,
		Pattern        = 0x0000000000000008,
		Enumeration    = 0x0000000000000010,
		WhiteSpace     = 0x0000000000000020,
		MaxInclusive   = 0x0000000000000040,
		MaxExclusive   = 0x0000000000000080,
		MinInclusive   = 0x0000000000000100,
		MinExclusive   = 0x0000000000000200,
		TotalDigits    = 0x0000000000000400,
		FractionDigits = 0x0000000000000800
	};

	/**
	 * Enum System.Xml.System.Xml.Schema.XmlSchemaWhiteSpace
	 */
	enum class XmlSchemaWhiteSpace : int32_t
	{
		Preserve = 0x0000000000000000,
		Replace  = 0x0000000000000001,
		Collapse = 0x0000000000000002
	};

	/**
	 * Enum System.Xml.System.Xml.Schema.XmlSchemaInference+InferenceOption
	 */
	enum class XmlSchemaInference_InferenceOption : int32_t
	{
		Restricted = 0x0000000000000000,
		Relaxed    = 0x0000000000000001
	};

	/**
	 * Enum System.Xml.System.Xml.Schema.NamespaceList+ListType
	 */
	enum class NamespaceList_ListType : int32_t
	{
		Any   = 0x0000000000000000,
		Other = 0x0000000000000001,
		Set   = 0x0000000000000002
	};

	/**
	 * Enum System.Xml.System.Xml.Schema.Compositor
	 */
	enum class Compositor : int32_t
	{
		Root     = 0x0000000000000000,
		Include  = 0x0000000000000001,
		Import   = 0x0000000000000002,
		Redefine = 0x0000000000000003
	};

	/**
	 * Enum System.Xml.System.Xml.Schema.SchemaAttDef+Reserve
	 */
	enum class SchemaAttDef_Reserve : int32_t
	{
		None     = 0x0000000000000000,
		XmlSpace = 0x0000000000000001,
		XmlLang  = 0x0000000000000002
	};

	/**
	 * Enum System.Xml.System.Xml.Schema.SchemaCollectionPreprocessor+Compositor
	 */
	enum class SchemaCollectionPreprocessor_Compositor : int32_t
	{
		Root    = 0x0000000000000000,
		Include = 0x0000000000000001,
		Import  = 0x0000000000000002
	};

	/**
	 * Enum System.Xml.System.Xml.Schema.SchemaDeclBase+Use
	 */
	enum class SchemaDeclBase_Use : int32_t
	{
		Default       = 0x0000000000000000,
		Required      = 0x0000000000000001,
		Implied       = 0x0000000000000002,
		Fixed         = 0x0000000000000003,
		RequiredFixed = 0x0000000000000004
	};

	/**
	 * Enum System.Xml.System.Xml.Schema.AttributeMatchState
	 */
	enum class AttributeMatchState : int32_t
	{
		AttributeFound                = 0x0000000000000000,
		AnyIdAttributeFound           = 0x0000000000000001,
		UndeclaredElementAndAttribute = 0x0000000000000002,
		UndeclaredAttribute           = 0x0000000000000003,
		AnyAttributeLax               = 0x0000000000000004,
		AnyAttributeSkip              = 0x0000000000000005,
		ProhibitedAnyAttribute        = 0x0000000000000006,
		ProhibitedAttribute           = 0x0000000000000007,
		AttributeNameMismatch         = 0x0000000000000008,
		ValidateAttributeInvalidCall  = 0x0000000000000009
	};

	/**
	 * Enum System.Xml.System.Xml.Schema.SchemaNames+Token
	 */
	enum class SchemaNames_Token : int32_t
	{
		Empty                        = 0x0000000000000000,
		SchemaName                   = 0x0000000000000001,
		SchemaType                   = 0x0000000000000002,
		SchemaMaxOccurs              = 0x0000000000000003,
		SchemaMinOccurs              = 0x0000000000000004,
		SchemaInfinite               = 0x0000000000000005,
		SchemaModel                  = 0x0000000000000006,
		SchemaOpen                   = 0x0000000000000007,
		SchemaClosed                 = 0x0000000000000008,
		SchemaContent                = 0x0000000000000009,
		SchemaMixed                  = 0x000000000000000A,
		SchemaEmpty                  = 0x000000000000000B,
		SchemaElementOnly            = 0x000000000000000C,
		SchemaTextOnly               = 0x000000000000000D,
		SchemaOrder                  = 0x000000000000000E,
		SchemaSeq                    = 0x000000000000000F,
		SchemaOne                    = 0x0000000000000010,
		SchemaMany                   = 0x0000000000000011,
		SchemaRequired               = 0x0000000000000012,
		SchemaYes                    = 0x0000000000000013,
		SchemaNo                     = 0x0000000000000014,
		SchemaString                 = 0x0000000000000015,
		SchemaId                     = 0x0000000000000016,
		SchemaIdref                  = 0x0000000000000017,
		SchemaIdrefs                 = 0x0000000000000018,
		SchemaEntity                 = 0x0000000000000019,
		SchemaEntities               = 0x000000000000001A,
		SchemaNmtoken                = 0x000000000000001B,
		SchemaNmtokens               = 0x000000000000001C,
		SchemaEnumeration            = 0x000000000000001D,
		SchemaDefault                = 0x000000000000001E,
		XdrRoot                      = 0x000000000000001F,
		XdrElementType               = 0x0000000000000020,
		XdrElement                   = 0x0000000000000021,
		XdrGroup                     = 0x0000000000000022,
		XdrAttributeType             = 0x0000000000000023,
		XdrAttribute                 = 0x0000000000000024,
		XdrDatatype                  = 0x0000000000000025,
		XdrDescription               = 0x0000000000000026,
		XdrExtends                   = 0x0000000000000027,
		SchemaXdrRootAlias           = 0x0000000000000028,
		SchemaDtType                 = 0x0000000000000029,
		SchemaDtValues               = 0x000000000000002A,
		SchemaDtMaxLength            = 0x000000000000002B,
		SchemaDtMinLength            = 0x000000000000002C,
		SchemaDtMax                  = 0x000000000000002D,
		SchemaDtMin                  = 0x000000000000002E,
		SchemaDtMinExclusive         = 0x000000000000002F,
		SchemaDtMaxExclusive         = 0x0000000000000030,
		SchemaTargetNamespace        = 0x0000000000000031,
		SchemaVersion                = 0x0000000000000032,
		SchemaFinalDefault           = 0x0000000000000033,
		SchemaBlockDefault           = 0x0000000000000034,
		SchemaFixed                  = 0x0000000000000035,
		SchemaAbstract               = 0x0000000000000036,
		SchemaBlock                  = 0x0000000000000037,
		SchemaSubstitutionGroup      = 0x0000000000000038,
		SchemaFinal                  = 0x0000000000000039,
		SchemaNillable               = 0x000000000000003A,
		SchemaRef                    = 0x000000000000003B,
		SchemaBase                   = 0x000000000000003C,
		SchemaDerivedBy              = 0x000000000000003D,
		SchemaNamespace              = 0x000000000000003E,
		SchemaProcessContents        = 0x000000000000003F,
		SchemaRefer                  = 0x0000000000000040,
		SchemaPublic                 = 0x0000000000000041,
		SchemaSystem                 = 0x0000000000000042,
		SchemaSchemaLocation         = 0x0000000000000043,
		SchemaValue                  = 0x0000000000000044,
		SchemaSource                 = 0x0000000000000045,
		SchemaAttributeFormDefault   = 0x0000000000000046,
		SchemaElementFormDefault     = 0x0000000000000047,
		SchemaUse                    = 0x0000000000000048,
		SchemaForm                   = 0x0000000000000049,
		XsdSchema                    = 0x000000000000004A,
		XsdAnnotation                = 0x000000000000004B,
		XsdInclude                   = 0x000000000000004C,
		XsdImport                    = 0x000000000000004D,
		XsdElement                   = 0x000000000000004E,
		XsdAttribute                 = 0x000000000000004F,
		xsdAttributeGroup            = 0x0000000000000050,
		XsdAnyAttribute              = 0x0000000000000051,
		XsdGroup                     = 0x0000000000000052,
		XsdAll                       = 0x0000000000000053,
		XsdChoice                    = 0x0000000000000054,
		XsdSequence                  = 0x0000000000000055,
		XsdAny                       = 0x0000000000000056,
		XsdNotation                  = 0x0000000000000057,
		XsdSimpleType                = 0x0000000000000058,
		XsdComplexType               = 0x0000000000000059,
		XsdUnique                    = 0x000000000000005A,
		XsdKey                       = 0x000000000000005B,
		XsdKeyref                    = 0x000000000000005C,
		XsdSelector                  = 0x000000000000005D,
		XsdField                     = 0x000000000000005E,
		XsdMinExclusive              = 0x000000000000005F,
		XsdMinInclusive              = 0x0000000000000060,
		XsdMaxExclusive              = 0x0000000000000061,
		XsdMaxInclusive              = 0x0000000000000062,
		XsdTotalDigits               = 0x0000000000000063,
		XsdFractionDigits            = 0x0000000000000064,
		XsdLength                    = 0x0000000000000065,
		XsdMinLength                 = 0x0000000000000066,
		XsdMaxLength                 = 0x0000000000000067,
		XsdEnumeration               = 0x0000000000000068,
		XsdPattern                   = 0x0000000000000069,
		XsdDocumentation             = 0x000000000000006A,
		XsdAppInfo                   = 0x000000000000006B,
		XsdComplexContent            = 0x000000000000006C,
		XsdComplexContentExtension   = 0x000000000000006D,
		XsdComplexContentRestriction = 0x000000000000006E,
		XsdSimpleContent             = 0x000000000000006F,
		XsdSimpleContentExtension    = 0x0000000000000070,
		XsdSimpleContentRestriction  = 0x0000000000000071,
		XsdSimpleTypeList            = 0x0000000000000072,
		XsdSimpleTypeRestriction     = 0x0000000000000073,
		XsdSimpleTypeUnion           = 0x0000000000000074,
		XsdWhitespace                = 0x0000000000000075,
		XsdRedefine                  = 0x0000000000000076,
		SchemaItemType               = 0x0000000000000077,
		SchemaMemberTypes            = 0x0000000000000078,
		SchemaXPath                  = 0x0000000000000079,
		XmlLang                      = 0x000000000000007A
	};

	/**
	 * Enum System.Xml.System.Xml.Schema.SchemaType
	 */
	enum class SchemaType : int32_t
	{
		None = 0x0000000000000000,
		DTD  = 0x0000000000000001,
		XDR  = 0x0000000000000002,
		XSD  = 0x0000000000000003
	};

	/**
	 * Enum System.Xml.System.Xml.Schema.XmlSchemaContentProcessing
	 */
	enum class XmlSchemaContentProcessing : int32_t
	{
		None   = 0x0000000000000000,
		Skip   = 0x0000000000000001,
		Lax    = 0x0000000000000002,
		Strict = 0x0000000000000003
	};

	/**
	 * Enum System.Xml.System.Xml.Schema.XmlSchemaContentType
	 */
	enum class XmlSchemaContentType : int32_t
	{
		TextOnly    = 0x0000000000000000,
		Empty       = 0x0000000000000001,
		ElementOnly = 0x0000000000000002,
		Mixed       = 0x0000000000000003
	};

	/**
	 * Enum System.Xml.System.Xml.Schema.XmlSchemaDerivationMethod
	 */
	enum class XmlSchemaDerivationMethod : int32_t
	{
		Empty        = 0x0000000000000000,
		Substitution = 0x0000000000000001,
		Extension    = 0x0000000000000002,
		Restriction  = 0x0000000000000004,
		List         = 0x0000000000000008,
		Union        = 0x0000000000000010,
		All          = 0x00000000000000FF,
		None         = 0x0000000000000100
	};

	/**
	 * Enum System.Xml.System.Xml.Schema.FacetType
	 */
	enum class FacetType : int32_t
	{
		None           = 0x0000000000000000,
		Length         = 0x0000000000000001,
		MinLength      = 0x0000000000000002,
		MaxLength      = 0x0000000000000003,
		Pattern        = 0x0000000000000004,
		Whitespace     = 0x0000000000000005,
		Enumeration    = 0x0000000000000006,
		MinExclusive   = 0x0000000000000007,
		MinInclusive   = 0x0000000000000008,
		MaxExclusive   = 0x0000000000000009,
		MaxInclusive   = 0x000000000000000A,
		TotalDigits    = 0x000000000000000B,
		FractionDigits = 0x000000000000000C
	};

	/**
	 * Enum System.Xml.System.Xml.Schema.XmlSchemaForm
	 */
	enum class XmlSchemaForm : int32_t
	{
		None        = 0x0000000000000000,
		Qualified   = 0x0000000000000001,
		Unqualified = 0x0000000000000002
	};

	/**
	 * Enum System.Xml.System.Xml.Schema.XmlSchemaObjectTable+EnumeratorType
	 */
	enum class XmlSchemaObjectTable_EnumeratorType : int32_t
	{
		Keys            = 0x0000000000000000,
		Values          = 0x0000000000000001,
		DictionaryEntry = 0x0000000000000002
	};

	/**
	 * Enum System.Xml.System.Xml.Schema.XmlSchemaParticle+Occurs
	 */
	enum class XmlSchemaParticle_Occurs : int32_t
	{
		None = 0x0000000000000000,
		Min  = 0x0000000000000001,
		Max  = 0x0000000000000002
	};

	/**
	 * Enum System.Xml.System.Xml.Schema.XmlSchemaUse
	 */
	enum class XmlSchemaUse : int32_t
	{
		None       = 0x0000000000000000,
		Optional   = 0x0000000000000001,
		Prohibited = 0x0000000000000002,
		Required   = 0x0000000000000003
	};

	/**
	 * Enum System.Xml.System.Xml.Schema.XmlSchemaValidationFlags
	 */
	enum class XmlSchemaValidationFlags : int32_t
	{
		None                       = 0x0000000000000000,
		ProcessInlineSchema        = 0x0000000000000001,
		ProcessSchemaLocation      = 0x0000000000000002,
		ReportValidationWarnings   = 0x0000000000000004,
		ProcessIdentityConstraints = 0x0000000000000008,
		AllowXmlAttributes         = 0x0000000000000010
	};

	/**
	 * Enum System.Xml.System.Xml.Schema.ValidatorState
	 */
	enum class ValidatorState : int32_t
	{
		None              = 0x0000000000000000,
		Start             = 0x0000000000000001,
		TopLevelAttribute = 0x0000000000000002,
		TopLevelTextOrWS  = 0x0000000000000003,
		Element           = 0x0000000000000004,
		Attribute         = 0x0000000000000005,
		EndOfAttributes   = 0x0000000000000006,
		Text              = 0x0000000000000007,
		Whitespace        = 0x0000000000000008,
		EndElement        = 0x0000000000000009,
		SkipToEndElement  = 0x000000000000000A,
		Finish            = 0x000000000000000B
	};

	/**
	 * Enum System.Xml.System.Xml.Schema.XmlSchemaValidity
	 */
	enum class XmlSchemaValidity : int32_t
	{
		NotKnown = 0x0000000000000000,
		Valid    = 0x0000000000000001,
		Invalid  = 0x0000000000000002
	};

	/**
	 * Enum System.Xml.System.Xml.Schema.XmlSeverityType
	 */
	enum class XmlSeverityType : int32_t
	{
		Error   = 0x0000000000000000,
		Warning = 0x0000000000000001
	};

	/**
	 * Enum System.Xml.System.Xml.Schema.XmlTypeCode
	 */
	enum class XmlTypeCode : int32_t
	{
		None                  = 0x0000000000000000,
		Item                  = 0x0000000000000001,
		Node                  = 0x0000000000000002,
		Document              = 0x0000000000000003,
		Element               = 0x0000000000000004,
		Attribute             = 0x0000000000000005,
		Namespace             = 0x0000000000000006,
		ProcessingInstruction = 0x0000000000000007,
		Comment               = 0x0000000000000008,
		Text                  = 0x0000000000000009,
		AnyAtomicType         = 0x000000000000000A,
		UntypedAtomic         = 0x000000000000000B,
		String                = 0x000000000000000C,
		Boolean               = 0x000000000000000D,
		Decimal               = 0x000000000000000E,
		Float                 = 0x000000000000000F,
		Double                = 0x0000000000000010,
		Duration              = 0x0000000000000011,
		DateTime              = 0x0000000000000012,
		Time                  = 0x0000000000000013,
		Date                  = 0x0000000000000014,
		GYearMonth            = 0x0000000000000015,
		GYear                 = 0x0000000000000016,
		GMonthDay             = 0x0000000000000017,
		GDay                  = 0x0000000000000018,
		GMonth                = 0x0000000000000019,
		HexBinary             = 0x000000000000001A,
		Base64Binary          = 0x000000000000001B,
		AnyUri                = 0x000000000000001C,
		QName                 = 0x000000000000001D,
		Notation              = 0x000000000000001E,
		NormalizedString      = 0x000000000000001F,
		Token                 = 0x0000000000000020,
		Language              = 0x0000000000000021,
		NmToken               = 0x0000000000000022,
		Name                  = 0x0000000000000023,
		NCName                = 0x0000000000000024,
		Id                    = 0x0000000000000025,
		Idref                 = 0x0000000000000026,
		Entity                = 0x0000000000000027,
		Integer               = 0x0000000000000028,
		NonPositiveInteger    = 0x0000000000000029,
		NegativeInteger       = 0x000000000000002A,
		Long                  = 0x000000000000002B,
		Int                   = 0x000000000000002C,
		Short                 = 0x000000000000002D,
		Byte                  = 0x000000000000002E,
		NonNegativeInteger    = 0x000000000000002F,
		UnsignedLong          = 0x0000000000000030,
		UnsignedInt           = 0x0000000000000031,
		UnsignedShort         = 0x0000000000000032,
		UnsignedByte          = 0x0000000000000033,
		PositiveInteger       = 0x0000000000000034,
		YearMonthDuration     = 0x0000000000000035,
		DayTimeDuration       = 0x0000000000000036
	};

	/**
	 * Enum System.Xml.System.Xml.Schema.XsdBuilder+State
	 */
	enum class XsdBuilder_State : int32_t
	{
		Root                      = 0x0000000000000000,
		Schema                    = 0x0000000000000001,
		Annotation                = 0x0000000000000002,
		Include                   = 0x0000000000000003,
		Import                    = 0x0000000000000004,
		Element                   = 0x0000000000000005,
		Attribute                 = 0x0000000000000006,
		AttributeGroup            = 0x0000000000000007,
		AttributeGroupRef         = 0x0000000000000008,
		AnyAttribute              = 0x0000000000000009,
		Group                     = 0x000000000000000A,
		GroupRef                  = 0x000000000000000B,
		All                       = 0x000000000000000C,
		Choice                    = 0x000000000000000D,
		Sequence                  = 0x000000000000000E,
		Any                       = 0x000000000000000F,
		Notation                  = 0x0000000000000010,
		SimpleType                = 0x0000000000000011,
		ComplexType               = 0x0000000000000012,
		ComplexContent            = 0x0000000000000013,
		ComplexContentRestriction = 0x0000000000000014,
		ComplexContentExtension   = 0x0000000000000015,
		SimpleContent             = 0x0000000000000016,
		SimpleContentExtension    = 0x0000000000000017,
		SimpleContentRestriction  = 0x0000000000000018,
		SimpleTypeUnion           = 0x0000000000000019,
		SimpleTypeList            = 0x000000000000001A,
		SimpleTypeRestriction     = 0x000000000000001B,
		Unique                    = 0x000000000000001C,
		Key                       = 0x000000000000001D,
		KeyRef                    = 0x000000000000001E,
		Selector                  = 0x000000000000001F,
		Field                     = 0x0000000000000020,
		MinExclusive              = 0x0000000000000021,
		MinInclusive              = 0x0000000000000022,
		MaxExclusive              = 0x0000000000000023,
		MaxInclusive              = 0x0000000000000024,
		TotalDigits               = 0x0000000000000025,
		FractionDigits            = 0x0000000000000026,
		Length                    = 0x0000000000000027,
		MinLength                 = 0x0000000000000028,
		MaxLength                 = 0x0000000000000029,
		Enumeration               = 0x000000000000002A,
		Pattern                   = 0x000000000000002B,
		WhiteSpace                = 0x000000000000002C,
		AppInfo                   = 0x000000000000002D,
		Documentation             = 0x000000000000002E,
		Redefine                  = 0x000000000000002F
	};

	/**
	 * Enum System.Xml.System.Xml.Schema.XsdDateTimeFlags
	 */
	enum class XsdDateTimeFlags : int32_t
	{
		DateTime        = 0x0000000000000001,
		Time            = 0x0000000000000002,
		Date            = 0x0000000000000004,
		GYearMonth      = 0x0000000000000008,
		GYear           = 0x0000000000000010,
		GMonthDay       = 0x0000000000000020,
		GDay            = 0x0000000000000040,
		GMonth          = 0x0000000000000080,
		XdrDateTimeNoTz = 0x0000000000000100,
		XdrDateTime     = 0x0000000000000200,
		XdrTimeNoTz     = 0x0000000000000400,
		AllXsd          = 0x00000000000000FF
	};

	/**
	 * Enum System.Xml.System.Xml.Schema.XsdDateTime+DateTimeTypeCode
	 */
	enum class XsdDateTime_DateTimeTypeCode : int32_t
	{
		DateTime    = 0x0000000000000000,
		Time        = 0x0000000000000001,
		Date        = 0x0000000000000002,
		GYearMonth  = 0x0000000000000003,
		GYear       = 0x0000000000000004,
		GMonthDay   = 0x0000000000000005,
		GDay        = 0x0000000000000006,
		GMonth      = 0x0000000000000007,
		XdrDateTime = 0x0000000000000008
	};

	/**
	 * Enum System.Xml.System.Xml.Schema.XsdDateTime+XsdDateTimeKind
	 */
	enum class XsdDateTime_XsdDateTimeKind : int32_t
	{
		Unspecified     = 0x0000000000000000,
		Zulu            = 0x0000000000000001,
		LocalWestOfZulu = 0x0000000000000002,
		LocalEastOfZulu = 0x0000000000000003
	};

	/**
	 * Enum System.Xml.System.Xml.Schema.XsdDuration+Parts
	 */
	enum class XsdDuration_Parts : int32_t
	{
		HasNone    = 0x0000000000000000,
		HasYears   = 0x0000000000000001,
		HasMonths  = 0x0000000000000002,
		HasDays    = 0x0000000000000004,
		HasHours   = 0x0000000000000008,
		HasMinutes = 0x0000000000000010,
		HasSeconds = 0x0000000000000020
	};

	/**
	 * Enum System.Xml.System.Xml.Schema.XsdDuration+DurationType
	 */
	enum class XsdDuration_DurationType : int32_t
	{
		Duration          = 0x0000000000000000,
		YearMonthDuration = 0x0000000000000001,
		DayTimeDuration   = 0x0000000000000002
	};

	/**
	 * Enum System.Xml.MS.Internal.Xml.XPath.AstNode+AstType
	 */
	enum class AstNode_AstType : int32_t
	{
		Axis            = 0x0000000000000000,
		Operator        = 0x0000000000000001,
		Filter          = 0x0000000000000002,
		ConstantOperand = 0x0000000000000003,
		Function        = 0x0000000000000004,
		Group           = 0x0000000000000005,
		Root            = 0x0000000000000006,
		Variable        = 0x0000000000000007,
		Error           = 0x0000000000000008
	};

	/**
	 * Enum System.Xml.MS.Internal.Xml.XPath.Axis+AxisType
	 */
	enum class Axis_AxisType : int32_t
	{
		Ancestor         = 0x0000000000000000,
		AncestorOrSelf   = 0x0000000000000001,
		Attribute        = 0x0000000000000002,
		Child            = 0x0000000000000003,
		Descendant       = 0x0000000000000004,
		DescendantOrSelf = 0x0000000000000005,
		Following        = 0x0000000000000006,
		FollowingSibling = 0x0000000000000007,
		Namespace        = 0x0000000000000008,
		Parent           = 0x0000000000000009,
		Preceding        = 0x000000000000000A,
		PrecedingSibling = 0x000000000000000B,
		Self             = 0x000000000000000C,
		None             = 0x000000000000000D
	};

	/**
	 * Enum System.Xml.MS.Internal.Xml.XPath.Function+FunctionType
	 */
	enum class Function_FunctionType : int32_t
	{
		FuncLast            = 0x0000000000000000,
		FuncPosition        = 0x0000000000000001,
		FuncCount           = 0x0000000000000002,
		FuncID              = 0x0000000000000003,
		FuncLocalName       = 0x0000000000000004,
		FuncNameSpaceUri    = 0x0000000000000005,
		FuncName            = 0x0000000000000006,
		FuncString          = 0x0000000000000007,
		FuncBoolean         = 0x0000000000000008,
		FuncNumber          = 0x0000000000000009,
		FuncTrue            = 0x000000000000000A,
		FuncFalse           = 0x000000000000000B,
		FuncNot             = 0x000000000000000C,
		FuncConcat          = 0x000000000000000D,
		FuncStartsWith      = 0x000000000000000E,
		FuncContains        = 0x000000000000000F,
		FuncSubstringBefore = 0x0000000000000010,
		FuncSubstringAfter  = 0x0000000000000011,
		FuncSubstring       = 0x0000000000000012,
		FuncStringLength    = 0x0000000000000013,
		FuncNormalize       = 0x0000000000000014,
		FuncTranslate       = 0x0000000000000015,
		FuncLang            = 0x0000000000000016,
		FuncSum             = 0x0000000000000017,
		FuncFloor           = 0x0000000000000018,
		FuncCeiling         = 0x0000000000000019,
		FuncRound           = 0x000000000000001A,
		FuncUserDefined     = 0x000000000000001B
	};

	/**
	 * Enum System.Xml.MS.Internal.Xml.XPath.Operator+Op
	 */
	enum class Operator_Op : int32_t
	{
		INVALID = 0x0000000000000000,
		OR      = 0x0000000000000001,
		AND     = 0x0000000000000002,
		EQ      = 0x0000000000000003,
		NE      = 0x0000000000000004,
		LT      = 0x0000000000000005,
		LE      = 0x0000000000000006,
		GT      = 0x0000000000000007,
		GE      = 0x0000000000000008,
		PLUS    = 0x0000000000000009,
		MINUS   = 0x000000000000000A,
		MUL     = 0x000000000000000B,
		DIV     = 0x000000000000000C,
		MOD     = 0x000000000000000D,
		UNION   = 0x000000000000000E
	};

	/**
	 * Enum System.Xml.MS.Internal.Xml.XPath.XPathScanner+LexKind
	 */
	enum class XPathScanner_LexKind : int32_t
	{
		Comma      = 0x000000000000002C,
		Slash      = 0x000000000000002F,
		At         = 0x0000000000000040,
		Dot        = 0x000000000000002E,
		LParens    = 0x0000000000000028,
		RParens    = 0x0000000000000029,
		LBracket   = 0x000000000000005B,
		RBracket   = 0x000000000000005D,
		Star       = 0x000000000000002A,
		Plus       = 0x000000000000002B,
		Minus      = 0x000000000000002D,
		Eq         = 0x000000000000003D,
		Lt         = 0x000000000000003C,
		Gt         = 0x000000000000003E,
		Bang       = 0x0000000000000021,
		Dollar     = 0x0000000000000024,
		Apos       = 0x0000000000000027,
		Quote      = 0x0000000000000022,
		Union      = 0x000000000000007C,
		Ne         = 0x000000000000004E,
		Le         = 0x000000000000004C,
		Ge         = 0x0000000000000047,
		And        = 0x0000000000000041,
		Or         = 0x000000000000004F,
		DotDot     = 0x0000000000000044,
		SlashSlash = 0x0000000000000053,
		Name       = 0x000000000000006E,
		String     = 0x0000000000000073,
		Number     = 0x0000000000000064,
		Axe        = 0x0000000000000061,
		Eof        = 0x0000000000000045
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.InputAction+ActionFlags
	 */
	enum class InputAction_ActionFlags : int32_t
	{
		WantsInitialStateCheck = 0x0000000000000001
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.InputActionChange
	 */
	enum class InputActionChange : int32_t
	{
		ActionEnabled              = 0x0000000000000000,
		ActionDisabled             = 0x0000000000000001,
		ActionMapEnabled           = 0x0000000000000002,
		ActionMapDisabled          = 0x0000000000000003,
		ActionStarted              = 0x0000000000000004,
		ActionPerformed            = 0x0000000000000005,
		ActionCanceled             = 0x0000000000000006,
		BoundControlsAboutToChange = 0x0000000000000007,
		BoundControlsChanged       = 0x0000000000000008
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.InputActionMap+Flags
	 */
	enum class InputActionMap_Flags : int32_t
	{
		NeedToResolveBindings               = 0x0000000000000001,
		BindingResolutionNeedsFullReResolve = 0x0000000000000002,
		ControlsForEachActionInitialized    = 0x0000000000000004,
		BindingsForEachActionInitialized    = 0x0000000000000008
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.InputActionRebindingExtensions.RebindingOperation+Flags
	 */
	enum class InputActionRebindingExtensions_RebindingOperation_Flags : int32_t
	{
		Started                             = 0x0000000000000001,
		Completed                           = 0x0000000000000002,
		Canceled                            = 0x0000000000000004,
		OnEventHooked                       = 0x0000000000000008,
		OnAfterUpdateHooked                 = 0x0000000000000010,
		DontIgnoreNoisyControls             = 0x0000000000000040,
		DontGeneralizePathOfSelectedControl = 0x0000000000000080,
		AddNewBinding                       = 0x0000000000000100,
		SuppressMatchingEvents              = 0x0000000000000200
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.InputActionPhase
	 */
	enum class InputActionPhase : int32_t
	{
		Disabled  = 0x0000000000000000,
		Waiting   = 0x0000000000000001,
		Started   = 0x0000000000000002,
		Performed = 0x0000000000000003,
		Canceled  = 0x0000000000000004
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.InputActionState.InteractionState+Flags
	 */
	enum class InputActionState_InteractionState_Flags : int32_t
	{
		TimerRunning = 0x0000000000000001
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.InputActionState.BindingState+Flags
	 */
	enum class InputActionState_BindingState_Flags : int32_t
	{
		ChainsWithNext           = 0x0000000000000001,
		EndOfChain               = 0x0000000000000002,
		Composite                = 0x0000000000000004,
		PartOfComposite          = 0x0000000000000008,
		InitialStateCheckPending = 0x0000000000000010,
		WantsInitialStateCheck   = 0x0000000000000020
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.InputActionState.TriggerState+Flags
	 */
	enum class InputActionState_TriggerState_Flags : int32_t
	{
		HaveMagnitude                   = 0x0000000000000001,
		PassThrough                     = 0x0000000000000002,
		MayNeedConflictResolution       = 0x0000000000000004,
		HasMultipleConcurrentActuations = 0x0000000000000008,
		InProcessing                    = 0x0000000000000010,
		Button                          = 0x0000000000000020,
		Pressed                         = 0x0000000000000040
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.InputActionType
	 */
	enum class InputActionType : int32_t
	{
		Value       = 0x0000000000000000,
		Button      = 0x0000000000000001,
		PassThrough = 0x0000000000000002
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.InputBinding+DisplayStringOptions
	 */
	enum class InputBinding_DisplayStringOptions : int32_t
	{
		DontUseShortDisplayNames = 0x0000000000000001,
		DontOmitDevice           = 0x0000000000000002,
		DontIncludeInteractions  = 0x0000000000000004,
		IgnoreBindingOverrides   = 0x0000000000000008
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.InputBinding+MatchOptions
	 */
	enum class InputBinding_MatchOptions : int32_t
	{
		EmptyGroupMatchesAny = 0x0000000000000001
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.InputBinding+Flags
	 */
	enum class InputBinding_Flags : int32_t
	{
		None            = 0x0000000000000000,
		Composite       = 0x0000000000000004,
		PartOfComposite = 0x0000000000000008
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.InputControlScheme.MatchResult+Result
	 */
	enum class InputControlScheme_MatchResult_Result : int32_t
	{
		AllSatisfied    = 0x0000000000000000,
		MissingRequired = 0x0000000000000001,
		MissingOptional = 0x0000000000000002
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.InputControlScheme.DeviceRequirement+Flags
	 */
	enum class InputControlScheme_DeviceRequirement_Flags : int32_t
	{
		None     = 0x0000000000000000,
		Optional = 0x0000000000000001,
		Or       = 0x0000000000000002
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.InputInteractionContext+Flags
	 */
	enum class InputInteractionContext_Flags : int32_t
	{
		TimerHasExpired = 0x0000000000000002
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.InputControl+ControlFlags
	 */
	enum class InputControl_ControlFlags : int32_t
	{
		ConfigUpToDate            = 0x0000000000000001,
		IsNoisy                   = 0x0000000000000002,
		IsSynthetic               = 0x0000000000000004,
		IsButton                  = 0x0000000000000008,
		DontReset                 = 0x0000000000000010,
		SetupFinished             = 0x0000000000000020,
		UsesStateFromOtherControl = 0x0000000000000040
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.InputControlExtensions+Enumerate
	 */
	enum class InputControlExtensions_Enumerate : int32_t
	{
		IgnoreControlsInDefaultState = 0x0000000000000001,
		IgnoreControlsInCurrentState = 0x0000000000000002,
		IncludeSyntheticControls     = 0x0000000000000004,
		IncludeNoisyControls         = 0x0000000000000008,
		IncludeNonLeafControls       = 0x0000000000000010
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.InputControlLayoutChange
	 */
	enum class InputControlLayoutChange : int32_t
	{
		Added    = 0x0000000000000000,
		Removed  = 0x0000000000000001,
		Replaced = 0x0000000000000002
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.InputControlPath+HumanReadableStringOptions
	 */
	enum class InputControlPath_HumanReadableStringOptions : int32_t
	{
		None          = 0x0000000000000000,
		OmitDevice    = 0x0000000000000002,
		UseShortNames = 0x0000000000000004
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.InputControlPath+PathComponentType
	 */
	enum class InputControlPath_PathComponentType : int32_t
	{
		Name        = 0x0000000000000000,
		DisplayName = 0x0000000000000001,
		Usage       = 0x0000000000000002,
		Layout      = 0x0000000000000003
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.InputDevice+DeviceFlags
	 */
	enum class InputDevice_DeviceFlags : int32_t
	{
		UpdateBeforeRender                     = 0x0000000000000001,
		HasStateCallbacks                      = 0x0000000000000002,
		HasControlsWithDefaultState            = 0x0000000000000004,
		HasDontResetControls                   = 0x0000000000000400,
		HasEventMerger                         = 0x0000000000002000,
		HasEventPreProcessor                   = 0x0000000000004000,
		Remote                                 = 0x0000000000000008,
		Native                                 = 0x0000000000000010,
		DisabledInFrontend                     = 0x0000000000000020,
		DisabledInRuntime                      = 0x0000000000000080,
		DisabledWhileInBackground              = 0x0000000000000100,
		DisabledStateHasBeenQueriedFromRuntime = 0x0000000000000040,
		CanRunInBackground                     = 0x0000000000000800,
		CanRunInBackgroundHasBeenQueried       = 0x0000000000001000
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.InputDeviceChange
	 */
	enum class InputDeviceChange : int32_t
	{
		Added                = 0x0000000000000000,
		Removed              = 0x0000000000000001,
		Disconnected         = 0x0000000000000002,
		Reconnected          = 0x0000000000000003,
		Enabled              = 0x0000000000000004,
		Disabled             = 0x0000000000000005,
		UsageChanged         = 0x0000000000000006,
		ConfigurationChanged = 0x0000000000000007,
		SoftReset            = 0x0000000000000008,
		HardReset            = 0x0000000000000009,
		Destroyed            = 0x000000000000000A
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.Key
	 */
	enum class Key : int32_t
	{
		None           = 0x0000000000000000,
		Space          = 0x0000000000000001,
		Enter          = 0x0000000000000002,
		Tab            = 0x0000000000000003,
		Backquote      = 0x0000000000000004,
		Quote          = 0x0000000000000005,
		Semicolon      = 0x0000000000000006,
		Comma          = 0x0000000000000007,
		Period         = 0x0000000000000008,
		Slash          = 0x0000000000000009,
		Backslash      = 0x000000000000000A,
		LeftBracket    = 0x000000000000000B,
		RightBracket   = 0x000000000000000C,
		Minus          = 0x000000000000000D,
		Equals         = 0x000000000000000E,
		A              = 0x000000000000000F,
		B              = 0x0000000000000010,
		C              = 0x0000000000000011,
		D              = 0x0000000000000012,
		E              = 0x0000000000000013,
		F              = 0x0000000000000014,
		G              = 0x0000000000000015,
		H              = 0x0000000000000016,
		I              = 0x0000000000000017,
		J              = 0x0000000000000018,
		K              = 0x0000000000000019,
		L              = 0x000000000000001A,
		M              = 0x000000000000001B,
		N              = 0x000000000000001C,
		O              = 0x000000000000001D,
		P              = 0x000000000000001E,
		Q              = 0x000000000000001F,
		R              = 0x0000000000000020,
		S              = 0x0000000000000021,
		T              = 0x0000000000000022,
		U              = 0x0000000000000023,
		V              = 0x0000000000000024,
		W              = 0x0000000000000025,
		X              = 0x0000000000000026,
		Y              = 0x0000000000000027,
		Z              = 0x0000000000000028,
		Digit1         = 0x0000000000000029,
		Digit2         = 0x000000000000002A,
		Digit3         = 0x000000000000002B,
		Digit4         = 0x000000000000002C,
		Digit5         = 0x000000000000002D,
		Digit6         = 0x000000000000002E,
		Digit7         = 0x000000000000002F,
		Digit8         = 0x0000000000000030,
		Digit9         = 0x0000000000000031,
		Digit0         = 0x0000000000000032,
		LeftShift      = 0x0000000000000033,
		RightShift     = 0x0000000000000034,
		LeftAlt        = 0x0000000000000035,
		RightAlt       = 0x0000000000000036,
		AltGr          = 0x0000000000000036,
		LeftCtrl       = 0x0000000000000037,
		RightCtrl      = 0x0000000000000038,
		LeftMeta       = 0x0000000000000039,
		RightMeta      = 0x000000000000003A,
		LeftWindows    = 0x0000000000000039,
		RightWindows   = 0x000000000000003A,
		LeftApple      = 0x0000000000000039,
		RightApple     = 0x000000000000003A,
		LeftCommand    = 0x0000000000000039,
		RightCommand   = 0x000000000000003A,
		ContextMenu    = 0x000000000000003B,
		Escape         = 0x000000000000003C,
		LeftArrow      = 0x000000000000003D,
		RightArrow     = 0x000000000000003E,
		UpArrow        = 0x000000000000003F,
		DownArrow      = 0x0000000000000040,
		Backspace      = 0x0000000000000041,
		PageDown       = 0x0000000000000042,
		PageUp         = 0x0000000000000043,
		Home           = 0x0000000000000044,
		End            = 0x0000000000000045,
		Insert         = 0x0000000000000046,
		Delete         = 0x0000000000000047,
		CapsLock       = 0x0000000000000048,
		NumLock        = 0x0000000000000049,
		PrintScreen    = 0x000000000000004A,
		ScrollLock     = 0x000000000000004B,
		Pause          = 0x000000000000004C,
		NumpadEnter    = 0x000000000000004D,
		NumpadDivide   = 0x000000000000004E,
		NumpadMultiply = 0x000000000000004F,
		NumpadPlus     = 0x0000000000000050,
		NumpadMinus    = 0x0000000000000051,
		NumpadPeriod   = 0x0000000000000052,
		NumpadEquals   = 0x0000000000000053,
		Numpad0        = 0x0000000000000054,
		Numpad1        = 0x0000000000000055,
		Numpad2        = 0x0000000000000056,
		Numpad3        = 0x0000000000000057,
		Numpad4        = 0x0000000000000058,
		Numpad5        = 0x0000000000000059,
		Numpad6        = 0x000000000000005A,
		Numpad7        = 0x000000000000005B,
		Numpad8        = 0x000000000000005C,
		Numpad9        = 0x000000000000005D,
		F1             = 0x000000000000005E,
		F2             = 0x000000000000005F,
		F3             = 0x0000000000000060,
		F4             = 0x0000000000000061,
		F5             = 0x0000000000000062,
		F6             = 0x0000000000000063,
		F7             = 0x0000000000000064,
		F8             = 0x0000000000000065,
		F9             = 0x0000000000000066,
		F10            = 0x0000000000000067,
		F11            = 0x0000000000000068,
		F12            = 0x0000000000000069,
		OEM1           = 0x000000000000006A,
		OEM2           = 0x000000000000006B,
		OEM3           = 0x000000000000006C,
		OEM4           = 0x000000000000006D,
		OEM5           = 0x000000000000006E,
		IMESelected    = 0x000000000000006F
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.PenButton
	 */
	enum class PenButton : int32_t
	{
		Tip          = 0x0000000000000000,
		Eraser       = 0x0000000000000001,
		BarrelFirst  = 0x0000000000000002,
		BarrelSecond = 0x0000000000000003,
		InRange      = 0x0000000000000004,
		BarrelThird  = 0x0000000000000005,
		BarrelFourth = 0x0000000000000006,
		Barrel1      = 0x0000000000000002,
		Barrel2      = 0x0000000000000003,
		Barrel3      = 0x0000000000000005,
		Barrel4      = 0x0000000000000006
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.InputRemoting+MessageType
	 */
	enum class InputRemoting_MessageType : int32_t
	{
		Connect      = 0x0000000000000000,
		Disconnect   = 0x0000000000000001,
		NewLayout    = 0x0000000000000002,
		NewDevice    = 0x0000000000000003,
		NewEvents    = 0x0000000000000004,
		RemoveDevice = 0x0000000000000005,
		RemoveLayout = 0x0000000000000006,
		ChangeUsages = 0x0000000000000007,
		StartSending = 0x0000000000000008,
		StopSending  = 0x0000000000000009
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.InputRemoting+Flags
	 */
	enum class InputRemoting_Flags : int32_t
	{
		Sending               = 0x0000000000000001,
		StartSendingOnConnect = 0x0000000000000002
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.TouchPhase
	 */
	enum class TouchPhase : int32_t
	{
		None       = 0x0000000000000000,
		Began      = 0x0000000000000001,
		Moved      = 0x0000000000000002,
		Ended      = 0x0000000000000003,
		Canceled   = 0x0000000000000004,
		Stationary = 0x0000000000000005
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.InputManager+DeviceDisableScope
	 */
	enum class InputManager_DeviceDisableScope : int32_t
	{
		Everywhere                         = 0x0000000000000000,
		InFrontendOnly                     = 0x0000000000000001,
		TemporaryWhilePlayerIsInBackground = 0x0000000000000002
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.InputSettings+UpdateMode
	 */
	enum class InputSettings_UpdateMode : int32_t
	{
		ProcessEventsInDynamicUpdate = 0x0000000000000001,
		ProcessEventsInFixedUpdate   = 0x0000000000000002,
		ProcessEventsManually        = 0x0000000000000003
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.InputSettings+BackgroundBehavior
	 */
	enum class InputSettings_BackgroundBehavior : int32_t
	{
		ResetAndDisableNonBackgroundDevices = 0x0000000000000000,
		ResetAndDisableAllDevices           = 0x0000000000000001,
		IgnoreFocus                         = 0x0000000000000002
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.InputSettings+EditorInputBehaviorInPlayMode
	 */
	enum class InputSettings_EditorInputBehaviorInPlayMode : int32_t
	{
		PointersAndKeyboardsRespectGameViewFocus = 0x0000000000000000,
		AllDevicesRespectGameViewFocus           = 0x0000000000000001,
		AllDeviceInputAlwaysGoesToGameView       = 0x0000000000000002
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.PlayerJoinBehavior
	 */
	enum class PlayerJoinBehavior : int32_t
	{
		JoinPlayersWhenButtonIsPressed       = 0x0000000000000000,
		JoinPlayersWhenJoinActionIsTriggered = 0x0000000000000001,
		JoinPlayersManually                  = 0x0000000000000002
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.PlayerNotifications
	 */
	enum class PlayerNotifications : int32_t
	{
		SendMessages       = 0x0000000000000000,
		BroadcastMessages  = 0x0000000000000001,
		InvokeUnityEvents  = 0x0000000000000002,
		InvokeCSharpEvents = 0x0000000000000003
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.XR.TrackedPoseDriver+TrackingType
	 */
	enum class TrackedPoseDriver_TrackingType : int32_t
	{
		RotationAndPosition = 0x0000000000000000,
		RotationOnly        = 0x0000000000000001,
		PositionOnly        = 0x0000000000000002
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.XR.TrackedPoseDriver+UpdateType
	 */
	enum class TrackedPoseDriver_UpdateType : int32_t
	{
		UpdateAndBeforeRender = 0x0000000000000000,
		Update                = 0x0000000000000001,
		BeforeRender          = 0x0000000000000002
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.XR.FeatureType
	 */
	enum class FeatureType : int32_t
	{
		Custom         = 0x0000000000000000,
		Binary         = 0x0000000000000001,
		DiscreteStates = 0x0000000000000002,
		Axis1D         = 0x0000000000000003,
		Axis2D         = 0x0000000000000004,
		Axis3D         = 0x0000000000000005,
		Rotation       = 0x0000000000000006,
		Hand           = 0x0000000000000007,
		Bone           = 0x0000000000000008,
		Eyes           = 0x0000000000000009
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.XInput.XInputController+DeviceType
	 */
	enum class XInputController_DeviceType : int32_t
	{
		Gamepad = 0x0000000000000000
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.XInput.XInputController+DeviceSubType
	 */
	enum class XInputController_DeviceSubType : int32_t
	{
		Unknown         = 0x0000000000000000,
		Gamepad         = 0x0000000000000001,
		Wheel           = 0x0000000000000002,
		ArcadeStick     = 0x0000000000000003,
		FlightStick     = 0x0000000000000004,
		DancePad        = 0x0000000000000005,
		Guitar          = 0x0000000000000006,
		GuitarAlternate = 0x0000000000000007,
		DrumKit         = 0x0000000000000008,
		GuitarBass      = 0x000000000000000B,
		ArcadePad       = 0x0000000000000013
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.XInput.XInputController+DeviceFlags
	 */
	enum class XInputController_DeviceFlags : int32_t
	{
		ForceFeedbackSupported = 0x0000000000000001,
		Wireless               = 0x0000000000000002,
		VoiceSupported         = 0x0000000000000004,
		PluginModulesSupported = 0x0000000000000008,
		NoNavigation           = 0x0000000000000010
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.XInput.LowLevel.XInputControllerWindowsState+Button
	 */
	enum class XInputControllerWindowsState_Button : int32_t
	{
		DPadUp               = 0x0000000000000000,
		DPadDown             = 0x0000000000000001,
		DPadLeft             = 0x0000000000000002,
		DPadRight            = 0x0000000000000003,
		Start                = 0x0000000000000004,
		Select               = 0x0000000000000005,
		LeftThumbstickPress  = 0x0000000000000006,
		RightThumbstickPress = 0x0000000000000007,
		LeftShoulder         = 0x0000000000000008,
		RightShoulder        = 0x0000000000000009,
		A                    = 0x000000000000000C,
		B                    = 0x000000000000000D,
		X                    = 0x000000000000000E,
		Y                    = 0x000000000000000F
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.Users.InputUser+UserFlags
	 */
	enum class InputUser_UserFlags : int32_t
	{
		BindToAllDevices               = 0x0000000000000001,
		UserAccountSelectionInProgress = 0x0000000000000002
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.Users.InputUserChange
	 */
	enum class InputUserChange : int32_t
	{
		Added                      = 0x0000000000000000,
		Removed                    = 0x0000000000000001,
		DevicePaired               = 0x0000000000000002,
		DeviceUnpaired             = 0x0000000000000003,
		DeviceLost                 = 0x0000000000000004,
		DeviceRegained             = 0x0000000000000005,
		AccountChanged             = 0x0000000000000006,
		AccountNameChanged         = 0x0000000000000007,
		AccountSelectionInProgress = 0x0000000000000008,
		AccountSelectionCanceled   = 0x0000000000000009,
		AccountSelectionComplete   = 0x000000000000000A,
		ControlSchemeChanged       = 0x000000000000000B,
		ControlsChanged            = 0x000000000000000C
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.Users.InputUserPairingOptions
	 */
	enum class InputUserPairingOptions : int32_t
	{
		None                                = 0x0000000000000000,
		ForcePlatformUserAccountSelection   = 0x0000000000000001,
		ForceNoPlatformUserAccountSelection = 0x0000000000000002,
		UnpairCurrentDevicesFromUser        = 0x0000000000000008
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.UI.UIPointerType
	 */
	enum class UIPointerType : int32_t
	{
		None       = 0x0000000000000000,
		MouseOrPen = 0x0000000000000001,
		Touch      = 0x0000000000000002,
		Tracked    = 0x0000000000000003
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.UI.UIPointerBehavior
	 */
	enum class UIPointerBehavior : int32_t
	{
		SingleMouseOrPenButMultiTouchAndTrack = 0x0000000000000000,
		SingleUnifiedPointer                  = 0x0000000000000001,
		AllPointersAsIs                       = 0x0000000000000002
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.UI.InputSystemUIInputModule+CursorLockBehavior
	 */
	enum class InputSystemUIInputModule_CursorLockBehavior : int32_t
	{
		OutsideScreen = 0x0000000000000000,
		ScreenCenter  = 0x0000000000000001
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.UI.VirtualMouseInput+CursorMode
	 */
	enum class VirtualMouseInput_CursorMode : int32_t
	{
		SoftwareCursor            = 0x0000000000000000,
		HardwareCursorIfAvailable = 0x0000000000000001
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.Switch.SwitchProControllerHID.SwitchMagicOutputReport+ReportType
	 */
	enum class SwitchProControllerHID_SwitchMagicOutputReport_ReportType : int32_t
	{
		Magic = 0x0000000000000080
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.Switch.SwitchProControllerHID.SwitchMagicOutputReport+CommandIdType
	 */
	enum class SwitchProControllerHID_SwitchMagicOutputReport_CommandIdType : int32_t
	{
		Status    = 0x0000000000000001,
		Handshake = 0x0000000000000002,
		Highspeed = 0x0000000000000003,
		ForceUSB  = 0x0000000000000004
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.Switch.LowLevel.SwitchProControllerHIDInputState+Button
	 */
	enum class SwitchProControllerHIDInputState_Button : int32_t
	{
		Up      = 0x0000000000000000,
		Right   = 0x0000000000000001,
		Down    = 0x0000000000000002,
		Left    = 0x0000000000000003,
		West    = 0x0000000000000004,
		North   = 0x0000000000000005,
		South   = 0x0000000000000006,
		East    = 0x0000000000000007,
		L       = 0x0000000000000008,
		R       = 0x0000000000000009,
		StickL  = 0x000000000000000A,
		StickR  = 0x000000000000000B,
		ZL      = 0x000000000000000C,
		ZR      = 0x000000000000000D,
		Plus    = 0x000000000000000E,
		Minus   = 0x000000000000000F,
		Capture = 0x0000000000000010,
		Home    = 0x0000000000000011,
		X       = 0x0000000000000005,
		B       = 0x0000000000000006,
		Y       = 0x0000000000000004,
		A       = 0x0000000000000007
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.HID.HID+HIDReportType
	 */
	enum class HID_HIDReportType : int32_t
	{
		Unknown = 0x0000000000000000,
		Input   = 0x0000000000000001,
		Output  = 0x0000000000000002,
		Feature = 0x0000000000000003
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.HID.HID+HIDCollectionType
	 */
	enum class HID_HIDCollectionType : int32_t
	{
		Physical      = 0x0000000000000000,
		Application   = 0x0000000000000001,
		Logical       = 0x0000000000000002,
		Report        = 0x0000000000000003,
		NamedArray    = 0x0000000000000004,
		UsageSwitch   = 0x0000000000000005,
		UsageModifier = 0x0000000000000006
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.HID.HID+HIDElementFlags
	 */
	enum class HID_HIDElementFlags : int32_t
	{
		Constant      = 0x0000000000000001,
		Variable      = 0x0000000000000002,
		Relative      = 0x0000000000000004,
		Wrap          = 0x0000000000000008,
		NonLinear     = 0x0000000000000010,
		NoPreferred   = 0x0000000000000020,
		NullState     = 0x0000000000000040,
		Volatile      = 0x0000000000000080,
		BufferedBytes = 0x0000000000000100
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.HID.HID+UsagePage
	 */
	enum class HID_UsagePage : int32_t
	{
		Undefined             = 0x0000000000000000,
		GenericDesktop        = 0x0000000000000001,
		Simulation            = 0x0000000000000002,
		VRControls            = 0x0000000000000003,
		SportControls         = 0x0000000000000004,
		GameControls          = 0x0000000000000005,
		GenericDeviceControls = 0x0000000000000006,
		Keyboard              = 0x0000000000000007,
		LEDs                  = 0x0000000000000008,
		Button                = 0x0000000000000009,
		Ordinal               = 0x000000000000000A,
		Telephony             = 0x000000000000000B,
		Consumer              = 0x000000000000000C,
		Digitizer             = 0x000000000000000D,
		PID                   = 0x000000000000000F,
		Unicode               = 0x0000000000000010,
		AlphanumericDisplay   = 0x0000000000000014,
		MedicalInstruments    = 0x0000000000000040,
		Monitor               = 0x0000000000000080,
		Power                 = 0x0000000000000084,
		BarCodeScanner        = 0x000000000000008C,
		MagneticStripeReader  = 0x000000000000008E,
		Camera                = 0x0000000000000090,
		Arcade                = 0x0000000000000091,
		VendorDefined         = 0x000000000000FF00
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.HID.HID+GenericDesktop
	 */
	enum class HID_GenericDesktop : int32_t
	{
		Undefined                         = 0x0000000000000000,
		Pointer                           = 0x0000000000000001,
		Mouse                             = 0x0000000000000002,
		Joystick                          = 0x0000000000000004,
		Gamepad                           = 0x0000000000000005,
		Keyboard                          = 0x0000000000000006,
		Keypad                            = 0x0000000000000007,
		MultiAxisController               = 0x0000000000000008,
		TabletPCControls                  = 0x0000000000000009,
		AssistiveControl                  = 0x000000000000000A,
		X                                 = 0x0000000000000030,
		Y                                 = 0x0000000000000031,
		Z                                 = 0x0000000000000032,
		Rx                                = 0x0000000000000033,
		Ry                                = 0x0000000000000034,
		Rz                                = 0x0000000000000035,
		Slider                            = 0x0000000000000036,
		Dial                              = 0x0000000000000037,
		Wheel                             = 0x0000000000000038,
		HatSwitch                         = 0x0000000000000039,
		CountedBuffer                     = 0x000000000000003A,
		ByteCount                         = 0x000000000000003B,
		MotionWakeup                      = 0x000000000000003C,
		Start                             = 0x000000000000003D,
		Select                            = 0x000000000000003E,
		Vx                                = 0x0000000000000040,
		Vy                                = 0x0000000000000041,
		Vz                                = 0x0000000000000042,
		Vbrx                              = 0x0000000000000043,
		Vbry                              = 0x0000000000000044,
		Vbrz                              = 0x0000000000000045,
		Vno                               = 0x0000000000000046,
		FeatureNotification               = 0x0000000000000047,
		ResolutionMultiplier              = 0x0000000000000048,
		SystemControl                     = 0x0000000000000080,
		SystemPowerDown                   = 0x0000000000000081,
		SystemSleep                       = 0x0000000000000082,
		SystemWakeUp                      = 0x0000000000000083,
		SystemContextMenu                 = 0x0000000000000084,
		SystemMainMenu                    = 0x0000000000000085,
		SystemAppMenu                     = 0x0000000000000086,
		SystemMenuHelp                    = 0x0000000000000087,
		SystemMenuExit                    = 0x0000000000000088,
		SystemMenuSelect                  = 0x0000000000000089,
		SystemMenuRight                   = 0x000000000000008A,
		SystemMenuLeft                    = 0x000000000000008B,
		SystemMenuUp                      = 0x000000000000008C,
		SystemMenuDown                    = 0x000000000000008D,
		SystemColdRestart                 = 0x000000000000008E,
		SystemWarmRestart                 = 0x000000000000008F,
		DpadUp                            = 0x0000000000000090,
		DpadDown                          = 0x0000000000000091,
		DpadRight                         = 0x0000000000000092,
		DpadLeft                          = 0x0000000000000093,
		SystemDock                        = 0x00000000000000A0,
		SystemUndock                      = 0x00000000000000A1,
		SystemSetup                       = 0x00000000000000A2,
		SystemBreak                       = 0x00000000000000A3,
		SystemDebuggerBreak               = 0x00000000000000A4,
		ApplicationBreak                  = 0x00000000000000A5,
		ApplicationDebuggerBreak          = 0x00000000000000A6,
		SystemSpeakerMute                 = 0x00000000000000A7,
		SystemHibernate                   = 0x00000000000000A8,
		SystemDisplayInvert               = 0x00000000000000B0,
		SystemDisplayInternal             = 0x00000000000000B1,
		SystemDisplayExternal             = 0x00000000000000B2,
		SystemDisplayBoth                 = 0x00000000000000B3,
		SystemDisplayDual                 = 0x00000000000000B4,
		SystemDisplayToggleIntExt         = 0x00000000000000B5,
		SystemDisplaySwapPrimarySecondary = 0x00000000000000B6,
		SystemDisplayLCDAutoScale         = 0x00000000000000B7
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.HID.HID+Simulation
	 */
	enum class HID_Simulation : int32_t
	{
		Undefined                   = 0x0000000000000000,
		FlightSimulationDevice      = 0x0000000000000001,
		AutomobileSimulationDevice  = 0x0000000000000002,
		TankSimulationDevice        = 0x0000000000000003,
		SpaceshipSimulationDevice   = 0x0000000000000004,
		SubmarineSimulationDevice   = 0x0000000000000005,
		SailingSimulationDevice     = 0x0000000000000006,
		MotorcycleSimulationDevice  = 0x0000000000000007,
		SportsSimulationDevice      = 0x0000000000000008,
		AirplaneSimulationDevice    = 0x0000000000000009,
		HelicopterSimulationDevice  = 0x000000000000000A,
		MagicCarpetSimulationDevice = 0x000000000000000B,
		BicylcleSimulationDevice    = 0x000000000000000C,
		FlightControlStick          = 0x0000000000000020,
		FlightStick                 = 0x0000000000000021,
		CyclicControl               = 0x0000000000000022,
		CyclicTrim                  = 0x0000000000000023,
		FlightYoke                  = 0x0000000000000024,
		TrackControl                = 0x0000000000000025,
		Aileron                     = 0x00000000000000B0,
		AileronTrim                 = 0x00000000000000B1,
		AntiTorqueControl           = 0x00000000000000B2,
		AutopilotEnable             = 0x00000000000000B3,
		ChaffRelease                = 0x00000000000000B4,
		CollectiveControl           = 0x00000000000000B5,
		DiveBreak                   = 0x00000000000000B6,
		ElectronicCountermeasures   = 0x00000000000000B7,
		Elevator                    = 0x00000000000000B8,
		ElevatorTrim                = 0x00000000000000B9,
		Rudder                      = 0x00000000000000BA,
		Throttle                    = 0x00000000000000BB,
		FlightCommunications        = 0x00000000000000BC,
		FlareRelease                = 0x00000000000000BD,
		LandingGear                 = 0x00000000000000BE,
		ToeBreak                    = 0x00000000000000BF,
		Trigger                     = 0x00000000000000C0,
		WeaponsArm                  = 0x00000000000000C1,
		WeaponsSelect               = 0x00000000000000C2,
		WingFlaps                   = 0x00000000000000C3,
		Accelerator                 = 0x00000000000000C4,
		Brake                       = 0x00000000000000C5,
		Clutch                      = 0x00000000000000C6,
		Shifter                     = 0x00000000000000C7,
		Steering                    = 0x00000000000000C8,
		TurretDirection             = 0x00000000000000C9,
		BarrelElevation             = 0x00000000000000CA,
		DivePlane                   = 0x00000000000000CB,
		Ballast                     = 0x00000000000000CC,
		BicycleCrank                = 0x00000000000000CD,
		HandleBars                  = 0x00000000000000CE,
		FrontBrake                  = 0x00000000000000CF,
		RearBrake                   = 0x00000000000000D0
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.HID.HID+Button
	 */
	enum class HID_Button : int32_t
	{
		Undefined = 0x0000000000000000,
		Primary   = 0x0000000000000001,
		Secondary = 0x0000000000000002,
		Tertiary  = 0x0000000000000003
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.HID.HIDParser+HIDItemTypeAndTag
	 */
	enum class HIDParser_HIDItemTypeAndTag : int32_t
	{
		Input             = 0x0000000000000080,
		Output            = 0x0000000000000090,
		Feature           = 0x00000000000000B0,
		Collection        = 0x00000000000000A0,
		EndCollection     = 0x00000000000000C0,
		UsagePage         = 0x0000000000000004,
		LogicalMinimum    = 0x0000000000000014,
		LogicalMaximum    = 0x0000000000000024,
		PhysicalMinimum   = 0x0000000000000034,
		PhysicalMaximum   = 0x0000000000000044,
		UnitExponent      = 0x0000000000000054,
		Unit              = 0x0000000000000064,
		ReportSize        = 0x0000000000000074,
		ReportID          = 0x0000000000000084,
		ReportCount       = 0x0000000000000094,
		Push              = 0x00000000000000A4,
		Pop               = 0x00000000000000B4,
		Usage             = 0x0000000000000008,
		UsageMinimum      = 0x0000000000000018,
		UsageMaximum      = 0x0000000000000028,
		DesignatorIndex   = 0x0000000000000038,
		DesignatorMinimum = 0x0000000000000048,
		DesignatorMaximum = 0x0000000000000058,
		StringIndex       = 0x0000000000000078,
		StringMinimum     = 0x0000000000000088,
		StringMaximum     = 0x0000000000000098,
		Delimiter         = 0x00000000000000A8
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.DualShock.LowLevel.DualShockHIDOutputReport+Flags
	 */
	enum class DualShockHIDOutputReport_Flags : int32_t
	{
		Rumble = 0x0000000000000001,
		Color  = 0x0000000000000002
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.LowLevel.InitiateUserAccountPairingCommand+Result
	 */
	enum class InitiateUserAccountPairingCommand_Result : int32_t
	{
		SuccessfullyInitiated  = 0x0000000000000001,
		ErrorNotSupported      = -1,
		ErrorAlreadyInProgress = -2
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.LowLevel.QueryPairedUserAccountCommand+Result
	 */
	enum class QueryPairedUserAccountCommand_Result : int64_t
	{
		DevicePairedToUserAccount      = 0x0000000000000002,
		UserAccountSelectionInProgress = 0x0000000000000004,
		UserAccountSelectionComplete   = 0x0000000000000008,
		UserAccountSelectionCanceled   = 0x0000000000000010
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.LowLevel.GamepadButton
	 */
	enum class GamepadButton : int32_t
	{
		DpadUp        = 0x0000000000000000,
		DpadDown      = 0x0000000000000001,
		DpadLeft      = 0x0000000000000002,
		DpadRight     = 0x0000000000000003,
		North         = 0x0000000000000004,
		East          = 0x0000000000000005,
		South         = 0x0000000000000006,
		West          = 0x0000000000000007,
		LeftStick     = 0x0000000000000008,
		RightStick    = 0x0000000000000009,
		LeftShoulder  = 0x000000000000000A,
		RightShoulder = 0x000000000000000B,
		Start         = 0x000000000000000C,
		Select        = 0x000000000000000D,
		LeftTrigger   = 0x0000000000000020,
		RightTrigger  = 0x0000000000000021,
		X             = 0x0000000000000007,
		Y             = 0x0000000000000004,
		A             = 0x0000000000000006,
		B             = 0x0000000000000005,
		Cross         = 0x0000000000000006,
		Square        = 0x0000000000000007,
		Triangle      = 0x0000000000000004,
		Circle        = 0x0000000000000005
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.LowLevel.JoystickState+Button
	 */
	enum class JoystickState_Button : int32_t
	{
		HatSwitchUp    = 0x0000000000000000,
		HatSwitchDown  = 0x0000000000000001,
		HatSwitchLeft  = 0x0000000000000002,
		HatSwitchRight = 0x0000000000000003,
		Trigger        = 0x0000000000000004
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.LowLevel.MouseButton
	 */
	enum class MouseButton : int32_t
	{
		Left    = 0x0000000000000000,
		Right   = 0x0000000000000001,
		Middle  = 0x0000000000000002,
		Forward = 0x0000000000000003,
		Back    = 0x0000000000000004
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.LowLevel.TouchFlags
	 */
	enum class TouchFlags : uint8_t
	{
		IndirectTouch        = 0x0000000000000001,
		PrimaryTouch         = 0x0000000000000008,
		TapPress             = 0x0000000000000010,
		TapRelease           = 0x0000000000000020,
		OrphanedPrimaryTouch = 0x0000000000000040,
		BeganInSameFrame     = 0x0000000000000080
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.LowLevel.InputEventTrace+FileFlags
	 */
	enum class InputEventTrace_FileFlags : int32_t
	{
		FixedUpdate = 0x0000000000000001
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.LowLevel.InputUpdateType
	 */
	enum class InputUpdateType : int32_t
	{
		None         = 0x0000000000000000,
		Dynamic      = 0x0000000000000001,
		Fixed        = 0x0000000000000002,
		BeforeRender = 0x0000000000000004,
		Editor       = 0x0000000000000008,
		Manual       = 0x0000000000000010,
		Default      = 0x000000000000000B
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.Layouts.InputControlLayout.ControlItem+Flags
	 */
	enum class InputControlLayout_ControlItem_Flags : int32_t
	{
		isModifyingExistingControl = 0x0000000000000001,
		IsNoisy                    = 0x0000000000000002,
		IsSynthetic                = 0x0000000000000004,
		IsFirstDefinedInThisLayout = 0x0000000000000008,
		DontReset                  = 0x0000000000000010
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.Layouts.InputControlLayout+Flags
	 */
	enum class InputControlLayout_Flags : int32_t
	{
		IsGenericTypeOfDevice   = 0x0000000000000001,
		HideInUI                = 0x0000000000000002,
		IsOverride              = 0x0000000000000004,
		CanRunInBackground      = 0x0000000000000008,
		CanRunInBackgroundIsSet = 0x0000000000000010,
		IsNoisy                 = 0x0000000000000020
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.Controls.AxisControl+Clamp
	 */
	enum class AxisControl_Clamp : int32_t
	{
		None                      = 0x0000000000000000,
		BeforeNormalize           = 0x0000000000000001,
		AfterNormalize            = 0x0000000000000002,
		ToConstantBeforeNormalize = 0x0000000000000003
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.Controls.DiscreteButtonControl+WriteMode
	 */
	enum class DiscreteButtonControl_WriteMode : int32_t
	{
		WriteDisabled        = 0x0000000000000000,
		WriteNullAndMaxValue = 0x0000000000000001
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.Controls.DpadControl+ButtonBits
	 */
	enum class DpadControl_ButtonBits : int32_t
	{
		Up    = 0x0000000000000000,
		Down  = 0x0000000000000001,
		Left  = 0x0000000000000002,
		Right = 0x0000000000000003
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.Interactions.MultiTapInteraction+TapPhase
	 */
	enum class MultiTapInteraction_TapPhase : int32_t
	{
		None                  = 0x0000000000000000,
		WaitingForNextRelease = 0x0000000000000001,
		WaitingForNextPress   = 0x0000000000000002
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.Interactions.PressBehavior
	 */
	enum class PressBehavior : int32_t
	{
		PressOnly       = 0x0000000000000000,
		ReleaseOnly     = 0x0000000000000001,
		PressAndRelease = 0x0000000000000002
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.Utilities.JsonParser+JsonValueType
	 */
	enum class JsonParser_JsonValueType : int32_t
	{
		None    = 0x0000000000000000,
		Bool    = 0x0000000000000001,
		Real    = 0x0000000000000002,
		Integer = 0x0000000000000003,
		String  = 0x0000000000000004,
		Array   = 0x0000000000000005,
		Object  = 0x0000000000000006,
		Any     = 0x0000000000000007
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.Composites.AxisComposite+WhichSideWins
	 */
	enum class AxisComposite_WhichSideWins : int32_t
	{
		Neither  = 0x0000000000000000,
		Positive = 0x0000000000000001,
		Negative = 0x0000000000000002
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.Composites.Vector2Composite+Mode
	 */
	enum class Vector2Composite_Mode : int32_t
	{
		Analog            = 0x0000000000000002,
		DigitalNormalized = 0x0000000000000000,
		Digital           = 0x0000000000000001
	};

	/**
	 * Enum Unity.InputSystem.UnityEngine.InputSystem.Composites.Vector3Composite+Mode
	 */
	enum class Vector3Composite_Mode : int32_t
	{
		Analog            = 0x0000000000000000,
		DigitalNormalized = 0x0000000000000001,
		Digital           = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.DynamicAtlasFilters
	 */
	enum class DynamicAtlasFilters : int32_t
	{
		None        = 0x0000000000000000,
		Readability = 0x0000000000000001,
		Size        = 0x0000000000000002,
		Format      = 0x0000000000000004,
		ColorSpace  = 0x0000000000000008,
		FilterMode  = 0x0000000000000010
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.ClampedDragger+DragDirection<T>
	 */
	enum class ClampedDragger_DragDirection_T : int32_t
	{
		None      = 0x0000000000000000,
		LowToHigh = 0x0000000000000001,
		HighToLow = 0x0000000000000002,
		Free      = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.DefaultEventSystem+UpdateMode
	 */
	enum class DefaultEventSystem_UpdateMode : int32_t
	{
		Always                = 0x0000000000000000,
		IgnoreIfAppNotFocused = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.DropdownMenuAction+Status
	 */
	enum class DropdownMenuAction_Status : int32_t
	{
		None     = 0x0000000000000000,
		Normal   = 0x0000000000000001,
		Disabled = 0x0000000000000002,
		Checked  = 0x0000000000000004,
		Hidden   = 0x0000000000000008
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.DispatchMode
	 */
	enum class DispatchMode : int32_t
	{
		Default   = 0x0000000000000001,
		Queued    = 0x0000000000000001,
		Immediate = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.SelectionType
	 */
	enum class SelectionType : int32_t
	{
		None     = 0x0000000000000000,
		Single   = 0x0000000000000001,
		Multiple = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.KeyboardNavigationOperation
	 */
	enum class KeyboardNavigationOperation : int32_t
	{
		None      = 0x0000000000000000,
		SelectAll = 0x0000000000000001,
		Cancel    = 0x0000000000000002,
		Submit    = 0x0000000000000003,
		Previous  = 0x0000000000000004,
		Next      = 0x0000000000000005,
		PageUp    = 0x0000000000000006,
		PageDown  = 0x0000000000000007,
		Begin     = 0x0000000000000008,
		End       = 0x0000000000000009
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.MouseButton
	 */
	enum class MouseButton_1 : int32_t
	{
		LeftMouse   = 0x0000000000000000,
		RightMouse  = 0x0000000000000001,
		MiddleMouse = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.ContextType
	 */
	enum class ContextType : int32_t
	{
		Player = 0x0000000000000000,
		Editor = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.VersionChangeType
	 */
	enum class VersionChangeType : int32_t
	{
		Bindings           = 0x0000000000000001,
		ViewData           = 0x0000000000000002,
		Hierarchy          = 0x0000000000000004,
		Layout             = 0x0000000000000008,
		StyleSheet         = 0x0000000000000010,
		Styles             = 0x0000000000000020,
		Overflow           = 0x0000000000000040,
		BorderRadius       = 0x0000000000000080,
		BorderWidth        = 0x0000000000000100,
		Transform          = 0x0000000000000200,
		Size               = 0x0000000000000400,
		Repaint            = 0x0000000000000800,
		Opacity            = 0x0000000000001000,
		Color              = 0x0000000000002000,
		RenderHints        = 0x0000000000004000,
		TransitionProperty = 0x0000000000008000
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.UsageHints
	 */
	enum class UsageHints : int32_t
	{
		None             = 0x0000000000000000,
		DynamicTransform = 0x0000000000000001,
		GroupTransform   = 0x0000000000000002,
		MaskContainer    = 0x0000000000000004,
		DynamicColor     = 0x0000000000000008
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.RenderHints
	 */
	enum class RenderHints : int32_t
	{
		None                  = 0x0000000000000000,
		GroupTransform        = 0x0000000000000001,
		BoneTransform         = 0x0000000000000002,
		ClipWithScissors      = 0x0000000000000004,
		MaskContainer         = 0x0000000000000008,
		DynamicColor          = 0x0000000000000010,
		DirtyOffset           = 0x0000000000000005,
		DirtyGroupTransform   = 0x0000000000000020,
		DirtyBoneTransform    = 0x0000000000000040,
		DirtyClipWithScissors = 0x0000000000000080,
		DirtyMaskContainer    = 0x0000000000000100,
		DirtyAll              = 0x00000000000001E0
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.Position
	 */
	enum class Position_1 : int32_t
	{
		Relative = 0x0000000000000000,
		Absolute = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.OverflowInternal
	 */
	enum class OverflowInternal : int32_t
	{
		Visible = 0x0000000000000000,
		Hidden  = 0x0000000000000001,
		Scroll  = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.OverflowClipBox
	 */
	enum class OverflowClipBox : int32_t
	{
		PaddingBox = 0x0000000000000000,
		ContentBox = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.FlexDirection
	 */
	enum class FlexDirection : int32_t
	{
		Column        = 0x0000000000000000,
		ColumnReverse = 0x0000000000000001,
		Row           = 0x0000000000000002,
		RowReverse    = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.Wrap
	 */
	enum class Wrap : int32_t
	{
		NoWrap      = 0x0000000000000000,
		Wrap        = 0x0000000000000001,
		WrapReverse = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.Align
	 */
	enum class Align : int32_t
	{
		Auto      = 0x0000000000000000,
		FlexStart = 0x0000000000000001,
		Center    = 0x0000000000000002,
		FlexEnd   = 0x0000000000000003,
		Stretch   = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.Justify
	 */
	enum class Justify : int32_t
	{
		FlexStart    = 0x0000000000000000,
		Center       = 0x0000000000000001,
		FlexEnd      = 0x0000000000000002,
		SpaceBetween = 0x0000000000000003,
		SpaceAround  = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.TextOverflowPosition
	 */
	enum class TextOverflowPosition : int32_t
	{
		End    = 0x0000000000000000,
		Start  = 0x0000000000000001,
		Middle = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.TextOverflow
	 */
	enum class TextOverflow : int32_t
	{
		Clip     = 0x0000000000000000,
		Ellipsis = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.TransformOriginOffset
	 */
	enum class TransformOriginOffset : int32_t
	{
		Left   = 0x0000000000000001,
		Right  = 0x0000000000000002,
		Top    = 0x0000000000000003,
		Bottom = 0x0000000000000004,
		Center = 0x0000000000000005
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.Visibility
	 */
	enum class Visibility : int32_t
	{
		Visible = 0x0000000000000000,
		Hidden  = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.WhiteSpace
	 */
	enum class WhiteSpace : int32_t
	{
		Normal = 0x0000000000000000,
		NoWrap = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.DisplayStyle
	 */
	enum class DisplayStyle : int32_t
	{
		Flex = 0x0000000000000000,
		None = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.VisualElement+MeasureMode
	 */
	enum class VisualElement_MeasureMode : int32_t
	{
		Undefined = 0x0000000000000000,
		Exactly   = 0x0000000000000001,
		AtMost    = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.VisualElement+RenderTargetMode
	 */
	enum class VisualElement_RenderTargetMode : int32_t
	{
		None              = 0x0000000000000000,
		NoColorConversion = 0x0000000000000001,
		LinearToGamma     = 0x0000000000000002,
		GammaToLinear     = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.StylePropertyAnimationSystem+TransitionState
	 */
	enum class StylePropertyAnimationSystem_TransitionState : int32_t
	{
		None     = 0x0000000000000000,
		Running  = 0x0000000000000001,
		Started  = 0x0000000000000002,
		Ended    = 0x0000000000000004,
		Canceled = 0x0000000000000008
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.GradientType
	 */
	enum class GradientType : int32_t
	{
		Linear = 0x0000000000000000,
		Radial = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.AddressMode
	 */
	enum class AddressMode : int32_t
	{
		Wrap   = 0x0000000000000000,
		Clamp  = 0x0000000000000001,
		Mirror = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.PseudoStates
	 */
	enum class PseudoStates : int32_t
	{
		Active   = 0x0000000000000001,
		Hover    = 0x0000000000000002,
		Checked  = 0x0000000000000008,
		Disabled = 0x0000000000000020,
		Focus    = 0x0000000000000040,
		Root     = 0x0000000000000080
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.VisualElementFlags
	 */
	enum class VisualElementFlags : int32_t
	{
		WorldTransformDirty        = 0x0000000000000001,
		WorldTransformInverseDirty = 0x0000000000000002,
		WorldClipDirty             = 0x0000000000000004,
		BoundingBoxDirty           = 0x0000000000000008,
		WorldBoundingBoxDirty      = 0x0000000000000010,
		LayoutManual               = 0x0000000000000020,
		CompositeRoot              = 0x0000000000000040,
		RequireMeasureFunction     = 0x0000000000000080,
		EnableViewDataPersistence  = 0x0000000000000100,
		DisableClipping            = 0x0000000000000200,
		NeedsAttachToPanelEvent    = 0x0000000000000400,
		HierarchyDisplayed         = 0x0000000000000800,
		StyleInitialized           = 0x0000000000001000,
		Init                       = 0x000000000000081F
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.PickingMode
	 */
	enum class PickingMode : int32_t
	{
		Position = 0x0000000000000000,
		Ignore   = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.VisualElementFocusRing+DefaultFocusOrder
	 */
	enum class VisualElementFocusRing_DefaultFocusOrder : int32_t
	{
		ChildOrder = 0x0000000000000000,
		PositionXY = 0x0000000000000001,
		PositionYX = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.HierarchyChangeType
	 */
	enum class HierarchyChangeType : int32_t
	{
		Add    = 0x0000000000000000,
		Remove = 0x0000000000000001,
		Move   = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.BaseVisualTreeHierarchyTrackerUpdater+State
	 */
	enum class BaseVisualTreeHierarchyTrackerUpdater_State : int32_t
	{
		Waiting           = 0x0000000000000000,
		TrackingAddOrMove = 0x0000000000000001,
		TrackingRemove    = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.VisualTreeUpdatePhase
	 */
	enum class VisualTreeUpdatePhase : int32_t
	{
		ViewData      = 0x0000000000000000,
		Bindings      = 0x0000000000000001,
		Animation     = 0x0000000000000002,
		Styles        = 0x0000000000000003,
		Layout        = 0x0000000000000004,
		TransformClip = 0x0000000000000005,
		Repaint       = 0x0000000000000006,
		Count         = 0x0000000000000007
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.SliderDirection
	 */
	enum class SliderDirection : int32_t
	{
		Horizontal = 0x0000000000000000,
		Vertical   = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.BaseSlider+SliderKey<TValueType>
	 */
	enum class BaseSlider_SliderKey_TValueType : int32_t
	{
		None       = 0x0000000000000000,
		Lowest     = 0x0000000000000001,
		LowerPage  = 0x0000000000000002,
		Lower      = 0x0000000000000003,
		Higher     = 0x0000000000000004,
		HigherPage = 0x0000000000000005,
		Highest    = 0x0000000000000006
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.AlternatingRowBackground
	 */
	enum class AlternatingRowBackground : int32_t
	{
		None        = 0x0000000000000000,
		ContentOnly = 0x0000000000000001,
		All         = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.CollectionVirtualizationMethod
	 */
	enum class CollectionVirtualizationMethod : int32_t
	{
		FixedHeight   = 0x0000000000000000,
		DynamicHeight = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.HelpBoxMessageType
	 */
	enum class HelpBoxMessageType : int32_t
	{
		None    = 0x0000000000000000,
		Info    = 0x0000000000000001,
		Warning = 0x0000000000000002,
		Error   = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.ListViewReorderMode
	 */
	enum class ListViewReorderMode : int32_t
	{
		Simple   = 0x0000000000000000,
		Animated = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.MinMaxSlider+DragState
	 */
	enum class MinMaxSlider_DragState : int32_t
	{
		NoThumb     = 0x0000000000000000,
		MinThumb    = 0x0000000000000001,
		MiddleThumb = 0x0000000000000002,
		MaxThumb    = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.ScrollViewMode
	 */
	enum class ScrollViewMode : int32_t
	{
		Vertical              = 0x0000000000000000,
		Horizontal            = 0x0000000000000001,
		VerticalAndHorizontal = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.ScrollerVisibility
	 */
	enum class ScrollerVisibility : int32_t
	{
		Auto          = 0x0000000000000000,
		AlwaysVisible = 0x0000000000000001,
		Hidden        = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.ScrollView+TouchScrollBehavior
	 */
	enum class ScrollView_TouchScrollBehavior : int32_t
	{
		Unrestricted = 0x0000000000000000,
		Elastic      = 0x0000000000000001,
		Clamped      = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.ScrollView+NestedInteractionKind
	 */
	enum class ScrollView_NestedInteractionKind : int32_t
	{
		Default          = 0x0000000000000000,
		StopScrolling    = 0x0000000000000001,
		ForwardScrolling = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.ScrollView+TouchScrollingResult
	 */
	enum class ScrollView_TouchScrollingResult : int32_t
	{
		Apply   = 0x0000000000000000,
		Forward = 0x0000000000000001,
		Block   = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.TwoPaneSplitViewOrientation
	 */
	enum class TwoPaneSplitViewOrientation : int32_t
	{
		Horizontal = 0x0000000000000000,
		Vertical   = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.DragEventsProcessor+DragState
	 */
	enum class DragEventsProcessor_DragState : int32_t
	{
		None         = 0x0000000000000000,
		CanStartDrag = 0x0000000000000001,
		Dragging     = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.DragVisualMode
	 */
	enum class DragVisualMode : int32_t
	{
		None     = 0x0000000000000000,
		Copy     = 0x0000000000000001,
		Move     = 0x0000000000000002,
		Rejected = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.DragAndDropPosition
	 */
	enum class DragAndDropPosition : int32_t
	{
		OverItem     = 0x0000000000000000,
		BetweenItems = 0x0000000000000001,
		OutsideItems = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.EventBase+EventPropagation
	 */
	enum class EventBase_EventPropagation : int32_t
	{
		None                 = 0x0000000000000000,
		Bubbles              = 0x0000000000000001,
		TricklesDown         = 0x0000000000000002,
		Cancellable          = 0x0000000000000004,
		SkipDisabledElements = 0x0000000000000008,
		IgnoreCompositeRoots = 0x0000000000000010
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.EventBase+LifeCycleStatus
	 */
	enum class EventBase_LifeCycleStatus : int32_t
	{
		None                        = 0x0000000000000000,
		PropagationStopped          = 0x0000000000000001,
		ImmediatePropagationStopped = 0x0000000000000002,
		DefaultPrevented            = 0x0000000000000004,
		Dispatching                 = 0x0000000000000008,
		Pooled                      = 0x0000000000000010,
		IMGUIEventIsValid           = 0x0000000000000020,
		StopDispatch                = 0x0000000000000040,
		PropagateToIMGUI            = 0x0000000000000080,
		Dispatched                  = 0x0000000000000200,
		Processed                   = 0x0000000000000400,
		ProcessedByFocusController  = 0x0000000000000800
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.TrickleDown
	 */
	enum class TrickleDown : int32_t
	{
		NoTrickleDown = 0x0000000000000000,
		TrickleDown   = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.CallbackPhase
	 */
	enum class CallbackPhase : int32_t
	{
		TargetAndBubbleUp    = 0x0000000000000001,
		TrickleDownAndTarget = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.InvokePolicy
	 */
	enum class InvokePolicy : int32_t
	{
		Default         = 0x0000000000000000,
		IncludeDisabled = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.PropagationPhase
	 */
	enum class PropagationPhase : int32_t
	{
		None                  = 0x0000000000000000,
		TrickleDown           = 0x0000000000000001,
		AtTarget              = 0x0000000000000002,
		DefaultActionAtTarget = 0x0000000000000005,
		BubbleUp              = 0x0000000000000003,
		DefaultAction         = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.MouseCaptureDispatchingStrategy+EventBehavior
	 */
	enum class MouseCaptureDispatchingStrategy_EventBehavior : int32_t
	{
		None                                = 0x0000000000000000,
		IsCapturable                        = 0x0000000000000001,
		IsSentExclusivelyToCapturingElement = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.NavigationMoveEvent+Direction
	 */
	enum class NavigationMoveEvent_Direction : int32_t
	{
		None  = 0x0000000000000000,
		Left  = 0x0000000000000001,
		Up    = 0x0000000000000002,
		Right = 0x0000000000000003,
		Down  = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.NavigationTabEvent+Direction
	 */
	enum class NavigationTabEvent_Direction : int32_t
	{
		None     = 0x0000000000000000,
		Next     = 0x0000000000000001,
		Previous = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.PointerDeviceState+LocationFlag
	 */
	enum class PointerDeviceState_LocationFlag : int32_t
	{
		None         = 0x0000000000000000,
		OutsidePanel = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.PropagationPaths+Type
	 */
	enum class PropagationPaths_Type : int32_t
	{
		None        = 0x0000000000000000,
		TrickleDown = 0x0000000000000001,
		BubbleUp    = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.DynamicAtlasFiltersInternal
	 */
	enum class DynamicAtlasFiltersInternal : int32_t
	{
		None        = 0x0000000000000000,
		Readability = 0x0000000000000001,
		Size        = 0x0000000000000002,
		Format      = 0x0000000000000004,
		ColorSpace  = 0x0000000000000008,
		FilterMode  = 0x0000000000000010
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.PanelScaleMode
	 */
	enum class PanelScaleMode : int32_t
	{
		ConstantPixelSize    = 0x0000000000000000,
		ConstantPhysicalSize = 0x0000000000000001,
		ScaleWithScreenSize  = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.PanelScreenMatchMode
	 */
	enum class PanelScreenMatchMode : int32_t
	{
		MatchWidthOrHeight = 0x0000000000000000,
		Shrink             = 0x0000000000000001,
		Expand             = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.MeshGenerationContext+MeshFlags
	 */
	enum class MeshGenerationContext_MeshFlags : int32_t
	{
		None             = 0x0000000000000000,
		UVisDisplacement = 0x0000000000000001,
		SkipDynamicAtlas = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.AngleUnit
	 */
	enum class AngleUnit : int32_t
	{
		Degree  = 0x0000000000000000,
		Gradian = 0x0000000000000001,
		Radian  = 0x0000000000000002,
		Turn    = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.Angle+Unit
	 */
	enum class Angle_Unit : int32_t
	{
		Degree  = 0x0000000000000000,
		Gradian = 0x0000000000000001,
		Radian  = 0x0000000000000002,
		Turn    = 0x0000000000000003,
		None    = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.EasingMode
	 */
	enum class EasingMode : int32_t
	{
		Ease             = 0x0000000000000000,
		EaseIn           = 0x0000000000000001,
		EaseOut          = 0x0000000000000002,
		EaseInOut        = 0x0000000000000003,
		Linear           = 0x0000000000000004,
		EaseInSine       = 0x0000000000000005,
		EaseOutSine      = 0x0000000000000006,
		EaseInOutSine    = 0x0000000000000007,
		EaseInCubic      = 0x0000000000000008,
		EaseOutCubic     = 0x0000000000000009,
		EaseInOutCubic   = 0x000000000000000A,
		EaseInCirc       = 0x000000000000000B,
		EaseOutCirc      = 0x000000000000000C,
		EaseInOutCirc    = 0x000000000000000D,
		EaseInElastic    = 0x000000000000000E,
		EaseOutElastic   = 0x000000000000000F,
		EaseInOutElastic = 0x0000000000000010,
		EaseInBack       = 0x0000000000000011,
		EaseOutBack      = 0x0000000000000012,
		EaseInOutBack    = 0x0000000000000013,
		EaseInBounce     = 0x0000000000000014,
		EaseOutBounce    = 0x0000000000000015,
		EaseInOutBounce  = 0x0000000000000016
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.LengthUnit
	 */
	enum class LengthUnit : int32_t
	{
		Pixel   = 0x0000000000000000,
		Percent = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.Length+Unit
	 */
	enum class Length_Unit : int32_t
	{
		Pixel   = 0x0000000000000000,
		Percent = 0x0000000000000001,
		Auto    = 0x0000000000000002,
		None    = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleKeyword
	 */
	enum class StyleKeyword : int32_t
	{
		Undefined = 0x0000000000000000,
		Null      = 0x0000000000000001,
		Auto      = 0x0000000000000002,
		None      = 0x0000000000000003,
		Initial   = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.TimeUnit
	 */
	enum class TimeUnit : int32_t
	{
		Second      = 0x0000000000000000,
		Millisecond = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleSelectorRelationship
	 */
	enum class StyleSelectorRelationship : int32_t
	{
		None       = 0x0000000000000000,
		Child      = 0x0000000000000001,
		Descendent = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleSelectorType
	 */
	enum class StyleSelectorType : int32_t
	{
		Unknown              = 0x0000000000000000,
		Wildcard             = 0x0000000000000001,
		Type                 = 0x0000000000000002,
		Class                = 0x0000000000000003,
		PseudoClass          = 0x0000000000000004,
		RecursivePseudoClass = 0x0000000000000005,
		ID                   = 0x0000000000000006,
		Predicate            = 0x0000000000000007
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleValueFunction
	 */
	enum class StyleValueFunction : int32_t
	{
		Unknown        = 0x0000000000000000,
		Var            = 0x0000000000000001,
		Env            = 0x0000000000000002,
		LinearGradient = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleValueKeyword
	 */
	enum class StyleValueKeyword : int32_t
	{
		Inherit = 0x0000000000000000,
		Initial = 0x0000000000000001,
		Auto    = 0x0000000000000002,
		Unset   = 0x0000000000000003,
		True    = 0x0000000000000004,
		False   = 0x0000000000000005,
		None    = 0x0000000000000006
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleValueType
	 */
	enum class StyleValueType : int32_t
	{
		Invalid               = 0x0000000000000000,
		Keyword               = 0x0000000000000001,
		Float                 = 0x0000000000000002,
		Dimension             = 0x0000000000000003,
		Color                 = 0x0000000000000004,
		ResourcePath          = 0x0000000000000005,
		AssetReference        = 0x0000000000000006,
		Enum                  = 0x0000000000000007,
		Variable              = 0x0000000000000008,
		String                = 0x0000000000000009,
		Function              = 0x000000000000000A,
		CommaSeparator        = 0x000000000000000B,
		ScalableImage         = 0x000000000000000C,
		MissingAssetReference = 0x000000000000000D
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleVariableResolver+Result
	 */
	enum class StyleVariableResolver_Result : int32_t
	{
		Valid    = 0x0000000000000000,
		Invalid  = 0x0000000000000001,
		NotFound = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.UxmlAttributeDescription+Use
	 */
	enum class UxmlAttributeDescription_Use : int32_t
	{
		None       = 0x0000000000000000,
		Optional   = 0x0000000000000001,
		Prohibited = 0x0000000000000002,
		Required   = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.MeshBuilder+VertexClipEdge
	 */
	enum class MeshBuilder_VertexClipEdge : int32_t
	{
		None   = 0x0000000000000000,
		Left   = 0x0000000000000001,
		Top    = 0x0000000000000002,
		Right  = 0x0000000000000004,
		Bottom = 0x0000000000000008
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.RenderDataDirtyTypes
	 */
	enum class RenderDataDirtyTypes : int32_t
	{
		None              = 0x0000000000000000,
		Transform         = 0x0000000000000001,
		ClipRectSize      = 0x0000000000000002,
		Clipping          = 0x0000000000000004,
		ClippingHierarchy = 0x0000000000000008,
		Visuals           = 0x0000000000000010,
		VisualsHierarchy  = 0x0000000000000020,
		Opacity           = 0x0000000000000040,
		OpacityHierarchy  = 0x0000000000000080,
		Color             = 0x0000000000000100
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.RenderDataDirtyTypeClasses
	 */
	enum class RenderDataDirtyTypeClasses : int32_t
	{
		Clipping      = 0x0000000000000000,
		Opacity       = 0x0000000000000001,
		Color         = 0x0000000000000002,
		TransformSize = 0x0000000000000003,
		Visuals       = 0x0000000000000004,
		Count         = 0x0000000000000005
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.Tessellation+Edges
	 */
	enum class Tessellation_Edges : int32_t
	{
		None   = 0x0000000000000000,
		Left   = 0x0000000000000001,
		Top    = 0x0000000000000002,
		Right  = 0x0000000000000004,
		Bottom = 0x0000000000000008,
		All    = 0x000000000000000F
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.OwnedState
	 */
	enum class OwnedState : uint8_t
	{
		Inherited = 0x0000000000000000,
		Owned     = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.VertexFlags
	 */
	enum class VertexFlags : int32_t
	{
		IsSolid         = 0x0000000000000000,
		IsText          = 0x0000000000000001,
		IsTextured      = 0x0000000000000002,
		IsDynamic       = 0x0000000000000003,
		IsSvgGradients  = 0x0000000000000004,
		LastType        = 0x000000000000000A,
		IsGraphViewEdge = 0x000000000000000A
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.CommandType
	 */
	enum class CommandType : int32_t
	{
		Draw                = 0x0000000000000000,
		ImmediateCull       = 0x0000000000000001,
		Immediate           = 0x0000000000000002,
		PushView            = 0x0000000000000003,
		PopView             = 0x0000000000000004,
		PushScissor         = 0x0000000000000005,
		PopScissor          = 0x0000000000000006,
		PushRenderTexture   = 0x0000000000000007,
		PopRenderTexture    = 0x0000000000000008,
		BlitToPreviousRT    = 0x0000000000000009,
		PushDefaultMaterial = 0x000000000000000A,
		PopDefaultMaterial  = 0x000000000000000B
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.Implementation.ClipMethod
	 */
	enum class ClipMethod : int32_t
	{
		Undetermined  = 0x0000000000000000,
		NotClipped    = 0x0000000000000001,
		Scissor       = 0x0000000000000002,
		ShaderDiscard = 0x0000000000000003,
		Stencil       = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleSheets.StyleEnumType
	 */
	enum class StyleEnumType : int32_t
	{
		Align                 = 0x0000000000000000,
		DisplayStyle          = 0x0000000000000001,
		EasingMode            = 0x0000000000000002,
		FlexDirection         = 0x0000000000000003,
		FontStyle             = 0x0000000000000004,
		Justify               = 0x0000000000000005,
		Overflow              = 0x0000000000000006,
		OverflowClipBox       = 0x0000000000000007,
		OverflowInternal      = 0x0000000000000008,
		Position              = 0x0000000000000009,
		ScaleMode             = 0x000000000000000A,
		TextAnchor            = 0x000000000000000B,
		TextOverflow          = 0x000000000000000C,
		TextOverflowPosition  = 0x000000000000000D,
		TransformOriginOffset = 0x000000000000000E,
		Visibility            = 0x000000000000000F,
		WhiteSpace            = 0x0000000000000010,
		Wrap                  = 0x0000000000000011
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleSheets.StylePropertyId
	 */
	enum class StylePropertyId : int32_t
	{
		Unknown                       = 0x0000000000000000,
		Custom                        = -1,
		AlignContent                  = 0x0000000000020000,
		AlignItems                    = 0x0000000000020001,
		AlignSelf                     = 0x0000000000020002,
		All                           = 0x0000000000040000,
		BackgroundColor               = 0x0000000000070000,
		BackgroundImage               = 0x0000000000070001,
		BorderBottomColor             = 0x0000000000070002,
		BorderBottomLeftRadius        = 0x0000000000070003,
		BorderBottomRightRadius       = 0x0000000000070004,
		BorderBottomWidth             = 0x0000000000020003,
		BorderColor                   = 0x0000000000040001,
		BorderLeftColor               = 0x0000000000070005,
		BorderLeftWidth               = 0x0000000000020004,
		BorderRadius                  = 0x0000000000040002,
		BorderRightColor              = 0x0000000000070006,
		BorderRightWidth              = 0x0000000000020005,
		BorderTopColor                = 0x0000000000070007,
		BorderTopLeftRadius           = 0x0000000000070008,
		BorderTopRightRadius          = 0x0000000000070009,
		BorderTopWidth                = 0x0000000000020006,
		BorderWidth                   = 0x0000000000040003,
		Bottom                        = 0x0000000000020007,
		Color                         = 0x0000000000010000,
		Cursor                        = 0x0000000000030000,
		Display                       = 0x0000000000020008,
		Flex                          = 0x0000000000040004,
		FlexBasis                     = 0x0000000000020009,
		FlexDirection                 = 0x000000000002000A,
		FlexGrow                      = 0x000000000002000B,
		FlexShrink                    = 0x000000000002000C,
		FlexWrap                      = 0x000000000002000D,
		FontSize                      = 0x0000000000010001,
		Height                        = 0x000000000002000E,
		JustifyContent                = 0x000000000002000F,
		Left                          = 0x0000000000020010,
		LetterSpacing                 = 0x0000000000010002,
		Margin                        = 0x0000000000040005,
		MarginBottom                  = 0x0000000000020011,
		MarginLeft                    = 0x0000000000020012,
		MarginRight                   = 0x0000000000020013,
		MarginTop                     = 0x0000000000020014,
		MaxHeight                     = 0x0000000000020015,
		MaxWidth                      = 0x0000000000020016,
		MinHeight                     = 0x0000000000020017,
		MinWidth                      = 0x0000000000020018,
		Opacity                       = 0x000000000007000A,
		Overflow                      = 0x000000000007000B,
		Padding                       = 0x0000000000040006,
		PaddingBottom                 = 0x0000000000020019,
		PaddingLeft                   = 0x000000000002001A,
		PaddingRight                  = 0x000000000002001B,
		PaddingTop                    = 0x000000000002001C,
		Position                      = 0x000000000002001D,
		Right                         = 0x000000000002001E,
		Rotate                        = 0x0000000000050000,
		Scale                         = 0x0000000000050001,
		TextOverflow                  = 0x0000000000030001,
		TextShadow                    = 0x0000000000010003,
		Top                           = 0x000000000002001F,
		TransformOrigin               = 0x0000000000050002,
		Transition                    = 0x0000000000040007,
		TransitionDelay               = 0x0000000000060000,
		TransitionDuration            = 0x0000000000060001,
		TransitionProperty            = 0x0000000000060002,
		TransitionTimingFunction      = 0x0000000000060003,
		Translate                     = 0x0000000000050003,
		UnityBackgroundImageTintColor = 0x0000000000030002,
		UnityBackgroundScaleMode      = 0x0000000000030003,
		UnityFont                     = 0x0000000000010004,
		UnityFontDefinition           = 0x0000000000010005,
		UnityFontStyleAndWeight       = 0x0000000000010006,
		UnityOverflowClipBox          = 0x0000000000030004,
		UnityParagraphSpacing         = 0x0000000000010007,
		UnitySliceBottom              = 0x0000000000030005,
		UnitySliceLeft                = 0x0000000000030006,
		UnitySliceRight               = 0x0000000000030007,
		UnitySliceTop                 = 0x0000000000030008,
		UnityTextAlign                = 0x0000000000010008,
		UnityTextOutline              = 0x0000000000040008,
		UnityTextOutlineColor         = 0x0000000000010009,
		UnityTextOutlineWidth         = 0x000000000001000A,
		UnityTextOverflowPosition     = 0x0000000000030009,
		Visibility                    = 0x000000000001000B,
		WhiteSpace                    = 0x000000000001000C,
		Width                         = 0x0000000000020020,
		WordSpacing                   = 0x000000000001000D
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleSheets.Dimension+Unit
	 */
	enum class Dimension_Unit : int32_t
	{
		Unitless    = 0x0000000000000000,
		Pixel       = 0x0000000000000001,
		Percent     = 0x0000000000000002,
		Second      = 0x0000000000000003,
		Millisecond = 0x0000000000000004,
		Degree      = 0x0000000000000005,
		Gradian     = 0x0000000000000006,
		Radian      = 0x0000000000000007,
		Turn        = 0x0000000000000008
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleSheets.MatchResultErrorCode
	 */
	enum class MatchResultErrorCode : int32_t
	{
		None               = 0x0000000000000000,
		Syntax             = 0x0000000000000001,
		EmptyValue         = 0x0000000000000002,
		ExpectedEndOfValue = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleSheets.Syntax.ExpressionType
	 */
	enum class ExpressionType : int32_t
	{
		Unknown    = 0x0000000000000000,
		Data       = 0x0000000000000001,
		Keyword    = 0x0000000000000002,
		Combinator = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleSheets.Syntax.DataType
	 */
	enum class DataType : int32_t
	{
		None        = 0x0000000000000000,
		Number      = 0x0000000000000001,
		Integer     = 0x0000000000000002,
		Length      = 0x0000000000000003,
		Percentage  = 0x0000000000000004,
		Color       = 0x0000000000000005,
		Resource    = 0x0000000000000006,
		Url         = 0x0000000000000007,
		Time        = 0x0000000000000008,
		Angle       = 0x0000000000000009,
		CustomIdent = 0x000000000000000A
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleSheets.Syntax.ExpressionCombinator
	 */
	enum class ExpressionCombinator : int32_t
	{
		None          = 0x0000000000000000,
		Or            = 0x0000000000000001,
		OrOr          = 0x0000000000000002,
		AndAnd        = 0x0000000000000003,
		Juxtaposition = 0x0000000000000004,
		Group         = 0x0000000000000005
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleSheets.Syntax.ExpressionMultiplierType
	 */
	enum class ExpressionMultiplierType : int32_t
	{
		None            = 0x0000000000000000,
		ZeroOrMore      = 0x0000000000000001,
		OneOrMore       = 0x0000000000000002,
		ZeroOrOne       = 0x0000000000000003,
		Ranges          = 0x0000000000000004,
		OneOrMoreComma  = 0x0000000000000005,
		GroupAtLeastOne = 0x0000000000000006
	};

	/**
	 * Enum UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxTokenType
	 */
	enum class StyleSyntaxTokenType : int32_t
	{
		Unknown          = 0x0000000000000000,
		String           = 0x0000000000000001,
		Number           = 0x0000000000000002,
		Space            = 0x0000000000000003,
		SingleBar        = 0x0000000000000004,
		DoubleBar        = 0x0000000000000005,
		DoubleAmpersand  = 0x0000000000000006,
		Comma            = 0x0000000000000007,
		SingleQuote      = 0x0000000000000008,
		Asterisk         = 0x0000000000000009,
		Plus             = 0x000000000000000A,
		QuestionMark     = 0x000000000000000B,
		HashMark         = 0x000000000000000C,
		ExclamationPoint = 0x000000000000000D,
		OpenBracket      = 0x000000000000000E,
		CloseBracket     = 0x000000000000000F,
		OpenBrace        = 0x0000000000000010,
		CloseBrace       = 0x0000000000000011,
		LessThan         = 0x0000000000000012,
		GreaterThan      = 0x0000000000000013,
		End              = 0x0000000000000014
	};

	/**
	 * Enum Unity.Mathematics.Unity.Mathematics.math+RotationOrder
	 */
	enum class math_RotationOrder : uint8_t
	{
		XYZ     = 0x0000000000000000,
		XZY     = 0x0000000000000001,
		YXZ     = 0x0000000000000002,
		YZX     = 0x0000000000000003,
		ZXY     = 0x0000000000000004,
		ZYX     = 0x0000000000000005,
		Default = 0x0000000000000004
	};

	/**
	 * Enum Unity.Mathematics.Unity.Mathematics.math+ShuffleComponent
	 */
	enum class math_ShuffleComponent : uint8_t
	{
		LeftX  = 0x0000000000000000,
		LeftY  = 0x0000000000000001,
		LeftZ  = 0x0000000000000002,
		LeftW  = 0x0000000000000003,
		RightX = 0x0000000000000004,
		RightY = 0x0000000000000005,
		RightZ = 0x0000000000000006,
		RightW = 0x0000000000000007
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.ConstructorHandling
	 */
	enum class ConstructorHandling : int32_t
	{
		Default                          = 0x0000000000000000,
		AllowNonPublicDefaultConstructor = 0x0000000000000001
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.DateFormatHandling
	 */
	enum class DateFormatHandling : int32_t
	{
		IsoDateFormat       = 0x0000000000000000,
		MicrosoftDateFormat = 0x0000000000000001
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.DateParseHandling
	 */
	enum class DateParseHandling : int32_t
	{
		None           = 0x0000000000000000,
		DateTime       = 0x0000000000000001,
		DateTimeOffset = 0x0000000000000002
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.DateTimeZoneHandling
	 */
	enum class DateTimeZoneHandling : int32_t
	{
		Local         = 0x0000000000000000,
		Utc           = 0x0000000000000001,
		Unspecified   = 0x0000000000000002,
		RoundtripKind = 0x0000000000000003
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.DefaultValueHandling
	 */
	enum class DefaultValueHandling : int32_t
	{
		Include           = 0x0000000000000000,
		Ignore            = 0x0000000000000001,
		Populate          = 0x0000000000000002,
		IgnoreAndPopulate = 0x0000000000000003
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.FloatFormatHandling
	 */
	enum class FloatFormatHandling : int32_t
	{
		String       = 0x0000000000000000,
		Symbol       = 0x0000000000000001,
		DefaultValue = 0x0000000000000002
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.FloatParseHandling
	 */
	enum class FloatParseHandling : int32_t
	{
		Double  = 0x0000000000000000,
		Decimal = 0x0000000000000001
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.Formatting
	 */
	enum class Formatting_1 : int32_t
	{
		None     = 0x0000000000000000,
		Indented = 0x0000000000000001
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.JsonContainerType
	 */
	enum class JsonContainerType : int32_t
	{
		None        = 0x0000000000000000,
		Object      = 0x0000000000000001,
		Array       = 0x0000000000000002,
		Constructor = 0x0000000000000003
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.JsonReader+State
	 */
	enum class JsonReader_State : int32_t
	{
		Start            = 0x0000000000000000,
		Complete         = 0x0000000000000001,
		Property         = 0x0000000000000002,
		ObjectStart      = 0x0000000000000003,
		Object           = 0x0000000000000004,
		ArrayStart       = 0x0000000000000005,
		Array            = 0x0000000000000006,
		Closed           = 0x0000000000000007,
		PostValue        = 0x0000000000000008,
		ConstructorStart = 0x0000000000000009,
		Constructor      = 0x000000000000000A,
		Error            = 0x000000000000000B,
		Finished         = 0x000000000000000C
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.ReadType
	 */
	enum class ReadType : int32_t
	{
		Read                 = 0x0000000000000000,
		ReadAsInt32          = 0x0000000000000001,
		ReadAsInt64          = 0x0000000000000002,
		ReadAsBytes          = 0x0000000000000003,
		ReadAsString         = 0x0000000000000004,
		ReadAsDecimal        = 0x0000000000000005,
		ReadAsDateTime       = 0x0000000000000006,
		ReadAsDateTimeOffset = 0x0000000000000007,
		ReadAsDouble         = 0x0000000000000008,
		ReadAsBoolean        = 0x0000000000000009
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.JsonToken
	 */
	enum class JsonToken_2 : int32_t
	{
		None             = 0x0000000000000000,
		StartObject      = 0x0000000000000001,
		StartArray       = 0x0000000000000002,
		StartConstructor = 0x0000000000000003,
		PropertyName     = 0x0000000000000004,
		Comment          = 0x0000000000000005,
		Raw              = 0x0000000000000006,
		Integer          = 0x0000000000000007,
		Float            = 0x0000000000000008,
		String           = 0x0000000000000009,
		Boolean          = 0x000000000000000A,
		Null             = 0x000000000000000B,
		Undefined        = 0x000000000000000C,
		EndObject        = 0x000000000000000D,
		EndArray         = 0x000000000000000E,
		EndConstructor   = 0x000000000000000F,
		Date             = 0x0000000000000010,
		Bytes            = 0x0000000000000011
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.JsonWriter+State
	 */
	enum class JsonWriter_State : int32_t
	{
		Start            = 0x0000000000000000,
		Property         = 0x0000000000000001,
		ObjectStart      = 0x0000000000000002,
		Object           = 0x0000000000000003,
		ArrayStart       = 0x0000000000000004,
		Array            = 0x0000000000000005,
		ConstructorStart = 0x0000000000000006,
		Constructor      = 0x0000000000000007,
		Closed           = 0x0000000000000008,
		Error            = 0x0000000000000009
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.MemberSerialization
	 */
	enum class MemberSerialization : int32_t
	{
		OptOut = 0x0000000000000000,
		OptIn  = 0x0000000000000001,
		Fields = 0x0000000000000002
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.MetadataPropertyHandling
	 */
	enum class MetadataPropertyHandling : int32_t
	{
		Default   = 0x0000000000000000,
		ReadAhead = 0x0000000000000001,
		Ignore    = 0x0000000000000002
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.MissingMemberHandling
	 */
	enum class MissingMemberHandling : int32_t
	{
		Ignore = 0x0000000000000000,
		Error  = 0x0000000000000001
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.NullValueHandling
	 */
	enum class NullValueHandling : int32_t
	{
		Include = 0x0000000000000000,
		Ignore  = 0x0000000000000001
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.ObjectCreationHandling
	 */
	enum class ObjectCreationHandling : int32_t
	{
		Auto    = 0x0000000000000000,
		Reuse   = 0x0000000000000001,
		Replace = 0x0000000000000002
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.PreserveReferencesHandling
	 */
	enum class PreserveReferencesHandling : int32_t
	{
		None    = 0x0000000000000000,
		Objects = 0x0000000000000001,
		Arrays  = 0x0000000000000002,
		All     = 0x0000000000000003
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.ReferenceLoopHandling
	 */
	enum class ReferenceLoopHandling : int32_t
	{
		Error     = 0x0000000000000000,
		Ignore    = 0x0000000000000001,
		Serialize = 0x0000000000000002
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.Required
	 */
	enum class Required : int32_t
	{
		Default      = 0x0000000000000000,
		AllowNull    = 0x0000000000000001,
		Always       = 0x0000000000000002,
		DisallowNull = 0x0000000000000003
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.StringEscapeHandling
	 */
	enum class StringEscapeHandling : int32_t
	{
		Default        = 0x0000000000000000,
		EscapeNonAscii = 0x0000000000000001,
		EscapeHtml     = 0x0000000000000002
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.TypeNameAssemblyFormatHandling
	 */
	enum class TypeNameAssemblyFormatHandling : int32_t
	{
		Simple = 0x0000000000000000,
		Full   = 0x0000000000000001
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.TypeNameHandling
	 */
	enum class TypeNameHandling : int32_t
	{
		None    = 0x0000000000000000,
		Objects = 0x0000000000000001,
		Arrays  = 0x0000000000000002,
		All     = 0x0000000000000003,
		Auto    = 0x0000000000000004
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.WriteState
	 */
	enum class WriteState_1 : int32_t
	{
		Error       = 0x0000000000000000,
		Closed      = 0x0000000000000001,
		Object      = 0x0000000000000002,
		Array       = 0x0000000000000003,
		Constructor = 0x0000000000000004,
		Property    = 0x0000000000000005,
		Start       = 0x0000000000000006
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.Utilities.PrimitiveTypeCode
	 */
	enum class PrimitiveTypeCode : int32_t
	{
		Empty                  = 0x0000000000000000,
		Object                 = 0x0000000000000001,
		Char                   = 0x0000000000000002,
		CharNullable           = 0x0000000000000003,
		Boolean                = 0x0000000000000004,
		BooleanNullable        = 0x0000000000000005,
		SByte                  = 0x0000000000000006,
		SByteNullable          = 0x0000000000000007,
		Int16                  = 0x0000000000000008,
		Int16Nullable          = 0x0000000000000009,
		UInt16                 = 0x000000000000000A,
		UInt16Nullable         = 0x000000000000000B,
		Int32                  = 0x000000000000000C,
		Int32Nullable          = 0x000000000000000D,
		Byte                   = 0x000000000000000E,
		ByteNullable           = 0x000000000000000F,
		UInt32                 = 0x0000000000000010,
		UInt32Nullable         = 0x0000000000000011,
		Int64                  = 0x0000000000000012,
		Int64Nullable          = 0x0000000000000013,
		UInt64                 = 0x0000000000000014,
		UInt64Nullable         = 0x0000000000000015,
		Single                 = 0x0000000000000016,
		SingleNullable         = 0x0000000000000017,
		Double                 = 0x0000000000000018,
		DoubleNullable         = 0x0000000000000019,
		DateTime               = 0x000000000000001A,
		DateTimeNullable       = 0x000000000000001B,
		DateTimeOffset         = 0x000000000000001C,
		DateTimeOffsetNullable = 0x000000000000001D,
		Decimal                = 0x000000000000001E,
		DecimalNullable        = 0x000000000000001F,
		Guid                   = 0x0000000000000020,
		GuidNullable           = 0x0000000000000021,
		TimeSpan               = 0x0000000000000022,
		TimeSpanNullable       = 0x0000000000000023,
		BigInteger             = 0x0000000000000024,
		BigIntegerNullable     = 0x0000000000000025,
		Uri                    = 0x0000000000000026,
		String                 = 0x0000000000000027,
		Bytes                  = 0x0000000000000028,
		DBNull                 = 0x0000000000000029
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.Utilities.ParseResult
	 */
	enum class ParseResult : int32_t
	{
		None     = 0x0000000000000000,
		Success  = 0x0000000000000001,
		Overflow = 0x0000000000000002,
		Invalid  = 0x0000000000000003
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.Utilities.ConvertUtils+ConvertResult
	 */
	enum class ConvertUtils_ConvertResult : int32_t
	{
		Success             = 0x0000000000000000,
		CannotConvertNull   = 0x0000000000000001,
		NotInstantiableType = 0x0000000000000002,
		NoValidConversion   = 0x0000000000000003
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.Utilities.ParserTimeZone
	 */
	enum class ParserTimeZone : int32_t
	{
		Unspecified    = 0x0000000000000000,
		Utc            = 0x0000000000000001,
		LocalWestOfUtc = 0x0000000000000002,
		LocalEastOfUtc = 0x0000000000000003
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.Utilities.StringUtils+SeparatedCaseState
	 */
	enum class StringUtils_SeparatedCaseState : int32_t
	{
		Start   = 0x0000000000000000,
		Lower   = 0x0000000000000001,
		Upper   = 0x0000000000000002,
		NewWord = 0x0000000000000003
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.Serialization.JsonContractType
	 */
	enum class JsonContractType : int32_t
	{
		None         = 0x0000000000000000,
		Object       = 0x0000000000000001,
		Array        = 0x0000000000000002,
		Primitive    = 0x0000000000000003,
		String       = 0x0000000000000004,
		Dictionary   = 0x0000000000000005,
		Dynamic      = 0x0000000000000006,
		Serializable = 0x0000000000000007,
		Linq         = 0x0000000000000008
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.Serialization.JsonSerializerInternalReader+PropertyPresence
	 */
	enum class JsonSerializerInternalReader_PropertyPresence : int32_t
	{
		None  = 0x0000000000000000,
		Null  = 0x0000000000000001,
		Value = 0x0000000000000002
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.Schema.JsonSchemaType
	 */
	enum class JsonSchemaType : int32_t
	{
		None    = 0x0000000000000000,
		String  = 0x0000000000000001,
		Float   = 0x0000000000000002,
		Integer = 0x0000000000000004,
		Boolean = 0x0000000000000008,
		Object  = 0x0000000000000010,
		Array   = 0x0000000000000020,
		Null    = 0x0000000000000040,
		Any     = 0x000000000000007F
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.Schema.UndefinedSchemaIdHandling
	 */
	enum class UndefinedSchemaIdHandling : int32_t
	{
		None                     = 0x0000000000000000,
		UseTypeName              = 0x0000000000000001,
		UseAssemblyQualifiedName = 0x0000000000000002
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.Linq.CommentHandling
	 */
	enum class CommentHandling : int32_t
	{
		Ignore = 0x0000000000000000,
		Load   = 0x0000000000000001
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.Linq.DuplicatePropertyNameHandling
	 */
	enum class DuplicatePropertyNameHandling : int32_t
	{
		Replace = 0x0000000000000000,
		Ignore  = 0x0000000000000001,
		Error   = 0x0000000000000002
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.Linq.JTokenType
	 */
	enum class JTokenType : int32_t
	{
		None        = 0x0000000000000000,
		Object      = 0x0000000000000001,
		Array       = 0x0000000000000002,
		Constructor = 0x0000000000000003,
		Property    = 0x0000000000000004,
		Comment     = 0x0000000000000005,
		Integer     = 0x0000000000000006,
		Float       = 0x0000000000000007,
		String      = 0x0000000000000008,
		Boolean     = 0x0000000000000009,
		Null        = 0x000000000000000A,
		Undefined   = 0x000000000000000B,
		Date        = 0x000000000000000C,
		Raw         = 0x000000000000000D,
		Bytes       = 0x000000000000000E,
		Guid        = 0x000000000000000F,
		Uri         = 0x0000000000000010,
		TimeSpan    = 0x0000000000000011
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.Linq.LineInfoHandling
	 */
	enum class LineInfoHandling : int32_t
	{
		Ignore = 0x0000000000000000,
		Load   = 0x0000000000000001
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.Linq.MergeArrayHandling
	 */
	enum class MergeArrayHandling : int32_t
	{
		Concat  = 0x0000000000000000,
		Union   = 0x0000000000000001,
		Replace = 0x0000000000000002,
		Merge   = 0x0000000000000003
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.Linq.MergeNullValueHandling
	 */
	enum class MergeNullValueHandling : int32_t
	{
		Ignore = 0x0000000000000000,
		Merge  = 0x0000000000000001
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.Linq.JsonPath.QueryOperator
	 */
	enum class QueryOperator : int32_t
	{
		None                = 0x0000000000000000,
		Equals              = 0x0000000000000001,
		NotEquals           = 0x0000000000000002,
		Exists              = 0x0000000000000003,
		LessThan            = 0x0000000000000004,
		LessThanOrEquals    = 0x0000000000000005,
		GreaterThan         = 0x0000000000000006,
		GreaterThanOrEquals = 0x0000000000000007,
		And                 = 0x0000000000000008,
		Or                  = 0x0000000000000009,
		RegexEquals         = 0x000000000000000A,
		StrictEquals        = 0x000000000000000B,
		StrictNotEquals     = 0x000000000000000C
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.Bson.BsonBinaryType
	 */
	enum class BsonBinaryType : uint8_t
	{
		Binary      = 0x0000000000000000,
		Function    = 0x0000000000000001,
		BinaryOld   = 0x0000000000000002,
		UuidOld     = 0x0000000000000003,
		Uuid        = 0x0000000000000004,
		Md5         = 0x0000000000000005,
		UserDefined = 0x0000000000000080
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.Bson.BsonReader+BsonReaderState
	 */
	enum class BsonReader_BsonReaderState : int32_t
	{
		Normal                = 0x0000000000000000,
		ReferenceStart        = 0x0000000000000001,
		ReferenceRef          = 0x0000000000000002,
		ReferenceId           = 0x0000000000000003,
		CodeWScopeStart       = 0x0000000000000004,
		CodeWScopeCode        = 0x0000000000000005,
		CodeWScopeScope       = 0x0000000000000006,
		CodeWScopeScopeObject = 0x0000000000000007,
		CodeWScopeScopeEnd    = 0x0000000000000008
	};

	/**
	 * Enum Newtonsoft.Json.Newtonsoft.Json.Bson.BsonType
	 */
	enum class BsonType : int8_t
	{
		Number     = 0x0000000000000001,
		String     = 0x0000000000000002,
		Object     = 0x0000000000000003,
		Array      = 0x0000000000000004,
		Binary     = 0x0000000000000005,
		Undefined  = 0x0000000000000006,
		Oid        = 0x0000000000000007,
		Boolean    = 0x0000000000000008,
		Date       = 0x0000000000000009,
		Null       = 0x000000000000000A,
		Regex      = 0x000000000000000B,
		Reference  = 0x000000000000000C,
		Code       = 0x000000000000000D,
		Symbol     = 0x000000000000000E,
		CodeWScope = 0x000000000000000F,
		Integer    = 0x0000000000000010,
		TimeStamp  = 0x0000000000000011,
		Long       = 0x0000000000000012,
		MinKey     = -1,
		MaxKey     = 0x000000000000007F
	};

	/**
	 * Enum System.Data.System.Data.AcceptRejectRule
	 */
	enum class AcceptRejectRule : int32_t
	{
		None    = 0x0000000000000000,
		Cascade = 0x0000000000000001
	};

	/**
	 * Enum System.Data.System.Data.AggregateType
	 */
	enum class AggregateType : int32_t
	{
		None  = 0x0000000000000000,
		Sum   = 0x0000000000000004,
		Mean  = 0x0000000000000005,
		Min   = 0x0000000000000006,
		Max   = 0x0000000000000007,
		First = 0x0000000000000008,
		Count = 0x0000000000000009,
		Var   = 0x000000000000000A,
		StDev = 0x000000000000000B
	};

	/**
	 * Enum System.Data.System.Data.DataRowAction
	 */
	enum class DataRowAction : int32_t
	{
		Nothing                  = 0x0000000000000000,
		Delete                   = 0x0000000000000001,
		Change                   = 0x0000000000000002,
		Rollback                 = 0x0000000000000004,
		Commit                   = 0x0000000000000008,
		Add                      = 0x0000000000000010,
		ChangeOriginal           = 0x0000000000000020,
		ChangeCurrentAndOriginal = 0x0000000000000040
	};

	/**
	 * Enum System.Data.System.Data.DataRowState
	 */
	enum class DataRowState : int32_t
	{
		Detached  = 0x0000000000000001,
		Unchanged = 0x0000000000000002,
		Added     = 0x0000000000000004,
		Deleted   = 0x0000000000000008,
		Modified  = 0x0000000000000010
	};

	/**
	 * Enum System.Data.System.Data.DataRowVersion
	 */
	enum class DataRowVersion : int32_t
	{
		Original = 0x0000000000000100,
		Current  = 0x0000000000000200,
		Proposed = 0x0000000000000400,
		Default  = 0x0000000000000600
	};

	/**
	 * Enum System.Data.System.Data.SerializationFormat
	 */
	enum class SerializationFormat_1 : int32_t
	{
		Xml    = 0x0000000000000000,
		Binary = 0x0000000000000001
	};

	/**
	 * Enum System.Data.System.Data.DataSetDateTime
	 */
	enum class DataSetDateTime : int32_t
	{
		Local            = 0x0000000000000001,
		Unspecified      = 0x0000000000000002,
		UnspecifiedLocal = 0x0000000000000003,
		Utc              = 0x0000000000000004
	};

	/**
	 * Enum System.Data.System.Data.DataViewRowState
	 */
	enum class DataViewRowState : int32_t
	{
		None             = 0x0000000000000000,
		Unchanged        = 0x0000000000000002,
		Added            = 0x0000000000000004,
		Deleted          = 0x0000000000000008,
		ModifiedCurrent  = 0x0000000000000010,
		ModifiedOriginal = 0x0000000000000020,
		OriginalRows     = 0x000000000000002A,
		CurrentRows      = 0x0000000000000016
	};

	/**
	 * Enum System.Data.System.Data.Aggregate
	 */
	enum class Aggregate : int32_t
	{
		None  = -1,
		Sum   = 0x000000000000001E,
		Avg   = 0x000000000000001F,
		Min   = 0x0000000000000020,
		Max   = 0x0000000000000021,
		Count = 0x0000000000000022,
		StDev = 0x0000000000000023,
		Var   = 0x0000000000000025
	};

	/**
	 * Enum System.Data.System.Data.BinaryNode+DataTypePrecedence
	 */
	enum class BinaryNode_DataTypePrecedence : int32_t
	{
		SqlDateTime    = 0x0000000000000019,
		DateTimeOffset = 0x0000000000000018,
		DateTime       = 0x0000000000000017,
		TimeSpan       = 0x0000000000000014,
		SqlDouble      = 0x0000000000000013,
		Double         = 0x0000000000000012,
		SqlSingle      = 0x0000000000000011,
		Single         = 0x0000000000000010,
		SqlDecimal     = 0x000000000000000F,
		Decimal        = 0x000000000000000E,
		SqlMoney       = 0x000000000000000D,
		UInt64         = 0x000000000000000C,
		SqlInt64       = 0x000000000000000B,
		Int64          = 0x000000000000000A,
		UInt32         = 0x0000000000000009,
		SqlInt32       = 0x0000000000000008,
		Int32          = 0x0000000000000007,
		UInt16         = 0x0000000000000006,
		SqlInt16       = 0x0000000000000005,
		Int16          = 0x0000000000000004,
		Byte           = 0x0000000000000003,
		SqlByte        = 0x0000000000000002,
		SByte          = 0x0000000000000001,
		Error          = 0x0000000000000000,
		SqlBoolean     = -1,
		Boolean        = -2,
		SqlGuid        = -3,
		SqlString      = -4,
		String         = -5,
		SqlXml         = -6,
		SqlChars       = -7,
		Char           = -8,
		SqlBytes       = -9,
		SqlBinary      = -10
	};

	/**
	 * Enum System.Data.System.Data.ValueType
	 */
	enum class ValueType_1 : int32_t
	{
		Unknown = -1,
		Null    = 0x0000000000000000,
		Bool    = 0x0000000000000001,
		Numeric = 0x0000000000000002,
		Str     = 0x0000000000000003,
		Float   = 0x0000000000000004,
		Decimal = 0x0000000000000005,
		Object  = 0x0000000000000006,
		Date    = 0x0000000000000007
	};

	/**
	 * Enum System.Data.System.Data.Nodes
	 */
	enum class Nodes : int32_t
	{
		Noop      = 0x0000000000000000,
		Unop      = 0x0000000000000001,
		UnopSpec  = 0x0000000000000002,
		Binop     = 0x0000000000000003,
		BinopSpec = 0x0000000000000004,
		Zop       = 0x0000000000000005,
		Call      = 0x0000000000000006,
		Const     = 0x0000000000000007,
		Name      = 0x0000000000000008,
		Paren     = 0x0000000000000009,
		Conv      = 0x000000000000000A
	};

	/**
	 * Enum System.Data.System.Data.Tokens
	 */
	enum class Tokens : int32_t
	{
		None          = 0x0000000000000000,
		Name          = 0x0000000000000001,
		Numeric       = 0x0000000000000002,
		Decimal       = 0x0000000000000003,
		Float         = 0x0000000000000004,
		BinaryConst   = 0x0000000000000005,
		StringConst   = 0x0000000000000006,
		Date          = 0x0000000000000007,
		ListSeparator = 0x0000000000000008,
		LeftParen     = 0x0000000000000009,
		RightParen    = 0x000000000000000A,
		ZeroOp        = 0x000000000000000B,
		UnaryOp       = 0x000000000000000C,
		BinaryOp      = 0x000000000000000D,
		Child         = 0x000000000000000E,
		Parent        = 0x000000000000000F,
		Dot           = 0x0000000000000010,
		Unknown       = 0x0000000000000011,
		EOS           = 0x0000000000000012
	};

	/**
	 * Enum System.Data.System.Data.FunctionId
	 */
	enum class FunctionId : int32_t
	{
		none           = -1,
		Ascii          = 0x0000000000000000,
		Char           = 0x0000000000000001,
		Charindex      = 0x0000000000000002,
		Difference     = 0x0000000000000003,
		Len            = 0x0000000000000004,
		Lower          = 0x0000000000000005,
		LTrim          = 0x0000000000000006,
		Patindex       = 0x0000000000000007,
		Replicate      = 0x0000000000000008,
		Reverse        = 0x0000000000000009,
		Right          = 0x000000000000000A,
		RTrim          = 0x000000000000000B,
		Soundex        = 0x000000000000000C,
		Space          = 0x000000000000000D,
		Str            = 0x000000000000000E,
		Stuff          = 0x000000000000000F,
		Substring      = 0x0000000000000010,
		Upper          = 0x0000000000000011,
		IsNull         = 0x0000000000000012,
		Iif            = 0x0000000000000013,
		Convert        = 0x0000000000000014,
		cInt           = 0x0000000000000015,
		cBool          = 0x0000000000000016,
		cDate          = 0x0000000000000017,
		cDbl           = 0x0000000000000018,
		cStr           = 0x0000000000000019,
		Abs            = 0x000000000000001A,
		Acos           = 0x000000000000001B,
		In             = 0x000000000000001C,
		Trim           = 0x000000000000001D,
		Sum            = 0x000000000000001E,
		Avg            = 0x000000000000001F,
		Min            = 0x0000000000000020,
		Max            = 0x0000000000000021,
		Count          = 0x0000000000000022,
		StDev          = 0x0000000000000023,
		Var            = 0x0000000000000025,
		DateTimeOffset = 0x0000000000000026
	};

	/**
	 * Enum System.Data.System.Data.MappingType
	 */
	enum class MappingType : int32_t
	{
		Element       = 0x0000000000000001,
		Attribute     = 0x0000000000000002,
		SimpleContent = 0x0000000000000003,
		Hidden        = 0x0000000000000004
	};

	/**
	 * Enum System.Data.System.Data.MissingSchemaAction
	 */
	enum class MissingSchemaAction : int32_t
	{
		Add        = 0x0000000000000001,
		Ignore     = 0x0000000000000002,
		Error      = 0x0000000000000003,
		AddWithKey = 0x0000000000000004
	};

	/**
	 * Enum System.Data.System.Data.RBTreeError
	 */
	enum class RBTreeError : int32_t
	{
		InvalidPageSize                             = 0x0000000000000001,
		PagePositionInSlotInUse                     = 0x0000000000000003,
		NoFreeSlots                                 = 0x0000000000000004,
		InvalidStateinInsert                        = 0x0000000000000005,
		InvalidNextSizeInDelete                     = 0x0000000000000007,
		InvalidStateinDelete                        = 0x0000000000000008,
		InvalidNodeSizeinDelete                     = 0x0000000000000009,
		InvalidStateinEndDelete                     = 0x000000000000000A,
		CannotRotateInvalidsuccessorNodeinDelete    = 0x000000000000000B,
		IndexOutOFRangeinGetNodeByIndex             = 0x000000000000000D,
		RBDeleteFixup                               = 0x000000000000000E,
		UnsupportedAccessMethod1                    = 0x000000000000000F,
		UnsupportedAccessMethod2                    = 0x0000000000000010,
		UnsupportedAccessMethodInNonNillRootSubtree = 0x0000000000000011,
		AttachedNodeWithZerorbTreeNodeId            = 0x0000000000000012,
		CompareNodeInDataRowTree                    = 0x0000000000000013,
		CompareSateliteTreeNodeInDataRowTree        = 0x0000000000000014,
		NestedSatelliteTreeEnumerator               = 0x0000000000000015
	};

	/**
	 * Enum System.Data.System.Data.TreeAccessMethod
	 */
	enum class TreeAccessMethod : int32_t
	{
		KEY_SEARCH_AND_INDEX = 0x0000000000000001,
		INDEX_ONLY           = 0x0000000000000002
	};

	/**
	 * Enum System.Data.System.Data.RBTree+NodeColor<K>
	 */
	enum class RBTree_NodeColor_K : int32_t
	{
		red   = 0x0000000000000000,
		black = 0x0000000000000001
	};

	/**
	 * Enum System.Data.System.Data.Rule
	 */
	enum class Rule : int32_t
	{
		None       = 0x0000000000000000,
		Cascade    = 0x0000000000000001,
		SetNull    = 0x0000000000000002,
		SetDefault = 0x0000000000000003
	};

	/**
	 * Enum System.Data.System.Data.SchemaSerializationMode
	 */
	enum class SchemaSerializationMode : int32_t
	{
		IncludeSchema = 0x0000000000000001,
		ExcludeSchema = 0x0000000000000002
	};

	/**
	 * Enum System.Data.System.Data.XmlReadMode
	 */
	enum class XmlReadMode : int32_t
	{
		Auto             = 0x0000000000000000,
		ReadSchema       = 0x0000000000000001,
		IgnoreSchema     = 0x0000000000000002,
		InferSchema      = 0x0000000000000003,
		DiffGram         = 0x0000000000000004,
		Fragment         = 0x0000000000000005,
		InferTypedSchema = 0x0000000000000006
	};

	/**
	 * Enum System.Data.System.Data.XmlWriteMode
	 */
	enum class XmlWriteMode : int32_t
	{
		WriteSchema  = 0x0000000000000000,
		IgnoreSchema = 0x0000000000000001,
		DiffGram     = 0x0000000000000002
	};

	/**
	 * Enum System.Data.System.Data.SchemaFormat
	 */
	enum class SchemaFormat : int32_t
	{
		Public               = 0x0000000000000001,
		Remoting             = 0x0000000000000002,
		WebService           = 0x0000000000000003,
		RemotingSkipSchema   = 0x0000000000000004,
		WebServiceSkipSchema = 0x0000000000000005
	};

	/**
	 * Enum System.Data.System.Data.SqlTypes.SqlBytesCharsState
	 */
	enum class SqlBytesCharsState : int32_t
	{
		Null   = 0x0000000000000000,
		Buffer = 0x0000000000000001,
		Stream = 0x0000000000000003
	};

	/**
	 * Enum System.Data.System.Data.SqlTypes.SqlCompareOptions
	 */
	enum class SqlCompareOptions : int32_t
	{
		None           = 0x0000000000000000,
		IgnoreCase     = 0x0000000000000001,
		IgnoreNonSpace = 0x0000000000000002,
		IgnoreKanaType = 0x0000000000000008,
		IgnoreWidth    = 0x0000000000000010,
		BinarySort     = 0x0000000000008000,
		BinarySort2    = 0x0000000000004000
	};

	/**
	 * Enum System.Data.System.Data.SqlTypes.EComparison
	 */
	enum class EComparison : int32_t
	{
		LT = 0x0000000000000000,
		LE = 0x0000000000000001,
		EQ = 0x0000000000000002,
		GE = 0x0000000000000003,
		GT = 0x0000000000000004,
		NE = 0x0000000000000005
	};

	/**
	 * Enum System.Data.System.Data.Common.StorageType
	 */
	enum class StorageType : int32_t
	{
		Empty          = 0x0000000000000000,
		Object         = 0x0000000000000001,
		DBNull         = 0x0000000000000002,
		Boolean        = 0x0000000000000003,
		Char           = 0x0000000000000004,
		SByte          = 0x0000000000000005,
		Byte           = 0x0000000000000006,
		Int16          = 0x0000000000000007,
		UInt16         = 0x0000000000000008,
		Int32          = 0x0000000000000009,
		UInt32         = 0x000000000000000A,
		Int64          = 0x000000000000000B,
		UInt64         = 0x000000000000000C,
		Single         = 0x000000000000000D,
		Double         = 0x000000000000000E,
		Decimal        = 0x000000000000000F,
		DateTime       = 0x0000000000000010,
		TimeSpan       = 0x0000000000000011,
		String         = 0x0000000000000012,
		Guid           = 0x0000000000000013,
		ByteArray      = 0x0000000000000014,
		CharArray      = 0x0000000000000015,
		Type           = 0x0000000000000016,
		DateTimeOffset = 0x0000000000000017,
		BigInteger     = 0x0000000000000018,
		Uri            = 0x0000000000000019,
		SqlBinary      = 0x000000000000001A,
		SqlBoolean     = 0x000000000000001B,
		SqlByte        = 0x000000000000001C,
		SqlBytes       = 0x000000000000001D,
		SqlChars       = 0x000000000000001E,
		SqlDateTime    = 0x000000000000001F,
		SqlDecimal     = 0x0000000000000020,
		SqlDouble      = 0x0000000000000021,
		SqlGuid        = 0x0000000000000022,
		SqlInt16       = 0x0000000000000023,
		SqlInt32       = 0x0000000000000024,
		SqlInt64       = 0x0000000000000025,
		SqlMoney       = 0x0000000000000026,
		SqlSingle      = 0x0000000000000027,
		SqlString      = 0x0000000000000028
	};

	/**
	 * Enum System.Data.System.Data.Common.ObjectStorage+Families
	 */
	enum class ObjectStorage_Families : int32_t
	{
		DATETIME = 0x0000000000000000,
		NUMBER   = 0x0000000000000001,
		STRING   = 0x0000000000000002,
		BOOLEAN  = 0x0000000000000003,
		ARRAY    = 0x0000000000000004
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera+CropFrame
	 */
	enum class PixelPerfectCamera_CropFrame : int32_t
	{
		None        = 0x0000000000000000,
		Pillarbox   = 0x0000000000000001,
		Letterbox   = 0x0000000000000002,
		Windowbox   = 0x0000000000000003,
		StretchFill = 0x0000000000000004
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera+GridSnapping
	 */
	enum class PixelPerfectCamera_GridSnapping : int32_t
	{
		None                 = 0x0000000000000000,
		PixelSnapping        = 0x0000000000000001,
		UpscaleRenderTexture = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Experimental.Rendering.Universal.PixelPerfectCamera+ComponentVersions
	 */
	enum class PixelPerfectCamera_ComponentVersions : int32_t
	{
		Version_Unserialized = 0x0000000000000000,
		Version_1            = 0x0000000000000001
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Experimental.Rendering.Universal.RenderQueueType
	 */
	enum class RenderQueueType : int32_t
	{
		Opaque      = 0x0000000000000000,
		Transparent = 0x0000000000000001
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.ClipType
	 */
	enum class ClipType : int32_t
	{
		ctIntersection = 0x0000000000000000,
		ctUnion        = 0x0000000000000001,
		ctDifference   = 0x0000000000000002,
		ctXor          = 0x0000000000000003
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.PolyType
	 */
	enum class PolyType : int32_t
	{
		ptSubject = 0x0000000000000000,
		ptClip    = 0x0000000000000001
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.PolyFillType
	 */
	enum class PolyFillType : int32_t
	{
		pftEvenOdd  = 0x0000000000000000,
		pftNonZero  = 0x0000000000000001,
		pftPositive = 0x0000000000000002,
		pftNegative = 0x0000000000000003
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.JoinType
	 */
	enum class JoinType : int32_t
	{
		jtRound = 0x0000000000000000
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.EndType
	 */
	enum class EndType : int32_t
	{
		etClosedPolygon = 0x0000000000000000,
		etClosedLine    = 0x0000000000000001
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.EdgeSide
	 */
	enum class EdgeSide : int32_t
	{
		esLeft  = 0x0000000000000000,
		esRight = 0x0000000000000001
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.Direction
	 */
	enum class Direction : int32_t
	{
		dRightToLeft = 0x0000000000000000,
		dLeftToRight = 0x0000000000000001
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.Clipper+NodeType
	 */
	enum class Clipper_NodeType : int32_t
	{
		ntAny    = 0x0000000000000000,
		ntOpen   = 0x0000000000000001,
		ntClosed = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.Light2D+DeprecatedLightType
	 */
	enum class Light2D_DeprecatedLightType : int32_t
	{
		Parametric = 0x0000000000000000
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.Light2D+LightType
	 */
	enum class Light2D_LightType : int32_t
	{
		Parametric = 0x0000000000000000,
		Freeform   = 0x0000000000000001,
		Sprite     = 0x0000000000000002,
		Point      = 0x0000000000000003,
		Global     = 0x0000000000000004
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.Light2D+NormalMapQuality
	 */
	enum class Light2D_NormalMapQuality : int32_t
	{
		Disabled = 0x0000000000000002,
		Fast     = 0x0000000000000000,
		Accurate = 0x0000000000000001
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.Light2D+OverlapOperation
	 */
	enum class Light2D_OverlapOperation : int32_t
	{
		Additive   = 0x0000000000000000,
		AlphaBlend = 0x0000000000000001
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.Light2D+ComponentVersions
	 */
	enum class Light2D_ComponentVersions : int32_t
	{
		Version_Unserialized = 0x0000000000000000,
		Version_1            = 0x0000000000000001
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.Light2DBlendStyle+TextureChannel
	 */
	enum class Light2DBlendStyle_TextureChannel : int32_t
	{
		None      = 0x0000000000000000,
		R         = 0x0000000000000001,
		G         = 0x0000000000000002,
		B         = 0x0000000000000003,
		A         = 0x0000000000000004,
		OneMinusR = 0x0000000000000005,
		OneMinusG = 0x0000000000000006,
		OneMinusB = 0x0000000000000007,
		OneMinusA = 0x0000000000000008
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.Light2DBlendStyle+BlendMode
	 */
	enum class Light2DBlendStyle_BlendMode : int32_t
	{
		Additive    = 0x0000000000000000,
		Multiply    = 0x0000000000000001,
		Subtractive = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.LightUtility+PivotType
	 */
	enum class LightUtility_PivotType : int32_t
	{
		PivotBase      = 0x0000000000000000,
		PivotCurve     = 0x0000000000000001,
		PivotIntersect = 0x0000000000000002,
		PivotSkip      = 0x0000000000000003,
		PivotClip      = 0x0000000000000004
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.Renderer2DData+Renderer2DDefaultMaterialType
	 */
	enum class Renderer2DData_Renderer2DDefaultMaterialType : int32_t
	{
		Lit    = 0x0000000000000000,
		Unlit  = 0x0000000000000001,
		Custom = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.ShadowCaster2D+ComponentVersions
	 */
	enum class ShadowCaster2D_ComponentVersions : int32_t
	{
		Version_Unserialized = 0x0000000000000000,
		Version_1            = 0x0000000000000001
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.ShadowQuality
	 */
	enum class ShadowQuality : int32_t
	{
		Disabled    = 0x0000000000000000,
		HardShadows = 0x0000000000000001,
		SoftShadows = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.ShadowResolution
	 */
	enum class ShadowResolution : int32_t
	{
		_256  = 0x0000000000000100,
		_512  = 0x0000000000000200,
		_1024 = 0x0000000000000400,
		_2048 = 0x0000000000000800,
		_4096 = 0x0000000000001000
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.LightCookieResolution
	 */
	enum class LightCookieResolution : int32_t
	{
		_256  = 0x0000000000000100,
		_512  = 0x0000000000000200,
		_1024 = 0x0000000000000400,
		_2048 = 0x0000000000000800,
		_4096 = 0x0000000000001000
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.LightCookieFormat
	 */
	enum class LightCookieFormat : int32_t
	{
		GrayscaleLow  = 0x0000000000000000,
		GrayscaleHigh = 0x0000000000000001,
		ColorLow      = 0x0000000000000002,
		ColorHigh     = 0x0000000000000003,
		ColorHDR      = 0x0000000000000004
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.MsaaQuality
	 */
	enum class MsaaQuality : int32_t
	{
		Disabled = 0x0000000000000001,
		_2x      = 0x0000000000000002,
		_4x      = 0x0000000000000004,
		_8x      = 0x0000000000000008
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.Downsampling
	 */
	enum class Downsampling : int32_t
	{
		None        = 0x0000000000000000,
		_2xBilinear = 0x0000000000000001,
		_4xBox      = 0x0000000000000002,
		_4xBilinear = 0x0000000000000003
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.DefaultMaterialType
	 */
	enum class DefaultMaterialType : int32_t
	{
		Standard            = 0x0000000000000000,
		Particle            = 0x0000000000000001,
		Terrain             = 0x0000000000000002,
		Sprite              = 0x0000000000000003,
		UnityBuiltinDefault = 0x0000000000000004,
		SpriteMask          = 0x0000000000000005,
		Decal               = 0x0000000000000006
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.LightRenderingMode
	 */
	enum class LightRenderingMode : int32_t
	{
		Disabled  = 0x0000000000000000,
		PerVertex = 0x0000000000000002,
		PerPixel  = 0x0000000000000001
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.ShaderVariantLogLevel
	 */
	enum class ShaderVariantLogLevel : int32_t
	{
		Disabled               = 0x0000000000000000,
		OnlyUniversalRPShaders = 0x0000000000000001,
		AllShaders             = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.PipelineDebugLevel
	 */
	enum class PipelineDebugLevel : int32_t
	{
		Disabled  = 0x0000000000000000,
		Profiling = 0x0000000000000001
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.RendererType
	 */
	enum class RendererType : int32_t
	{
		Custom            = 0x0000000000000000,
		UniversalRenderer = 0x0000000000000001,
		_2DRenderer       = 0x0000000000000002,
		ForwardRenderer   = 0x0000000000000001
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.ColorGradingMode
	 */
	enum class ColorGradingMode : int32_t
	{
		LowDynamicRange  = 0x0000000000000000,
		HighDynamicRange = 0x0000000000000001
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.StoreActionsOptimization
	 */
	enum class StoreActionsOptimization : int32_t
	{
		Auto    = 0x0000000000000000,
		Discard = 0x0000000000000001,
		Store   = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.VolumeFrameworkUpdateMode
	 */
	enum class VolumeFrameworkUpdateMode : int32_t
	{
		EveryFrame          = 0x0000000000000000,
		ViaScripting        = 0x0000000000000001,
		UsePipelineSettings = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.UpscalingFilterSelection
	 */
	enum class UpscalingFilterSelection : int32_t
	{
		Auto   = 0x0000000000000000,
		Linear = 0x0000000000000001,
		Point  = 0x0000000000000002,
		FSR    = 0x0000000000000003
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial+AlbedoDebugValidationPreset
	 */
	enum class DebugDisplaySettingsMaterial_AlbedoDebugValidationPreset : int32_t
	{
		DefaultLuminance  = 0x0000000000000000,
		BlackAcrylicPaint = 0x0000000000000001,
		DarkSoil          = 0x0000000000000002,
		WornAsphalt       = 0x0000000000000003,
		DryClaySoil       = 0x0000000000000004,
		GreenGrass        = 0x0000000000000005,
		OldConcrete       = 0x0000000000000006,
		RedClayTile       = 0x0000000000000007,
		DrySand           = 0x0000000000000008,
		NewConcrete       = 0x0000000000000009,
		WhiteAcrylicPaint = 0x000000000000000A,
		FreshSnow         = 0x000000000000000B,
		BlueSky           = 0x000000000000000C,
		Foliage           = 0x000000000000000D
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.DebugDisplaySettingsRendering+WireframeMode
	 */
	enum class DebugDisplaySettingsRendering_WireframeMode : int32_t
	{
		None            = 0x0000000000000000,
		Wireframe       = 0x0000000000000001,
		SolidWireframe  = 0x0000000000000002,
		ShadedWireframe = 0x0000000000000003
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.DecalScaleMode
	 */
	enum class DecalScaleMode : int32_t
	{
		ScaleInvariant       = 0x0000000000000000,
		InheritFromHierarchy = 0x0000000000000001
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.ShadowCascadesOption
	 */
	enum class ShadowCascadesOption : int32_t
	{
		NoCascades   = 0x0000000000000000,
		TwoCascades  = 0x0000000000000001,
		FourCascades = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.IntermediateTextureMode
	 */
	enum class IntermediateTextureMode : int32_t
	{
		Auto   = 0x0000000000000000,
		Always = 0x0000000000000001
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.LightCookieManager+LightCookieShaderFormat
	 */
	enum class LightCookieManager_LightCookieShaderFormat : int32_t
	{
		None  = -1,
		RGB   = 0x0000000000000000,
		Alpha = 0x0000000000000001,
		Red   = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.DepthOfFieldMode
	 */
	enum class DepthOfFieldMode : int32_t
	{
		Off      = 0x0000000000000000,
		Gaussian = 0x0000000000000001,
		Bokeh    = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.FilmGrainLookup
	 */
	enum class FilmGrainLookup : int32_t
	{
		Thin1   = 0x0000000000000000,
		Thin2   = 0x0000000000000001,
		Medium1 = 0x0000000000000002,
		Medium2 = 0x0000000000000003,
		Medium3 = 0x0000000000000004,
		Medium4 = 0x0000000000000005,
		Medium5 = 0x0000000000000006,
		Medium6 = 0x0000000000000007,
		Large01 = 0x0000000000000008,
		Large02 = 0x0000000000000009,
		Custom  = 0x000000000000000A
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.MotionBlurMode
	 */
	enum class MotionBlurMode : int32_t
	{
		CameraOnly       = 0x0000000000000000,
		CameraAndObjects = 0x0000000000000001
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.MotionBlurQuality
	 */
	enum class MotionBlurQuality : int32_t
	{
		Low    = 0x0000000000000000,
		Medium = 0x0000000000000001,
		High   = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.TonemappingMode
	 */
	enum class TonemappingMode : int32_t
	{
		None    = 0x0000000000000000,
		Neutral = 0x0000000000000001,
		ACES    = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.ScriptableRenderPassInput
	 */
	enum class ScriptableRenderPassInput : int32_t
	{
		None   = 0x0000000000000000,
		Depth  = 0x0000000000000001,
		Normal = 0x0000000000000002,
		Color  = 0x0000000000000004,
		Motion = 0x0000000000000008
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.RenderPassEvent
	 */
	enum class RenderPassEvent : int32_t
	{
		BeforeRendering               = 0x0000000000000000,
		BeforeRenderingShadows        = 0x0000000000000032,
		AfterRenderingShadows         = 0x0000000000000064,
		BeforeRenderingPrePasses      = 0x0000000000000096,
		BeforeRenderingPrepasses      = 0x0000000000000097,
		AfterRenderingPrePasses       = 0x00000000000000C8,
		BeforeRenderingGbuffer        = 0x00000000000000D2,
		AfterRenderingGbuffer         = 0x00000000000000DC,
		BeforeRenderingDeferredLights = 0x00000000000000E6,
		AfterRenderingDeferredLights  = 0x00000000000000F0,
		BeforeRenderingOpaques        = 0x00000000000000FA,
		AfterRenderingOpaques         = 0x000000000000012C,
		BeforeRenderingSkybox         = 0x000000000000015E,
		AfterRenderingSkybox          = 0x0000000000000190,
		BeforeRenderingTransparents   = 0x00000000000001C2,
		AfterRenderingTransparents    = 0x00000000000001F4,
		BeforeRenderingPostProcessing = 0x0000000000000226,
		AfterRenderingPostProcessing  = 0x0000000000000258,
		AfterRendering                = 0x00000000000003E8
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.DecalSurfaceData
	 */
	enum class DecalSurfaceData : int32_t
	{
		Albedo           = 0x0000000000000000,
		AlbedoNormal     = 0x0000000000000001,
		AlbedoNormalMAOS = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.DecalTechnique
	 */
	enum class DecalTechnique : int32_t
	{
		Invalid     = 0x0000000000000000,
		DBuffer     = 0x0000000000000001,
		ScreenSpace = 0x0000000000000002,
		GBuffer     = 0x0000000000000003
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.DecalTechniqueOption
	 */
	enum class DecalTechniqueOption : int32_t
	{
		Automatic   = 0x0000000000000000,
		DBuffer     = 0x0000000000000001,
		ScreenSpace = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.DecalNormalBlend
	 */
	enum class DecalNormalBlend : int32_t
	{
		Low    = 0x0000000000000000,
		Medium = 0x0000000000000001,
		High   = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.ScreenSpaceAmbientOcclusionSettings+DepthSource
	 */
	enum class ScreenSpaceAmbientOcclusionSettings_DepthSource : int32_t
	{
		Depth        = 0x0000000000000000,
		DepthNormals = 0x0000000000000001
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.ScreenSpaceAmbientOcclusionSettings+NormalQuality
	 */
	enum class ScreenSpaceAmbientOcclusionSettings_NormalQuality : int32_t
	{
		Low    = 0x0000000000000000,
		Medium = 0x0000000000000001,
		High   = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.ScreenSpaceAmbientOcclusion.ScreenSpaceAmbientOcclusionPass+ShaderPasses
	 */
	enum class ScreenSpaceAmbientOcclusion_ScreenSpaceAmbientOcclusionPass_ShaderPasses : int32_t
	{
		AO             = 0x0000000000000000,
		BlurHorizontal = 0x0000000000000001,
		BlurVertical   = 0x0000000000000002,
		BlurFinal      = 0x0000000000000003,
		AfterOpaque    = 0x0000000000000004
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.SampleCount
	 */
	enum class SampleCount : int32_t
	{
		One  = 0x0000000000000001,
		Two  = 0x0000000000000002,
		Four = 0x0000000000000004
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.ShaderPathID
	 */
	enum class ShaderPathID : int32_t
	{
		Lit                 = 0x0000000000000000,
		SimpleLit           = 0x0000000000000001,
		Unlit               = 0x0000000000000002,
		TerrainLit          = 0x0000000000000003,
		ParticlesLit        = 0x0000000000000004,
		ParticlesSimpleLit  = 0x0000000000000005,
		ParticlesUnlit      = 0x0000000000000006,
		BakedLit            = 0x0000000000000007,
		SpeedTree7          = 0x0000000000000008,
		SpeedTree7Billboard = 0x0000000000000009,
		SpeedTree8          = 0x000000000000000A
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.TileSize
	 */
	enum class TileSize : int32_t
	{
		_8  = 0x0000000000000008,
		_16 = 0x0000000000000010,
		_32 = 0x0000000000000020,
		_64 = 0x0000000000000040
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.CameraOverrideOption
	 */
	enum class CameraOverrideOption : int32_t
	{
		Off                 = 0x0000000000000000,
		On                  = 0x0000000000000001,
		UsePipelineSettings = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.RendererOverrideOption
	 */
	enum class RendererOverrideOption : int32_t
	{
		Custom              = 0x0000000000000000,
		UsePipelineSettings = 0x0000000000000001
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.AntialiasingMode
	 */
	enum class AntialiasingMode : int32_t
	{
		None                              = 0x0000000000000000,
		FastApproximateAntialiasing       = 0x0000000000000001,
		SubpixelMorphologicalAntiAliasing = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.CameraRenderType
	 */
	enum class CameraRenderType : int32_t
	{
		Base    = 0x0000000000000000,
		Overlay = 0x0000000000000001
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.AntialiasingQuality
	 */
	enum class AntialiasingQuality : int32_t
	{
		Low    = 0x0000000000000000,
		Medium = 0x0000000000000001,
		High   = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.LightLayerEnum
	 */
	enum class LightLayerEnum : int32_t
	{
		Nothing           = 0x0000000000000000,
		LightLayerDefault = 0x0000000000000001,
		LightLayer1       = 0x0000000000000002,
		LightLayer2       = 0x0000000000000004,
		LightLayer3       = 0x0000000000000008,
		LightLayer4       = 0x0000000000000010,
		LightLayer5       = 0x0000000000000020,
		LightLayer6       = 0x0000000000000040,
		LightLayer7       = 0x0000000000000080,
		Everything        = 0x00000000000000FF
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.RenderingMode
	 */
	enum class RenderingMode : int32_t
	{
		Forward  = 0x0000000000000000,
		Deferred = 0x0000000000000001
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.DepthPrimingMode
	 */
	enum class DepthPrimingMode : int32_t
	{
		Disabled = 0x0000000000000000,
		Auto     = 0x0000000000000001,
		Forced   = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.CopyDepthMode
	 */
	enum class CopyDepthMode : int32_t
	{
		AfterOpaques = 0x0000000000000000,
		ForcePrepass = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.MixedLightingSetup
	 */
	enum class MixedLightingSetup : int32_t
	{
		None        = 0x0000000000000000,
		ShadowMask  = 0x0000000000000001,
		Subtractive = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.ImageScalingMode
	 */
	enum class ImageScalingMode : int32_t
	{
		None        = 0x0000000000000000,
		Upscaling   = 0x0000000000000001,
		Downscaling = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.ImageUpscalingFilter
	 */
	enum class ImageUpscalingFilter : int32_t
	{
		Linear = 0x0000000000000000,
		Point  = 0x0000000000000001,
		FSR    = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.URPProfileId
	 */
	enum class URPProfileId : int32_t
	{
		UniversalRenderTotal   = 0x0000000000000000,
		UpdateVolumeFramework  = 0x0000000000000001,
		RenderCameraStack      = 0x0000000000000002,
		AdditionalLightsShadow = 0x0000000000000003,
		ColorGradingLUT        = 0x0000000000000004,
		CopyColor              = 0x0000000000000005,
		CopyDepth              = 0x0000000000000006,
		DepthNormalPrepass     = 0x0000000000000007,
		DepthPrepass           = 0x0000000000000008,
		DrawOpaqueObjects      = 0x0000000000000009,
		DrawTransparentObjects = 0x000000000000000A,
		LightCookies           = 0x000000000000000B,
		MainLightShadow        = 0x000000000000000C,
		ResolveShadows         = 0x000000000000000D,
		SSAO                   = 0x000000000000000E,
		StopNaNs               = 0x000000000000000F,
		SMAA                   = 0x0000000000000010,
		GaussianDepthOfField   = 0x0000000000000011,
		BokehDepthOfField      = 0x0000000000000012,
		MotionBlur             = 0x0000000000000013,
		PaniniProjection       = 0x0000000000000014,
		UberPostProcess        = 0x0000000000000015,
		Bloom                  = 0x0000000000000016,
		LensFlareDataDriven    = 0x0000000000000017,
		MotionVectors          = 0x0000000000000018,
		FinalBlit              = 0x0000000000000019
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.LibTessDotNet.WindingRule
	 */
	enum class WindingRule : int32_t
	{
		EvenOdd   = 0x0000000000000000,
		NonZero   = 0x0000000000000001,
		Positive  = 0x0000000000000002,
		Negative  = 0x0000000000000003,
		AbsGeqTwo = 0x0000000000000004
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.LibTessDotNet.ElementType
	 */
	enum class ElementType : int32_t
	{
		Polygons          = 0x0000000000000000,
		ConnectedPolygons = 0x0000000000000001,
		BoundaryContours  = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.LibTessDotNet.ContourOrientation
	 */
	enum class ContourOrientation : int32_t
	{
		Original         = 0x0000000000000000,
		Clockwise        = 0x0000000000000001,
		CounterClockwise = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.Internal.LightFlag
	 */
	enum class LightFlag : int32_t
	{
		SubtractiveMixedLighting = 0x0000000000000004
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.Internal.DeferredLights+TileDeferredPasses
	 */
	enum class DeferredLights_TileDeferredPasses : int32_t
	{
		PunctualLit       = 0x0000000000000000,
		PunctualSimpleLit = 0x0000000000000001
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.Internal.DeferredLights+StencilDeferredPasses
	 */
	enum class DeferredLights_StencilDeferredPasses : int32_t
	{
		StencilVolume        = 0x0000000000000000,
		PunctualLit          = 0x0000000000000001,
		PunctualSimpleLit    = 0x0000000000000002,
		DirectionalLit       = 0x0000000000000003,
		DirectionalSimpleLit = 0x0000000000000004,
		ClearStencilPartial  = 0x0000000000000005,
		Fog                  = 0x0000000000000006,
		SSAOOnly             = 0x0000000000000007
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.Internal.DeferredTiler+ClipResult
	 */
	enum class DeferredTiler_ClipResult : int32_t
	{
		Unknown = 0x0000000000000000,
		In      = 0x0000000000000001,
		Out     = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.Internal.StencilUsage
	 */
	enum class StencilUsage : int32_t
	{
		UserMask          = 0x000000000000000F,
		StencilLight      = 0x0000000000000010,
		MaterialMask      = 0x0000000000000060,
		MaterialUnlit     = 0x0000000000000000,
		MaterialLit       = 0x0000000000000020,
		MaterialSimpleLit = 0x0000000000000040
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngineInternal.TypeInferenceRules
	 */
	enum class TypeInferenceRules : int32_t
	{
		TypeReferencedByFirstArgument        = 0x0000000000000000,
		TypeReferencedBySecondArgument       = 0x0000000000000001,
		ArrayOfTypeReferencedByFirstArgument = 0x0000000000000002,
		TypeOfFirstArgument                  = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.CoreModule.Unity.Profiling.ProfilerMarkerDataUnit
	 */
	enum class ProfilerMarkerDataUnit : uint8_t
	{
		Undefined       = 0x0000000000000000,
		TimeNanoseconds = 0x0000000000000001,
		Bytes           = 0x0000000000000002,
		Count           = 0x0000000000000003,
		Percent         = 0x0000000000000004,
		FrequencyHz     = 0x0000000000000005
	};

	/**
	 * Enum UnityEngine.CoreModule.Unity.Profiling.ProfilerRecorderOptions
	 */
	enum class ProfilerRecorderOptions : int32_t
	{
		None                          = 0x0000000000000000,
		StartImmediately              = 0x0000000000000001,
		KeepAliveDuringDomainReload   = 0x0000000000000002,
		CollectOnlyOnCurrentThread    = 0x0000000000000004,
		WrapAroundWhenCapacityReached = 0x0000000000000008,
		SumAllSamplesInFrame          = 0x0000000000000010,
		GpuRecorder                   = 0x0000000000000040,
		Default                       = 0x0000000000000018
	};

	/**
	 * Enum UnityEngine.CoreModule.Unity.Profiling.ProfilerRecorder+ControlOptions
	 */
	enum class ProfilerRecorder_ControlOptions : int32_t
	{
		Start                      = 0x0000000000000000,
		Stop                       = 0x0000000000000001,
		Reset                      = 0x0000000000000002,
		Release                    = 0x0000000000000004,
		SetFilterToCurrentThread   = 0x0000000000000005,
		SetToCollectFromAllThreads = 0x0000000000000006
	};

	/**
	 * Enum UnityEngine.CoreModule.Unity.Profiling.ProfilerRecorder+CountOptions
	 */
	enum class ProfilerRecorder_CountOptions : int32_t
	{
		Count    = 0x0000000000000000,
		MaxCount = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.Unity.Profiling.LowLevel.MarkerFlags
	 */
	enum class MarkerFlags : uint16_t
	{
		Default            = 0x0000000000000000,
		Script             = 0x0000000000000002,
		ScriptInvoke       = 0x0000000000000020,
		ScriptDeepProfiler = 0x0000000000000040,
		AvailabilityEditor = 0x0000000000000004,
		Warning            = 0x0000000000000010,
		Counter            = 0x0000000000000080,
		SampleGPU          = 0x0000000000000100
	};

	/**
	 * Enum UnityEngine.CoreModule.Unity.Profiling.LowLevel.ProfilerMarkerDataType
	 */
	enum class ProfilerMarkerDataType : uint8_t
	{
		Int32    = 0x0000000000000002,
		UInt32   = 0x0000000000000003,
		Int64    = 0x0000000000000004,
		UInt64   = 0x0000000000000005,
		Float    = 0x0000000000000006,
		Double   = 0x0000000000000007,
		String16 = 0x0000000000000009,
		Blob8    = 0x000000000000000B
	};

	/**
	 * Enum UnityEngine.CoreModule.Unity.Jobs.LowLevel.Unsafe.ScheduleMode
	 */
	enum class ScheduleMode : int32_t
	{
		Run      = 0x0000000000000000,
		Batched  = 0x0000000000000001,
		Parallel = 0x0000000000000001,
		Single   = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.CoreModule.Unity.IO.LowLevel.Unsafe.FileState
	 */
	enum class FileState : int32_t
	{
		Absent = 0x0000000000000000,
		Exists = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.Unity.IO.LowLevel.Unsafe.AssetLoadingSubsystem
	 */
	enum class AssetLoadingSubsystem : int32_t
	{
		Other                      = 0x0000000000000000,
		Texture                    = 0x0000000000000001,
		VirtualTexture             = 0x0000000000000002,
		Mesh                       = 0x0000000000000003,
		Audio                      = 0x0000000000000004,
		Scripts                    = 0x0000000000000005,
		EntitiesScene              = 0x0000000000000006,
		EntitiesStreamBinaryReader = 0x0000000000000007,
		FileInfo                   = 0x0000000000000008
	};

	/**
	 * Enum UnityEngine.CoreModule.Unity.IO.LowLevel.Unsafe.Priority
	 */
	enum class Priority : int32_t
	{
		PriorityLow  = 0x0000000000000000,
		PriorityHigh = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.Unity.IO.LowLevel.Unsafe.ProcessingState
	 */
	enum class ProcessingState : int32_t
	{
		Unknown   = 0x0000000000000000,
		InQueue   = 0x0000000000000001,
		Reading   = 0x0000000000000002,
		Completed = 0x0000000000000003,
		Failed    = 0x0000000000000004,
		Canceled  = 0x0000000000000005
	};

	/**
	 * Enum UnityEngine.CoreModule.Unity.IO.LowLevel.Unsafe.FileReadType
	 */
	enum class FileReadType : int32_t
	{
		Sync  = 0x0000000000000000,
		Async = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.Unity.Collections.Allocator
	 */
	enum class Allocator : int32_t
	{
		Invalid     = 0x0000000000000000,
		None        = 0x0000000000000001,
		Temp        = 0x0000000000000002,
		TempJob     = 0x0000000000000003,
		Persistent  = 0x0000000000000004,
		AudioKernel = 0x0000000000000005
	};

	/**
	 * Enum UnityEngine.CoreModule.Unity.Collections.NativeArrayOptions
	 */
	enum class NativeArrayOptions : int32_t
	{
		UninitializedMemory = 0x0000000000000000,
		ClearMemory         = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.Unity.Burst.LowLevel.BurstCompilerService+BurstLogType
	 */
	enum class BurstCompilerService_BurstLogType : int32_t
	{
		Info    = 0x0000000000000000,
		Warning = 0x0000000000000001,
		Error   = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.SendMessageOptions
	 */
	enum class SendMessageOptions : int32_t
	{
		RequireReceiver     = 0x0000000000000000,
		DontRequireReceiver = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.PrimitiveType
	 */
	enum class PrimitiveType : int32_t
	{
		Sphere   = 0x0000000000000000,
		Capsule  = 0x0000000000000001,
		Cylinder = 0x0000000000000002,
		Cube     = 0x0000000000000003,
		Plane    = 0x0000000000000004,
		Quad     = 0x0000000000000005
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Space
	 */
	enum class Space : int32_t
	{
		World = 0x0000000000000000,
		Self  = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.RuntimePlatform
	 */
	enum class RuntimePlatform : int32_t
	{
		OSXEditor          = 0x0000000000000000,
		OSXPlayer          = 0x0000000000000001,
		WindowsPlayer      = 0x0000000000000002,
		OSXWebPlayer       = 0x0000000000000003,
		OSXDashboardPlayer = 0x0000000000000004,
		WindowsWebPlayer   = 0x0000000000000005,
		WindowsEditor      = 0x0000000000000007,
		IPhonePlayer       = 0x0000000000000008,
		XBOX360            = 0x000000000000000A,
		PS3                = 0x0000000000000009,
		Android            = 0x000000000000000B,
		NaCl               = 0x000000000000000C,
		FlashPlayer        = 0x000000000000000F,
		LinuxPlayer        = 0x000000000000000D,
		LinuxEditor        = 0x0000000000000010,
		WebGLPlayer        = 0x0000000000000011,
		MetroPlayerX86     = 0x0000000000000012,
		WSAPlayerX86       = 0x0000000000000012,
		MetroPlayerX64     = 0x0000000000000013,
		WSAPlayerX64       = 0x0000000000000013,
		MetroPlayerARM     = 0x0000000000000014,
		WSAPlayerARM       = 0x0000000000000014,
		WP8Player          = 0x0000000000000015,
		BlackBerryPlayer   = 0x0000000000000016,
		TizenPlayer        = 0x0000000000000017,
		PSP2               = 0x0000000000000018,
		PS4                = 0x0000000000000019,
		PSM                = 0x000000000000001A,
		XboxOne            = 0x000000000000001B,
		SamsungTVPlayer    = 0x000000000000001C,
		WiiU               = 0x000000000000001E,
		tvOS               = 0x000000000000001F,
		Switch             = 0x0000000000000020,
		Lumin              = 0x0000000000000021,
		Stadia             = 0x0000000000000022,
		CloudRendering     = 0x0000000000000023,
		GameCoreScarlett   = -1,
		GameCoreXboxSeries = 0x0000000000000024,
		GameCoreXboxOne    = 0x0000000000000025,
		PS5                = 0x0000000000000026,
		EmbeddedLinuxArm64 = 0x0000000000000027,
		EmbeddedLinuxArm32 = 0x0000000000000028,
		EmbeddedLinuxX64   = 0x0000000000000029,
		EmbeddedLinuxX86   = 0x000000000000002A,
		LinuxServer        = 0x000000000000002B,
		WindowsServer      = 0x000000000000002C,
		OSXServer          = 0x000000000000002D
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.SystemLanguage
	 */
	enum class SystemLanguage : int32_t
	{
		Afrikaans          = 0x0000000000000000,
		Arabic             = 0x0000000000000001,
		Basque             = 0x0000000000000002,
		Belarusian         = 0x0000000000000003,
		Bulgarian          = 0x0000000000000004,
		Catalan            = 0x0000000000000005,
		Chinese            = 0x0000000000000006,
		Czech              = 0x0000000000000007,
		Danish             = 0x0000000000000008,
		Dutch              = 0x0000000000000009,
		English            = 0x000000000000000A,
		Estonian           = 0x000000000000000B,
		Faroese            = 0x000000000000000C,
		Finnish            = 0x000000000000000D,
		French             = 0x000000000000000E,
		German             = 0x000000000000000F,
		Greek              = 0x0000000000000010,
		Hebrew             = 0x0000000000000011,
		Icelandic          = 0x0000000000000013,
		Indonesian         = 0x0000000000000014,
		Italian            = 0x0000000000000015,
		Japanese           = 0x0000000000000016,
		Korean             = 0x0000000000000017,
		Latvian            = 0x0000000000000018,
		Lithuanian         = 0x0000000000000019,
		Norwegian          = 0x000000000000001A,
		Polish             = 0x000000000000001B,
		Portuguese         = 0x000000000000001C,
		Romanian           = 0x000000000000001D,
		Russian            = 0x000000000000001E,
		SerboCroatian      = 0x000000000000001F,
		Slovak             = 0x0000000000000020,
		Slovenian          = 0x0000000000000021,
		Spanish            = 0x0000000000000022,
		Swedish            = 0x0000000000000023,
		Thai               = 0x0000000000000024,
		Turkish            = 0x0000000000000025,
		Ukrainian          = 0x0000000000000026,
		Vietnamese         = 0x0000000000000027,
		ChineseSimplified  = 0x0000000000000028,
		ChineseTraditional = 0x0000000000000029,
		Unknown            = 0x000000000000002A,
		Hungarian          = 0x0000000000000012
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.LogType
	 */
	enum class LogType : int32_t
	{
		Error     = 0x0000000000000000,
		Assert    = 0x0000000000000001,
		Warning   = 0x0000000000000002,
		Log       = 0x0000000000000003,
		Exception = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.LogOption
	 */
	enum class LogOption : int32_t
	{
		None         = 0x0000000000000000,
		NoStacktrace = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.WrapMode
	 */
	enum class WrapMode : int32_t
	{
		Once         = 0x0000000000000001,
		Loop         = 0x0000000000000002,
		PingPong     = 0x0000000000000004,
		Default      = 0x0000000000000000,
		ClampForever = 0x0000000000000008,
		Clamp        = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.StackTraceLogType
	 */
	enum class StackTraceLogType : int32_t
	{
		None       = 0x0000000000000000,
		ScriptOnly = 0x0000000000000001,
		Full       = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.NetworkReachability
	 */
	enum class NetworkReachability : int32_t
	{
		NotReachable                   = 0x0000000000000000,
		ReachableViaCarrierDataNetwork = 0x0000000000000001,
		ReachableViaLocalAreaNetwork   = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.ApplicationInstallMode
	 */
	enum class ApplicationInstallMode : int32_t
	{
		Unknown        = 0x0000000000000000,
		Store          = 0x0000000000000001,
		DeveloperBuild = 0x0000000000000002,
		Adhoc          = 0x0000000000000003,
		Enterprise     = 0x0000000000000004,
		Editor         = 0x0000000000000005
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.AudioType
	 */
	enum class AudioType : int32_t
	{
		UNKNOWN    = 0x0000000000000000,
		ACC        = 0x0000000000000001,
		AIFF       = 0x0000000000000002,
		IT         = 0x000000000000000A,
		MOD        = 0x000000000000000C,
		MPEG       = 0x000000000000000D,
		OGGVORBIS  = 0x000000000000000E,
		S3M        = 0x0000000000000011,
		WAV        = 0x0000000000000014,
		XM         = 0x0000000000000015,
		XMA        = 0x0000000000000016,
		VAG        = 0x0000000000000017,
		AUDIOQUEUE = 0x0000000000000018
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Camera+GateFitMode
	 */
	enum class Camera_GateFitMode : int32_t
	{
		Vertical   = 0x0000000000000001,
		Horizontal = 0x0000000000000002,
		Fill       = 0x0000000000000003,
		Overscan   = 0x0000000000000004,
		None       = 0x0000000000000000
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Camera+StereoscopicEye
	 */
	enum class Camera_StereoscopicEye : int32_t
	{
		Left  = 0x0000000000000000,
		Right = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Camera+MonoOrStereoscopicEye
	 */
	enum class Camera_MonoOrStereoscopicEye : int32_t
	{
		Left  = 0x0000000000000000,
		Right = 0x0000000000000001,
		Mono  = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Camera+SceneViewFilterMode
	 */
	enum class Camera_SceneViewFilterMode : int32_t
	{
		Off          = 0x0000000000000000,
		ShowFiltered = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Camera+RenderRequestMode
	 */
	enum class Camera_RenderRequestMode : int32_t
	{
		None          = 0x0000000000000000,
		ObjectId      = 0x0000000000000001,
		Depth         = 0x0000000000000002,
		VertexNormal  = 0x0000000000000003,
		WorldPosition = 0x0000000000000004,
		EntityId      = 0x0000000000000005,
		BaseColor     = 0x0000000000000006,
		SpecularColor = 0x0000000000000007,
		Metallic      = 0x0000000000000008,
		Emission      = 0x0000000000000009,
		Normal        = 0x000000000000000A,
		Smoothness    = 0x000000000000000B,
		Occlusion     = 0x000000000000000C,
		DiffuseColor  = 0x000000000000000D
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Camera+RenderRequestOutputSpace
	 */
	enum class Camera_RenderRequestOutputSpace : int32_t
	{
		ScreenSpace = -1,
		UV0         = 0x0000000000000000,
		UV1         = 0x0000000000000001,
		UV2         = 0x0000000000000002,
		UV3         = 0x0000000000000003,
		UV4         = 0x0000000000000004,
		UV5         = 0x0000000000000005,
		UV6         = 0x0000000000000006,
		UV7         = 0x0000000000000007,
		UV8         = 0x0000000000000008
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.CullingQueryOptions
	 */
	enum class CullingQueryOptions : int32_t
	{
		Normal           = 0x0000000000000000,
		IgnoreVisibility = 0x0000000000000001,
		IgnoreDistance   = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.ReflectionProbe+ReflectionProbeEvent
	 */
	enum class ReflectionProbe_ReflectionProbeEvent : int32_t
	{
		ReflectionProbeAdded   = 0x0000000000000000,
		ReflectionProbeRemoved = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.FullScreenMode
	 */
	enum class FullScreenMode : int32_t
	{
		ExclusiveFullScreen = 0x0000000000000000,
		FullScreenWindow    = 0x0000000000000001,
		MaximizedWindow     = 0x0000000000000002,
		Windowed            = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.ComputeBufferMode
	 */
	enum class ComputeBufferMode : int32_t
	{
		Immutable  = 0x0000000000000000,
		Dynamic    = 0x0000000000000001,
		Circular   = 0x0000000000000002,
		StreamOut  = 0x0000000000000003,
		SubUpdates = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.GraphicsBuffer+Target
	 */
	enum class GraphicsBuffer_Target : int32_t
	{
		Vertex            = 0x0000000000000001,
		Index             = 0x0000000000000002,
		CopySource        = 0x0000000000000004,
		CopyDestination   = 0x0000000000000008,
		Structured        = 0x0000000000000010,
		Raw               = 0x0000000000000020,
		Append            = 0x0000000000000040,
		Counter           = 0x0000000000000080,
		IndirectArguments = 0x0000000000000100,
		Constant          = 0x0000000000000200
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.RenderingPath
	 */
	enum class RenderingPath : int32_t
	{
		UsePlayerSettings = -1,
		VertexLit         = 0x0000000000000000,
		Forward           = 0x0000000000000001,
		DeferredLighting  = 0x0000000000000002,
		DeferredShading   = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.TransparencySortMode
	 */
	enum class TransparencySortMode : int32_t
	{
		Default      = 0x0000000000000000,
		Perspective  = 0x0000000000000001,
		Orthographic = 0x0000000000000002,
		CustomAxis   = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.StereoTargetEyeMask
	 */
	enum class StereoTargetEyeMask : int32_t
	{
		None  = 0x0000000000000000,
		Left  = 0x0000000000000001,
		Right = 0x0000000000000002,
		Both  = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.CameraType
	 */
	enum class CameraType : int32_t
	{
		Game       = 0x0000000000000001,
		SceneView  = 0x0000000000000002,
		Preview    = 0x0000000000000004,
		VR         = 0x0000000000000008,
		Reflection = 0x0000000000000010
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.ComputeBufferType
	 */
	enum class ComputeBufferType : int32_t
	{
		Default           = 0x0000000000000000,
		Raw               = 0x0000000000000001,
		Append            = 0x0000000000000002,
		Counter           = 0x0000000000000004,
		Constant          = 0x0000000000000008,
		Structured        = 0x0000000000000010,
		DrawIndirect      = 0x0000000000000100,
		IndirectArguments = 0x0000000000000100,
		GPUMemory         = 0x0000000000000200
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.LightType
	 */
	enum class LightType : int32_t
	{
		Spot        = 0x0000000000000000,
		Directional = 0x0000000000000001,
		Point       = 0x0000000000000002,
		Area        = 0x0000000000000003,
		Rectangle   = 0x0000000000000003,
		Disc        = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.LightShadows
	 */
	enum class LightShadows : int32_t
	{
		None = 0x0000000000000000,
		Hard = 0x0000000000000001,
		Soft = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.LightmapBakeType
	 */
	enum class LightmapBakeType : int32_t
	{
		Realtime = 0x0000000000000004,
		Baked    = 0x0000000000000002,
		Mixed    = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.MixedLightingMode
	 */
	enum class MixedLightingMode : int32_t
	{
		IndirectOnly = 0x0000000000000000,
		Shadowmask   = 0x0000000000000002,
		Subtractive  = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.ShadowmaskMode
	 */
	enum class ShadowmaskMode : int32_t
	{
		Shadowmask         = 0x0000000000000000,
		DistanceShadowmask = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.ShadowObjectsFilter
	 */
	enum class ShadowObjectsFilter : int32_t
	{
		AllObjects  = 0x0000000000000000,
		DynamicOnly = 0x0000000000000001,
		StaticOnly  = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.CameraClearFlags
	 */
	enum class CameraClearFlags : int32_t
	{
		Skybox     = 0x0000000000000001,
		Color      = 0x0000000000000002,
		SolidColor = 0x0000000000000002,
		Depth      = 0x0000000000000003,
		Nothing    = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.DepthTextureMode
	 */
	enum class DepthTextureMode : int32_t
	{
		None          = 0x0000000000000000,
		Depth         = 0x0000000000000001,
		DepthNormals  = 0x0000000000000002,
		MotionVectors = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.MeshTopology
	 */
	enum class MeshTopology : int32_t
	{
		Triangles = 0x0000000000000000,
		Quads     = 0x0000000000000002,
		Lines     = 0x0000000000000003,
		LineStrip = 0x0000000000000004,
		Points    = 0x0000000000000005
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.ColorSpace
	 */
	enum class ColorSpace : int32_t
	{
		Uninitialized = -1,
		Gamma         = 0x0000000000000000,
		Linear        = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.ScreenOrientation
	 */
	enum class ScreenOrientation : int32_t
	{
		Unknown            = 0x0000000000000000,
		Landscape          = 0x0000000000000003,
		Portrait           = 0x0000000000000001,
		PortraitUpsideDown = 0x0000000000000002,
		LandscapeLeft      = 0x0000000000000003,
		LandscapeRight     = 0x0000000000000004,
		AutoRotation       = 0x0000000000000005
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.FilterMode
	 */
	enum class FilterMode : int32_t
	{
		Point     = 0x0000000000000000,
		Bilinear  = 0x0000000000000001,
		Trilinear = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.TextureWrapMode
	 */
	enum class TextureWrapMode : int32_t
	{
		Repeat     = 0x0000000000000000,
		Clamp      = 0x0000000000000001,
		Mirror     = 0x0000000000000002,
		MirrorOnce = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.TextureFormat
	 */
	enum class TextureFormat : int32_t
	{
		Alpha8             = 0x0000000000000001,
		ARGB4444           = 0x0000000000000002,
		RGB24              = 0x0000000000000003,
		RGBA32             = 0x0000000000000004,
		ARGB32             = 0x0000000000000005,
		RGB565             = 0x0000000000000007,
		R16                = 0x0000000000000009,
		DXT1               = 0x000000000000000A,
		DXT5               = 0x000000000000000C,
		RGBA4444           = 0x000000000000000D,
		BGRA32             = 0x000000000000000E,
		RHalf              = 0x000000000000000F,
		RGHalf             = 0x0000000000000010,
		RGBAHalf           = 0x0000000000000011,
		RFloat             = 0x0000000000000012,
		RGFloat            = 0x0000000000000013,
		RGBAFloat          = 0x0000000000000014,
		YUY2               = 0x0000000000000015,
		RGB9e5Float        = 0x0000000000000016,
		BC4                = 0x000000000000001A,
		BC5                = 0x000000000000001B,
		BC6H               = 0x0000000000000018,
		BC7                = 0x0000000000000019,
		DXT1Crunched       = 0x000000000000001C,
		DXT5Crunched       = 0x000000000000001D,
		PVRTC_RGB2         = 0x000000000000001E,
		PVRTC_RGBA2        = 0x000000000000001F,
		PVRTC_RGB4         = 0x0000000000000020,
		PVRTC_RGBA4        = 0x0000000000000021,
		ETC_RGB4           = 0x0000000000000022,
		EAC_R              = 0x0000000000000029,
		EAC_R_SIGNED       = 0x000000000000002A,
		EAC_RG             = 0x000000000000002B,
		EAC_RG_SIGNED      = 0x000000000000002C,
		ETC2_RGB           = 0x000000000000002D,
		ETC2_RGBA1         = 0x000000000000002E,
		ETC2_RGBA8         = 0x000000000000002F,
		ASTC_4x4           = 0x0000000000000030,
		ASTC_5x5           = 0x0000000000000031,
		ASTC_6x6           = 0x0000000000000032,
		ASTC_8x8           = 0x0000000000000033,
		ASTC_10x10         = 0x0000000000000034,
		ASTC_12x12         = 0x0000000000000035,
		ETC_RGB4_3DS       = 0x000000000000003C,
		ETC_RGBA8_3DS      = 0x000000000000003D,
		RG16               = 0x000000000000003E,
		R8                 = 0x000000000000003F,
		ETC_RGB4Crunched   = 0x0000000000000040,
		ETC2_RGBA8Crunched = 0x0000000000000041,
		ASTC_HDR_4x4       = 0x0000000000000042,
		ASTC_HDR_5x5       = 0x0000000000000043,
		ASTC_HDR_6x6       = 0x0000000000000044,
		ASTC_HDR_8x8       = 0x0000000000000045,
		ASTC_HDR_10x10     = 0x0000000000000046,
		ASTC_HDR_12x12     = 0x0000000000000047,
		RG32               = 0x0000000000000048,
		RGB48              = 0x0000000000000049,
		RGBA64             = 0x000000000000004A,
		ASTC_RGB_4x4       = 0x0000000000000030,
		ASTC_RGB_5x5       = 0x0000000000000031,
		ASTC_RGB_6x6       = 0x0000000000000032,
		ASTC_RGB_8x8       = 0x0000000000000033,
		ASTC_RGB_10x10     = 0x0000000000000034,
		ASTC_RGB_12x12     = 0x0000000000000035,
		ASTC_RGBA_4x4      = 0x0000000000000036,
		ASTC_RGBA_5x5      = 0x0000000000000037,
		ASTC_RGBA_6x6      = 0x0000000000000038,
		ASTC_RGBA_8x8      = 0x0000000000000039,
		ASTC_RGBA_10x10    = 0x000000000000003A,
		ASTC_RGBA_12x12    = 0x000000000000003B
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.CubemapFace
	 */
	enum class CubemapFace : int32_t
	{
		Unknown   = -1,
		PositiveX = 0x0000000000000000,
		NegativeX = 0x0000000000000001,
		PositiveY = 0x0000000000000002,
		NegativeY = 0x0000000000000003,
		PositiveZ = 0x0000000000000004,
		NegativeZ = 0x0000000000000005
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.RenderTextureFormat
	 */
	enum class RenderTextureFormat : int32_t
	{
		ARGB32          = 0x0000000000000000,
		Depth           = 0x0000000000000001,
		ARGBHalf        = 0x0000000000000002,
		Shadowmap       = 0x0000000000000003,
		RGB565          = 0x0000000000000004,
		ARGB4444        = 0x0000000000000005,
		ARGB1555        = 0x0000000000000006,
		Default         = 0x0000000000000007,
		ARGB2101010     = 0x0000000000000008,
		DefaultHDR      = 0x0000000000000009,
		ARGB64          = 0x000000000000000A,
		ARGBFloat       = 0x000000000000000B,
		RGFloat         = 0x000000000000000C,
		RGHalf          = 0x000000000000000D,
		RFloat          = 0x000000000000000E,
		RHalf           = 0x000000000000000F,
		R8              = 0x0000000000000010,
		ARGBInt         = 0x0000000000000011,
		RGInt           = 0x0000000000000012,
		RInt            = 0x0000000000000013,
		BGRA32          = 0x0000000000000014,
		RGB111110Float  = 0x0000000000000016,
		RG32            = 0x0000000000000017,
		RGBAUShort      = 0x0000000000000018,
		RG16            = 0x0000000000000019,
		BGRA10101010_XR = 0x000000000000001A,
		BGR101010_XR    = 0x000000000000001B,
		R16             = 0x000000000000001C
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.VRTextureUsage
	 */
	enum class VRTextureUsage : int32_t
	{
		None           = 0x0000000000000000,
		OneEye         = 0x0000000000000001,
		TwoEyes        = 0x0000000000000002,
		DeviceSpecific = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.RenderTextureCreationFlags
	 */
	enum class RenderTextureCreationFlags : int32_t
	{
		MipMap                 = 0x0000000000000001,
		AutoGenerateMips       = 0x0000000000000002,
		SRGB                   = 0x0000000000000004,
		EyeTexture             = 0x0000000000000008,
		EnableRandomWrite      = 0x0000000000000010,
		CreatedFromScript      = 0x0000000000000020,
		AllowVerticalFlip      = 0x0000000000000080,
		NoResolvedColorSurface = 0x0000000000000100,
		DynamicallyScalable    = 0x0000000000000400,
		BindMS                 = 0x0000000000000800
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.RenderTextureReadWrite
	 */
	enum class RenderTextureReadWrite : int32_t
	{
		Default = 0x0000000000000000,
		Linear  = 0x0000000000000001,
		sRGB    = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.RenderTextureMemoryless
	 */
	enum class RenderTextureMemoryless : int32_t
	{
		None  = 0x0000000000000000,
		Color = 0x0000000000000001,
		Depth = 0x0000000000000002,
		MSAA  = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.LightmapsMode
	 */
	enum class LightmapsMode : int32_t
	{
		NonDirectional      = 0x0000000000000000,
		CombinedDirectional = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.CursorMode
	 */
	enum class CursorMode : int32_t
	{
		Auto          = 0x0000000000000000,
		ForceSoftware = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.CursorLockMode
	 */
	enum class CursorLockMode : int32_t
	{
		None     = 0x0000000000000000,
		Locked   = 0x0000000000000001,
		Confined = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.KeyCode
	 */
	enum class KeyCode : int32_t
	{
		None              = 0x0000000000000000,
		Backspace         = 0x0000000000000008,
		Delete            = 0x000000000000007F,
		Tab               = 0x0000000000000009,
		Clear             = 0x000000000000000C,
		Return            = 0x000000000000000D,
		Pause             = 0x0000000000000013,
		Escape            = 0x000000000000001B,
		Space             = 0x0000000000000020,
		Keypad0           = 0x0000000000000100,
		Keypad1           = 0x0000000000000101,
		Keypad2           = 0x0000000000000102,
		Keypad3           = 0x0000000000000103,
		Keypad4           = 0x0000000000000104,
		Keypad5           = 0x0000000000000105,
		Keypad6           = 0x0000000000000106,
		Keypad7           = 0x0000000000000107,
		Keypad8           = 0x0000000000000108,
		Keypad9           = 0x0000000000000109,
		KeypadPeriod      = 0x000000000000010A,
		KeypadDivide      = 0x000000000000010B,
		KeypadMultiply    = 0x000000000000010C,
		KeypadMinus       = 0x000000000000010D,
		KeypadPlus        = 0x000000000000010E,
		KeypadEnter       = 0x000000000000010F,
		KeypadEquals      = 0x0000000000000110,
		UpArrow           = 0x0000000000000111,
		DownArrow         = 0x0000000000000112,
		RightArrow        = 0x0000000000000113,
		LeftArrow         = 0x0000000000000114,
		Insert            = 0x0000000000000115,
		Home              = 0x0000000000000116,
		End               = 0x0000000000000117,
		PageUp            = 0x0000000000000118,
		PageDown          = 0x0000000000000119,
		F1                = 0x000000000000011A,
		F2                = 0x000000000000011B,
		F3                = 0x000000000000011C,
		F4                = 0x000000000000011D,
		F5                = 0x000000000000011E,
		F6                = 0x000000000000011F,
		F7                = 0x0000000000000120,
		F8                = 0x0000000000000121,
		F9                = 0x0000000000000122,
		F10               = 0x0000000000000123,
		F11               = 0x0000000000000124,
		F12               = 0x0000000000000125,
		F13               = 0x0000000000000126,
		F14               = 0x0000000000000127,
		F15               = 0x0000000000000128,
		Alpha0            = 0x0000000000000030,
		Alpha1            = 0x0000000000000031,
		Alpha2            = 0x0000000000000032,
		Alpha3            = 0x0000000000000033,
		Alpha4            = 0x0000000000000034,
		Alpha5            = 0x0000000000000035,
		Alpha6            = 0x0000000000000036,
		Alpha7            = 0x0000000000000037,
		Alpha8            = 0x0000000000000038,
		Alpha9            = 0x0000000000000039,
		Exclaim           = 0x0000000000000021,
		DoubleQuote       = 0x0000000000000022,
		Hash              = 0x0000000000000023,
		Dollar            = 0x0000000000000024,
		Percent           = 0x0000000000000025,
		Ampersand         = 0x0000000000000026,
		Quote             = 0x0000000000000027,
		LeftParen         = 0x0000000000000028,
		RightParen        = 0x0000000000000029,
		Asterisk          = 0x000000000000002A,
		Plus              = 0x000000000000002B,
		Comma             = 0x000000000000002C,
		Minus             = 0x000000000000002D,
		Period            = 0x000000000000002E,
		Slash             = 0x000000000000002F,
		Colon             = 0x000000000000003A,
		Semicolon         = 0x000000000000003B,
		Less              = 0x000000000000003C,
		Equals            = 0x000000000000003D,
		Greater           = 0x000000000000003E,
		Question          = 0x000000000000003F,
		At                = 0x0000000000000040,
		LeftBracket       = 0x000000000000005B,
		Backslash         = 0x000000000000005C,
		RightBracket      = 0x000000000000005D,
		Caret             = 0x000000000000005E,
		Underscore        = 0x000000000000005F,
		BackQuote         = 0x0000000000000060,
		A                 = 0x0000000000000061,
		B                 = 0x0000000000000062,
		C                 = 0x0000000000000063,
		D                 = 0x0000000000000064,
		E                 = 0x0000000000000065,
		F                 = 0x0000000000000066,
		G                 = 0x0000000000000067,
		H                 = 0x0000000000000068,
		I                 = 0x0000000000000069,
		J                 = 0x000000000000006A,
		K                 = 0x000000000000006B,
		L                 = 0x000000000000006C,
		M                 = 0x000000000000006D,
		N                 = 0x000000000000006E,
		O                 = 0x000000000000006F,
		P                 = 0x0000000000000070,
		Q                 = 0x0000000000000071,
		R                 = 0x0000000000000072,
		S                 = 0x0000000000000073,
		T                 = 0x0000000000000074,
		U                 = 0x0000000000000075,
		V                 = 0x0000000000000076,
		W                 = 0x0000000000000077,
		X                 = 0x0000000000000078,
		Y                 = 0x0000000000000079,
		Z                 = 0x000000000000007A,
		LeftCurlyBracket  = 0x000000000000007B,
		Pipe              = 0x000000000000007C,
		RightCurlyBracket = 0x000000000000007D,
		Tilde             = 0x000000000000007E,
		Numlock           = 0x000000000000012C,
		CapsLock          = 0x000000000000012D,
		ScrollLock        = 0x000000000000012E,
		RightShift        = 0x000000000000012F,
		LeftShift         = 0x0000000000000130,
		RightControl      = 0x0000000000000131,
		LeftControl       = 0x0000000000000132,
		RightAlt          = 0x0000000000000133,
		LeftAlt           = 0x0000000000000134,
		LeftMeta          = 0x0000000000000136,
		LeftCommand       = 0x0000000000000136,
		LeftApple         = 0x0000000000000136,
		LeftWindows       = 0x0000000000000137,
		RightMeta         = 0x0000000000000135,
		RightCommand      = 0x0000000000000135,
		RightApple        = 0x0000000000000135,
		RightWindows      = 0x0000000000000138,
		AltGr             = 0x0000000000000139,
		Help              = 0x000000000000013B,
		Print             = 0x000000000000013C,
		SysReq            = 0x000000000000013D,
		Break             = 0x000000000000013E,
		Menu              = 0x000000000000013F,
		Mouse0            = 0x0000000000000143,
		Mouse1            = 0x0000000000000144,
		Mouse2            = 0x0000000000000145,
		Mouse3            = 0x0000000000000146,
		Mouse4            = 0x0000000000000147,
		Mouse5            = 0x0000000000000148,
		Mouse6            = 0x0000000000000149,
		JoystickButton0   = 0x000000000000014A,
		JoystickButton1   = 0x000000000000014B,
		JoystickButton2   = 0x000000000000014C,
		JoystickButton3   = 0x000000000000014D,
		JoystickButton4   = 0x000000000000014E,
		JoystickButton5   = 0x000000000000014F,
		JoystickButton6   = 0x0000000000000150,
		JoystickButton7   = 0x0000000000000151,
		JoystickButton8   = 0x0000000000000152,
		JoystickButton9   = 0x0000000000000153,
		JoystickButton10  = 0x0000000000000154,
		JoystickButton11  = 0x0000000000000155,
		JoystickButton12  = 0x0000000000000156,
		JoystickButton13  = 0x0000000000000157,
		JoystickButton14  = 0x0000000000000158,
		JoystickButton15  = 0x0000000000000159,
		JoystickButton16  = 0x000000000000015A,
		JoystickButton17  = 0x000000000000015B,
		JoystickButton18  = 0x000000000000015C,
		JoystickButton19  = 0x000000000000015D,
		Joystick1Button0  = 0x000000000000015E,
		Joystick1Button1  = 0x000000000000015F,
		Joystick1Button2  = 0x0000000000000160,
		Joystick1Button3  = 0x0000000000000161,
		Joystick1Button4  = 0x0000000000000162,
		Joystick1Button5  = 0x0000000000000163,
		Joystick1Button6  = 0x0000000000000164,
		Joystick1Button7  = 0x0000000000000165,
		Joystick1Button8  = 0x0000000000000166,
		Joystick1Button9  = 0x0000000000000167,
		Joystick1Button10 = 0x0000000000000168,
		Joystick1Button11 = 0x0000000000000169,
		Joystick1Button12 = 0x000000000000016A,
		Joystick1Button13 = 0x000000000000016B,
		Joystick1Button14 = 0x000000000000016C,
		Joystick1Button15 = 0x000000000000016D,
		Joystick1Button16 = 0x000000000000016E,
		Joystick1Button17 = 0x000000000000016F,
		Joystick1Button18 = 0x0000000000000170,
		Joystick1Button19 = 0x0000000000000171,
		Joystick2Button0  = 0x0000000000000172,
		Joystick2Button1  = 0x0000000000000173,
		Joystick2Button2  = 0x0000000000000174,
		Joystick2Button3  = 0x0000000000000175,
		Joystick2Button4  = 0x0000000000000176,
		Joystick2Button5  = 0x0000000000000177,
		Joystick2Button6  = 0x0000000000000178,
		Joystick2Button7  = 0x0000000000000179,
		Joystick2Button8  = 0x000000000000017A,
		Joystick2Button9  = 0x000000000000017B,
		Joystick2Button10 = 0x000000000000017C,
		Joystick2Button11 = 0x000000000000017D,
		Joystick2Button12 = 0x000000000000017E,
		Joystick2Button13 = 0x000000000000017F,
		Joystick2Button14 = 0x0000000000000180,
		Joystick2Button15 = 0x0000000000000181,
		Joystick2Button16 = 0x0000000000000182,
		Joystick2Button17 = 0x0000000000000183,
		Joystick2Button18 = 0x0000000000000184,
		Joystick2Button19 = 0x0000000000000185,
		Joystick3Button0  = 0x0000000000000186,
		Joystick3Button1  = 0x0000000000000187,
		Joystick3Button2  = 0x0000000000000188,
		Joystick3Button3  = 0x0000000000000189,
		Joystick3Button4  = 0x000000000000018A,
		Joystick3Button5  = 0x000000000000018B,
		Joystick3Button6  = 0x000000000000018C,
		Joystick3Button7  = 0x000000000000018D,
		Joystick3Button8  = 0x000000000000018E,
		Joystick3Button9  = 0x000000000000018F,
		Joystick3Button10 = 0x0000000000000190,
		Joystick3Button11 = 0x0000000000000191,
		Joystick3Button12 = 0x0000000000000192,
		Joystick3Button13 = 0x0000000000000193,
		Joystick3Button14 = 0x0000000000000194,
		Joystick3Button15 = 0x0000000000000195,
		Joystick3Button16 = 0x0000000000000196,
		Joystick3Button17 = 0x0000000000000197,
		Joystick3Button18 = 0x0000000000000198,
		Joystick3Button19 = 0x0000000000000199,
		Joystick4Button0  = 0x000000000000019A,
		Joystick4Button1  = 0x000000000000019B,
		Joystick4Button2  = 0x000000000000019C,
		Joystick4Button3  = 0x000000000000019D,
		Joystick4Button4  = 0x000000000000019E,
		Joystick4Button5  = 0x000000000000019F,
		Joystick4Button6  = 0x00000000000001A0,
		Joystick4Button7  = 0x00000000000001A1,
		Joystick4Button8  = 0x00000000000001A2,
		Joystick4Button9  = 0x00000000000001A3,
		Joystick4Button10 = 0x00000000000001A4,
		Joystick4Button11 = 0x00000000000001A5,
		Joystick4Button12 = 0x00000000000001A6,
		Joystick4Button13 = 0x00000000000001A7,
		Joystick4Button14 = 0x00000000000001A8,
		Joystick4Button15 = 0x00000000000001A9,
		Joystick4Button16 = 0x00000000000001AA,
		Joystick4Button17 = 0x00000000000001AB,
		Joystick4Button18 = 0x00000000000001AC,
		Joystick4Button19 = 0x00000000000001AD,
		Joystick5Button0  = 0x00000000000001AE,
		Joystick5Button1  = 0x00000000000001AF,
		Joystick5Button2  = 0x00000000000001B0,
		Joystick5Button3  = 0x00000000000001B1,
		Joystick5Button4  = 0x00000000000001B2,
		Joystick5Button5  = 0x00000000000001B3,
		Joystick5Button6  = 0x00000000000001B4,
		Joystick5Button7  = 0x00000000000001B5,
		Joystick5Button8  = 0x00000000000001B6,
		Joystick5Button9  = 0x00000000000001B7,
		Joystick5Button10 = 0x00000000000001B8,
		Joystick5Button11 = 0x00000000000001B9,
		Joystick5Button12 = 0x00000000000001BA,
		Joystick5Button13 = 0x00000000000001BB,
		Joystick5Button14 = 0x00000000000001BC,
		Joystick5Button15 = 0x00000000000001BD,
		Joystick5Button16 = 0x00000000000001BE,
		Joystick5Button17 = 0x00000000000001BF,
		Joystick5Button18 = 0x00000000000001C0,
		Joystick5Button19 = 0x00000000000001C1,
		Joystick6Button0  = 0x00000000000001C2,
		Joystick6Button1  = 0x00000000000001C3,
		Joystick6Button2  = 0x00000000000001C4,
		Joystick6Button3  = 0x00000000000001C5,
		Joystick6Button4  = 0x00000000000001C6,
		Joystick6Button5  = 0x00000000000001C7,
		Joystick6Button6  = 0x00000000000001C8,
		Joystick6Button7  = 0x00000000000001C9,
		Joystick6Button8  = 0x00000000000001CA,
		Joystick6Button9  = 0x00000000000001CB,
		Joystick6Button10 = 0x00000000000001CC,
		Joystick6Button11 = 0x00000000000001CD,
		Joystick6Button12 = 0x00000000000001CE,
		Joystick6Button13 = 0x00000000000001CF,
		Joystick6Button14 = 0x00000000000001D0,
		Joystick6Button15 = 0x00000000000001D1,
		Joystick6Button16 = 0x00000000000001D2,
		Joystick6Button17 = 0x00000000000001D3,
		Joystick6Button18 = 0x00000000000001D4,
		Joystick6Button19 = 0x00000000000001D5,
		Joystick7Button0  = 0x00000000000001D6,
		Joystick7Button1  = 0x00000000000001D7,
		Joystick7Button2  = 0x00000000000001D8,
		Joystick7Button3  = 0x00000000000001D9,
		Joystick7Button4  = 0x00000000000001DA,
		Joystick7Button5  = 0x00000000000001DB,
		Joystick7Button6  = 0x00000000000001DC,
		Joystick7Button7  = 0x00000000000001DD,
		Joystick7Button8  = 0x00000000000001DE,
		Joystick7Button9  = 0x00000000000001DF,
		Joystick7Button10 = 0x00000000000001E0,
		Joystick7Button11 = 0x00000000000001E1,
		Joystick7Button12 = 0x00000000000001E2,
		Joystick7Button13 = 0x00000000000001E3,
		Joystick7Button14 = 0x00000000000001E4,
		Joystick7Button15 = 0x00000000000001E5,
		Joystick7Button16 = 0x00000000000001E6,
		Joystick7Button17 = 0x00000000000001E7,
		Joystick7Button18 = 0x00000000000001E8,
		Joystick7Button19 = 0x00000000000001E9,
		Joystick8Button0  = 0x00000000000001EA,
		Joystick8Button1  = 0x00000000000001EB,
		Joystick8Button2  = 0x00000000000001EC,
		Joystick8Button3  = 0x00000000000001ED,
		Joystick8Button4  = 0x00000000000001EE,
		Joystick8Button5  = 0x00000000000001EF,
		Joystick8Button6  = 0x00000000000001F0,
		Joystick8Button7  = 0x00000000000001F1,
		Joystick8Button8  = 0x00000000000001F2,
		Joystick8Button9  = 0x00000000000001F3,
		Joystick8Button10 = 0x00000000000001F4,
		Joystick8Button11 = 0x00000000000001F5,
		Joystick8Button12 = 0x00000000000001F6,
		Joystick8Button13 = 0x00000000000001F7,
		Joystick8Button14 = 0x00000000000001F8,
		Joystick8Button15 = 0x00000000000001F9,
		Joystick8Button16 = 0x00000000000001FA,
		Joystick8Button17 = 0x00000000000001FB,
		Joystick8Button18 = 0x00000000000001FC,
		Joystick8Button19 = 0x00000000000001FD
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.RuntimeInitializeLoadType
	 */
	enum class RuntimeInitializeLoadType : int32_t
	{
		AfterSceneLoad        = 0x0000000000000000,
		BeforeSceneLoad       = 0x0000000000000001,
		AfterAssembliesLoaded = 0x0000000000000002,
		BeforeSplashScreen    = 0x0000000000000003,
		SubsystemRegistration = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.HideFlags
	 */
	enum class HideFlags : int32_t
	{
		None                  = 0x0000000000000000,
		HideInHierarchy       = 0x0000000000000001,
		HideInInspector       = 0x0000000000000002,
		DontSaveInEditor      = 0x0000000000000004,
		NotEditable           = 0x0000000000000008,
		DontSaveInBuild       = 0x0000000000000010,
		DontUnloadUnusedAsset = 0x0000000000000020,
		DontSave              = 0x0000000000000034,
		HideAndDontSave       = 0x000000000000003D
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.OperatingSystemFamily
	 */
	enum class OperatingSystemFamily : int32_t
	{
		Other   = 0x0000000000000000,
		MacOSX  = 0x0000000000000001,
		Windows = 0x0000000000000002,
		Linux   = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.DeviceType
	 */
	enum class DeviceType : int32_t
	{
		Unknown  = 0x0000000000000000,
		Handheld = 0x0000000000000001,
		Console  = 0x0000000000000002,
		Desktop  = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.TouchScreenKeyboard+Status
	 */
	enum class TouchScreenKeyboard_Status : int32_t
	{
		Visible   = 0x0000000000000000,
		Done      = 0x0000000000000001,
		Canceled  = 0x0000000000000002,
		LostFocus = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.TouchScreenKeyboardType
	 */
	enum class TouchScreenKeyboardType : int32_t
	{
		Default                = 0x0000000000000000,
		ASCIICapable           = 0x0000000000000001,
		NumbersAndPunctuation  = 0x0000000000000002,
		URL                    = 0x0000000000000003,
		NumberPad              = 0x0000000000000004,
		PhonePad               = 0x0000000000000005,
		NamePhonePad           = 0x0000000000000006,
		EmailAddress           = 0x0000000000000007,
		NintendoNetworkAccount = 0x0000000000000008,
		Social                 = 0x0000000000000009,
		Search                 = 0x000000000000000A,
		DecimalPad             = 0x000000000000000B,
		OneTimeCode            = 0x000000000000000C
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.DrivenTransformProperties
	 */
	enum class DrivenTransformProperties : int32_t
	{
		None               = 0x0000000000000000,
		All                = -1,
		AnchoredPositionX  = 0x0000000000000002,
		AnchoredPositionY  = 0x0000000000000004,
		AnchoredPositionZ  = 0x0000000000000008,
		Rotation           = 0x0000000000000010,
		ScaleX             = 0x0000000000000020,
		ScaleY             = 0x0000000000000040,
		ScaleZ             = 0x0000000000000080,
		AnchorMinX         = 0x0000000000000100,
		AnchorMinY         = 0x0000000000000200,
		AnchorMaxX         = 0x0000000000000400,
		AnchorMaxY         = 0x0000000000000800,
		SizeDeltaX         = 0x0000000000001000,
		SizeDeltaY         = 0x0000000000002000,
		PivotX             = 0x0000000000004000,
		PivotY             = 0x0000000000008000,
		AnchoredPosition   = 0x0000000000000006,
		AnchoredPosition3D = 0x000000000000000E,
		Scale              = 0x00000000000000E0,
		AnchorMin          = 0x0000000000000300,
		AnchorMax          = 0x0000000000000C00,
		Anchors            = 0x0000000000000F00,
		SizeDelta          = 0x0000000000003000,
		Pivot              = 0x000000000000C000
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.RectTransform+Axis
	 */
	enum class RectTransform_Axis : int32_t
	{
		Horizontal = 0x0000000000000000,
		Vertical   = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.SpriteMaskInteraction
	 */
	enum class SpriteMaskInteraction : int32_t
	{
		None               = 0x0000000000000000,
		VisibleInsideMask  = 0x0000000000000001,
		VisibleOutsideMask = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.SpriteMeshType
	 */
	enum class SpriteMeshType : int32_t
	{
		FullRect = 0x0000000000000000,
		Tight    = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.SpritePackingMode
	 */
	enum class SpritePackingMode : int32_t
	{
		Tight     = 0x0000000000000000,
		Rectangle = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.SpritePackingRotation
	 */
	enum class SpritePackingRotation : int32_t
	{
		None           = 0x0000000000000000,
		FlipHorizontal = 0x0000000000000001,
		FlipVertical   = 0x0000000000000002,
		Rotate180      = 0x0000000000000003,
		Any            = 0x000000000000000F
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Windows.Speech.ConfidenceLevel
	 */
	enum class ConfidenceLevel : int32_t
	{
		High     = 0x0000000000000000,
		Medium   = 0x0000000000000001,
		Low      = 0x0000000000000002,
		Rejected = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Windows.Speech.SpeechSystemStatus
	 */
	enum class SpeechSystemStatus : int32_t
	{
		Stopped = 0x0000000000000000,
		Running = 0x0000000000000001,
		Failed  = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Windows.Speech.SpeechError
	 */
	enum class SpeechError : int32_t
	{
		NoError                   = 0x0000000000000000,
		TopicLanguageNotSupported = 0x0000000000000001,
		GrammarLanguageMismatch   = 0x0000000000000002,
		GrammarCompilationFailure = 0x0000000000000003,
		AudioQualityFailure       = 0x0000000000000004,
		PauseLimitExceeded        = 0x0000000000000005,
		TimeoutExceeded           = 0x0000000000000006,
		NetworkFailure            = 0x0000000000000007,
		MicrophoneUnavailable     = 0x0000000000000008,
		UnknownError              = 0x0000000000000009
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Windows.Speech.DictationCompletionCause
	 */
	enum class DictationCompletionCause : int32_t
	{
		Complete              = 0x0000000000000000,
		AudioQualityFailure   = 0x0000000000000001,
		Canceled              = 0x0000000000000002,
		TimeoutExceeded       = 0x0000000000000003,
		PauseLimitExceeded    = 0x0000000000000004,
		NetworkFailure        = 0x0000000000000005,
		MicrophoneUnavailable = 0x0000000000000006,
		UnknownError          = 0x0000000000000007
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Windows.WebCam.PhotoCapture+CaptureResultType
	 */
	enum class PhotoCapture_CaptureResultType : int32_t
	{
		Success      = 0x0000000000000000,
		UnknownError = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Windows.WebCam.VideoCapture+CaptureResultType
	 */
	enum class VideoCapture_CaptureResultType : int32_t
	{
		Success      = 0x0000000000000000,
		UnknownError = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Windows.WebCam.CapturePixelFormat
	 */
	enum class CapturePixelFormat : int32_t
	{
		BGRA32 = 0x0000000000000000,
		NV12   = 0x0000000000000001,
		JPEG   = 0x0000000000000002,
		PNG    = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Events.PersistentListenerMode
	 */
	enum class PersistentListenerMode : int32_t
	{
		EventDefined = 0x0000000000000000,
		Void         = 0x0000000000000001,
		Object       = 0x0000000000000002,
		Int          = 0x0000000000000003,
		Float        = 0x0000000000000004,
		String       = 0x0000000000000005,
		Bool         = 0x0000000000000006
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Events.UnityEventCallState
	 */
	enum class UnityEventCallState : int32_t
	{
		Off              = 0x0000000000000000,
		EditorAndRuntime = 0x0000000000000001,
		RuntimeOnly      = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.SceneManagement.LoadSceneMode
	 */
	enum class LoadSceneMode : int32_t
	{
		Single   = 0x0000000000000000,
		Additive = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.SceneManagement.LocalPhysicsMode
	 */
	enum class LocalPhysicsMode : int32_t
	{
		None      = 0x0000000000000000,
		Physics2D = 0x0000000000000001,
		Physics3D = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.SynchronisationStage
	 */
	enum class SynchronisationStage : int32_t
	{
		VertexProcessing = 0x0000000000000000,
		PixelProcessing  = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.IndexFormat
	 */
	enum class IndexFormat : int32_t
	{
		UInt16 = 0x0000000000000000,
		UInt32 = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.MeshUpdateFlags
	 */
	enum class MeshUpdateFlags : int32_t
	{
		Default               = 0x0000000000000000,
		DontValidateIndices   = 0x0000000000000001,
		DontResetBoneBounds   = 0x0000000000000002,
		DontNotifyMeshUsers   = 0x0000000000000004,
		DontRecalculateBounds = 0x0000000000000008
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.VertexAttributeFormat
	 */
	enum class VertexAttributeFormat : int32_t
	{
		Float32 = 0x0000000000000000,
		Float16 = 0x0000000000000001,
		UNorm8  = 0x0000000000000002,
		SNorm8  = 0x0000000000000003,
		UNorm16 = 0x0000000000000004,
		SNorm16 = 0x0000000000000005,
		UInt8   = 0x0000000000000006,
		SInt8   = 0x0000000000000007,
		UInt16  = 0x0000000000000008,
		SInt16  = 0x0000000000000009,
		UInt32  = 0x000000000000000A,
		SInt32  = 0x000000000000000B
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.VertexAttribute
	 */
	enum class VertexAttribute : int32_t
	{
		Position     = 0x0000000000000000,
		Normal       = 0x0000000000000001,
		Tangent      = 0x0000000000000002,
		Color        = 0x0000000000000003,
		TexCoord0    = 0x0000000000000004,
		TexCoord1    = 0x0000000000000005,
		TexCoord2    = 0x0000000000000006,
		TexCoord3    = 0x0000000000000007,
		TexCoord4    = 0x0000000000000008,
		TexCoord5    = 0x0000000000000009,
		TexCoord6    = 0x000000000000000A,
		TexCoord7    = 0x000000000000000B,
		BlendWeight  = 0x000000000000000C,
		BlendIndices = 0x000000000000000D
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.OpaqueSortMode
	 */
	enum class OpaqueSortMode : int32_t
	{
		Default        = 0x0000000000000000,
		FrontToBack    = 0x0000000000000001,
		NoDistanceSort = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.RenderBufferLoadAction
	 */
	enum class RenderBufferLoadAction : int32_t
	{
		Load     = 0x0000000000000000,
		Clear    = 0x0000000000000001,
		DontCare = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.RenderBufferStoreAction
	 */
	enum class RenderBufferStoreAction : int32_t
	{
		Store           = 0x0000000000000000,
		Resolve         = 0x0000000000000001,
		StoreAndResolve = 0x0000000000000002,
		DontCare        = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.FastMemoryFlags
	 */
	enum class FastMemoryFlags : int32_t
	{
		None        = 0x0000000000000000,
		SpillTop    = 0x0000000000000001,
		SpillBottom = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.BlendMode
	 */
	enum class BlendMode : int32_t
	{
		Zero             = 0x0000000000000000,
		One              = 0x0000000000000001,
		DstColor         = 0x0000000000000002,
		SrcColor         = 0x0000000000000003,
		OneMinusDstColor = 0x0000000000000004,
		SrcAlpha         = 0x0000000000000005,
		OneMinusSrcColor = 0x0000000000000006,
		DstAlpha         = 0x0000000000000007,
		OneMinusDstAlpha = 0x0000000000000008,
		SrcAlphaSaturate = 0x0000000000000009,
		OneMinusSrcAlpha = 0x000000000000000A
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.BlendOp
	 */
	enum class BlendOp : int32_t
	{
		Add                 = 0x0000000000000000,
		Subtract            = 0x0000000000000001,
		ReverseSubtract     = 0x0000000000000002,
		Min                 = 0x0000000000000003,
		Max                 = 0x0000000000000004,
		LogicalClear        = 0x0000000000000005,
		LogicalSet          = 0x0000000000000006,
		LogicalCopy         = 0x0000000000000007,
		LogicalCopyInverted = 0x0000000000000008,
		LogicalNoop         = 0x0000000000000009,
		LogicalInvert       = 0x000000000000000A,
		LogicalAnd          = 0x000000000000000B,
		LogicalNand         = 0x000000000000000C,
		LogicalOr           = 0x000000000000000D,
		LogicalNor          = 0x000000000000000E,
		LogicalXor          = 0x000000000000000F,
		LogicalEquivalence  = 0x0000000000000010,
		LogicalAndReverse   = 0x0000000000000011,
		LogicalAndInverted  = 0x0000000000000012,
		LogicalOrReverse    = 0x0000000000000013,
		LogicalOrInverted   = 0x0000000000000014,
		Multiply            = 0x0000000000000015,
		Screen              = 0x0000000000000016,
		Overlay             = 0x0000000000000017,
		Darken              = 0x0000000000000018,
		Lighten             = 0x0000000000000019,
		ColorDodge          = 0x000000000000001A,
		ColorBurn           = 0x000000000000001B,
		HardLight           = 0x000000000000001C,
		SoftLight           = 0x000000000000001D,
		Difference          = 0x000000000000001E,
		Exclusion           = 0x000000000000001F,
		HSLHue              = 0x0000000000000020,
		HSLSaturation       = 0x0000000000000021,
		HSLColor            = 0x0000000000000022,
		HSLLuminosity       = 0x0000000000000023
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.CompareFunction
	 */
	enum class CompareFunction : int32_t
	{
		Disabled     = 0x0000000000000000,
		Never        = 0x0000000000000001,
		Less         = 0x0000000000000002,
		Equal        = 0x0000000000000003,
		LessEqual    = 0x0000000000000004,
		Greater      = 0x0000000000000005,
		NotEqual     = 0x0000000000000006,
		GreaterEqual = 0x0000000000000007,
		Always       = 0x0000000000000008
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.CullMode
	 */
	enum class CullMode : int32_t
	{
		Off   = 0x0000000000000000,
		Front = 0x0000000000000001,
		Back  = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.ColorWriteMask
	 */
	enum class ColorWriteMask : int32_t
	{
		Alpha = 0x0000000000000001,
		Blue  = 0x0000000000000002,
		Green = 0x0000000000000004,
		Red   = 0x0000000000000008,
		All   = 0x000000000000000F
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.StencilOp
	 */
	enum class StencilOp : int32_t
	{
		Keep              = 0x0000000000000000,
		Zero              = 0x0000000000000001,
		Replace           = 0x0000000000000002,
		IncrementSaturate = 0x0000000000000003,
		DecrementSaturate = 0x0000000000000004,
		Invert            = 0x0000000000000005,
		IncrementWrap     = 0x0000000000000006,
		DecrementWrap     = 0x0000000000000007
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.CameraEvent
	 */
	enum class CameraEvent : int32_t
	{
		BeforeDepthTexture        = 0x0000000000000000,
		AfterDepthTexture         = 0x0000000000000001,
		BeforeDepthNormalsTexture = 0x0000000000000002,
		AfterDepthNormalsTexture  = 0x0000000000000003,
		BeforeGBuffer             = 0x0000000000000004,
		AfterGBuffer              = 0x0000000000000005,
		BeforeLighting            = 0x0000000000000006,
		AfterLighting             = 0x0000000000000007,
		BeforeFinalPass           = 0x0000000000000008,
		AfterFinalPass            = 0x0000000000000009,
		BeforeForwardOpaque       = 0x000000000000000A,
		AfterForwardOpaque        = 0x000000000000000B,
		BeforeImageEffectsOpaque  = 0x000000000000000C,
		AfterImageEffectsOpaque   = 0x000000000000000D,
		BeforeSkybox              = 0x000000000000000E,
		AfterSkybox               = 0x000000000000000F,
		BeforeForwardAlpha        = 0x0000000000000010,
		AfterForwardAlpha         = 0x0000000000000011,
		BeforeImageEffects        = 0x0000000000000012,
		AfterImageEffects         = 0x0000000000000013,
		AfterEverything           = 0x0000000000000014,
		BeforeReflections         = 0x0000000000000015,
		AfterReflections          = 0x0000000000000016,
		BeforeHaloAndLensFlares   = 0x0000000000000017,
		AfterHaloAndLensFlares    = 0x0000000000000018
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.BuiltinRenderTextureType
	 */
	enum class BuiltinRenderTextureType : int32_t
	{
		PropertyName       = -4,
		BufferPtr          = -3,
		RenderTexture      = -2,
		BindableTexture    = -1,
		None               = 0x0000000000000000,
		CurrentActive      = 0x0000000000000001,
		CameraTarget       = 0x0000000000000002,
		Depth              = 0x0000000000000003,
		DepthNormals       = 0x0000000000000004,
		ResolvedDepth      = 0x0000000000000005,
		PrepassNormalsSpec = 0x0000000000000007,
		PrepassLight       = 0x0000000000000008,
		PrepassLightSpec   = 0x0000000000000009,
		GBuffer0           = 0x000000000000000A,
		GBuffer1           = 0x000000000000000B,
		GBuffer2           = 0x000000000000000C,
		GBuffer3           = 0x000000000000000D,
		Reflections        = 0x000000000000000E,
		MotionVectors      = 0x000000000000000F,
		GBuffer4           = 0x0000000000000010,
		GBuffer5           = 0x0000000000000011,
		GBuffer6           = 0x0000000000000012,
		GBuffer7           = 0x0000000000000013
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.ShadowCastingMode
	 */
	enum class ShadowCastingMode : int32_t
	{
		Off         = 0x0000000000000000,
		On          = 0x0000000000000001,
		TwoSided    = 0x0000000000000002,
		ShadowsOnly = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.LightShadowResolution
	 */
	enum class LightShadowResolution : int32_t
	{
		FromQualitySettings = -1,
		Low                 = 0x0000000000000000,
		Medium              = 0x0000000000000001,
		High                = 0x0000000000000002,
		VeryHigh            = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.GraphicsDeviceType
	 */
	enum class GraphicsDeviceType : int32_t
	{
		OpenGL2            = 0x0000000000000000,
		Direct3D9          = 0x0000000000000001,
		Direct3D11         = 0x0000000000000002,
		PlayStation3       = 0x0000000000000003,
		Null               = 0x0000000000000004,
		Xbox360            = 0x0000000000000006,
		OpenGLES2          = 0x0000000000000008,
		OpenGLES3          = 0x000000000000000B,
		PlayStationVita    = 0x000000000000000C,
		PlayStation4       = 0x000000000000000D,
		XboxOne            = 0x000000000000000E,
		PlayStationMobile  = 0x000000000000000F,
		Metal              = 0x0000000000000010,
		OpenGLCore         = 0x0000000000000011,
		Direct3D12         = 0x0000000000000012,
		N3DS               = 0x0000000000000013,
		Vulkan             = 0x0000000000000015,
		Switch             = 0x0000000000000016,
		XboxOneD3D12       = 0x0000000000000017,
		GameCoreXboxOne    = 0x0000000000000018,
		GameCoreScarlett   = -1,
		GameCoreXboxSeries = 0x0000000000000019,
		PlayStation5       = 0x000000000000001A,
		PlayStation5NGGC   = 0x000000000000001B
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.GraphicsTier
	 */
	enum class GraphicsTier : int32_t
	{
		Tier1 = 0x0000000000000000,
		Tier2 = 0x0000000000000001,
		Tier3 = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.FormatSwizzle
	 */
	enum class FormatSwizzle : int32_t
	{
		FormatSwizzleR = 0x0000000000000000,
		FormatSwizzleG = 0x0000000000000001,
		FormatSwizzleB = 0x0000000000000002,
		FormatSwizzleA = 0x0000000000000003,
		FormatSwizzle0 = 0x0000000000000004,
		FormatSwizzle1 = 0x0000000000000005
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.RenderTargetFlags
	 */
	enum class RenderTargetFlags : int32_t
	{
		None                 = 0x0000000000000000,
		ReadOnlyDepth        = 0x0000000000000001,
		ReadOnlyStencil      = 0x0000000000000002,
		ReadOnlyDepthStencil = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.ShadowSamplingMode
	 */
	enum class ShadowSamplingMode : int32_t
	{
		CompareDepths = 0x0000000000000000,
		RawDepth      = 0x0000000000000001,
		None          = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.LightProbeUsage
	 */
	enum class LightProbeUsage : int32_t
	{
		Off            = 0x0000000000000000,
		BlendProbes    = 0x0000000000000001,
		UseProxyVolume = 0x0000000000000002,
		CustomProvided = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.BuiltinShaderType
	 */
	enum class BuiltinShaderType : int32_t
	{
		DeferredShading        = 0x0000000000000000,
		DeferredReflections    = 0x0000000000000001,
		LegacyDeferredLighting = 0x0000000000000002,
		ScreenSpaceShadows     = 0x0000000000000003,
		DepthNormals           = 0x0000000000000004,
		MotionVectors          = 0x0000000000000005,
		LightHalo              = 0x0000000000000006,
		LensFlare              = 0x0000000000000007
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.BuiltinShaderMode
	 */
	enum class BuiltinShaderMode : int32_t
	{
		Disabled   = 0x0000000000000000,
		UseBuiltin = 0x0000000000000001,
		UseCustom  = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.BuiltinShaderDefine
	 */
	enum class BuiltinShaderDefine : int32_t
	{
		UNITY_NO_DXT5nm                                = 0x0000000000000000,
		UNITY_NO_RGBM                                  = 0x0000000000000001,
		UNITY_USE_NATIVE_HDR                           = 0x0000000000000002,
		UNITY_ENABLE_REFLECTION_BUFFERS                = 0x0000000000000003,
		UNITY_FRAMEBUFFER_FETCH_AVAILABLE              = 0x0000000000000004,
		UNITY_ENABLE_NATIVE_SHADOW_LOOKUPS             = 0x0000000000000005,
		UNITY_METAL_SHADOWS_USE_POINT_FILTERING        = 0x0000000000000006,
		UNITY_NO_CUBEMAP_ARRAY                         = 0x0000000000000007,
		UNITY_NO_SCREENSPACE_SHADOWS                   = 0x0000000000000008,
		UNITY_USE_DITHER_MASK_FOR_ALPHABLENDED_SHADOWS = 0x0000000000000009,
		UNITY_PBS_USE_BRDF1                            = 0x000000000000000A,
		UNITY_PBS_USE_BRDF2                            = 0x000000000000000B,
		UNITY_PBS_USE_BRDF3                            = 0x000000000000000C,
		UNITY_NO_FULL_STANDARD_SHADER                  = 0x000000000000000D,
		UNITY_SPECCUBE_BOX_PROJECTION                  = 0x000000000000000E,
		UNITY_SPECCUBE_BLENDING                        = 0x000000000000000F,
		UNITY_ENABLE_DETAIL_NORMALMAP                  = 0x0000000000000010,
		SHADER_API_MOBILE                              = 0x0000000000000011,
		SHADER_API_DESKTOP                             = 0x0000000000000012,
		UNITY_HARDWARE_TIER1                           = 0x0000000000000013,
		UNITY_HARDWARE_TIER2                           = 0x0000000000000014,
		UNITY_HARDWARE_TIER3                           = 0x0000000000000015,
		UNITY_COLORSPACE_GAMMA                         = 0x0000000000000016,
		UNITY_LIGHT_PROBE_PROXY_VOLUME                 = 0x0000000000000017,
		UNITY_HALF_PRECISION_FRAGMENT_SHADER_REGISTERS = 0x0000000000000018,
		UNITY_LIGHTMAP_DLDR_ENCODING                   = 0x0000000000000019,
		UNITY_LIGHTMAP_RGBM_ENCODING                   = 0x000000000000001A,
		UNITY_LIGHTMAP_FULL_HDR                        = 0x000000000000001B,
		UNITY_VIRTUAL_TEXTURING                        = 0x000000000000001C,
		UNITY_PRETRANSFORM_TO_DISPLAY_ORIENTATION      = 0x000000000000001D,
		UNITY_ASTC_NORMALMAP_ENCODING                  = 0x000000000000001E,
		SHADER_API_GLES30                              = 0x000000000000001F,
		UNITY_UNIFIED_SHADER_PRECISION_MODEL           = 0x0000000000000020
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.TextureDimension
	 */
	enum class TextureDimension : int32_t
	{
		Unknown    = -1,
		None       = 0x0000000000000000,
		Any        = 0x0000000000000001,
		Tex2D      = 0x0000000000000002,
		Tex3D      = 0x0000000000000003,
		Cube       = 0x0000000000000004,
		Tex2DArray = 0x0000000000000005,
		CubeArray  = 0x0000000000000006
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.CopyTextureSupport
	 */
	enum class CopyTextureSupport : int32_t
	{
		None           = 0x0000000000000000,
		Basic          = 0x0000000000000001,
		Copy3D         = 0x0000000000000002,
		DifferentTypes = 0x0000000000000004,
		TextureToRT    = 0x0000000000000008,
		RTToTexture    = 0x0000000000000010
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.ComputeQueueType
	 */
	enum class ComputeQueueType : int32_t
	{
		Default    = 0x0000000000000000,
		Background = 0x0000000000000001,
		Urgent     = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.SinglePassStereoMode
	 */
	enum class SinglePassStereoMode : int32_t
	{
		None       = 0x0000000000000000,
		SideBySide = 0x0000000000000001,
		Instancing = 0x0000000000000002,
		Multiview  = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.CommandBufferExecutionFlags
	 */
	enum class CommandBufferExecutionFlags : int32_t
	{
		None         = 0x0000000000000000,
		AsyncCompute = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.RTClearFlags
	 */
	enum class RTClearFlags : int32_t
	{
		None         = 0x0000000000000000,
		Color        = 0x0000000000000001,
		Depth        = 0x0000000000000002,
		Stencil      = 0x0000000000000004,
		All          = 0x0000000000000007,
		DepthStencil = 0x0000000000000006,
		ColorDepth   = 0x0000000000000003,
		ColorStencil = 0x0000000000000005
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.RenderTextureSubElement
	 */
	enum class RenderTextureSubElement : int32_t
	{
		Color   = 0x0000000000000000,
		Depth   = 0x0000000000000001,
		Stencil = 0x0000000000000002,
		Default = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.RenderingThreadingMode
	 */
	enum class RenderingThreadingMode : int32_t
	{
		Direct                                = 0x0000000000000000,
		SingleThreaded                        = 0x0000000000000001,
		MultiThreaded                         = 0x0000000000000002,
		LegacyJobified                        = 0x0000000000000003,
		NativeGraphicsJobs                    = 0x0000000000000004,
		NativeGraphicsJobsWithoutRenderThread = 0x0000000000000005
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.CameraLateLatchMatrixType
	 */
	enum class CameraLateLatchMatrixType : int32_t
	{
		View                  = 0x0000000000000000,
		InverseView           = 0x0000000000000001,
		ViewProjection        = 0x0000000000000002,
		InverseViewProjection = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.OpenGLESVersion
	 */
	enum class OpenGLESVersion : int32_t
	{
		None          = 0x0000000000000000,
		OpenGLES20    = 0x0000000000000001,
		OpenGLES30    = 0x0000000000000002,
		OpenGLES31    = 0x0000000000000003,
		OpenGLES31AEP = 0x0000000000000004,
		OpenGLES32    = 0x0000000000000005
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.SynchronisationStageFlags
	 */
	enum class SynchronisationStageFlags : int32_t
	{
		VertexProcessing  = 0x0000000000000001,
		PixelProcessing   = 0x0000000000000002,
		ComputeProcessing = 0x0000000000000004,
		AllGPUOperations  = 0x0000000000000007
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.GraphicsFenceType
	 */
	enum class GraphicsFenceType : int32_t
	{
		AsyncQueueSynchronisation = 0x0000000000000000,
		CPUSynchronisation        = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.CullingOptions
	 */
	enum class CullingOptions : int32_t
	{
		None                         = 0x0000000000000000,
		ForceEvenIfCameraIsNotActive = 0x0000000000000001,
		OcclusionCull                = 0x0000000000000002,
		NeedsLighting                = 0x0000000000000004,
		NeedsReflectionProbes        = 0x0000000000000008,
		Stereo                       = 0x0000000000000010,
		DisablePerObjectCulling      = 0x0000000000000020,
		ShadowCasters                = 0x0000000000000040
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.DrawRendererFlags
	 */
	enum class DrawRendererFlags : int32_t
	{
		None                  = 0x0000000000000000,
		EnableDynamicBatching = 0x0000000000000001,
		EnableInstancing      = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.GizmoSubset
	 */
	enum class GizmoSubset : int32_t
	{
		PreImageEffects  = 0x0000000000000000,
		PostImageEffects = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.PerObjectData
	 */
	enum class PerObjectData : int32_t
	{
		None                      = 0x0000000000000000,
		LightProbe                = 0x0000000000000001,
		ReflectionProbes          = 0x0000000000000002,
		LightProbeProxyVolume     = 0x0000000000000004,
		Lightmaps                 = 0x0000000000000008,
		LightData                 = 0x0000000000000010,
		MotionVectors             = 0x0000000000000020,
		LightIndices              = 0x0000000000000040,
		ReflectionProbeData       = 0x0000000000000080,
		OcclusionProbe            = 0x0000000000000100,
		OcclusionProbeProxyVolume = 0x0000000000000200,
		ShadowMask                = 0x0000000000000400
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.ReflectionProbeSortingCriteria
	 */
	enum class ReflectionProbeSortingCriteria : int32_t
	{
		None               = 0x0000000000000000,
		Importance         = 0x0000000000000001,
		Size               = 0x0000000000000002,
		ImportanceThenSize = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.RenderStateMask
	 */
	enum class RenderStateMask : int32_t
	{
		Nothing    = 0x0000000000000000,
		Blend      = 0x0000000000000001,
		Raster     = 0x0000000000000002,
		Depth      = 0x0000000000000004,
		Stencil    = 0x0000000000000008,
		Everything = 0x000000000000000F
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.SortingCriteria
	 */
	enum class SortingCriteria : int32_t
	{
		None                 = 0x0000000000000000,
		SortingLayer         = 0x0000000000000001,
		RenderQueue          = 0x0000000000000002,
		BackToFront          = 0x0000000000000004,
		QuantizedFrontToBack = 0x0000000000000008,
		OptimizeStateChanges = 0x0000000000000010,
		CanvasOrder          = 0x0000000000000020,
		RendererPriority     = 0x0000000000000040,
		CommonOpaque         = 0x000000000000003B,
		CommonTransparent    = 0x0000000000000017
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.DistanceMetric
	 */
	enum class DistanceMetric : int32_t
	{
		Perspective  = 0x0000000000000000,
		Orthographic = 0x0000000000000001,
		CustomAxis   = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.SupportedRenderingFeatures+ReflectionProbeModes
	 */
	enum class SupportedRenderingFeatures_ReflectionProbeModes : int32_t
	{
		None     = 0x0000000000000000,
		Rotation = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.SupportedRenderingFeatures+LightmapMixedBakeModes
	 */
	enum class SupportedRenderingFeatures_LightmapMixedBakeModes : int32_t
	{
		None         = 0x0000000000000000,
		IndirectOnly = 0x0000000000000001,
		Subtractive  = 0x0000000000000002,
		Shadowmask   = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.VisibleLightFlags
	 */
	enum class VisibleLightFlags : int32_t
	{
		IntersectsNearPlane = 0x0000000000000001,
		IntersectsFarPlane  = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.ShaderPropertyFlags
	 */
	enum class ShaderPropertyFlags : int32_t
	{
		None                     = 0x0000000000000000,
		HideInInspector          = 0x0000000000000001,
		PerRendererData          = 0x0000000000000002,
		NoScaleOffset            = 0x0000000000000004,
		Normal                   = 0x0000000000000008,
		HDR                      = 0x0000000000000010,
		Gamma                    = 0x0000000000000020,
		NonModifiableTextureData = 0x0000000000000040,
		MainTexture              = 0x0000000000000080,
		MainColor                = 0x0000000000000100
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Rendering.RendererUtils.RendererListStatus
	 */
	enum class RendererListStatus : int32_t
	{
		kRendererListInvalid    = -2,
		kRendererListProcessing = -1,
		kRendererListEmpty      = 0x0000000000000000,
		kRendererListPopulated  = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Playables.FrameData+Flags
	 */
	enum class FrameData_Flags : int32_t
	{
		Evaluate                  = 0x0000000000000001,
		SeekOccured               = 0x0000000000000002,
		Loop                      = 0x0000000000000004,
		Hold                      = 0x0000000000000008,
		EffectivePlayStateDelayed = 0x0000000000000010,
		EffectivePlayStatePlaying = 0x0000000000000020
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Playables.FrameData+EvaluationType
	 */
	enum class FrameData_EvaluationType : int32_t
	{
		Evaluate = 0x0000000000000000,
		Playback = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Playables.DirectorWrapMode
	 */
	enum class DirectorWrapMode : int32_t
	{
		Hold = 0x0000000000000000,
		Loop = 0x0000000000000001,
		None = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Playables.PlayableTraversalMode
	 */
	enum class PlayableTraversalMode : int32_t
	{
		Mix         = 0x0000000000000000,
		Passthrough = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Playables.PlayState
	 */
	enum class PlayState : int32_t
	{
		Paused  = 0x0000000000000000,
		Playing = 0x0000000000000001,
		Delayed = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Diagnostics.ForcedCrashCategory
	 */
	enum class ForcedCrashCategory : int32_t
	{
		AccessViolation     = 0x0000000000000000,
		FatalError          = 0x0000000000000001,
		Abort               = 0x0000000000000002,
		PureVirtualFunction = 0x0000000000000003,
		MonoAbort           = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Experimental.GlobalIllumination.LightType
	 */
	enum class LightType_1 : uint8_t
	{
		Directional      = 0x0000000000000000,
		Point            = 0x0000000000000001,
		Spot             = 0x0000000000000002,
		Rectangle        = 0x0000000000000003,
		Disc             = 0x0000000000000004,
		SpotPyramidShape = 0x0000000000000005,
		SpotBoxShape     = 0x0000000000000006
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Experimental.GlobalIllumination.LightMode
	 */
	enum class LightMode : uint8_t
	{
		Realtime = 0x0000000000000000,
		Mixed    = 0x0000000000000001,
		Baked    = 0x0000000000000002,
		Unknown  = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Experimental.GlobalIllumination.FalloffType
	 */
	enum class FalloffType : uint8_t
	{
		InverseSquared                   = 0x0000000000000000,
		InverseSquaredNoRangeAttenuation = 0x0000000000000001,
		Linear                           = 0x0000000000000002,
		Legacy                           = 0x0000000000000003,
		Undefined                        = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Experimental.GlobalIllumination.AngularFalloffType
	 */
	enum class AngularFalloffType : uint8_t
	{
		LUT                   = 0x0000000000000000,
		AnalyticAndInnerAngle = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Experimental.Rendering.TextureCreationFlags
	 */
	enum class TextureCreationFlags : int32_t
	{
		None     = 0x0000000000000000,
		MipChain = 0x0000000000000001,
		Crunch   = 0x0000000000000040
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Experimental.Rendering.FormatUsage
	 */
	enum class FormatUsage : int32_t
	{
		Sample          = 0x0000000000000000,
		Linear          = 0x0000000000000001,
		Sparse          = 0x0000000000000002,
		Render          = 0x0000000000000004,
		Blend           = 0x0000000000000005,
		GetPixels       = 0x0000000000000006,
		SetPixels       = 0x0000000000000007,
		SetPixels32     = 0x0000000000000008,
		ReadPixels      = 0x0000000000000009,
		LoadStore       = 0x000000000000000A,
		MSAA2x          = 0x000000000000000B,
		MSAA4x          = 0x000000000000000C,
		MSAA8x          = 0x000000000000000D,
		StencilSampling = 0x0000000000000010
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Experimental.Rendering.DefaultFormat
	 */
	enum class DefaultFormat : int32_t
	{
		LDR          = 0x0000000000000000,
		HDR          = 0x0000000000000001,
		DepthStencil = 0x0000000000000002,
		Shadow       = 0x0000000000000003,
		Video        = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.CoreModule.UnityEngine.Experimental.Rendering.GraphicsFormat
	 */
	enum class GraphicsFormat : int32_t
	{
		None                       = 0x0000000000000000,
		R8_SRGB                    = 0x0000000000000001,
		R8G8_SRGB                  = 0x0000000000000002,
		R8G8B8_SRGB                = 0x0000000000000003,
		R8G8B8A8_SRGB              = 0x0000000000000004,
		R8_UNorm                   = 0x0000000000000005,
		R8G8_UNorm                 = 0x0000000000000006,
		R8G8B8_UNorm               = 0x0000000000000007,
		R8G8B8A8_UNorm             = 0x0000000000000008,
		R8_SNorm                   = 0x0000000000000009,
		R8G8_SNorm                 = 0x000000000000000A,
		R8G8B8_SNorm               = 0x000000000000000B,
		R8G8B8A8_SNorm             = 0x000000000000000C,
		R8_UInt                    = 0x000000000000000D,
		R8G8_UInt                  = 0x000000000000000E,
		R8G8B8_UInt                = 0x000000000000000F,
		R8G8B8A8_UInt              = 0x0000000000000010,
		R8_SInt                    = 0x0000000000000011,
		R8G8_SInt                  = 0x0000000000000012,
		R8G8B8_SInt                = 0x0000000000000013,
		R8G8B8A8_SInt              = 0x0000000000000014,
		R16_UNorm                  = 0x0000000000000015,
		R16G16_UNorm               = 0x0000000000000016,
		R16G16B16_UNorm            = 0x0000000000000017,
		R16G16B16A16_UNorm         = 0x0000000000000018,
		R16_SNorm                  = 0x0000000000000019,
		R16G16_SNorm               = 0x000000000000001A,
		R16G16B16_SNorm            = 0x000000000000001B,
		R16G16B16A16_SNorm         = 0x000000000000001C,
		R16_UInt                   = 0x000000000000001D,
		R16G16_UInt                = 0x000000000000001E,
		R16G16B16_UInt             = 0x000000000000001F,
		R16G16B16A16_UInt          = 0x0000000000000020,
		R16_SInt                   = 0x0000000000000021,
		R16G16_SInt                = 0x0000000000000022,
		R16G16B16_SInt             = 0x0000000000000023,
		R16G16B16A16_SInt          = 0x0000000000000024,
		R32_UInt                   = 0x0000000000000025,
		R32G32_UInt                = 0x0000000000000026,
		R32G32B32_UInt             = 0x0000000000000027,
		R32G32B32A32_UInt          = 0x0000000000000028,
		R32_SInt                   = 0x0000000000000029,
		R32G32_SInt                = 0x000000000000002A,
		R32G32B32_SInt             = 0x000000000000002B,
		R32G32B32A32_SInt          = 0x000000000000002C,
		R16_SFloat                 = 0x000000000000002D,
		R16G16_SFloat              = 0x000000000000002E,
		R16G16B16_SFloat           = 0x000000000000002F,
		R16G16B16A16_SFloat        = 0x0000000000000030,
		R32_SFloat                 = 0x0000000000000031,
		R32G32_SFloat              = 0x0000000000000032,
		R32G32B32_SFloat           = 0x0000000000000033,
		R32G32B32A32_SFloat        = 0x0000000000000034,
		B8G8R8_SRGB                = 0x0000000000000038,
		B8G8R8A8_SRGB              = 0x0000000000000039,
		B8G8R8_UNorm               = 0x000000000000003A,
		B8G8R8A8_UNorm             = 0x000000000000003B,
		B8G8R8_SNorm               = 0x000000000000003C,
		B8G8R8A8_SNorm             = 0x000000000000003D,
		B8G8R8_UInt                = 0x000000000000003E,
		B8G8R8A8_UInt              = 0x000000000000003F,
		B8G8R8_SInt                = 0x0000000000000040,
		B8G8R8A8_SInt              = 0x0000000000000041,
		R4G4B4A4_UNormPack16       = 0x0000000000000042,
		B4G4R4A4_UNormPack16       = 0x0000000000000043,
		R5G6B5_UNormPack16         = 0x0000000000000044,
		B5G6R5_UNormPack16         = 0x0000000000000045,
		R5G5B5A1_UNormPack16       = 0x0000000000000046,
		B5G5R5A1_UNormPack16       = 0x0000000000000047,
		A1R5G5B5_UNormPack16       = 0x0000000000000048,
		E5B9G9R9_UFloatPack32      = 0x0000000000000049,
		B10G11R11_UFloatPack32     = 0x000000000000004A,
		A2B10G10R10_UNormPack32    = 0x000000000000004B,
		A2B10G10R10_UIntPack32     = 0x000000000000004C,
		A2B10G10R10_SIntPack32     = 0x000000000000004D,
		A2R10G10B10_UNormPack32    = 0x000000000000004E,
		A2R10G10B10_UIntPack32     = 0x000000000000004F,
		A2R10G10B10_SIntPack32     = 0x0000000000000050,
		A2R10G10B10_XRSRGBPack32   = 0x0000000000000051,
		A2R10G10B10_XRUNormPack32  = 0x0000000000000052,
		R10G10B10_XRSRGBPack32     = 0x0000000000000053,
		R10G10B10_XRUNormPack32    = 0x0000000000000054,
		A10R10G10B10_XRSRGBPack32  = 0x0000000000000055,
		A10R10G10B10_XRUNormPack32 = 0x0000000000000056,
		D16_UNorm                  = 0x000000000000005A,
		D24_UNorm                  = 0x000000000000005B,
		D24_UNorm_S8_UInt          = 0x000000000000005C,
		D32_SFloat                 = 0x000000000000005D,
		D32_SFloat_S8_UInt         = 0x000000000000005E,
		S8_UInt                    = 0x000000000000005F,
		RGB_DXT1_SRGB              = 0x0000000000000060,
		RGBA_DXT1_SRGB             = 0x0000000000000060,
		RGB_DXT1_UNorm             = 0x0000000000000061,
		RGBA_DXT1_UNorm            = 0x0000000000000061,
		RGBA_DXT3_SRGB             = 0x0000000000000062,
		RGBA_DXT3_UNorm            = 0x0000000000000063,
		RGBA_DXT5_SRGB             = 0x0000000000000064,
		RGBA_DXT5_UNorm            = 0x0000000000000065,
		R_BC4_UNorm                = 0x0000000000000066,
		R_BC4_SNorm                = 0x0000000000000067,
		RG_BC5_UNorm               = 0x0000000000000068,
		RG_BC5_SNorm               = 0x0000000000000069,
		RGB_BC6H_UFloat            = 0x000000000000006A,
		RGB_BC6H_SFloat            = 0x000000000000006B,
		RGBA_BC7_SRGB              = 0x000000000000006C,
		RGBA_BC7_UNorm             = 0x000000000000006D,
		RGB_PVRTC_2Bpp_SRGB        = 0x000000000000006E,
		RGB_PVRTC_2Bpp_UNorm       = 0x000000000000006F,
		RGB_PVRTC_4Bpp_SRGB        = 0x0000000000000070,
		RGB_PVRTC_4Bpp_UNorm       = 0x0000000000000071,
		RGBA_PVRTC_2Bpp_SRGB       = 0x0000000000000072,
		RGBA_PVRTC_2Bpp_UNorm      = 0x0000000000000073,
		RGBA_PVRTC_4Bpp_SRGB       = 0x0000000000000074,
		RGBA_PVRTC_4Bpp_UNorm      = 0x0000000000000075,
		RGB_ETC_UNorm              = 0x0000000000000076,
		RGB_ETC2_SRGB              = 0x0000000000000077,
		RGB_ETC2_UNorm             = 0x0000000000000078,
		RGB_A1_ETC2_SRGB           = 0x0000000000000079,
		RGB_A1_ETC2_UNorm          = 0x000000000000007A,
		RGBA_ETC2_SRGB             = 0x000000000000007B,
		RGBA_ETC2_UNorm            = 0x000000000000007C,
		R_EAC_UNorm                = 0x000000000000007D,
		R_EAC_SNorm                = 0x000000000000007E,
		RG_EAC_UNorm               = 0x000000000000007F,
		RG_EAC_SNorm               = 0x0000000000000080,
		RGBA_ASTC4X4_SRGB          = 0x0000000000000081,
		RGBA_ASTC4X4_UNorm         = 0x0000000000000082,
		RGBA_ASTC5X5_SRGB          = 0x0000000000000083,
		RGBA_ASTC5X5_UNorm         = 0x0000000000000084,
		RGBA_ASTC6X6_SRGB          = 0x0000000000000085,
		RGBA_ASTC6X6_UNorm         = 0x0000000000000086,
		RGBA_ASTC8X8_SRGB          = 0x0000000000000087,
		RGBA_ASTC8X8_UNorm         = 0x0000000000000088,
		RGBA_ASTC10X10_SRGB        = 0x0000000000000089,
		RGBA_ASTC10X10_UNorm       = 0x000000000000008A,
		RGBA_ASTC12X12_SRGB        = 0x000000000000008B,
		RGBA_ASTC12X12_UNorm       = 0x000000000000008C,
		YUV2                       = 0x000000000000008D,
		DepthAuto                  = 0x000000000000008E,
		ShadowAuto                 = 0x000000000000008F,
		VideoAuto                  = 0x0000000000000090,
		RGBA_ASTC4X4_UFloat        = 0x0000000000000091,
		RGBA_ASTC5X5_UFloat        = 0x0000000000000092,
		RGBA_ASTC6X6_UFloat        = 0x0000000000000093,
		RGBA_ASTC8X8_UFloat        = 0x0000000000000094,
		RGBA_ASTC10X10_UFloat      = 0x0000000000000095,
		RGBA_ASTC12X12_UFloat      = 0x0000000000000096
	};

	/**
	 * Enum System.Core.System.Linq.Expressions.AnalyzeTypeIsResult
	 */
	enum class AnalyzeTypeIsResult : int32_t
	{
		KnownFalse      = 0x0000000000000000,
		KnownTrue       = 0x0000000000000001,
		KnownAssignable = 0x0000000000000002,
		Unknown         = 0x0000000000000003
	};

	/**
	 * Enum System.Core.System.Linq.Expressions.ExpressionType
	 */
	enum class ExpressionType_1 : int32_t
	{
		Add                   = 0x0000000000000000,
		AddChecked            = 0x0000000000000001,
		And                   = 0x0000000000000002,
		AndAlso               = 0x0000000000000003,
		ArrayLength           = 0x0000000000000004,
		ArrayIndex            = 0x0000000000000005,
		Call                  = 0x0000000000000006,
		Coalesce              = 0x0000000000000007,
		Conditional           = 0x0000000000000008,
		Constant              = 0x0000000000000009,
		Convert               = 0x000000000000000A,
		ConvertChecked        = 0x000000000000000B,
		Divide                = 0x000000000000000C,
		Equal                 = 0x000000000000000D,
		ExclusiveOr           = 0x000000000000000E,
		GreaterThan           = 0x000000000000000F,
		GreaterThanOrEqual    = 0x0000000000000010,
		Invoke                = 0x0000000000000011,
		Lambda                = 0x0000000000000012,
		LeftShift             = 0x0000000000000013,
		LessThan              = 0x0000000000000014,
		LessThanOrEqual       = 0x0000000000000015,
		ListInit              = 0x0000000000000016,
		MemberAccess          = 0x0000000000000017,
		MemberInit            = 0x0000000000000018,
		Modulo                = 0x0000000000000019,
		Multiply              = 0x000000000000001A,
		MultiplyChecked       = 0x000000000000001B,
		Negate                = 0x000000000000001C,
		UnaryPlus             = 0x000000000000001D,
		NegateChecked         = 0x000000000000001E,
		New                   = 0x000000000000001F,
		NewArrayInit          = 0x0000000000000020,
		NewArrayBounds        = 0x0000000000000021,
		Not                   = 0x0000000000000022,
		NotEqual              = 0x0000000000000023,
		Or                    = 0x0000000000000024,
		OrElse                = 0x0000000000000025,
		Parameter             = 0x0000000000000026,
		Power                 = 0x0000000000000027,
		Quote                 = 0x0000000000000028,
		RightShift            = 0x0000000000000029,
		Subtract              = 0x000000000000002A,
		SubtractChecked       = 0x000000000000002B,
		TypeAs                = 0x000000000000002C,
		TypeIs                = 0x000000000000002D,
		Assign                = 0x000000000000002E,
		Block                 = 0x000000000000002F,
		DebugInfo             = 0x0000000000000030,
		Decrement             = 0x0000000000000031,
		Dynamic               = 0x0000000000000032,
		Default               = 0x0000000000000033,
		Extension             = 0x0000000000000034,
		Goto                  = 0x0000000000000035,
		Increment             = 0x0000000000000036,
		Index                 = 0x0000000000000037,
		Label                 = 0x0000000000000038,
		RuntimeVariables      = 0x0000000000000039,
		Loop                  = 0x000000000000003A,
		Switch                = 0x000000000000003B,
		Throw                 = 0x000000000000003C,
		Try                   = 0x000000000000003D,
		Unbox                 = 0x000000000000003E,
		AddAssign             = 0x000000000000003F,
		AndAssign             = 0x0000000000000040,
		DivideAssign          = 0x0000000000000041,
		ExclusiveOrAssign     = 0x0000000000000042,
		LeftShiftAssign       = 0x0000000000000043,
		ModuloAssign          = 0x0000000000000044,
		MultiplyAssign        = 0x0000000000000045,
		OrAssign              = 0x0000000000000046,
		PowerAssign           = 0x0000000000000047,
		RightShiftAssign      = 0x0000000000000048,
		SubtractAssign        = 0x0000000000000049,
		AddAssignChecked      = 0x000000000000004A,
		MultiplyAssignChecked = 0x000000000000004B,
		SubtractAssignChecked = 0x000000000000004C,
		PreIncrementAssign    = 0x000000000000004D,
		PreDecrementAssign    = 0x000000000000004E,
		PostIncrementAssign   = 0x000000000000004F,
		PostDecrementAssign   = 0x0000000000000050,
		TypeEqual             = 0x0000000000000051,
		OnesComplement        = 0x0000000000000052,
		IsTrue                = 0x0000000000000053,
		IsFalse               = 0x0000000000000054
	};

	/**
	 * Enum System.Core.System.Linq.Expressions.GotoExpressionKind
	 */
	enum class GotoExpressionKind : int32_t
	{
		Goto     = 0x0000000000000000,
		Return   = 0x0000000000000001,
		Break    = 0x0000000000000002,
		Continue = 0x0000000000000003
	};

	/**
	 * Enum System.Core.System.Linq.Expressions.MemberBindingType
	 */
	enum class MemberBindingType : int32_t
	{
		Assignment    = 0x0000000000000000,
		MemberBinding = 0x0000000000000001,
		ListBinding   = 0x0000000000000002
	};

	/**
	 * Enum System.Core.System.Linq.Expressions.Interpreter.LabelScopeKind
	 */
	enum class LabelScopeKind : int32_t
	{
		Statement  = 0x0000000000000000,
		Block      = 0x0000000000000001,
		Switch     = 0x0000000000000002,
		Lambda     = 0x0000000000000003,
		Try        = 0x0000000000000004,
		Catch      = 0x0000000000000005,
		Finally    = 0x0000000000000006,
		Filter     = 0x0000000000000007,
		Expression = 0x0000000000000008
	};

	/**
	 * Enum System.Core.System.Threading.LockRecursionPolicy
	 */
	enum class LockRecursionPolicy : int32_t
	{
		NoRecursion       = 0x0000000000000000,
		SupportsRecursion = 0x0000000000000001
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ERegisterActivationCodeResult
	 */
	enum class ERegisterActivationCodeResult : int32_t
	{
		k_ERegisterActivationCodeResultOK                = 0x0000000000000000,
		k_ERegisterActivationCodeResultFail              = 0x0000000000000001,
		k_ERegisterActivationCodeResultAlreadyRegistered = 0x0000000000000002,
		k_ERegisterActivationCodeResultTimeout           = 0x0000000000000003,
		k_ERegisterActivationCodeAlreadyOwned            = 0x0000000000000004
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EFriendRelationship
	 */
	enum class EFriendRelationship : int32_t
	{
		k_EFriendRelationshipNone                 = 0x0000000000000000,
		k_EFriendRelationshipBlocked              = 0x0000000000000001,
		k_EFriendRelationshipRequestRecipient     = 0x0000000000000002,
		k_EFriendRelationshipFriend               = 0x0000000000000003,
		k_EFriendRelationshipRequestInitiator     = 0x0000000000000004,
		k_EFriendRelationshipIgnored              = 0x0000000000000005,
		k_EFriendRelationshipIgnoredFriend        = 0x0000000000000006,
		k_EFriendRelationshipSuggested_DEPRECATED = 0x0000000000000007,
		k_EFriendRelationshipMax                  = 0x0000000000000008
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EPersonaState
	 */
	enum class EPersonaState : int32_t
	{
		k_EPersonaStateOffline        = 0x0000000000000000,
		k_EPersonaStateOnline         = 0x0000000000000001,
		k_EPersonaStateBusy           = 0x0000000000000002,
		k_EPersonaStateAway           = 0x0000000000000003,
		k_EPersonaStateSnooze         = 0x0000000000000004,
		k_EPersonaStateLookingToTrade = 0x0000000000000005,
		k_EPersonaStateLookingToPlay  = 0x0000000000000006,
		k_EPersonaStateInvisible      = 0x0000000000000007,
		k_EPersonaStateMax            = 0x0000000000000008
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EFriendFlags
	 */
	enum class EFriendFlags : int32_t
	{
		k_EFriendFlagNone                 = 0x0000000000000000,
		k_EFriendFlagBlocked              = 0x0000000000000001,
		k_EFriendFlagFriendshipRequested  = 0x0000000000000002,
		k_EFriendFlagImmediate            = 0x0000000000000004,
		k_EFriendFlagClanMember           = 0x0000000000000008,
		k_EFriendFlagOnGameServer         = 0x0000000000000010,
		k_EFriendFlagRequestingFriendship = 0x0000000000000080,
		k_EFriendFlagRequestingInfo       = 0x0000000000000100,
		k_EFriendFlagIgnored              = 0x0000000000000200,
		k_EFriendFlagIgnoredFriend        = 0x0000000000000400,
		k_EFriendFlagChatMember           = 0x0000000000001000,
		k_EFriendFlagAll                  = 0x000000000000FFFF
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EUserRestriction
	 */
	enum class EUserRestriction : int32_t
	{
		k_nUserRestrictionNone        = 0x0000000000000000,
		k_nUserRestrictionUnknown     = 0x0000000000000001,
		k_nUserRestrictionAnyChat     = 0x0000000000000002,
		k_nUserRestrictionVoiceChat   = 0x0000000000000004,
		k_nUserRestrictionGroupChat   = 0x0000000000000008,
		k_nUserRestrictionRating      = 0x0000000000000010,
		k_nUserRestrictionGameInvites = 0x0000000000000020,
		k_nUserRestrictionTrading     = 0x0000000000000040
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EOverlayToStoreFlag
	 */
	enum class EOverlayToStoreFlag : int32_t
	{
		k_EOverlayToStoreFlag_None             = 0x0000000000000000,
		k_EOverlayToStoreFlag_AddToCart        = 0x0000000000000001,
		k_EOverlayToStoreFlag_AddToCartAndShow = 0x0000000000000002
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EActivateGameOverlayToWebPageMode
	 */
	enum class EActivateGameOverlayToWebPageMode : int32_t
	{
		k_EActivateGameOverlayToWebPageMode_Default = 0x0000000000000000,
		k_EActivateGameOverlayToWebPageMode_Modal   = 0x0000000000000001
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EPersonaChange
	 */
	enum class EPersonaChange : int32_t
	{
		k_EPersonaChangeName                = 0x0000000000000001,
		k_EPersonaChangeStatus              = 0x0000000000000002,
		k_EPersonaChangeComeOnline          = 0x0000000000000004,
		k_EPersonaChangeGoneOffline         = 0x0000000000000008,
		k_EPersonaChangeGamePlayed          = 0x0000000000000010,
		k_EPersonaChangeGameServer          = 0x0000000000000020,
		k_EPersonaChangeAvatar              = 0x0000000000000040,
		k_EPersonaChangeJoinedSource        = 0x0000000000000080,
		k_EPersonaChangeLeftSource          = 0x0000000000000100,
		k_EPersonaChangeRelationshipChanged = 0x0000000000000200,
		k_EPersonaChangeNameFirstSet        = 0x0000000000000400,
		k_EPersonaChangeBroadcast           = 0x0000000000000800,
		k_EPersonaChangeNickname            = 0x0000000000001000,
		k_EPersonaChangeSteamLevel          = 0x0000000000002000,
		k_EPersonaChangeRichPresence        = 0x0000000000004000
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EGCResults
	 */
	enum class EGCResults : int32_t
	{
		k_EGCResultOK             = 0x0000000000000000,
		k_EGCResultNoMessage      = 0x0000000000000001,
		k_EGCResultBufferTooSmall = 0x0000000000000002,
		k_EGCResultNotLoggedOn    = 0x0000000000000003,
		k_EGCResultInvalidMessage = 0x0000000000000004
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EHTMLMouseButton
	 */
	enum class EHTMLMouseButton : int32_t
	{
		eHTMLMouseButton_Left   = 0x0000000000000000,
		eHTMLMouseButton_Right  = 0x0000000000000001,
		eHTMLMouseButton_Middle = 0x0000000000000002
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EMouseCursor
	 */
	enum class EMouseCursor : int32_t
	{
		dc_user           = 0x0000000000000000,
		dc_none           = 0x0000000000000001,
		dc_arrow          = 0x0000000000000002,
		dc_ibeam          = 0x0000000000000003,
		dc_hourglass      = 0x0000000000000004,
		dc_waitarrow      = 0x0000000000000005,
		dc_crosshair      = 0x0000000000000006,
		dc_up             = 0x0000000000000007,
		dc_sizenw         = 0x0000000000000008,
		dc_sizese         = 0x0000000000000009,
		dc_sizene         = 0x000000000000000A,
		dc_sizesw         = 0x000000000000000B,
		dc_sizew          = 0x000000000000000C,
		dc_sizee          = 0x000000000000000D,
		dc_sizen          = 0x000000000000000E,
		dc_sizes          = 0x000000000000000F,
		dc_sizewe         = 0x0000000000000010,
		dc_sizens         = 0x0000000000000011,
		dc_sizeall        = 0x0000000000000012,
		dc_no             = 0x0000000000000013,
		dc_hand           = 0x0000000000000014,
		dc_blank          = 0x0000000000000015,
		dc_middle_pan     = 0x0000000000000016,
		dc_north_pan      = 0x0000000000000017,
		dc_north_east_pan = 0x0000000000000018,
		dc_east_pan       = 0x0000000000000019,
		dc_south_east_pan = 0x000000000000001A,
		dc_south_pan      = 0x000000000000001B,
		dc_south_west_pan = 0x000000000000001C,
		dc_west_pan       = 0x000000000000001D,
		dc_north_west_pan = 0x000000000000001E,
		dc_alias          = 0x000000000000001F,
		dc_cell           = 0x0000000000000020,
		dc_colresize      = 0x0000000000000021,
		dc_copycur        = 0x0000000000000022,
		dc_verticaltext   = 0x0000000000000023,
		dc_rowresize      = 0x0000000000000024,
		dc_zoomin         = 0x0000000000000025,
		dc_zoomout        = 0x0000000000000026,
		dc_help           = 0x0000000000000027,
		dc_custom         = 0x0000000000000028,
		dc_last           = 0x0000000000000029
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EHTMLKeyModifiers
	 */
	enum class EHTMLKeyModifiers : int32_t
	{
		k_eHTMLKeyModifier_None      = 0x0000000000000000,
		k_eHTMLKeyModifier_AltDown   = 0x0000000000000001,
		k_eHTMLKeyModifier_CtrlDown  = 0x0000000000000002,
		k_eHTMLKeyModifier_ShiftDown = 0x0000000000000004
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EInputSourceMode
	 */
	enum class EInputSourceMode : int32_t
	{
		k_EInputSourceMode_None           = 0x0000000000000000,
		k_EInputSourceMode_Dpad           = 0x0000000000000001,
		k_EInputSourceMode_Buttons        = 0x0000000000000002,
		k_EInputSourceMode_FourButtons    = 0x0000000000000003,
		k_EInputSourceMode_AbsoluteMouse  = 0x0000000000000004,
		k_EInputSourceMode_RelativeMouse  = 0x0000000000000005,
		k_EInputSourceMode_JoystickMove   = 0x0000000000000006,
		k_EInputSourceMode_JoystickMouse  = 0x0000000000000007,
		k_EInputSourceMode_JoystickCamera = 0x0000000000000008,
		k_EInputSourceMode_ScrollWheel    = 0x0000000000000009,
		k_EInputSourceMode_Trigger        = 0x000000000000000A,
		k_EInputSourceMode_TouchMenu      = 0x000000000000000B,
		k_EInputSourceMode_MouseJoystick  = 0x000000000000000C,
		k_EInputSourceMode_MouseRegion    = 0x000000000000000D,
		k_EInputSourceMode_RadialMenu     = 0x000000000000000E,
		k_EInputSourceMode_SingleButton   = 0x000000000000000F,
		k_EInputSourceMode_Switches       = 0x0000000000000010
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EInputActionOrigin
	 */
	enum class EInputActionOrigin : int32_t
	{
		k_EInputActionOrigin_None                                = 0x0000000000000000,
		k_EInputActionOrigin_SteamController_A                   = 0x0000000000000001,
		k_EInputActionOrigin_SteamController_B                   = 0x0000000000000002,
		k_EInputActionOrigin_SteamController_X                   = 0x0000000000000003,
		k_EInputActionOrigin_SteamController_Y                   = 0x0000000000000004,
		k_EInputActionOrigin_SteamController_LeftBumper          = 0x0000000000000005,
		k_EInputActionOrigin_SteamController_RightBumper         = 0x0000000000000006,
		k_EInputActionOrigin_SteamController_LeftGrip            = 0x0000000000000007,
		k_EInputActionOrigin_SteamController_RightGrip           = 0x0000000000000008,
		k_EInputActionOrigin_SteamController_Start               = 0x0000000000000009,
		k_EInputActionOrigin_SteamController_Back                = 0x000000000000000A,
		k_EInputActionOrigin_SteamController_LeftPad_Touch       = 0x000000000000000B,
		k_EInputActionOrigin_SteamController_LeftPad_Swipe       = 0x000000000000000C,
		k_EInputActionOrigin_SteamController_LeftPad_Click       = 0x000000000000000D,
		k_EInputActionOrigin_SteamController_LeftPad_DPadNorth   = 0x000000000000000E,
		k_EInputActionOrigin_SteamController_LeftPad_DPadSouth   = 0x000000000000000F,
		k_EInputActionOrigin_SteamController_LeftPad_DPadWest    = 0x0000000000000010,
		k_EInputActionOrigin_SteamController_LeftPad_DPadEast    = 0x0000000000000011,
		k_EInputActionOrigin_SteamController_RightPad_Touch      = 0x0000000000000012,
		k_EInputActionOrigin_SteamController_RightPad_Swipe      = 0x0000000000000013,
		k_EInputActionOrigin_SteamController_RightPad_Click      = 0x0000000000000014,
		k_EInputActionOrigin_SteamController_RightPad_DPadNorth  = 0x0000000000000015,
		k_EInputActionOrigin_SteamController_RightPad_DPadSouth  = 0x0000000000000016,
		k_EInputActionOrigin_SteamController_RightPad_DPadWest   = 0x0000000000000017,
		k_EInputActionOrigin_SteamController_RightPad_DPadEast   = 0x0000000000000018,
		k_EInputActionOrigin_SteamController_LeftTrigger_Pull    = 0x0000000000000019,
		k_EInputActionOrigin_SteamController_LeftTrigger_Click   = 0x000000000000001A,
		k_EInputActionOrigin_SteamController_RightTrigger_Pull   = 0x000000000000001B,
		k_EInputActionOrigin_SteamController_RightTrigger_Click  = 0x000000000000001C,
		k_EInputActionOrigin_SteamController_LeftStick_Move      = 0x000000000000001D,
		k_EInputActionOrigin_SteamController_LeftStick_Click     = 0x000000000000001E,
		k_EInputActionOrigin_SteamController_LeftStick_DPadNorth = 0x000000000000001F,
		k_EInputActionOrigin_SteamController_LeftStick_DPadSouth = 0x0000000000000020,
		k_EInputActionOrigin_SteamController_LeftStick_DPadWest  = 0x0000000000000021,
		k_EInputActionOrigin_SteamController_LeftStick_DPadEast  = 0x0000000000000022,
		k_EInputActionOrigin_SteamController_Gyro_Move           = 0x0000000000000023,
		k_EInputActionOrigin_SteamController_Gyro_Pitch          = 0x0000000000000024,
		k_EInputActionOrigin_SteamController_Gyro_Yaw            = 0x0000000000000025,
		k_EInputActionOrigin_SteamController_Gyro_Roll           = 0x0000000000000026,
		k_EInputActionOrigin_SteamController_Reserved0           = 0x0000000000000027,
		k_EInputActionOrigin_SteamController_Reserved1           = 0x0000000000000028,
		k_EInputActionOrigin_SteamController_Reserved2           = 0x0000000000000029,
		k_EInputActionOrigin_SteamController_Reserved3           = 0x000000000000002A,
		k_EInputActionOrigin_SteamController_Reserved4           = 0x000000000000002B,
		k_EInputActionOrigin_SteamController_Reserved5           = 0x000000000000002C,
		k_EInputActionOrigin_SteamController_Reserved6           = 0x000000000000002D,
		k_EInputActionOrigin_SteamController_Reserved7           = 0x000000000000002E,
		k_EInputActionOrigin_SteamController_Reserved8           = 0x000000000000002F,
		k_EInputActionOrigin_SteamController_Reserved9           = 0x0000000000000030,
		k_EInputActionOrigin_SteamController_Reserved10          = 0x0000000000000031,
		k_EInputActionOrigin_PS4_X                               = 0x0000000000000032,
		k_EInputActionOrigin_PS4_Circle                          = 0x0000000000000033,
		k_EInputActionOrigin_PS4_Triangle                        = 0x0000000000000034,
		k_EInputActionOrigin_PS4_Square                          = 0x0000000000000035,
		k_EInputActionOrigin_PS4_LeftBumper                      = 0x0000000000000036,
		k_EInputActionOrigin_PS4_RightBumper                     = 0x0000000000000037,
		k_EInputActionOrigin_PS4_Options                         = 0x0000000000000038,
		k_EInputActionOrigin_PS4_Share                           = 0x0000000000000039,
		k_EInputActionOrigin_PS4_LeftPad_Touch                   = 0x000000000000003A,
		k_EInputActionOrigin_PS4_LeftPad_Swipe                   = 0x000000000000003B,
		k_EInputActionOrigin_PS4_LeftPad_Click                   = 0x000000000000003C,
		k_EInputActionOrigin_PS4_LeftPad_DPadNorth               = 0x000000000000003D,
		k_EInputActionOrigin_PS4_LeftPad_DPadSouth               = 0x000000000000003E,
		k_EInputActionOrigin_PS4_LeftPad_DPadWest                = 0x000000000000003F,
		k_EInputActionOrigin_PS4_LeftPad_DPadEast                = 0x0000000000000040,
		k_EInputActionOrigin_PS4_RightPad_Touch                  = 0x0000000000000041,
		k_EInputActionOrigin_PS4_RightPad_Swipe                  = 0x0000000000000042,
		k_EInputActionOrigin_PS4_RightPad_Click                  = 0x0000000000000043,
		k_EInputActionOrigin_PS4_RightPad_DPadNorth              = 0x0000000000000044,
		k_EInputActionOrigin_PS4_RightPad_DPadSouth              = 0x0000000000000045,
		k_EInputActionOrigin_PS4_RightPad_DPadWest               = 0x0000000000000046,
		k_EInputActionOrigin_PS4_RightPad_DPadEast               = 0x0000000000000047,
		k_EInputActionOrigin_PS4_CenterPad_Touch                 = 0x0000000000000048,
		k_EInputActionOrigin_PS4_CenterPad_Swipe                 = 0x0000000000000049,
		k_EInputActionOrigin_PS4_CenterPad_Click                 = 0x000000000000004A,
		k_EInputActionOrigin_PS4_CenterPad_DPadNorth             = 0x000000000000004B,
		k_EInputActionOrigin_PS4_CenterPad_DPadSouth             = 0x000000000000004C,
		k_EInputActionOrigin_PS4_CenterPad_DPadWest              = 0x000000000000004D,
		k_EInputActionOrigin_PS4_CenterPad_DPadEast              = 0x000000000000004E,
		k_EInputActionOrigin_PS4_LeftTrigger_Pull                = 0x000000000000004F,
		k_EInputActionOrigin_PS4_LeftTrigger_Click               = 0x0000000000000050,
		k_EInputActionOrigin_PS4_RightTrigger_Pull               = 0x0000000000000051,
		k_EInputActionOrigin_PS4_RightTrigger_Click              = 0x0000000000000052,
		k_EInputActionOrigin_PS4_LeftStick_Move                  = 0x0000000000000053,
		k_EInputActionOrigin_PS4_LeftStick_Click                 = 0x0000000000000054,
		k_EInputActionOrigin_PS4_LeftStick_DPadNorth             = 0x0000000000000055,
		k_EInputActionOrigin_PS4_LeftStick_DPadSouth             = 0x0000000000000056,
		k_EInputActionOrigin_PS4_LeftStick_DPadWest              = 0x0000000000000057,
		k_EInputActionOrigin_PS4_LeftStick_DPadEast              = 0x0000000000000058,
		k_EInputActionOrigin_PS4_RightStick_Move                 = 0x0000000000000059,
		k_EInputActionOrigin_PS4_RightStick_Click                = 0x000000000000005A,
		k_EInputActionOrigin_PS4_RightStick_DPadNorth            = 0x000000000000005B,
		k_EInputActionOrigin_PS4_RightStick_DPadSouth            = 0x000000000000005C,
		k_EInputActionOrigin_PS4_RightStick_DPadWest             = 0x000000000000005D,
		k_EInputActionOrigin_PS4_RightStick_DPadEast             = 0x000000000000005E,
		k_EInputActionOrigin_PS4_DPad_North                      = 0x000000000000005F,
		k_EInputActionOrigin_PS4_DPad_South                      = 0x0000000000000060,
		k_EInputActionOrigin_PS4_DPad_West                       = 0x0000000000000061,
		k_EInputActionOrigin_PS4_DPad_East                       = 0x0000000000000062,
		k_EInputActionOrigin_PS4_Gyro_Move                       = 0x0000000000000063,
		k_EInputActionOrigin_PS4_Gyro_Pitch                      = 0x0000000000000064,
		k_EInputActionOrigin_PS4_Gyro_Yaw                        = 0x0000000000000065,
		k_EInputActionOrigin_PS4_Gyro_Roll                       = 0x0000000000000066,
		k_EInputActionOrigin_PS4_DPad_Move                       = 0x0000000000000067,
		k_EInputActionOrigin_PS4_Reserved1                       = 0x0000000000000068,
		k_EInputActionOrigin_PS4_Reserved2                       = 0x0000000000000069,
		k_EInputActionOrigin_PS4_Reserved3                       = 0x000000000000006A,
		k_EInputActionOrigin_PS4_Reserved4                       = 0x000000000000006B,
		k_EInputActionOrigin_PS4_Reserved5                       = 0x000000000000006C,
		k_EInputActionOrigin_PS4_Reserved6                       = 0x000000000000006D,
		k_EInputActionOrigin_PS4_Reserved7                       = 0x000000000000006E,
		k_EInputActionOrigin_PS4_Reserved8                       = 0x000000000000006F,
		k_EInputActionOrigin_PS4_Reserved9                       = 0x0000000000000070,
		k_EInputActionOrigin_PS4_Reserved10                      = 0x0000000000000071,
		k_EInputActionOrigin_XBoxOne_A                           = 0x0000000000000072,
		k_EInputActionOrigin_XBoxOne_B                           = 0x0000000000000073,
		k_EInputActionOrigin_XBoxOne_X                           = 0x0000000000000074,
		k_EInputActionOrigin_XBoxOne_Y                           = 0x0000000000000075,
		k_EInputActionOrigin_XBoxOne_LeftBumper                  = 0x0000000000000076,
		k_EInputActionOrigin_XBoxOne_RightBumper                 = 0x0000000000000077,
		k_EInputActionOrigin_XBoxOne_Menu                        = 0x0000000000000078,
		k_EInputActionOrigin_XBoxOne_View                        = 0x0000000000000079,
		k_EInputActionOrigin_XBoxOne_LeftTrigger_Pull            = 0x000000000000007A,
		k_EInputActionOrigin_XBoxOne_LeftTrigger_Click           = 0x000000000000007B,
		k_EInputActionOrigin_XBoxOne_RightTrigger_Pull           = 0x000000000000007C,
		k_EInputActionOrigin_XBoxOne_RightTrigger_Click          = 0x000000000000007D,
		k_EInputActionOrigin_XBoxOne_LeftStick_Move              = 0x000000000000007E,
		k_EInputActionOrigin_XBoxOne_LeftStick_Click             = 0x000000000000007F,
		k_EInputActionOrigin_XBoxOne_LeftStick_DPadNorth         = 0x0000000000000080,
		k_EInputActionOrigin_XBoxOne_LeftStick_DPadSouth         = 0x0000000000000081,
		k_EInputActionOrigin_XBoxOne_LeftStick_DPadWest          = 0x0000000000000082,
		k_EInputActionOrigin_XBoxOne_LeftStick_DPadEast          = 0x0000000000000083,
		k_EInputActionOrigin_XBoxOne_RightStick_Move             = 0x0000000000000084,
		k_EInputActionOrigin_XBoxOne_RightStick_Click            = 0x0000000000000085,
		k_EInputActionOrigin_XBoxOne_RightStick_DPadNorth        = 0x0000000000000086,
		k_EInputActionOrigin_XBoxOne_RightStick_DPadSouth        = 0x0000000000000087,
		k_EInputActionOrigin_XBoxOne_RightStick_DPadWest         = 0x0000000000000088,
		k_EInputActionOrigin_XBoxOne_RightStick_DPadEast         = 0x0000000000000089,
		k_EInputActionOrigin_XBoxOne_DPad_North                  = 0x000000000000008A,
		k_EInputActionOrigin_XBoxOne_DPad_South                  = 0x000000000000008B,
		k_EInputActionOrigin_XBoxOne_DPad_West                   = 0x000000000000008C,
		k_EInputActionOrigin_XBoxOne_DPad_East                   = 0x000000000000008D,
		k_EInputActionOrigin_XBoxOne_DPad_Move                   = 0x000000000000008E,
		k_EInputActionOrigin_XBoxOne_LeftGrip_Lower              = 0x000000000000008F,
		k_EInputActionOrigin_XBoxOne_LeftGrip_Upper              = 0x0000000000000090,
		k_EInputActionOrigin_XBoxOne_RightGrip_Lower             = 0x0000000000000091,
		k_EInputActionOrigin_XBoxOne_RightGrip_Upper             = 0x0000000000000092,
		k_EInputActionOrigin_XBoxOne_Share                       = 0x0000000000000093,
		k_EInputActionOrigin_XBoxOne_Reserved6                   = 0x0000000000000094,
		k_EInputActionOrigin_XBoxOne_Reserved7                   = 0x0000000000000095,
		k_EInputActionOrigin_XBoxOne_Reserved8                   = 0x0000000000000096,
		k_EInputActionOrigin_XBoxOne_Reserved9                   = 0x0000000000000097,
		k_EInputActionOrigin_XBoxOne_Reserved10                  = 0x0000000000000098,
		k_EInputActionOrigin_XBox360_A                           = 0x0000000000000099,
		k_EInputActionOrigin_XBox360_B                           = 0x000000000000009A,
		k_EInputActionOrigin_XBox360_X                           = 0x000000000000009B,
		k_EInputActionOrigin_XBox360_Y                           = 0x000000000000009C,
		k_EInputActionOrigin_XBox360_LeftBumper                  = 0x000000000000009D,
		k_EInputActionOrigin_XBox360_RightBumper                 = 0x000000000000009E,
		k_EInputActionOrigin_XBox360_Start                       = 0x000000000000009F,
		k_EInputActionOrigin_XBox360_Back                        = 0x00000000000000A0,
		k_EInputActionOrigin_XBox360_LeftTrigger_Pull            = 0x00000000000000A1,
		k_EInputActionOrigin_XBox360_LeftTrigger_Click           = 0x00000000000000A2,
		k_EInputActionOrigin_XBox360_RightTrigger_Pull           = 0x00000000000000A3,
		k_EInputActionOrigin_XBox360_RightTrigger_Click          = 0x00000000000000A4,
		k_EInputActionOrigin_XBox360_LeftStick_Move              = 0x00000000000000A5,
		k_EInputActionOrigin_XBox360_LeftStick_Click             = 0x00000000000000A6,
		k_EInputActionOrigin_XBox360_LeftStick_DPadNorth         = 0x00000000000000A7,
		k_EInputActionOrigin_XBox360_LeftStick_DPadSouth         = 0x00000000000000A8,
		k_EInputActionOrigin_XBox360_LeftStick_DPadWest          = 0x00000000000000A9,
		k_EInputActionOrigin_XBox360_LeftStick_DPadEast          = 0x00000000000000AA,
		k_EInputActionOrigin_XBox360_RightStick_Move             = 0x00000000000000AB,
		k_EInputActionOrigin_XBox360_RightStick_Click            = 0x00000000000000AC,
		k_EInputActionOrigin_XBox360_RightStick_DPadNorth        = 0x00000000000000AD,
		k_EInputActionOrigin_XBox360_RightStick_DPadSouth        = 0x00000000000000AE,
		k_EInputActionOrigin_XBox360_RightStick_DPadWest         = 0x00000000000000AF,
		k_EInputActionOrigin_XBox360_RightStick_DPadEast         = 0x00000000000000B0,
		k_EInputActionOrigin_XBox360_DPad_North                  = 0x00000000000000B1,
		k_EInputActionOrigin_XBox360_DPad_South                  = 0x00000000000000B2,
		k_EInputActionOrigin_XBox360_DPad_West                   = 0x00000000000000B3,
		k_EInputActionOrigin_XBox360_DPad_East                   = 0x00000000000000B4,
		k_EInputActionOrigin_XBox360_DPad_Move                   = 0x00000000000000B5,
		k_EInputActionOrigin_XBox360_Reserved1                   = 0x00000000000000B6,
		k_EInputActionOrigin_XBox360_Reserved2                   = 0x00000000000000B7,
		k_EInputActionOrigin_XBox360_Reserved3                   = 0x00000000000000B8,
		k_EInputActionOrigin_XBox360_Reserved4                   = 0x00000000000000B9,
		k_EInputActionOrigin_XBox360_Reserved5                   = 0x00000000000000BA,
		k_EInputActionOrigin_XBox360_Reserved6                   = 0x00000000000000BB,
		k_EInputActionOrigin_XBox360_Reserved7                   = 0x00000000000000BC,
		k_EInputActionOrigin_XBox360_Reserved8                   = 0x00000000000000BD,
		k_EInputActionOrigin_XBox360_Reserved9                   = 0x00000000000000BE,
		k_EInputActionOrigin_XBox360_Reserved10                  = 0x00000000000000BF,
		k_EInputActionOrigin_Switch_A                            = 0x00000000000000C0,
		k_EInputActionOrigin_Switch_B                            = 0x00000000000000C1,
		k_EInputActionOrigin_Switch_X                            = 0x00000000000000C2,
		k_EInputActionOrigin_Switch_Y                            = 0x00000000000000C3,
		k_EInputActionOrigin_Switch_LeftBumper                   = 0x00000000000000C4,
		k_EInputActionOrigin_Switch_RightBumper                  = 0x00000000000000C5,
		k_EInputActionOrigin_Switch_Plus                         = 0x00000000000000C6,
		k_EInputActionOrigin_Switch_Minus                        = 0x00000000000000C7,
		k_EInputActionOrigin_Switch_Capture                      = 0x00000000000000C8,
		k_EInputActionOrigin_Switch_LeftTrigger_Pull             = 0x00000000000000C9,
		k_EInputActionOrigin_Switch_LeftTrigger_Click            = 0x00000000000000CA,
		k_EInputActionOrigin_Switch_RightTrigger_Pull            = 0x00000000000000CB,
		k_EInputActionOrigin_Switch_RightTrigger_Click           = 0x00000000000000CC,
		k_EInputActionOrigin_Switch_LeftStick_Move               = 0x00000000000000CD,
		k_EInputActionOrigin_Switch_LeftStick_Click              = 0x00000000000000CE,
		k_EInputActionOrigin_Switch_LeftStick_DPadNorth          = 0x00000000000000CF,
		k_EInputActionOrigin_Switch_LeftStick_DPadSouth          = 0x00000000000000D0,
		k_EInputActionOrigin_Switch_LeftStick_DPadWest           = 0x00000000000000D1,
		k_EInputActionOrigin_Switch_LeftStick_DPadEast           = 0x00000000000000D2,
		k_EInputActionOrigin_Switch_RightStick_Move              = 0x00000000000000D3,
		k_EInputActionOrigin_Switch_RightStick_Click             = 0x00000000000000D4,
		k_EInputActionOrigin_Switch_RightStick_DPadNorth         = 0x00000000000000D5,
		k_EInputActionOrigin_Switch_RightStick_DPadSouth         = 0x00000000000000D6,
		k_EInputActionOrigin_Switch_RightStick_DPadWest          = 0x00000000000000D7,
		k_EInputActionOrigin_Switch_RightStick_DPadEast          = 0x00000000000000D8,
		k_EInputActionOrigin_Switch_DPad_North                   = 0x00000000000000D9,
		k_EInputActionOrigin_Switch_DPad_South                   = 0x00000000000000DA,
		k_EInputActionOrigin_Switch_DPad_West                    = 0x00000000000000DB,
		k_EInputActionOrigin_Switch_DPad_East                    = 0x00000000000000DC,
		k_EInputActionOrigin_Switch_ProGyro_Move                 = 0x00000000000000DD,
		k_EInputActionOrigin_Switch_ProGyro_Pitch                = 0x00000000000000DE,
		k_EInputActionOrigin_Switch_ProGyro_Yaw                  = 0x00000000000000DF,
		k_EInputActionOrigin_Switch_ProGyro_Roll                 = 0x00000000000000E0,
		k_EInputActionOrigin_Switch_DPad_Move                    = 0x00000000000000E1,
		k_EInputActionOrigin_Switch_Reserved1                    = 0x00000000000000E2,
		k_EInputActionOrigin_Switch_Reserved2                    = 0x00000000000000E3,
		k_EInputActionOrigin_Switch_Reserved3                    = 0x00000000000000E4,
		k_EInputActionOrigin_Switch_Reserved4                    = 0x00000000000000E5,
		k_EInputActionOrigin_Switch_Reserved5                    = 0x00000000000000E6,
		k_EInputActionOrigin_Switch_Reserved6                    = 0x00000000000000E7,
		k_EInputActionOrigin_Switch_Reserved7                    = 0x00000000000000E8,
		k_EInputActionOrigin_Switch_Reserved8                    = 0x00000000000000E9,
		k_EInputActionOrigin_Switch_Reserved9                    = 0x00000000000000EA,
		k_EInputActionOrigin_Switch_Reserved10                   = 0x00000000000000EB,
		k_EInputActionOrigin_Switch_RightGyro_Move               = 0x00000000000000EC,
		k_EInputActionOrigin_Switch_RightGyro_Pitch              = 0x00000000000000ED,
		k_EInputActionOrigin_Switch_RightGyro_Yaw                = 0x00000000000000EE,
		k_EInputActionOrigin_Switch_RightGyro_Roll               = 0x00000000000000EF,
		k_EInputActionOrigin_Switch_LeftGyro_Move                = 0x00000000000000F0,
		k_EInputActionOrigin_Switch_LeftGyro_Pitch               = 0x00000000000000F1,
		k_EInputActionOrigin_Switch_LeftGyro_Yaw                 = 0x00000000000000F2,
		k_EInputActionOrigin_Switch_LeftGyro_Roll                = 0x00000000000000F3,
		k_EInputActionOrigin_Switch_LeftGrip_Lower               = 0x00000000000000F4,
		k_EInputActionOrigin_Switch_LeftGrip_Upper               = 0x00000000000000F5,
		k_EInputActionOrigin_Switch_RightGrip_Lower              = 0x00000000000000F6,
		k_EInputActionOrigin_Switch_RightGrip_Upper              = 0x00000000000000F7,
		k_EInputActionOrigin_Switch_Reserved11                   = 0x00000000000000F8,
		k_EInputActionOrigin_Switch_Reserved12                   = 0x00000000000000F9,
		k_EInputActionOrigin_Switch_Reserved13                   = 0x00000000000000FA,
		k_EInputActionOrigin_Switch_Reserved14                   = 0x00000000000000FB,
		k_EInputActionOrigin_Switch_Reserved15                   = 0x00000000000000FC,
		k_EInputActionOrigin_Switch_Reserved16                   = 0x00000000000000FD,
		k_EInputActionOrigin_Switch_Reserved17                   = 0x00000000000000FE,
		k_EInputActionOrigin_Switch_Reserved18                   = 0x00000000000000FF,
		k_EInputActionOrigin_Switch_Reserved19                   = 0x0000000000000100,
		k_EInputActionOrigin_Switch_Reserved20                   = 0x0000000000000101,
		k_EInputActionOrigin_PS5_X                               = 0x0000000000000102,
		k_EInputActionOrigin_PS5_Circle                          = 0x0000000000000103,
		k_EInputActionOrigin_PS5_Triangle                        = 0x0000000000000104,
		k_EInputActionOrigin_PS5_Square                          = 0x0000000000000105,
		k_EInputActionOrigin_PS5_LeftBumper                      = 0x0000000000000106,
		k_EInputActionOrigin_PS5_RightBumper                     = 0x0000000000000107,
		k_EInputActionOrigin_PS5_Option                          = 0x0000000000000108,
		k_EInputActionOrigin_PS5_Create                          = 0x0000000000000109,
		k_EInputActionOrigin_PS5_Mute                            = 0x000000000000010A,
		k_EInputActionOrigin_PS5_LeftPad_Touch                   = 0x000000000000010B,
		k_EInputActionOrigin_PS5_LeftPad_Swipe                   = 0x000000000000010C,
		k_EInputActionOrigin_PS5_LeftPad_Click                   = 0x000000000000010D,
		k_EInputActionOrigin_PS5_LeftPad_DPadNorth               = 0x000000000000010E,
		k_EInputActionOrigin_PS5_LeftPad_DPadSouth               = 0x000000000000010F,
		k_EInputActionOrigin_PS5_LeftPad_DPadWest                = 0x0000000000000110,
		k_EInputActionOrigin_PS5_LeftPad_DPadEast                = 0x0000000000000111,
		k_EInputActionOrigin_PS5_RightPad_Touch                  = 0x0000000000000112,
		k_EInputActionOrigin_PS5_RightPad_Swipe                  = 0x0000000000000113,
		k_EInputActionOrigin_PS5_RightPad_Click                  = 0x0000000000000114,
		k_EInputActionOrigin_PS5_RightPad_DPadNorth              = 0x0000000000000115,
		k_EInputActionOrigin_PS5_RightPad_DPadSouth              = 0x0000000000000116,
		k_EInputActionOrigin_PS5_RightPad_DPadWest               = 0x0000000000000117,
		k_EInputActionOrigin_PS5_RightPad_DPadEast               = 0x0000000000000118,
		k_EInputActionOrigin_PS5_CenterPad_Touch                 = 0x0000000000000119,
		k_EInputActionOrigin_PS5_CenterPad_Swipe                 = 0x000000000000011A,
		k_EInputActionOrigin_PS5_CenterPad_Click                 = 0x000000000000011B,
		k_EInputActionOrigin_PS5_CenterPad_DPadNorth             = 0x000000000000011C,
		k_EInputActionOrigin_PS5_CenterPad_DPadSouth             = 0x000000000000011D,
		k_EInputActionOrigin_PS5_CenterPad_DPadWest              = 0x000000000000011E,
		k_EInputActionOrigin_PS5_CenterPad_DPadEast              = 0x000000000000011F,
		k_EInputActionOrigin_PS5_LeftTrigger_Pull                = 0x0000000000000120,
		k_EInputActionOrigin_PS5_LeftTrigger_Click               = 0x0000000000000121,
		k_EInputActionOrigin_PS5_RightTrigger_Pull               = 0x0000000000000122,
		k_EInputActionOrigin_PS5_RightTrigger_Click              = 0x0000000000000123,
		k_EInputActionOrigin_PS5_LeftStick_Move                  = 0x0000000000000124,
		k_EInputActionOrigin_PS5_LeftStick_Click                 = 0x0000000000000125,
		k_EInputActionOrigin_PS5_LeftStick_DPadNorth             = 0x0000000000000126,
		k_EInputActionOrigin_PS5_LeftStick_DPadSouth             = 0x0000000000000127,
		k_EInputActionOrigin_PS5_LeftStick_DPadWest              = 0x0000000000000128,
		k_EInputActionOrigin_PS5_LeftStick_DPadEast              = 0x0000000000000129,
		k_EInputActionOrigin_PS5_RightStick_Move                 = 0x000000000000012A,
		k_EInputActionOrigin_PS5_RightStick_Click                = 0x000000000000012B,
		k_EInputActionOrigin_PS5_RightStick_DPadNorth            = 0x000000000000012C,
		k_EInputActionOrigin_PS5_RightStick_DPadSouth            = 0x000000000000012D,
		k_EInputActionOrigin_PS5_RightStick_DPadWest             = 0x000000000000012E,
		k_EInputActionOrigin_PS5_RightStick_DPadEast             = 0x000000000000012F,
		k_EInputActionOrigin_PS5_DPad_North                      = 0x0000000000000130,
		k_EInputActionOrigin_PS5_DPad_South                      = 0x0000000000000131,
		k_EInputActionOrigin_PS5_DPad_West                       = 0x0000000000000132,
		k_EInputActionOrigin_PS5_DPad_East                       = 0x0000000000000133,
		k_EInputActionOrigin_PS5_Gyro_Move                       = 0x0000000000000134,
		k_EInputActionOrigin_PS5_Gyro_Pitch                      = 0x0000000000000135,
		k_EInputActionOrigin_PS5_Gyro_Yaw                        = 0x0000000000000136,
		k_EInputActionOrigin_PS5_Gyro_Roll                       = 0x0000000000000137,
		k_EInputActionOrigin_PS5_DPad_Move                       = 0x0000000000000138,
		k_EInputActionOrigin_PS5_Reserved1                       = 0x0000000000000139,
		k_EInputActionOrigin_PS5_Reserved2                       = 0x000000000000013A,
		k_EInputActionOrigin_PS5_Reserved3                       = 0x000000000000013B,
		k_EInputActionOrigin_PS5_Reserved4                       = 0x000000000000013C,
		k_EInputActionOrigin_PS5_Reserved5                       = 0x000000000000013D,
		k_EInputActionOrigin_PS5_Reserved6                       = 0x000000000000013E,
		k_EInputActionOrigin_PS5_Reserved7                       = 0x000000000000013F,
		k_EInputActionOrigin_PS5_Reserved8                       = 0x0000000000000140,
		k_EInputActionOrigin_PS5_Reserved9                       = 0x0000000000000141,
		k_EInputActionOrigin_PS5_Reserved10                      = 0x0000000000000142,
		k_EInputActionOrigin_PS5_Reserved11                      = 0x0000000000000143,
		k_EInputActionOrigin_PS5_Reserved12                      = 0x0000000000000144,
		k_EInputActionOrigin_PS5_Reserved13                      = 0x0000000000000145,
		k_EInputActionOrigin_PS5_Reserved14                      = 0x0000000000000146,
		k_EInputActionOrigin_PS5_Reserved15                      = 0x0000000000000147,
		k_EInputActionOrigin_PS5_Reserved16                      = 0x0000000000000148,
		k_EInputActionOrigin_PS5_Reserved17                      = 0x0000000000000149,
		k_EInputActionOrigin_PS5_Reserved18                      = 0x000000000000014A,
		k_EInputActionOrigin_PS5_Reserved19                      = 0x000000000000014B,
		k_EInputActionOrigin_PS5_Reserved20                      = 0x000000000000014C,
		k_EInputActionOrigin_SteamDeck_A                         = 0x000000000000014D,
		k_EInputActionOrigin_SteamDeck_B                         = 0x000000000000014E,
		k_EInputActionOrigin_SteamDeck_X                         = 0x000000000000014F,
		k_EInputActionOrigin_SteamDeck_Y                         = 0x0000000000000150,
		k_EInputActionOrigin_SteamDeck_L1                        = 0x0000000000000151,
		k_EInputActionOrigin_SteamDeck_R1                        = 0x0000000000000152,
		k_EInputActionOrigin_SteamDeck_Menu                      = 0x0000000000000153,
		k_EInputActionOrigin_SteamDeck_View                      = 0x0000000000000154,
		k_EInputActionOrigin_SteamDeck_LeftPad_Touch             = 0x0000000000000155,
		k_EInputActionOrigin_SteamDeck_LeftPad_Swipe             = 0x0000000000000156,
		k_EInputActionOrigin_SteamDeck_LeftPad_Click             = 0x0000000000000157,
		k_EInputActionOrigin_SteamDeck_LeftPad_DPadNorth         = 0x0000000000000158,
		k_EInputActionOrigin_SteamDeck_LeftPad_DPadSouth         = 0x0000000000000159,
		k_EInputActionOrigin_SteamDeck_LeftPad_DPadWest          = 0x000000000000015A,
		k_EInputActionOrigin_SteamDeck_LeftPad_DPadEast          = 0x000000000000015B,
		k_EInputActionOrigin_SteamDeck_RightPad_Touch            = 0x000000000000015C,
		k_EInputActionOrigin_SteamDeck_RightPad_Swipe            = 0x000000000000015D,
		k_EInputActionOrigin_SteamDeck_RightPad_Click            = 0x000000000000015E,
		k_EInputActionOrigin_SteamDeck_RightPad_DPadNorth        = 0x000000000000015F,
		k_EInputActionOrigin_SteamDeck_RightPad_DPadSouth        = 0x0000000000000160,
		k_EInputActionOrigin_SteamDeck_RightPad_DPadWest         = 0x0000000000000161,
		k_EInputActionOrigin_SteamDeck_RightPad_DPadEast         = 0x0000000000000162,
		k_EInputActionOrigin_SteamDeck_L2_SoftPull               = 0x0000000000000163,
		k_EInputActionOrigin_SteamDeck_L2                        = 0x0000000000000164,
		k_EInputActionOrigin_SteamDeck_R2_SoftPull               = 0x0000000000000165,
		k_EInputActionOrigin_SteamDeck_R2                        = 0x0000000000000166,
		k_EInputActionOrigin_SteamDeck_LeftStick_Move            = 0x0000000000000167,
		k_EInputActionOrigin_SteamDeck_L3                        = 0x0000000000000168,
		k_EInputActionOrigin_SteamDeck_LeftStick_DPadNorth       = 0x0000000000000169,
		k_EInputActionOrigin_SteamDeck_LeftStick_DPadSouth       = 0x000000000000016A,
		k_EInputActionOrigin_SteamDeck_LeftStick_DPadWest        = 0x000000000000016B,
		k_EInputActionOrigin_SteamDeck_LeftStick_DPadEast        = 0x000000000000016C,
		k_EInputActionOrigin_SteamDeck_LeftStick_Touch           = 0x000000000000016D,
		k_EInputActionOrigin_SteamDeck_RightStick_Move           = 0x000000000000016E,
		k_EInputActionOrigin_SteamDeck_R3                        = 0x000000000000016F,
		k_EInputActionOrigin_SteamDeck_RightStick_DPadNorth      = 0x0000000000000170,
		k_EInputActionOrigin_SteamDeck_RightStick_DPadSouth      = 0x0000000000000171,
		k_EInputActionOrigin_SteamDeck_RightStick_DPadWest       = 0x0000000000000172,
		k_EInputActionOrigin_SteamDeck_RightStick_DPadEast       = 0x0000000000000173,
		k_EInputActionOrigin_SteamDeck_RightStick_Touch          = 0x0000000000000174,
		k_EInputActionOrigin_SteamDeck_L4                        = 0x0000000000000175,
		k_EInputActionOrigin_SteamDeck_R4                        = 0x0000000000000176,
		k_EInputActionOrigin_SteamDeck_L5                        = 0x0000000000000177,
		k_EInputActionOrigin_SteamDeck_R5                        = 0x0000000000000178,
		k_EInputActionOrigin_SteamDeck_DPad_Move                 = 0x0000000000000179,
		k_EInputActionOrigin_SteamDeck_DPad_North                = 0x000000000000017A,
		k_EInputActionOrigin_SteamDeck_DPad_South                = 0x000000000000017B,
		k_EInputActionOrigin_SteamDeck_DPad_West                 = 0x000000000000017C,
		k_EInputActionOrigin_SteamDeck_DPad_East                 = 0x000000000000017D,
		k_EInputActionOrigin_SteamDeck_Gyro_Move                 = 0x000000000000017E,
		k_EInputActionOrigin_SteamDeck_Gyro_Pitch                = 0x000000000000017F,
		k_EInputActionOrigin_SteamDeck_Gyro_Yaw                  = 0x0000000000000180,
		k_EInputActionOrigin_SteamDeck_Gyro_Roll                 = 0x0000000000000181,
		k_EInputActionOrigin_SteamDeck_Reserved1                 = 0x0000000000000182,
		k_EInputActionOrigin_SteamDeck_Reserved2                 = 0x0000000000000183,
		k_EInputActionOrigin_SteamDeck_Reserved3                 = 0x0000000000000184,
		k_EInputActionOrigin_SteamDeck_Reserved4                 = 0x0000000000000185,
		k_EInputActionOrigin_SteamDeck_Reserved5                 = 0x0000000000000186,
		k_EInputActionOrigin_SteamDeck_Reserved6                 = 0x0000000000000187,
		k_EInputActionOrigin_SteamDeck_Reserved7                 = 0x0000000000000188,
		k_EInputActionOrigin_SteamDeck_Reserved8                 = 0x0000000000000189,
		k_EInputActionOrigin_SteamDeck_Reserved9                 = 0x000000000000018A,
		k_EInputActionOrigin_SteamDeck_Reserved10                = 0x000000000000018B,
		k_EInputActionOrigin_SteamDeck_Reserved11                = 0x000000000000018C,
		k_EInputActionOrigin_SteamDeck_Reserved12                = 0x000000000000018D,
		k_EInputActionOrigin_SteamDeck_Reserved13                = 0x000000000000018E,
		k_EInputActionOrigin_SteamDeck_Reserved14                = 0x000000000000018F,
		k_EInputActionOrigin_SteamDeck_Reserved15                = 0x0000000000000190,
		k_EInputActionOrigin_SteamDeck_Reserved16                = 0x0000000000000191,
		k_EInputActionOrigin_SteamDeck_Reserved17                = 0x0000000000000192,
		k_EInputActionOrigin_SteamDeck_Reserved18                = 0x0000000000000193,
		k_EInputActionOrigin_SteamDeck_Reserved19                = 0x0000000000000194,
		k_EInputActionOrigin_SteamDeck_Reserved20                = 0x0000000000000195,
		k_EInputActionOrigin_Count                               = 0x0000000000000196,
		k_EInputActionOrigin_MaximumPossibleValue                = 0x0000000000007FFF
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EXboxOrigin
	 */
	enum class EXboxOrigin : int32_t
	{
		k_EXboxOrigin_A                    = 0x0000000000000000,
		k_EXboxOrigin_B                    = 0x0000000000000001,
		k_EXboxOrigin_X                    = 0x0000000000000002,
		k_EXboxOrigin_Y                    = 0x0000000000000003,
		k_EXboxOrigin_LeftBumper           = 0x0000000000000004,
		k_EXboxOrigin_RightBumper          = 0x0000000000000005,
		k_EXboxOrigin_Menu                 = 0x0000000000000006,
		k_EXboxOrigin_View                 = 0x0000000000000007,
		k_EXboxOrigin_LeftTrigger_Pull     = 0x0000000000000008,
		k_EXboxOrigin_LeftTrigger_Click    = 0x0000000000000009,
		k_EXboxOrigin_RightTrigger_Pull    = 0x000000000000000A,
		k_EXboxOrigin_RightTrigger_Click   = 0x000000000000000B,
		k_EXboxOrigin_LeftStick_Move       = 0x000000000000000C,
		k_EXboxOrigin_LeftStick_Click      = 0x000000000000000D,
		k_EXboxOrigin_LeftStick_DPadNorth  = 0x000000000000000E,
		k_EXboxOrigin_LeftStick_DPadSouth  = 0x000000000000000F,
		k_EXboxOrigin_LeftStick_DPadWest   = 0x0000000000000010,
		k_EXboxOrigin_LeftStick_DPadEast   = 0x0000000000000011,
		k_EXboxOrigin_RightStick_Move      = 0x0000000000000012,
		k_EXboxOrigin_RightStick_Click     = 0x0000000000000013,
		k_EXboxOrigin_RightStick_DPadNorth = 0x0000000000000014,
		k_EXboxOrigin_RightStick_DPadSouth = 0x0000000000000015,
		k_EXboxOrigin_RightStick_DPadWest  = 0x0000000000000016,
		k_EXboxOrigin_RightStick_DPadEast  = 0x0000000000000017,
		k_EXboxOrigin_DPad_North           = 0x0000000000000018,
		k_EXboxOrigin_DPad_South           = 0x0000000000000019,
		k_EXboxOrigin_DPad_West            = 0x000000000000001A,
		k_EXboxOrigin_DPad_East            = 0x000000000000001B,
		k_EXboxOrigin_Count                = 0x000000000000001C
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ESteamControllerPad
	 */
	enum class ESteamControllerPad : int32_t
	{
		k_ESteamControllerPad_Left  = 0x0000000000000000,
		k_ESteamControllerPad_Right = 0x0000000000000001
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EControllerHapticLocation
	 */
	enum class EControllerHapticLocation : int32_t
	{
		k_EControllerHapticLocation_Left  = 0x0000000000000001,
		k_EControllerHapticLocation_Right = 0x0000000000000002,
		k_EControllerHapticLocation_Both  = 0x0000000000000003
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EControllerHapticType
	 */
	enum class EControllerHapticType : int32_t
	{
		k_EControllerHapticType_Off   = 0x0000000000000000,
		k_EControllerHapticType_Tick  = 0x0000000000000001,
		k_EControllerHapticType_Click = 0x0000000000000002
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ESteamInputType
	 */
	enum class ESteamInputType : int32_t
	{
		k_ESteamInputType_Unknown              = 0x0000000000000000,
		k_ESteamInputType_SteamController      = 0x0000000000000001,
		k_ESteamInputType_XBox360Controller    = 0x0000000000000002,
		k_ESteamInputType_XBoxOneController    = 0x0000000000000003,
		k_ESteamInputType_GenericGamepad       = 0x0000000000000004,
		k_ESteamInputType_PS4Controller        = 0x0000000000000005,
		k_ESteamInputType_AppleMFiController   = 0x0000000000000006,
		k_ESteamInputType_AndroidController    = 0x0000000000000007,
		k_ESteamInputType_SwitchJoyConPair     = 0x0000000000000008,
		k_ESteamInputType_SwitchJoyConSingle   = 0x0000000000000009,
		k_ESteamInputType_SwitchProController  = 0x000000000000000A,
		k_ESteamInputType_MobileTouch          = 0x000000000000000B,
		k_ESteamInputType_PS3Controller        = 0x000000000000000C,
		k_ESteamInputType_PS5Controller        = 0x000000000000000D,
		k_ESteamInputType_SteamDeckController  = 0x000000000000000E,
		k_ESteamInputType_Count                = 0x000000000000000F,
		k_ESteamInputType_MaximumPossibleValue = 0x00000000000000FF
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ESteamInputConfigurationEnableType
	 */
	enum class ESteamInputConfigurationEnableType : int32_t
	{
		k_ESteamInputConfigurationEnableType_None        = 0x0000000000000000,
		k_ESteamInputConfigurationEnableType_Playstation = 0x0000000000000001,
		k_ESteamInputConfigurationEnableType_Xbox        = 0x0000000000000002,
		k_ESteamInputConfigurationEnableType_Generic     = 0x0000000000000004,
		k_ESteamInputConfigurationEnableType_Switch      = 0x0000000000000008
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ESteamInputLEDFlag
	 */
	enum class ESteamInputLEDFlag : int32_t
	{
		k_ESteamInputLEDFlag_SetColor           = 0x0000000000000000,
		k_ESteamInputLEDFlag_RestoreUserDefault = 0x0000000000000001
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ESteamInputGlyphSize
	 */
	enum class ESteamInputGlyphSize : int32_t
	{
		k_ESteamInputGlyphSize_Small  = 0x0000000000000000,
		k_ESteamInputGlyphSize_Medium = 0x0000000000000001,
		k_ESteamInputGlyphSize_Large  = 0x0000000000000002,
		k_ESteamInputGlyphSize_Count  = 0x0000000000000003
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ESteamInputGlyphStyle
	 */
	enum class ESteamInputGlyphStyle : int32_t
	{
		ESteamInputGlyphStyle_Knockout         = 0x0000000000000000,
		ESteamInputGlyphStyle_Light            = 0x0000000000000001,
		ESteamInputGlyphStyle_Dark             = 0x0000000000000002,
		ESteamInputGlyphStyle_NeutralColorABXY = 0x0000000000000010,
		ESteamInputGlyphStyle_SolidABXY        = 0x0000000000000020
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ESteamInputActionEventType
	 */
	enum class ESteamInputActionEventType : int32_t
	{
		ESteamInputActionEventType_DigitalAction = 0x0000000000000000,
		ESteamInputActionEventType_AnalogAction  = 0x0000000000000001
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ESteamItemFlags
	 */
	enum class ESteamItemFlags : int32_t
	{
		k_ESteamItemNoTrade  = 0x0000000000000001,
		k_ESteamItemRemoved  = 0x0000000000000100,
		k_ESteamItemConsumed = 0x0000000000000200
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ELobbyType
	 */
	enum class ELobbyType : int32_t
	{
		k_ELobbyTypePrivate       = 0x0000000000000000,
		k_ELobbyTypeFriendsOnly   = 0x0000000000000001,
		k_ELobbyTypePublic        = 0x0000000000000002,
		k_ELobbyTypeInvisible     = 0x0000000000000003,
		k_ELobbyTypePrivateUnique = 0x0000000000000004
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ELobbyComparison
	 */
	enum class ELobbyComparison : int32_t
	{
		k_ELobbyComparisonEqualToOrLessThan    = -2,
		k_ELobbyComparisonLessThan             = -1,
		k_ELobbyComparisonEqual                = 0x0000000000000000,
		k_ELobbyComparisonGreaterThan          = 0x0000000000000001,
		k_ELobbyComparisonEqualToOrGreaterThan = 0x0000000000000002,
		k_ELobbyComparisonNotEqual             = 0x0000000000000003
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ELobbyDistanceFilter
	 */
	enum class ELobbyDistanceFilter : int32_t
	{
		k_ELobbyDistanceFilterClose     = 0x0000000000000000,
		k_ELobbyDistanceFilterDefault   = 0x0000000000000001,
		k_ELobbyDistanceFilterFar       = 0x0000000000000002,
		k_ELobbyDistanceFilterWorldwide = 0x0000000000000003
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EChatMemberStateChange
	 */
	enum class EChatMemberStateChange : int32_t
	{
		k_EChatMemberStateChangeEntered      = 0x0000000000000001,
		k_EChatMemberStateChangeLeft         = 0x0000000000000002,
		k_EChatMemberStateChangeDisconnected = 0x0000000000000004,
		k_EChatMemberStateChangeKicked       = 0x0000000000000008,
		k_EChatMemberStateChangeBanned       = 0x0000000000000010
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ESteamPartyBeaconLocationType
	 */
	enum class ESteamPartyBeaconLocationType : int32_t
	{
		k_ESteamPartyBeaconLocationType_Invalid   = 0x0000000000000000,
		k_ESteamPartyBeaconLocationType_ChatGroup = 0x0000000000000001,
		k_ESteamPartyBeaconLocationType_Max       = 0x0000000000000002
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ESteamPartyBeaconLocationData
	 */
	enum class ESteamPartyBeaconLocationData : int32_t
	{
		k_ESteamPartyBeaconLocationDataInvalid       = 0x0000000000000000,
		k_ESteamPartyBeaconLocationDataName          = 0x0000000000000001,
		k_ESteamPartyBeaconLocationDataIconURLSmall  = 0x0000000000000002,
		k_ESteamPartyBeaconLocationDataIconURLMedium = 0x0000000000000003,
		k_ESteamPartyBeaconLocationDataIconURLLarge  = 0x0000000000000004
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.PlayerAcceptState_t
	 */
	enum class PlayerAcceptState_t : int32_t
	{
		k_EStateUnknown        = 0x0000000000000000,
		k_EStatePlayerAccepted = 0x0000000000000001,
		k_EStatePlayerDeclined = 0x0000000000000002
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.AudioPlayback_Status
	 */
	enum class AudioPlayback_Status : int32_t
	{
		AudioPlayback_Undefined = 0x0000000000000000,
		AudioPlayback_Playing   = 0x0000000000000001,
		AudioPlayback_Paused    = 0x0000000000000002,
		AudioPlayback_Idle      = 0x0000000000000003
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EP2PSessionError
	 */
	enum class EP2PSessionError : int32_t
	{
		k_EP2PSessionErrorNone                           = 0x0000000000000000,
		k_EP2PSessionErrorNoRightsToApp                  = 0x0000000000000002,
		k_EP2PSessionErrorTimeout                        = 0x0000000000000004,
		k_EP2PSessionErrorNotRunningApp_DELETED          = 0x0000000000000001,
		k_EP2PSessionErrorDestinationNotLoggedIn_DELETED = 0x0000000000000003,
		k_EP2PSessionErrorMax                            = 0x0000000000000005
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EP2PSend
	 */
	enum class EP2PSend : int32_t
	{
		k_EP2PSendUnreliable            = 0x0000000000000000,
		k_EP2PSendUnreliableNoDelay     = 0x0000000000000001,
		k_EP2PSendReliable              = 0x0000000000000002,
		k_EP2PSendReliableWithBuffering = 0x0000000000000003
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ESNetSocketState
	 */
	enum class ESNetSocketState : int32_t
	{
		k_ESNetSocketStateInvalid                  = 0x0000000000000000,
		k_ESNetSocketStateConnected                = 0x0000000000000001,
		k_ESNetSocketStateInitiated                = 0x000000000000000A,
		k_ESNetSocketStateLocalCandidatesFound     = 0x000000000000000B,
		k_ESNetSocketStateReceivedRemoteCandidates = 0x000000000000000C,
		k_ESNetSocketStateChallengeHandshake       = 0x000000000000000F,
		k_ESNetSocketStateDisconnecting            = 0x0000000000000015,
		k_ESNetSocketStateLocalDisconnect          = 0x0000000000000016,
		k_ESNetSocketStateTimeoutDuringConnect     = 0x0000000000000017,
		k_ESNetSocketStateRemoteEndDisconnected    = 0x0000000000000018,
		k_ESNetSocketStateConnectionBroken         = 0x0000000000000019
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ESNetSocketConnectionType
	 */
	enum class ESNetSocketConnectionType : int32_t
	{
		k_ESNetSocketConnectionTypeNotConnected = 0x0000000000000000,
		k_ESNetSocketConnectionTypeUDP          = 0x0000000000000001,
		k_ESNetSocketConnectionTypeUDPRelay     = 0x0000000000000002
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EParentalFeature
	 */
	enum class EParentalFeature : int32_t
	{
		k_EFeatureInvalid       = 0x0000000000000000,
		k_EFeatureStore         = 0x0000000000000001,
		k_EFeatureCommunity     = 0x0000000000000002,
		k_EFeatureProfile       = 0x0000000000000003,
		k_EFeatureFriends       = 0x0000000000000004,
		k_EFeatureNews          = 0x0000000000000005,
		k_EFeatureTrading       = 0x0000000000000006,
		k_EFeatureSettings      = 0x0000000000000007,
		k_EFeatureConsole       = 0x0000000000000008,
		k_EFeatureBrowser       = 0x0000000000000009,
		k_EFeatureParentalSetup = 0x000000000000000A,
		k_EFeatureLibrary       = 0x000000000000000B,
		k_EFeatureTest          = 0x000000000000000C,
		k_EFeatureSiteLicense   = 0x000000000000000D,
		k_EFeatureMax           = 0x000000000000000E
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ESteamDeviceFormFactor
	 */
	enum class ESteamDeviceFormFactor : int32_t
	{
		k_ESteamDeviceFormFactorUnknown  = 0x0000000000000000,
		k_ESteamDeviceFormFactorPhone    = 0x0000000000000001,
		k_ESteamDeviceFormFactorTablet   = 0x0000000000000002,
		k_ESteamDeviceFormFactorComputer = 0x0000000000000003,
		k_ESteamDeviceFormFactorTV       = 0x0000000000000004
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ERemoteStoragePlatform
	 */
	enum class ERemoteStoragePlatform : int32_t
	{
		k_ERemoteStoragePlatformNone    = 0x0000000000000000,
		k_ERemoteStoragePlatformWindows = 0x0000000000000001,
		k_ERemoteStoragePlatformOSX     = 0x0000000000000002,
		k_ERemoteStoragePlatformPS3     = 0x0000000000000004,
		k_ERemoteStoragePlatformLinux   = 0x0000000000000008,
		k_ERemoteStoragePlatformSwitch  = 0x0000000000000010,
		k_ERemoteStoragePlatformAndroid = 0x0000000000000020,
		k_ERemoteStoragePlatformIOS     = 0x0000000000000040,
		k_ERemoteStoragePlatformAll     = -1
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ERemoteStoragePublishedFileVisibility
	 */
	enum class ERemoteStoragePublishedFileVisibility : int32_t
	{
		k_ERemoteStoragePublishedFileVisibilityPublic      = 0x0000000000000000,
		k_ERemoteStoragePublishedFileVisibilityFriendsOnly = 0x0000000000000001,
		k_ERemoteStoragePublishedFileVisibilityPrivate     = 0x0000000000000002,
		k_ERemoteStoragePublishedFileVisibilityUnlisted    = 0x0000000000000003
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EWorkshopFileType
	 */
	enum class EWorkshopFileType : int32_t
	{
		k_EWorkshopFileTypeFirst                  = 0x0000000000000000,
		k_EWorkshopFileTypeCommunity              = 0x0000000000000000,
		k_EWorkshopFileTypeMicrotransaction       = 0x0000000000000001,
		k_EWorkshopFileTypeCollection             = 0x0000000000000002,
		k_EWorkshopFileTypeArt                    = 0x0000000000000003,
		k_EWorkshopFileTypeVideo                  = 0x0000000000000004,
		k_EWorkshopFileTypeScreenshot             = 0x0000000000000005,
		k_EWorkshopFileTypeGame                   = 0x0000000000000006,
		k_EWorkshopFileTypeSoftware               = 0x0000000000000007,
		k_EWorkshopFileTypeConcept                = 0x0000000000000008,
		k_EWorkshopFileTypeWebGuide               = 0x0000000000000009,
		k_EWorkshopFileTypeIntegratedGuide        = 0x000000000000000A,
		k_EWorkshopFileTypeMerch                  = 0x000000000000000B,
		k_EWorkshopFileTypeControllerBinding      = 0x000000000000000C,
		k_EWorkshopFileTypeSteamworksAccessInvite = 0x000000000000000D,
		k_EWorkshopFileTypeSteamVideo             = 0x000000000000000E,
		k_EWorkshopFileTypeGameManagedItem        = 0x000000000000000F,
		k_EWorkshopFileTypeMax                    = 0x0000000000000010
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EWorkshopVote
	 */
	enum class EWorkshopVote : int32_t
	{
		k_EWorkshopVoteUnvoted = 0x0000000000000000,
		k_EWorkshopVoteFor     = 0x0000000000000001,
		k_EWorkshopVoteAgainst = 0x0000000000000002,
		k_EWorkshopVoteLater   = 0x0000000000000003
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EWorkshopFileAction
	 */
	enum class EWorkshopFileAction : int32_t
	{
		k_EWorkshopFileActionPlayed    = 0x0000000000000000,
		k_EWorkshopFileActionCompleted = 0x0000000000000001
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EWorkshopEnumerationType
	 */
	enum class EWorkshopEnumerationType : int32_t
	{
		k_EWorkshopEnumerationTypeRankedByVote            = 0x0000000000000000,
		k_EWorkshopEnumerationTypeRecent                  = 0x0000000000000001,
		k_EWorkshopEnumerationTypeTrending                = 0x0000000000000002,
		k_EWorkshopEnumerationTypeFavoritesOfFriends      = 0x0000000000000003,
		k_EWorkshopEnumerationTypeVotedByFriends          = 0x0000000000000004,
		k_EWorkshopEnumerationTypeContentByFriends        = 0x0000000000000005,
		k_EWorkshopEnumerationTypeRecentFromFollowedUsers = 0x0000000000000006
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EWorkshopVideoProvider
	 */
	enum class EWorkshopVideoProvider : int32_t
	{
		k_EWorkshopVideoProviderNone    = 0x0000000000000000,
		k_EWorkshopVideoProviderYoutube = 0x0000000000000001
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EUGCReadAction
	 */
	enum class EUGCReadAction : int32_t
	{
		k_EUGCRead_ContinueReadingUntilFinished = 0x0000000000000000,
		k_EUGCRead_ContinueReading              = 0x0000000000000001,
		k_EUGCRead_Close                        = 0x0000000000000002
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ERemoteStorageLocalFileChange
	 */
	enum class ERemoteStorageLocalFileChange : int32_t
	{
		k_ERemoteStorageLocalFileChange_Invalid     = 0x0000000000000000,
		k_ERemoteStorageLocalFileChange_FileUpdated = 0x0000000000000001,
		k_ERemoteStorageLocalFileChange_FileDeleted = 0x0000000000000002
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ERemoteStorageFilePathType
	 */
	enum class ERemoteStorageFilePathType : int32_t
	{
		k_ERemoteStorageFilePathType_Invalid     = 0x0000000000000000,
		k_ERemoteStorageFilePathType_Absolute    = 0x0000000000000001,
		k_ERemoteStorageFilePathType_APIFilename = 0x0000000000000002
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EVRScreenshotType
	 */
	enum class EVRScreenshotType : int32_t
	{
		k_EVRScreenshotType_None           = 0x0000000000000000,
		k_EVRScreenshotType_Mono           = 0x0000000000000001,
		k_EVRScreenshotType_Stereo         = 0x0000000000000002,
		k_EVRScreenshotType_MonoCubemap    = 0x0000000000000003,
		k_EVRScreenshotType_MonoPanorama   = 0x0000000000000004,
		k_EVRScreenshotType_StereoPanorama = 0x0000000000000005
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EUGCMatchingUGCType
	 */
	enum class EUGCMatchingUGCType : int32_t
	{
		k_EUGCMatchingUGCType_Items              = 0x0000000000000000,
		k_EUGCMatchingUGCType_Items_Mtx          = 0x0000000000000001,
		k_EUGCMatchingUGCType_Items_ReadyToUse   = 0x0000000000000002,
		k_EUGCMatchingUGCType_Collections        = 0x0000000000000003,
		k_EUGCMatchingUGCType_Artwork            = 0x0000000000000004,
		k_EUGCMatchingUGCType_Videos             = 0x0000000000000005,
		k_EUGCMatchingUGCType_Screenshots        = 0x0000000000000006,
		k_EUGCMatchingUGCType_AllGuides          = 0x0000000000000007,
		k_EUGCMatchingUGCType_WebGuides          = 0x0000000000000008,
		k_EUGCMatchingUGCType_IntegratedGuides   = 0x0000000000000009,
		k_EUGCMatchingUGCType_UsableInGame       = 0x000000000000000A,
		k_EUGCMatchingUGCType_ControllerBindings = 0x000000000000000B,
		k_EUGCMatchingUGCType_GameManagedItems   = 0x000000000000000C,
		k_EUGCMatchingUGCType_All                = -1
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EUserUGCList
	 */
	enum class EUserUGCList : int32_t
	{
		k_EUserUGCList_Published     = 0x0000000000000000,
		k_EUserUGCList_VotedOn       = 0x0000000000000001,
		k_EUserUGCList_VotedUp       = 0x0000000000000002,
		k_EUserUGCList_VotedDown     = 0x0000000000000003,
		k_EUserUGCList_WillVoteLater = 0x0000000000000004,
		k_EUserUGCList_Favorited     = 0x0000000000000005,
		k_EUserUGCList_Subscribed    = 0x0000000000000006,
		k_EUserUGCList_UsedOrPlayed  = 0x0000000000000007,
		k_EUserUGCList_Followed      = 0x0000000000000008
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EUserUGCListSortOrder
	 */
	enum class EUserUGCListSortOrder : int32_t
	{
		k_EUserUGCListSortOrder_CreationOrderDesc    = 0x0000000000000000,
		k_EUserUGCListSortOrder_CreationOrderAsc     = 0x0000000000000001,
		k_EUserUGCListSortOrder_TitleAsc             = 0x0000000000000002,
		k_EUserUGCListSortOrder_LastUpdatedDesc      = 0x0000000000000003,
		k_EUserUGCListSortOrder_SubscriptionDateDesc = 0x0000000000000004,
		k_EUserUGCListSortOrder_VoteScoreDesc        = 0x0000000000000005,
		k_EUserUGCListSortOrder_ForModeration        = 0x0000000000000006
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EUGCQuery
	 */
	enum class EUGCQuery : int32_t
	{
		k_EUGCQuery_RankedByVote                                  = 0x0000000000000000,
		k_EUGCQuery_RankedByPublicationDate                       = 0x0000000000000001,
		k_EUGCQuery_AcceptedForGameRankedByAcceptanceDate         = 0x0000000000000002,
		k_EUGCQuery_RankedByTrend                                 = 0x0000000000000003,
		k_EUGCQuery_FavoritedByFriendsRankedByPublicationDate     = 0x0000000000000004,
		k_EUGCQuery_CreatedByFriendsRankedByPublicationDate       = 0x0000000000000005,
		k_EUGCQuery_RankedByNumTimesReported                      = 0x0000000000000006,
		k_EUGCQuery_CreatedByFollowedUsersRankedByPublicationDate = 0x0000000000000007,
		k_EUGCQuery_NotYetRated                                   = 0x0000000000000008,
		k_EUGCQuery_RankedByTotalVotesAsc                         = 0x0000000000000009,
		k_EUGCQuery_RankedByVotesUp                               = 0x000000000000000A,
		k_EUGCQuery_RankedByTextSearch                            = 0x000000000000000B,
		k_EUGCQuery_RankedByTotalUniqueSubscriptions              = 0x000000000000000C,
		k_EUGCQuery_RankedByPlaytimeTrend                         = 0x000000000000000D,
		k_EUGCQuery_RankedByTotalPlaytime                         = 0x000000000000000E,
		k_EUGCQuery_RankedByAveragePlaytimeTrend                  = 0x000000000000000F,
		k_EUGCQuery_RankedByLifetimeAveragePlaytime               = 0x0000000000000010,
		k_EUGCQuery_RankedByPlaytimeSessionsTrend                 = 0x0000000000000011,
		k_EUGCQuery_RankedByLifetimePlaytimeSessions              = 0x0000000000000012,
		k_EUGCQuery_RankedByLastUpdatedDate                       = 0x0000000000000013
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EItemUpdateStatus
	 */
	enum class EItemUpdateStatus : int32_t
	{
		k_EItemUpdateStatusInvalid              = 0x0000000000000000,
		k_EItemUpdateStatusPreparingConfig      = 0x0000000000000001,
		k_EItemUpdateStatusPreparingContent     = 0x0000000000000002,
		k_EItemUpdateStatusUploadingContent     = 0x0000000000000003,
		k_EItemUpdateStatusUploadingPreviewFile = 0x0000000000000004,
		k_EItemUpdateStatusCommittingChanges    = 0x0000000000000005
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EItemState
	 */
	enum class EItemState : int32_t
	{
		k_EItemStateNone            = 0x0000000000000000,
		k_EItemStateSubscribed      = 0x0000000000000001,
		k_EItemStateLegacyItem      = 0x0000000000000002,
		k_EItemStateInstalled       = 0x0000000000000004,
		k_EItemStateNeedsUpdate     = 0x0000000000000008,
		k_EItemStateDownloading     = 0x0000000000000010,
		k_EItemStateDownloadPending = 0x0000000000000020
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EItemStatistic
	 */
	enum class EItemStatistic : int32_t
	{
		k_EItemStatistic_NumSubscriptions                    = 0x0000000000000000,
		k_EItemStatistic_NumFavorites                        = 0x0000000000000001,
		k_EItemStatistic_NumFollowers                        = 0x0000000000000002,
		k_EItemStatistic_NumUniqueSubscriptions              = 0x0000000000000003,
		k_EItemStatistic_NumUniqueFavorites                  = 0x0000000000000004,
		k_EItemStatistic_NumUniqueFollowers                  = 0x0000000000000005,
		k_EItemStatistic_NumUniqueWebsiteViews               = 0x0000000000000006,
		k_EItemStatistic_ReportScore                         = 0x0000000000000007,
		k_EItemStatistic_NumSecondsPlayed                    = 0x0000000000000008,
		k_EItemStatistic_NumPlaytimeSessions                 = 0x0000000000000009,
		k_EItemStatistic_NumComments                         = 0x000000000000000A,
		k_EItemStatistic_NumSecondsPlayedDuringTimePeriod    = 0x000000000000000B,
		k_EItemStatistic_NumPlaytimeSessionsDuringTimePeriod = 0x000000000000000C
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EItemPreviewType
	 */
	enum class EItemPreviewType : int32_t
	{
		k_EItemPreviewType_Image                          = 0x0000000000000000,
		k_EItemPreviewType_YouTubeVideo                   = 0x0000000000000001,
		k_EItemPreviewType_Sketchfab                      = 0x0000000000000002,
		k_EItemPreviewType_EnvironmentMap_HorizontalCross = 0x0000000000000003,
		k_EItemPreviewType_EnvironmentMap_LatLong         = 0x0000000000000004,
		k_EItemPreviewType_ReservedMax                    = 0x00000000000000FF
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EFailureType
	 */
	enum class EFailureType : int32_t
	{
		k_EFailureFlushedCallbackQueue = 0x0000000000000000,
		k_EFailurePipeFail             = 0x0000000000000001
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ELeaderboardDataRequest
	 */
	enum class ELeaderboardDataRequest : int32_t
	{
		k_ELeaderboardDataRequestGlobal           = 0x0000000000000000,
		k_ELeaderboardDataRequestGlobalAroundUser = 0x0000000000000001,
		k_ELeaderboardDataRequestFriends          = 0x0000000000000002,
		k_ELeaderboardDataRequestUsers            = 0x0000000000000003
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ELeaderboardSortMethod
	 */
	enum class ELeaderboardSortMethod : int32_t
	{
		k_ELeaderboardSortMethodNone       = 0x0000000000000000,
		k_ELeaderboardSortMethodAscending  = 0x0000000000000001,
		k_ELeaderboardSortMethodDescending = 0x0000000000000002
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ELeaderboardDisplayType
	 */
	enum class ELeaderboardDisplayType : int32_t
	{
		k_ELeaderboardDisplayTypeNone             = 0x0000000000000000,
		k_ELeaderboardDisplayTypeNumeric          = 0x0000000000000001,
		k_ELeaderboardDisplayTypeTimeSeconds      = 0x0000000000000002,
		k_ELeaderboardDisplayTypeTimeMilliSeconds = 0x0000000000000003
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ELeaderboardUploadScoreMethod
	 */
	enum class ELeaderboardUploadScoreMethod : int32_t
	{
		k_ELeaderboardUploadScoreMethodNone        = 0x0000000000000000,
		k_ELeaderboardUploadScoreMethodKeepBest    = 0x0000000000000001,
		k_ELeaderboardUploadScoreMethodForceUpdate = 0x0000000000000002
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ESteamAPICallFailure
	 */
	enum class ESteamAPICallFailure : int32_t
	{
		k_ESteamAPICallFailureNone               = -1,
		k_ESteamAPICallFailureSteamGone          = 0x0000000000000000,
		k_ESteamAPICallFailureNetworkFailure     = 0x0000000000000001,
		k_ESteamAPICallFailureInvalidHandle      = 0x0000000000000002,
		k_ESteamAPICallFailureMismatchedCallback = 0x0000000000000003
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EGamepadTextInputMode
	 */
	enum class EGamepadTextInputMode : int32_t
	{
		k_EGamepadTextInputModeNormal   = 0x0000000000000000,
		k_EGamepadTextInputModePassword = 0x0000000000000001
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EGamepadTextInputLineMode
	 */
	enum class EGamepadTextInputLineMode : int32_t
	{
		k_EGamepadTextInputLineModeSingleLine    = 0x0000000000000000,
		k_EGamepadTextInputLineModeMultipleLines = 0x0000000000000001
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EFloatingGamepadTextInputMode
	 */
	enum class EFloatingGamepadTextInputMode : int32_t
	{
		k_EFloatingGamepadTextInputModeModeSingleLine    = 0x0000000000000000,
		k_EFloatingGamepadTextInputModeModeMultipleLines = 0x0000000000000001,
		k_EFloatingGamepadTextInputModeModeEmail         = 0x0000000000000002,
		k_EFloatingGamepadTextInputModeModeNumeric       = 0x0000000000000003
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ETextFilteringContext
	 */
	enum class ETextFilteringContext : int32_t
	{
		k_ETextFilteringContextUnknown     = 0x0000000000000000,
		k_ETextFilteringContextGameContent = 0x0000000000000001,
		k_ETextFilteringContextChat        = 0x0000000000000002,
		k_ETextFilteringContextName        = 0x0000000000000003
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ECheckFileSignature
	 */
	enum class ECheckFileSignature : int32_t
	{
		k_ECheckFileSignatureInvalidSignature             = 0x0000000000000000,
		k_ECheckFileSignatureValidSignature               = 0x0000000000000001,
		k_ECheckFileSignatureFileNotFound                 = 0x0000000000000002,
		k_ECheckFileSignatureNoSignaturesFoundForThisApp  = 0x0000000000000003,
		k_ECheckFileSignatureNoSignaturesFoundForThisFile = 0x0000000000000004
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EMatchMakingServerResponse
	 */
	enum class EMatchMakingServerResponse : int32_t
	{
		eServerResponded               = 0x0000000000000000,
		eServerFailedToRespond         = 0x0000000000000001,
		eNoServersListedOnMasterServer = 0x0000000000000002
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EServerMode
	 */
	enum class EServerMode : int32_t
	{
		eServerModeInvalid                 = 0x0000000000000000,
		eServerModeNoAuthentication        = 0x0000000000000001,
		eServerModeAuthentication          = 0x0000000000000002,
		eServerModeAuthenticationAndSecure = 0x0000000000000003
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EResult
	 */
	enum class EResult : int32_t
	{
		k_EResultNone                                    = 0x0000000000000000,
		k_EResultOK                                      = 0x0000000000000001,
		k_EResultFail                                    = 0x0000000000000002,
		k_EResultNoConnection                            = 0x0000000000000003,
		k_EResultInvalidPassword                         = 0x0000000000000005,
		k_EResultLoggedInElsewhere                       = 0x0000000000000006,
		k_EResultInvalidProtocolVer                      = 0x0000000000000007,
		k_EResultInvalidParam                            = 0x0000000000000008,
		k_EResultFileNotFound                            = 0x0000000000000009,
		k_EResultBusy                                    = 0x000000000000000A,
		k_EResultInvalidState                            = 0x000000000000000B,
		k_EResultInvalidName                             = 0x000000000000000C,
		k_EResultInvalidEmail                            = 0x000000000000000D,
		k_EResultDuplicateName                           = 0x000000000000000E,
		k_EResultAccessDenied                            = 0x000000000000000F,
		k_EResultTimeout                                 = 0x0000000000000010,
		k_EResultBanned                                  = 0x0000000000000011,
		k_EResultAccountNotFound                         = 0x0000000000000012,
		k_EResultInvalidSteamID                          = 0x0000000000000013,
		k_EResultServiceUnavailable                      = 0x0000000000000014,
		k_EResultNotLoggedOn                             = 0x0000000000000015,
		k_EResultPending                                 = 0x0000000000000016,
		k_EResultEncryptionFailure                       = 0x0000000000000017,
		k_EResultInsufficientPrivilege                   = 0x0000000000000018,
		k_EResultLimitExceeded                           = 0x0000000000000019,
		k_EResultRevoked                                 = 0x000000000000001A,
		k_EResultExpired                                 = 0x000000000000001B,
		k_EResultAlreadyRedeemed                         = 0x000000000000001C,
		k_EResultDuplicateRequest                        = 0x000000000000001D,
		k_EResultAlreadyOwned                            = 0x000000000000001E,
		k_EResultIPNotFound                              = 0x000000000000001F,
		k_EResultPersistFailed                           = 0x0000000000000020,
		k_EResultLockingFailed                           = 0x0000000000000021,
		k_EResultLogonSessionReplaced                    = 0x0000000000000022,
		k_EResultConnectFailed                           = 0x0000000000000023,
		k_EResultHandshakeFailed                         = 0x0000000000000024,
		k_EResultIOFailure                               = 0x0000000000000025,
		k_EResultRemoteDisconnect                        = 0x0000000000000026,
		k_EResultShoppingCartNotFound                    = 0x0000000000000027,
		k_EResultBlocked                                 = 0x0000000000000028,
		k_EResultIgnored                                 = 0x0000000000000029,
		k_EResultNoMatch                                 = 0x000000000000002A,
		k_EResultAccountDisabled                         = 0x000000000000002B,
		k_EResultServiceReadOnly                         = 0x000000000000002C,
		k_EResultAccountNotFeatured                      = 0x000000000000002D,
		k_EResultAdministratorOK                         = 0x000000000000002E,
		k_EResultContentVersion                          = 0x000000000000002F,
		k_EResultTryAnotherCM                            = 0x0000000000000030,
		k_EResultPasswordRequiredToKickSession           = 0x0000000000000031,
		k_EResultAlreadyLoggedInElsewhere                = 0x0000000000000032,
		k_EResultSuspended                               = 0x0000000000000033,
		k_EResultCancelled                               = 0x0000000000000034,
		k_EResultDataCorruption                          = 0x0000000000000035,
		k_EResultDiskFull                                = 0x0000000000000036,
		k_EResultRemoteCallFailed                        = 0x0000000000000037,
		k_EResultPasswordUnset                           = 0x0000000000000038,
		k_EResultExternalAccountUnlinked                 = 0x0000000000000039,
		k_EResultPSNTicketInvalid                        = 0x000000000000003A,
		k_EResultExternalAccountAlreadyLinked            = 0x000000000000003B,
		k_EResultRemoteFileConflict                      = 0x000000000000003C,
		k_EResultIllegalPassword                         = 0x000000000000003D,
		k_EResultSameAsPreviousValue                     = 0x000000000000003E,
		k_EResultAccountLogonDenied                      = 0x000000000000003F,
		k_EResultCannotUseOldPassword                    = 0x0000000000000040,
		k_EResultInvalidLoginAuthCode                    = 0x0000000000000041,
		k_EResultAccountLogonDeniedNoMail                = 0x0000000000000042,
		k_EResultHardwareNotCapableOfIPT                 = 0x0000000000000043,
		k_EResultIPTInitError                            = 0x0000000000000044,
		k_EResultParentalControlRestricted               = 0x0000000000000045,
		k_EResultFacebookQueryError                      = 0x0000000000000046,
		k_EResultExpiredLoginAuthCode                    = 0x0000000000000047,
		k_EResultIPLoginRestrictionFailed                = 0x0000000000000048,
		k_EResultAccountLockedDown                       = 0x0000000000000049,
		k_EResultAccountLogonDeniedVerifiedEmailRequired = 0x000000000000004A,
		k_EResultNoMatchingURL                           = 0x000000000000004B,
		k_EResultBadResponse                             = 0x000000000000004C,
		k_EResultRequirePasswordReEntry                  = 0x000000000000004D,
		k_EResultValueOutOfRange                         = 0x000000000000004E,
		k_EResultUnexpectedError                         = 0x000000000000004F,
		k_EResultDisabled                                = 0x0000000000000050,
		k_EResultInvalidCEGSubmission                    = 0x0000000000000051,
		k_EResultRestrictedDevice                        = 0x0000000000000052,
		k_EResultRegionLocked                            = 0x0000000000000053,
		k_EResultRateLimitExceeded                       = 0x0000000000000054,
		k_EResultAccountLoginDeniedNeedTwoFactor         = 0x0000000000000055,
		k_EResultItemDeleted                             = 0x0000000000000056,
		k_EResultAccountLoginDeniedThrottle              = 0x0000000000000057,
		k_EResultTwoFactorCodeMismatch                   = 0x0000000000000058,
		k_EResultTwoFactorActivationCodeMismatch         = 0x0000000000000059,
		k_EResultAccountAssociatedToMultiplePartners     = 0x000000000000005A,
		k_EResultNotModified                             = 0x000000000000005B,
		k_EResultNoMobileDevice                          = 0x000000000000005C,
		k_EResultTimeNotSynced                           = 0x000000000000005D,
		k_EResultSmsCodeFailed                           = 0x000000000000005E,
		k_EResultAccountLimitExceeded                    = 0x000000000000005F,
		k_EResultAccountActivityLimitExceeded            = 0x0000000000000060,
		k_EResultPhoneActivityLimitExceeded              = 0x0000000000000061,
		k_EResultRefundToWallet                          = 0x0000000000000062,
		k_EResultEmailSendFailure                        = 0x0000000000000063,
		k_EResultNotSettled                              = 0x0000000000000064,
		k_EResultNeedCaptcha                             = 0x0000000000000065,
		k_EResultGSLTDenied                              = 0x0000000000000066,
		k_EResultGSOwnerDenied                           = 0x0000000000000067,
		k_EResultInvalidItemType                         = 0x0000000000000068,
		k_EResultIPBanned                                = 0x0000000000000069,
		k_EResultGSLTExpired                             = 0x000000000000006A,
		k_EResultInsufficientFunds                       = 0x000000000000006B,
		k_EResultTooManyPending                          = 0x000000000000006C,
		k_EResultNoSiteLicensesFound                     = 0x000000000000006D,
		k_EResultWGNetworkSendExceeded                   = 0x000000000000006E,
		k_EResultAccountNotFriends                       = 0x000000000000006F,
		k_EResultLimitedUserAccount                      = 0x0000000000000070,
		k_EResultCantRemoveItem                          = 0x0000000000000071,
		k_EResultAccountDeleted                          = 0x0000000000000072,
		k_EResultExistingUserCancelledLicense            = 0x0000000000000073,
		k_EResultCommunityCooldown                       = 0x0000000000000074,
		k_EResultNoLauncherSpecified                     = 0x0000000000000075,
		k_EResultMustAgreeToSSA                          = 0x0000000000000076,
		k_EResultLauncherMigrated                        = 0x0000000000000077,
		k_EResultSteamRealmMismatch                      = 0x0000000000000078,
		k_EResultInvalidSignature                        = 0x0000000000000079,
		k_EResultParseFailure                            = 0x000000000000007A,
		k_EResultNoVerifiedPhone                         = 0x000000000000007B
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EVoiceResult
	 */
	enum class EVoiceResult : int32_t
	{
		k_EVoiceResultOK                   = 0x0000000000000000,
		k_EVoiceResultNotInitialized       = 0x0000000000000001,
		k_EVoiceResultNotRecording         = 0x0000000000000002,
		k_EVoiceResultNoData               = 0x0000000000000003,
		k_EVoiceResultBufferTooSmall       = 0x0000000000000004,
		k_EVoiceResultDataCorrupted        = 0x0000000000000005,
		k_EVoiceResultRestricted           = 0x0000000000000006,
		k_EVoiceResultUnsupportedCodec     = 0x0000000000000007,
		k_EVoiceResultReceiverOutOfDate    = 0x0000000000000008,
		k_EVoiceResultReceiverDidNotAnswer = 0x0000000000000009
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EDenyReason
	 */
	enum class EDenyReason : int32_t
	{
		k_EDenyInvalid                 = 0x0000000000000000,
		k_EDenyInvalidVersion          = 0x0000000000000001,
		k_EDenyGeneric                 = 0x0000000000000002,
		k_EDenyNotLoggedOn             = 0x0000000000000003,
		k_EDenyNoLicense               = 0x0000000000000004,
		k_EDenyCheater                 = 0x0000000000000005,
		k_EDenyLoggedInElseWhere       = 0x0000000000000006,
		k_EDenyUnknownText             = 0x0000000000000007,
		k_EDenyIncompatibleAnticheat   = 0x0000000000000008,
		k_EDenyMemoryCorruption        = 0x0000000000000009,
		k_EDenyIncompatibleSoftware    = 0x000000000000000A,
		k_EDenySteamConnectionLost     = 0x000000000000000B,
		k_EDenySteamConnectionError    = 0x000000000000000C,
		k_EDenySteamResponseTimedOut   = 0x000000000000000D,
		k_EDenySteamValidationStalled  = 0x000000000000000E,
		k_EDenySteamOwnerLeftGuestUser = 0x000000000000000F
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EBeginAuthSessionResult
	 */
	enum class EBeginAuthSessionResult : int32_t
	{
		k_EBeginAuthSessionResultOK               = 0x0000000000000000,
		k_EBeginAuthSessionResultInvalidTicket    = 0x0000000000000001,
		k_EBeginAuthSessionResultDuplicateRequest = 0x0000000000000002,
		k_EBeginAuthSessionResultInvalidVersion   = 0x0000000000000003,
		k_EBeginAuthSessionResultGameMismatch     = 0x0000000000000004,
		k_EBeginAuthSessionResultExpiredTicket    = 0x0000000000000005
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EAuthSessionResponse
	 */
	enum class EAuthSessionResponse : int32_t
	{
		k_EAuthSessionResponseOK                           = 0x0000000000000000,
		k_EAuthSessionResponseUserNotConnectedToSteam      = 0x0000000000000001,
		k_EAuthSessionResponseNoLicenseOrExpired           = 0x0000000000000002,
		k_EAuthSessionResponseVACBanned                    = 0x0000000000000003,
		k_EAuthSessionResponseLoggedInElseWhere            = 0x0000000000000004,
		k_EAuthSessionResponseVACCheckTimedOut             = 0x0000000000000005,
		k_EAuthSessionResponseAuthTicketCanceled           = 0x0000000000000006,
		k_EAuthSessionResponseAuthTicketInvalidAlreadyUsed = 0x0000000000000007,
		k_EAuthSessionResponseAuthTicketInvalid            = 0x0000000000000008,
		k_EAuthSessionResponsePublisherIssuedBan           = 0x0000000000000009
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EUserHasLicenseForAppResult
	 */
	enum class EUserHasLicenseForAppResult : int32_t
	{
		k_EUserHasLicenseResultHasLicense         = 0x0000000000000000,
		k_EUserHasLicenseResultDoesNotHaveLicense = 0x0000000000000001,
		k_EUserHasLicenseResultNoAuth             = 0x0000000000000002
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EAccountType
	 */
	enum class EAccountType : int32_t
	{
		k_EAccountTypeInvalid        = 0x0000000000000000,
		k_EAccountTypeIndividual     = 0x0000000000000001,
		k_EAccountTypeMultiseat      = 0x0000000000000002,
		k_EAccountTypeGameServer     = 0x0000000000000003,
		k_EAccountTypeAnonGameServer = 0x0000000000000004,
		k_EAccountTypePending        = 0x0000000000000005,
		k_EAccountTypeContentServer  = 0x0000000000000006,
		k_EAccountTypeClan           = 0x0000000000000007,
		k_EAccountTypeChat           = 0x0000000000000008,
		k_EAccountTypeConsoleUser    = 0x0000000000000009,
		k_EAccountTypeAnonUser       = 0x000000000000000A,
		k_EAccountTypeMax            = 0x000000000000000B
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EChatEntryType
	 */
	enum class EChatEntryType : int32_t
	{
		k_EChatEntryTypeInvalid          = 0x0000000000000000,
		k_EChatEntryTypeChatMsg          = 0x0000000000000001,
		k_EChatEntryTypeTyping           = 0x0000000000000002,
		k_EChatEntryTypeInviteGame       = 0x0000000000000003,
		k_EChatEntryTypeEmote            = 0x0000000000000004,
		k_EChatEntryTypeLeftConversation = 0x0000000000000006,
		k_EChatEntryTypeEntered          = 0x0000000000000007,
		k_EChatEntryTypeWasKicked        = 0x0000000000000008,
		k_EChatEntryTypeWasBanned        = 0x0000000000000009,
		k_EChatEntryTypeDisconnected     = 0x000000000000000A,
		k_EChatEntryTypeHistoricalChat   = 0x000000000000000B,
		k_EChatEntryTypeLinkBlocked      = 0x000000000000000E
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EChatRoomEnterResponse
	 */
	enum class EChatRoomEnterResponse : int32_t
	{
		k_EChatRoomEnterResponseSuccess           = 0x0000000000000001,
		k_EChatRoomEnterResponseDoesntExist       = 0x0000000000000002,
		k_EChatRoomEnterResponseNotAllowed        = 0x0000000000000003,
		k_EChatRoomEnterResponseFull              = 0x0000000000000004,
		k_EChatRoomEnterResponseError             = 0x0000000000000005,
		k_EChatRoomEnterResponseBanned            = 0x0000000000000006,
		k_EChatRoomEnterResponseLimited           = 0x0000000000000007,
		k_EChatRoomEnterResponseClanDisabled      = 0x0000000000000008,
		k_EChatRoomEnterResponseCommunityBan      = 0x0000000000000009,
		k_EChatRoomEnterResponseMemberBlockedYou  = 0x000000000000000A,
		k_EChatRoomEnterResponseYouBlockedMember  = 0x000000000000000B,
		k_EChatRoomEnterResponseRatelimitExceeded = 0x000000000000000F
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EChatSteamIDInstanceFlags
	 */
	enum class EChatSteamIDInstanceFlags : int32_t
	{
		k_EChatAccountInstanceMask  = 0x0000000000000FFF,
		k_EChatInstanceFlagClan     = 0x0000000000080000,
		k_EChatInstanceFlagLobby    = 0x0000000000040000,
		k_EChatInstanceFlagMMSLobby = 0x0000000000020000
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ENotificationPosition
	 */
	enum class ENotificationPosition : int32_t
	{
		k_EPositionTopLeft     = 0x0000000000000000,
		k_EPositionTopRight    = 0x0000000000000001,
		k_EPositionBottomLeft  = 0x0000000000000002,
		k_EPositionBottomRight = 0x0000000000000003
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EBroadcastUploadResult
	 */
	enum class EBroadcastUploadResult : int32_t
	{
		k_EBroadcastUploadResultNone              = 0x0000000000000000,
		k_EBroadcastUploadResultOK                = 0x0000000000000001,
		k_EBroadcastUploadResultInitFailed        = 0x0000000000000002,
		k_EBroadcastUploadResultFrameFailed       = 0x0000000000000003,
		k_EBroadcastUploadResultTimeout           = 0x0000000000000004,
		k_EBroadcastUploadResultBandwidthExceeded = 0x0000000000000005,
		k_EBroadcastUploadResultLowFPS            = 0x0000000000000006,
		k_EBroadcastUploadResultMissingKeyFrames  = 0x0000000000000007,
		k_EBroadcastUploadResultNoConnection      = 0x0000000000000008,
		k_EBroadcastUploadResultRelayFailed       = 0x0000000000000009,
		k_EBroadcastUploadResultSettingsChanged   = 0x000000000000000A,
		k_EBroadcastUploadResultMissingAudio      = 0x000000000000000B,
		k_EBroadcastUploadResultTooFarBehind      = 0x000000000000000C,
		k_EBroadcastUploadResultTranscodeBehind   = 0x000000000000000D,
		k_EBroadcastUploadResultNotAllowedToPlay  = 0x000000000000000E,
		k_EBroadcastUploadResultBusy              = 0x000000000000000F,
		k_EBroadcastUploadResultBanned            = 0x0000000000000010,
		k_EBroadcastUploadResultAlreadyActive     = 0x0000000000000011,
		k_EBroadcastUploadResultForcedOff         = 0x0000000000000012,
		k_EBroadcastUploadResultAudioBehind       = 0x0000000000000013,
		k_EBroadcastUploadResultShutdown          = 0x0000000000000014,
		k_EBroadcastUploadResultDisconnect        = 0x0000000000000015,
		k_EBroadcastUploadResultVideoInitFailed   = 0x0000000000000016,
		k_EBroadcastUploadResultAudioInitFailed   = 0x0000000000000017
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EMarketNotAllowedReasonFlags
	 */
	enum class EMarketNotAllowedReasonFlags : int32_t
	{
		k_EMarketNotAllowedReason_None                             = 0x0000000000000000,
		k_EMarketNotAllowedReason_TemporaryFailure                 = 0x0000000000000001,
		k_EMarketNotAllowedReason_AccountDisabled                  = 0x0000000000000002,
		k_EMarketNotAllowedReason_AccountLockedDown                = 0x0000000000000004,
		k_EMarketNotAllowedReason_AccountLimited                   = 0x0000000000000008,
		k_EMarketNotAllowedReason_TradeBanned                      = 0x0000000000000010,
		k_EMarketNotAllowedReason_AccountNotTrusted                = 0x0000000000000020,
		k_EMarketNotAllowedReason_SteamGuardNotEnabled             = 0x0000000000000040,
		k_EMarketNotAllowedReason_SteamGuardOnlyRecentlyEnabled    = 0x0000000000000080,
		k_EMarketNotAllowedReason_RecentPasswordReset              = 0x0000000000000100,
		k_EMarketNotAllowedReason_NewPaymentMethod                 = 0x0000000000000200,
		k_EMarketNotAllowedReason_InvalidCookie                    = 0x0000000000000400,
		k_EMarketNotAllowedReason_UsingNewDevice                   = 0x0000000000000800,
		k_EMarketNotAllowedReason_RecentSelfRefund                 = 0x0000000000001000,
		k_EMarketNotAllowedReason_NewPaymentMethodCannotBeVerified = 0x0000000000002000,
		k_EMarketNotAllowedReason_NoRecentPurchases                = 0x0000000000004000,
		k_EMarketNotAllowedReason_AcceptedWalletGift               = 0x0000000000008000
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EDurationControlProgress
	 */
	enum class EDurationControlProgress : int32_t
	{
		k_EDurationControlProgress_Full   = 0x0000000000000000,
		k_EDurationControlProgress_Half   = 0x0000000000000001,
		k_EDurationControlProgress_None   = 0x0000000000000002,
		k_EDurationControl_ExitSoon_3h    = 0x0000000000000003,
		k_EDurationControl_ExitSoon_5h    = 0x0000000000000004,
		k_EDurationControl_ExitSoon_Night = 0x0000000000000005
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EDurationControlNotification
	 */
	enum class EDurationControlNotification : int32_t
	{
		k_EDurationControlNotification_None           = 0x0000000000000000,
		k_EDurationControlNotification_1Hour          = 0x0000000000000001,
		k_EDurationControlNotification_3Hours         = 0x0000000000000002,
		k_EDurationControlNotification_HalfProgress   = 0x0000000000000003,
		k_EDurationControlNotification_NoProgress     = 0x0000000000000004,
		k_EDurationControlNotification_ExitSoon_3h    = 0x0000000000000005,
		k_EDurationControlNotification_ExitSoon_5h    = 0x0000000000000006,
		k_EDurationControlNotification_ExitSoon_Night = 0x0000000000000007
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EDurationControlOnlineState
	 */
	enum class EDurationControlOnlineState : int32_t
	{
		k_EDurationControlOnlineState_Invalid       = 0x0000000000000000,
		k_EDurationControlOnlineState_Offline       = 0x0000000000000001,
		k_EDurationControlOnlineState_Online        = 0x0000000000000002,
		k_EDurationControlOnlineState_OnlineHighPri = 0x0000000000000003
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EGameSearchErrorCode_t
	 */
	enum class EGameSearchErrorCode_t : int32_t
	{
		k_EGameSearchErrorCode_OK                                = 0x0000000000000001,
		k_EGameSearchErrorCode_Failed_Search_Already_In_Progress = 0x0000000000000002,
		k_EGameSearchErrorCode_Failed_No_Search_In_Progress      = 0x0000000000000003,
		k_EGameSearchErrorCode_Failed_Not_Lobby_Leader           = 0x0000000000000004,
		k_EGameSearchErrorCode_Failed_No_Host_Available          = 0x0000000000000005,
		k_EGameSearchErrorCode_Failed_Search_Params_Invalid      = 0x0000000000000006,
		k_EGameSearchErrorCode_Failed_Offline                    = 0x0000000000000007,
		k_EGameSearchErrorCode_Failed_NotAuthorized              = 0x0000000000000008,
		k_EGameSearchErrorCode_Failed_Unknown_Error              = 0x0000000000000009
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EPlayerResult_t
	 */
	enum class EPlayerResult_t : int32_t
	{
		k_EPlayerResultFailedToConnect = 0x0000000000000001,
		k_EPlayerResultAbandoned       = 0x0000000000000002,
		k_EPlayerResultKicked          = 0x0000000000000003,
		k_EPlayerResultIncomplete      = 0x0000000000000004,
		k_EPlayerResultCompleted       = 0x0000000000000005
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ESteamIPv6ConnectivityProtocol
	 */
	enum class ESteamIPv6ConnectivityProtocol : int32_t
	{
		k_ESteamIPv6ConnectivityProtocol_Invalid = 0x0000000000000000,
		k_ESteamIPv6ConnectivityProtocol_HTTP    = 0x0000000000000001,
		k_ESteamIPv6ConnectivityProtocol_UDP     = 0x0000000000000002
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ESteamIPv6ConnectivityState
	 */
	enum class ESteamIPv6ConnectivityState : int32_t
	{
		k_ESteamIPv6ConnectivityState_Unknown = 0x0000000000000000,
		k_ESteamIPv6ConnectivityState_Good    = 0x0000000000000001,
		k_ESteamIPv6ConnectivityState_Bad     = 0x0000000000000002
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EHTTPMethod
	 */
	enum class EHTTPMethod : int32_t
	{
		k_EHTTPMethodInvalid = 0x0000000000000000,
		k_EHTTPMethodGET     = 0x0000000000000001,
		k_EHTTPMethodHEAD    = 0x0000000000000002,
		k_EHTTPMethodPOST    = 0x0000000000000003,
		k_EHTTPMethodPUT     = 0x0000000000000004,
		k_EHTTPMethodDELETE  = 0x0000000000000005,
		k_EHTTPMethodOPTIONS = 0x0000000000000006,
		k_EHTTPMethodPATCH   = 0x0000000000000007
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EHTTPStatusCode
	 */
	enum class EHTTPStatusCode : int32_t
	{
		k_EHTTPStatusCodeInvalid                         = 0x0000000000000000,
		k_EHTTPStatusCode100Continue                     = 0x0000000000000064,
		k_EHTTPStatusCode101SwitchingProtocols           = 0x0000000000000065,
		k_EHTTPStatusCode200OK                           = 0x00000000000000C8,
		k_EHTTPStatusCode201Created                      = 0x00000000000000C9,
		k_EHTTPStatusCode202Accepted                     = 0x00000000000000CA,
		k_EHTTPStatusCode203NonAuthoritative             = 0x00000000000000CB,
		k_EHTTPStatusCode204NoContent                    = 0x00000000000000CC,
		k_EHTTPStatusCode205ResetContent                 = 0x00000000000000CD,
		k_EHTTPStatusCode206PartialContent               = 0x00000000000000CE,
		k_EHTTPStatusCode300MultipleChoices              = 0x000000000000012C,
		k_EHTTPStatusCode301MovedPermanently             = 0x000000000000012D,
		k_EHTTPStatusCode302Found                        = 0x000000000000012E,
		k_EHTTPStatusCode303SeeOther                     = 0x000000000000012F,
		k_EHTTPStatusCode304NotModified                  = 0x0000000000000130,
		k_EHTTPStatusCode305UseProxy                     = 0x0000000000000131,
		k_EHTTPStatusCode307TemporaryRedirect            = 0x0000000000000133,
		k_EHTTPStatusCode400BadRequest                   = 0x0000000000000190,
		k_EHTTPStatusCode401Unauthorized                 = 0x0000000000000191,
		k_EHTTPStatusCode402PaymentRequired              = 0x0000000000000192,
		k_EHTTPStatusCode403Forbidden                    = 0x0000000000000193,
		k_EHTTPStatusCode404NotFound                     = 0x0000000000000194,
		k_EHTTPStatusCode405MethodNotAllowed             = 0x0000000000000195,
		k_EHTTPStatusCode406NotAcceptable                = 0x0000000000000196,
		k_EHTTPStatusCode407ProxyAuthRequired            = 0x0000000000000197,
		k_EHTTPStatusCode408RequestTimeout               = 0x0000000000000198,
		k_EHTTPStatusCode409Conflict                     = 0x0000000000000199,
		k_EHTTPStatusCode410Gone                         = 0x000000000000019A,
		k_EHTTPStatusCode411LengthRequired               = 0x000000000000019B,
		k_EHTTPStatusCode412PreconditionFailed           = 0x000000000000019C,
		k_EHTTPStatusCode413RequestEntityTooLarge        = 0x000000000000019D,
		k_EHTTPStatusCode414RequestURITooLong            = 0x000000000000019E,
		k_EHTTPStatusCode415UnsupportedMediaType         = 0x000000000000019F,
		k_EHTTPStatusCode416RequestedRangeNotSatisfiable = 0x00000000000001A0,
		k_EHTTPStatusCode417ExpectationFailed            = 0x00000000000001A1,
		k_EHTTPStatusCode4xxUnknown                      = 0x00000000000001A2,
		k_EHTTPStatusCode429TooManyRequests              = 0x00000000000001AD,
		k_EHTTPStatusCode444ConnectionClosed             = 0x00000000000001BC,
		k_EHTTPStatusCode500InternalServerError          = 0x00000000000001F4,
		k_EHTTPStatusCode501NotImplemented               = 0x00000000000001F5,
		k_EHTTPStatusCode502BadGateway                   = 0x00000000000001F6,
		k_EHTTPStatusCode503ServiceUnavailable           = 0x00000000000001F7,
		k_EHTTPStatusCode504GatewayTimeout               = 0x00000000000001F8,
		k_EHTTPStatusCode505HTTPVersionNotSupported      = 0x00000000000001F9,
		k_EHTTPStatusCode5xxUnknown                      = 0x0000000000000257
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ESteamNetworkingAvailability
	 */
	enum class ESteamNetworkingAvailability : int32_t
	{
		k_ESteamNetworkingAvailability_CannotTry   = -102,
		k_ESteamNetworkingAvailability_Failed      = -101,
		k_ESteamNetworkingAvailability_Previously  = -100,
		k_ESteamNetworkingAvailability_Retrying    = -10,
		k_ESteamNetworkingAvailability_NeverTried  = 0x0000000000000001,
		k_ESteamNetworkingAvailability_Waiting     = 0x0000000000000002,
		k_ESteamNetworkingAvailability_Attempting  = 0x0000000000000003,
		k_ESteamNetworkingAvailability_Current     = 0x0000000000000064,
		k_ESteamNetworkingAvailability_Unknown     = 0x0000000000000000,
		k_ESteamNetworkingAvailability__Force32bit = 0x000000007FFFFFFF
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ESteamNetworkingIdentityType
	 */
	enum class ESteamNetworkingIdentityType : int32_t
	{
		k_ESteamNetworkingIdentityType_Invalid       = 0x0000000000000000,
		k_ESteamNetworkingIdentityType_SteamID       = 0x0000000000000010,
		k_ESteamNetworkingIdentityType_IPAddress     = 0x0000000000000001,
		k_ESteamNetworkingIdentityType_GenericString = 0x0000000000000002,
		k_ESteamNetworkingIdentityType_GenericBytes  = 0x0000000000000003,
		k_ESteamNetworkingIdentityType_UnknownType   = 0x0000000000000004,
		k_ESteamNetworkingIdentityType__Force32bit   = 0x000000007FFFFFFF
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ESteamNetworkingFakeIPType
	 */
	enum class ESteamNetworkingFakeIPType : int32_t
	{
		k_ESteamNetworkingFakeIPType_Invalid     = 0x0000000000000000,
		k_ESteamNetworkingFakeIPType_NotFake     = 0x0000000000000001,
		k_ESteamNetworkingFakeIPType_GlobalIPv4  = 0x0000000000000002,
		k_ESteamNetworkingFakeIPType_LocalIPv4   = 0x0000000000000003,
		k_ESteamNetworkingFakeIPType__Force32Bit = 0x000000007FFFFFFF
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ESteamNetworkingConnectionState
	 */
	enum class ESteamNetworkingConnectionState : int32_t
	{
		k_ESteamNetworkingConnectionState_None                   = 0x0000000000000000,
		k_ESteamNetworkingConnectionState_Connecting             = 0x0000000000000001,
		k_ESteamNetworkingConnectionState_FindingRoute           = 0x0000000000000002,
		k_ESteamNetworkingConnectionState_Connected              = 0x0000000000000003,
		k_ESteamNetworkingConnectionState_ClosedByPeer           = 0x0000000000000004,
		k_ESteamNetworkingConnectionState_ProblemDetectedLocally = 0x0000000000000005,
		k_ESteamNetworkingConnectionState_FinWait                = -1,
		k_ESteamNetworkingConnectionState_Linger                 = -2,
		k_ESteamNetworkingConnectionState_Dead                   = -3,
		k_ESteamNetworkingConnectionState__Force32Bit            = 0x000000007FFFFFFF
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ESteamNetConnectionEnd
	 */
	enum class ESteamNetConnectionEnd : int32_t
	{
		k_ESteamNetConnectionEnd_Invalid                          = 0x0000000000000000,
		k_ESteamNetConnectionEnd_App_Min                          = 0x00000000000003E8,
		k_ESteamNetConnectionEnd_App_Generic                      = 0x00000000000003E8,
		k_ESteamNetConnectionEnd_App_Max                          = 0x00000000000007CF,
		k_ESteamNetConnectionEnd_AppException_Min                 = 0x00000000000007D0,
		k_ESteamNetConnectionEnd_AppException_Generic             = 0x00000000000007D0,
		k_ESteamNetConnectionEnd_AppException_Max                 = 0x0000000000000BB7,
		k_ESteamNetConnectionEnd_Local_Min                        = 0x0000000000000BB8,
		k_ESteamNetConnectionEnd_Local_OfflineMode                = 0x0000000000000BB9,
		k_ESteamNetConnectionEnd_Local_ManyRelayConnectivity      = 0x0000000000000BBA,
		k_ESteamNetConnectionEnd_Local_HostedServerPrimaryRelay   = 0x0000000000000BBB,
		k_ESteamNetConnectionEnd_Local_NetworkConfig              = 0x0000000000000BBC,
		k_ESteamNetConnectionEnd_Local_Rights                     = 0x0000000000000BBD,
		k_ESteamNetConnectionEnd_Local_P2P_ICE_NoPublicAddresses  = 0x0000000000000BBE,
		k_ESteamNetConnectionEnd_Local_Max                        = 0x0000000000000F9F,
		k_ESteamNetConnectionEnd_Remote_Min                       = 0x0000000000000FA0,
		k_ESteamNetConnectionEnd_Remote_Timeout                   = 0x0000000000000FA1,
		k_ESteamNetConnectionEnd_Remote_BadCrypt                  = 0x0000000000000FA2,
		k_ESteamNetConnectionEnd_Remote_BadCert                   = 0x0000000000000FA3,
		k_ESteamNetConnectionEnd_Remote_BadProtocolVersion        = 0x0000000000000FA6,
		k_ESteamNetConnectionEnd_Remote_P2P_ICE_NoPublicAddresses = 0x0000000000000FA7,
		k_ESteamNetConnectionEnd_Remote_Max                       = 0x0000000000001387,
		k_ESteamNetConnectionEnd_Misc_Min                         = 0x0000000000001388,
		k_ESteamNetConnectionEnd_Misc_Generic                     = 0x0000000000001389,
		k_ESteamNetConnectionEnd_Misc_InternalError               = 0x000000000000138A,
		k_ESteamNetConnectionEnd_Misc_Timeout                     = 0x000000000000138B,
		k_ESteamNetConnectionEnd_Misc_SteamConnectivity           = 0x000000000000138D,
		k_ESteamNetConnectionEnd_Misc_NoRelaySessionsToClient     = 0x000000000000138E,
		k_ESteamNetConnectionEnd_Misc_P2P_Rendezvous              = 0x0000000000001390,
		k_ESteamNetConnectionEnd_Misc_P2P_NAT_Firewall            = 0x0000000000001391,
		k_ESteamNetConnectionEnd_Misc_PeerSentNoConnection        = 0x0000000000001392,
		k_ESteamNetConnectionEnd_Misc_Max                         = 0x000000000000176F,
		k_ESteamNetConnectionEnd__Force32Bit                      = 0x000000007FFFFFFF
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ESteamNetworkingConfigScope
	 */
	enum class ESteamNetworkingConfigScope : int32_t
	{
		k_ESteamNetworkingConfig_Global           = 0x0000000000000001,
		k_ESteamNetworkingConfig_SocketsInterface = 0x0000000000000002,
		k_ESteamNetworkingConfig_ListenSocket     = 0x0000000000000003,
		k_ESteamNetworkingConfig_Connection       = 0x0000000000000004,
		k_ESteamNetworkingConfigScope__Force32Bit = 0x000000007FFFFFFF
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ESteamNetworkingConfigDataType
	 */
	enum class ESteamNetworkingConfigDataType : int32_t
	{
		k_ESteamNetworkingConfig_Int32               = 0x0000000000000001,
		k_ESteamNetworkingConfig_Int64               = 0x0000000000000002,
		k_ESteamNetworkingConfig_Float               = 0x0000000000000003,
		k_ESteamNetworkingConfig_String              = 0x0000000000000004,
		k_ESteamNetworkingConfig_Ptr                 = 0x0000000000000005,
		k_ESteamNetworkingConfigDataType__Force32Bit = 0x000000007FFFFFFF
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ESteamNetworkingConfigValue
	 */
	enum class ESteamNetworkingConfigValue : int32_t
	{
		k_ESteamNetworkingConfig_Invalid                                        = 0x0000000000000000,
		k_ESteamNetworkingConfig_TimeoutInitial                                 = 0x0000000000000018,
		k_ESteamNetworkingConfig_TimeoutConnected                               = 0x0000000000000019,
		k_ESteamNetworkingConfig_SendBufferSize                                 = 0x0000000000000009,
		k_ESteamNetworkingConfig_ConnectionUserData                             = 0x0000000000000028,
		k_ESteamNetworkingConfig_SendRateMin                                    = 0x000000000000000A,
		k_ESteamNetworkingConfig_SendRateMax                                    = 0x000000000000000B,
		k_ESteamNetworkingConfig_NagleTime                                      = 0x000000000000000C,
		k_ESteamNetworkingConfig_IP_AllowWithoutAuth                            = 0x0000000000000017,
		k_ESteamNetworkingConfig_MTU_PacketSize                                 = 0x0000000000000020,
		k_ESteamNetworkingConfig_MTU_DataSize                                   = 0x0000000000000021,
		k_ESteamNetworkingConfig_Unencrypted                                    = 0x0000000000000022,
		k_ESteamNetworkingConfig_SymmetricConnect                               = 0x0000000000000025,
		k_ESteamNetworkingConfig_LocalVirtualPort                               = 0x0000000000000026,
		k_ESteamNetworkingConfig_DualWifi_Enable                                = 0x0000000000000027,
		k_ESteamNetworkingConfig_EnableDiagnosticsUI                            = 0x000000000000002E,
		k_ESteamNetworkingConfig_FakePacketLoss_Send                            = 0x0000000000000002,
		k_ESteamNetworkingConfig_FakePacketLoss_Recv                            = 0x0000000000000003,
		k_ESteamNetworkingConfig_FakePacketLag_Send                             = 0x0000000000000004,
		k_ESteamNetworkingConfig_FakePacketLag_Recv                             = 0x0000000000000005,
		k_ESteamNetworkingConfig_FakePacketReorder_Send                         = 0x0000000000000006,
		k_ESteamNetworkingConfig_FakePacketReorder_Recv                         = 0x0000000000000007,
		k_ESteamNetworkingConfig_FakePacketReorder_Time                         = 0x0000000000000008,
		k_ESteamNetworkingConfig_FakePacketDup_Send                             = 0x000000000000001A,
		k_ESteamNetworkingConfig_FakePacketDup_Recv                             = 0x000000000000001B,
		k_ESteamNetworkingConfig_FakePacketDup_TimeMax                          = 0x000000000000001C,
		k_ESteamNetworkingConfig_PacketTraceMaxBytes                            = 0x0000000000000029,
		k_ESteamNetworkingConfig_FakeRateLimit_Send_Rate                        = 0x000000000000002A,
		k_ESteamNetworkingConfig_FakeRateLimit_Send_Burst                       = 0x000000000000002B,
		k_ESteamNetworkingConfig_FakeRateLimit_Recv_Rate                        = 0x000000000000002C,
		k_ESteamNetworkingConfig_FakeRateLimit_Recv_Burst                       = 0x000000000000002D,
		k_ESteamNetworkingConfig_Callback_ConnectionStatusChanged               = 0x00000000000000C9,
		k_ESteamNetworkingConfig_Callback_AuthStatusChanged                     = 0x00000000000000CA,
		k_ESteamNetworkingConfig_Callback_RelayNetworkStatusChanged             = 0x00000000000000CB,
		k_ESteamNetworkingConfig_Callback_MessagesSessionRequest                = 0x00000000000000CC,
		k_ESteamNetworkingConfig_Callback_MessagesSessionFailed                 = 0x00000000000000CD,
		k_ESteamNetworkingConfig_Callback_CreateConnectionSignaling             = 0x00000000000000CE,
		k_ESteamNetworkingConfig_Callback_FakeIPResult                          = 0x00000000000000CF,
		k_ESteamNetworkingConfig_P2P_STUN_ServerList                            = 0x0000000000000067,
		k_ESteamNetworkingConfig_P2P_Transport_ICE_Enable                       = 0x0000000000000068,
		k_ESteamNetworkingConfig_P2P_Transport_ICE_Penalty                      = 0x0000000000000069,
		k_ESteamNetworkingConfig_P2P_Transport_SDR_Penalty                      = 0x000000000000006A,
		k_ESteamNetworkingConfig_SDRClient_ConsecutitivePingTimeoutsFailInitial = 0x0000000000000013,
		k_ESteamNetworkingConfig_SDRClient_ConsecutitivePingTimeoutsFail        = 0x0000000000000014,
		k_ESteamNetworkingConfig_SDRClient_MinPingsBeforePingAccurate           = 0x0000000000000015,
		k_ESteamNetworkingConfig_SDRClient_SingleSocket                         = 0x0000000000000016,
		k_ESteamNetworkingConfig_SDRClient_ForceRelayCluster                    = 0x000000000000001D,
		k_ESteamNetworkingConfig_SDRClient_DebugTicketAddress                   = 0x000000000000001E,
		k_ESteamNetworkingConfig_SDRClient_ForceProxyAddr                       = 0x000000000000001F,
		k_ESteamNetworkingConfig_SDRClient_FakeClusterPing                      = 0x0000000000000024,
		k_ESteamNetworkingConfig_LogLevel_AckRTT                                = 0x000000000000000D,
		k_ESteamNetworkingConfig_LogLevel_PacketDecode                          = 0x000000000000000E,
		k_ESteamNetworkingConfig_LogLevel_Message                               = 0x000000000000000F,
		k_ESteamNetworkingConfig_LogLevel_PacketGaps                            = 0x0000000000000010,
		k_ESteamNetworkingConfig_LogLevel_P2PRendezvous                         = 0x0000000000000011,
		k_ESteamNetworkingConfig_LogLevel_SDRRelayPings                         = 0x0000000000000012,
		k_ESteamNetworkingConfig_DELETED_EnumerateDevVars                       = 0x0000000000000023,
		k_ESteamNetworkingConfigValue__Force32Bit                               = 0x000000007FFFFFFF
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ESteamNetworkingGetConfigValueResult
	 */
	enum class ESteamNetworkingGetConfigValueResult : int32_t
	{
		k_ESteamNetworkingGetConfigValue_BadValue          = -1,
		k_ESteamNetworkingGetConfigValue_BadScopeObj       = -2,
		k_ESteamNetworkingGetConfigValue_BufferTooSmall    = -3,
		k_ESteamNetworkingGetConfigValue_OK                = 0x0000000000000001,
		k_ESteamNetworkingGetConfigValue_OKInherited       = 0x0000000000000002,
		k_ESteamNetworkingGetConfigValueResult__Force32Bit = 0x000000007FFFFFFF
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ESteamNetworkingSocketsDebugOutputType
	 */
	enum class ESteamNetworkingSocketsDebugOutputType : int32_t
	{
		k_ESteamNetworkingSocketsDebugOutputType_None        = 0x0000000000000000,
		k_ESteamNetworkingSocketsDebugOutputType_Bug         = 0x0000000000000001,
		k_ESteamNetworkingSocketsDebugOutputType_Error       = 0x0000000000000002,
		k_ESteamNetworkingSocketsDebugOutputType_Important   = 0x0000000000000003,
		k_ESteamNetworkingSocketsDebugOutputType_Warning     = 0x0000000000000004,
		k_ESteamNetworkingSocketsDebugOutputType_Msg         = 0x0000000000000005,
		k_ESteamNetworkingSocketsDebugOutputType_Verbose     = 0x0000000000000006,
		k_ESteamNetworkingSocketsDebugOutputType_Debug       = 0x0000000000000007,
		k_ESteamNetworkingSocketsDebugOutputType_Everything  = 0x0000000000000008,
		k_ESteamNetworkingSocketsDebugOutputType__Force32Bit = 0x000000007FFFFFFF
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.ESteamIPType
	 */
	enum class ESteamIPType : int32_t
	{
		k_ESteamIPTypeIPv4 = 0x0000000000000000,
		k_ESteamIPTypeIPv6 = 0x0000000000000001
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.EUniverse
	 */
	enum class EUniverse : int32_t
	{
		k_EUniverseInvalid  = 0x0000000000000000,
		k_EUniversePublic   = 0x0000000000000001,
		k_EUniverseBeta     = 0x0000000000000002,
		k_EUniverseInternal = 0x0000000000000003,
		k_EUniverseDev      = 0x0000000000000004,
		k_EUniverseMax      = 0x0000000000000005
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.CGameID+EGameIDType
	 */
	enum class CGameID_EGameIDType : int32_t
	{
		k_EGameIDTypeApp      = 0x0000000000000000,
		k_EGameIDTypeGameMod  = 0x0000000000000001,
		k_EGameIDTypeShortcut = 0x0000000000000002,
		k_EGameIDTypeP2P      = 0x0000000000000003
	};

	/**
	 * Enum com.rlabrecque.steamworks.net.Steamworks.SteamDatagramRelayAuthTicket.ExtraField+EType
	 */
	enum class SteamDatagramRelayAuthTicket_ExtraField_EType : int32_t
	{
		k_EType_String  = 0x0000000000000000,
		k_EType_Int     = 0x0000000000000001,
		k_EType_Fixed64 = 0x0000000000000002
	};

	/**
	 * Enum Unity.TextMeshPro.TMPro.TextContainerAnchors
	 */
	enum class TextContainerAnchors : int32_t
	{
		TopLeft     = 0x0000000000000000,
		Top         = 0x0000000000000001,
		TopRight    = 0x0000000000000002,
		Left        = 0x0000000000000003,
		Middle      = 0x0000000000000004,
		Right       = 0x0000000000000005,
		BottomLeft  = 0x0000000000000006,
		Bottom      = 0x0000000000000007,
		BottomRight = 0x0000000000000008,
		Custom      = 0x0000000000000009
	};

	/**
	 * Enum Unity.TextMeshPro.TMPro.Compute_DistanceTransform_EventTypes
	 */
	enum class Compute_DistanceTransform_EventTypes : int32_t
	{
		Processing = 0x0000000000000000,
		Completed  = 0x0000000000000001
	};

	/**
	 * Enum Unity.TextMeshPro.TMPro.TMP_VertexDataUpdateFlags
	 */
	enum class TMP_VertexDataUpdateFlags : int32_t
	{
		None     = 0x0000000000000000,
		Vertices = 0x0000000000000001,
		Uv0      = 0x0000000000000002,
		Uv2      = 0x0000000000000004,
		Uv4      = 0x0000000000000008,
		Colors32 = 0x0000000000000010,
		All      = 0x00000000000000FF
	};

	/**
	 * Enum Unity.TextMeshPro.TMPro.ColorMode
	 */
	enum class ColorMode : int32_t
	{
		Single              = 0x0000000000000000,
		HorizontalGradient  = 0x0000000000000001,
		VerticalGradient    = 0x0000000000000002,
		FourCornersGradient = 0x0000000000000003
	};

	/**
	 * Enum Unity.TextMeshPro.TMPro.TMP_Compatibility+AnchorPositions
	 */
	enum class TMP_Compatibility_AnchorPositions : int32_t
	{
		TopLeft     = 0x0000000000000000,
		Top         = 0x0000000000000001,
		TopRight    = 0x0000000000000002,
		Left        = 0x0000000000000003,
		Center      = 0x0000000000000004,
		Right       = 0x0000000000000005,
		BottomLeft  = 0x0000000000000006,
		Bottom      = 0x0000000000000007,
		BottomRight = 0x0000000000000008,
		BaseLine    = 0x0000000000000009,
		None        = 0x000000000000000A
	};

	/**
	 * Enum Unity.TextMeshPro.TMPro.ColorTween+ColorTweenMode
	 */
	enum class ColorTween_ColorTweenMode : int32_t
	{
		All   = 0x0000000000000000,
		RGB   = 0x0000000000000001,
		Alpha = 0x0000000000000002
	};

	/**
	 * Enum Unity.TextMeshPro.TMPro.AtlasPopulationMode
	 */
	enum class AtlasPopulationMode : int32_t
	{
		Static  = 0x0000000000000000,
		Dynamic = 0x0000000000000001
	};

	/**
	 * Enum Unity.TextMeshPro.TMPro.FontFeatureLookupFlags
	 */
	enum class FontFeatureLookupFlags : int32_t
	{
		None                     = 0x0000000000000000,
		IgnoreLigatures          = 0x0000000000000004,
		IgnoreSpacingAdjustments = 0x0000000000000100
	};

	/**
	 * Enum Unity.TextMeshPro.TMPro.TMP_InputField+ContentType
	 */
	enum class TMP_InputField_ContentType : int32_t
	{
		Standard      = 0x0000000000000000,
		Autocorrected = 0x0000000000000001,
		IntegerNumber = 0x0000000000000002,
		DecimalNumber = 0x0000000000000003,
		Alphanumeric  = 0x0000000000000004,
		Name          = 0x0000000000000005,
		EmailAddress  = 0x0000000000000006,
		Password      = 0x0000000000000007,
		Pin           = 0x0000000000000008,
		Custom        = 0x0000000000000009
	};

	/**
	 * Enum Unity.TextMeshPro.TMPro.TMP_InputField+InputType
	 */
	enum class TMP_InputField_InputType : int32_t
	{
		Standard    = 0x0000000000000000,
		AutoCorrect = 0x0000000000000001,
		Password    = 0x0000000000000002
	};

	/**
	 * Enum Unity.TextMeshPro.TMPro.TMP_InputField+CharacterValidation
	 */
	enum class TMP_InputField_CharacterValidation : int32_t
	{
		None            = 0x0000000000000000,
		Digit           = 0x0000000000000001,
		Integer         = 0x0000000000000002,
		Decimal         = 0x0000000000000003,
		Alphanumeric    = 0x0000000000000004,
		Name            = 0x0000000000000005,
		Regex           = 0x0000000000000006,
		EmailAddress    = 0x0000000000000007,
		CustomValidator = 0x0000000000000008
	};

	/**
	 * Enum Unity.TextMeshPro.TMPro.TMP_InputField+LineType
	 */
	enum class TMP_InputField_LineType : int32_t
	{
		SingleLine       = 0x0000000000000000,
		MultiLineSubmit  = 0x0000000000000001,
		MultiLineNewline = 0x0000000000000002
	};

	/**
	 * Enum Unity.TextMeshPro.TMPro.TMP_InputField+EditState
	 */
	enum class TMP_InputField_EditState : int32_t
	{
		Continue = 0x0000000000000000,
		Finish   = 0x0000000000000001
	};

	/**
	 * Enum Unity.TextMeshPro.TMPro.VertexSortingOrder
	 */
	enum class VertexSortingOrder : int32_t
	{
		Normal  = 0x0000000000000000,
		Reverse = 0x0000000000000001
	};

	/**
	 * Enum Unity.TextMeshPro.TMPro.MarkupTag
	 */
	enum class MarkupTag : int32_t
	{
		BOLD                  = 0x0000000000000042,
		SLASH_BOLD            = 0x000000000000064D,
		ITALIC                = 0x0000000000000049,
		SLASH_ITALIC          = 0x0000000000000646,
		UNDERLINE             = 0x0000000000000055,
		SLASH_UNDERLINE       = 0x000000000000065A,
		STRIKETHROUGH         = 0x0000000000000053,
		SLASH_STRIKETHROUGH   = 0x000000000000065C,
		MARK                  = 0x0000000000292F75,
		SLASH_MARK            = 0x00000000036F95DA,
		SUBSCRIPT             = 0x00000000000167E4,
		SLASH_SUBSCRIPT       = 0x00000000001B02EB,
		SUPERSCRIPT           = 0x00000000000167F6,
		SLASH_SUPERSCRIPT     = 0x00000000001B02F9,
		COLOR                 = 0x0000000004E3381D,
		SLASH_COLOR           = 0x0000000071C96D92,
		ALPHA                 = 0x00000000047AF054,
		A                     = 0x0000000000000041,
		SLASH_A               = 0x000000000000064E,
		SIZE                  = 0x00000000002EB625,
		SLASH_SIZE            = 0x00000000037B920A,
		SPRITE                = -991527447,
		NO_BREAK              = 0x00000000002B96D1,
		SLASH_NO_BREAK        = 0x00000000036D097E,
		STYLE                 = 0x0000000005F9BD17,
		SLASH_STYLE           = 0x0000000072E6F418,
		FONT                  = 0x0000000000277753,
		SLASH_FONT            = 0x00000000037128FC,
		SLASH_MATERIAL        = -1100708252,
		LINK                  = 0x0000000000288780,
		SLASH_LINK            = 0x00000000037038AF,
		FONT_WEIGHT           = -1889896162,
		SLASH_FONT_WEIGHT     = -757976431,
		NO_PARSE              = -408011596,
		SLASH_NO_PARSE        = -294095813,
		POSITION              = 0x0000000000014DAC,
		SLASH_POSITION        = 0x00000000001B2023,
		VERTICAL_OFFSET       = 0x00000000745EF45B,
		SLASH_VERTICAL_OFFSET = -11107948,
		SPACE                 = 0x0000000005F72764,
		SLASH_SPACE           = 0x0000000072E9022B,
		PAGE                  = 0x00000000002ADB73,
		SLASH_PAGE            = 0x00000000037F71DC,
		ALIGN                 = 0x00000000047A86ED,
		SLASH_ALIGN           = 0x0000000072343FA2,
		WIDTH                 = 0x00000000064E48E6,
		SLASH_WIDTH           = 0x0000000072A5AA29,
		GRADIENT              = -1999759898,
		SLASH_GRADIENT        = -1854491959,
		CHARACTER_SPACE       = -1584382009,
		SLASH_CHARACTER_SPACE = -1394426712,
		MONOSPACE             = -1340221943,
		SLASH_MONOSPACE       = -1638865562,
		CLASS                 = 0x0000000004E4FBEE,
		INDENT                = -1514123076,
		SLASH_INDENT          = -1496889389,
		LINE_INDENT           = -844305121,
		SLASH_LINE_INDENT     = 0x0000000005989790,
		MARGIN                = -1355614050,
		SLASH_MARGIN          = -1649644303,
		MARGIN_LEFT           = -272933656,
		MARGIN_RIGHT          = -447416589,
		LINE_HEIGHT           = -799081892,
		SLASH_LINE_HEIGHT     = 0x000000000BF2AAD3,
		ACTION                = -1827519330,
		SLASH_ACTION          = -1187217679,
		SCALE                 = 0x0000000005FE5278,
		SLASH_SCALE           = 0x0000000072F142B7,
		ROTATE                = -1000007783,
		SLASH_ROTATE          = -764695562,
		LOWERCASE             = -1506899689,
		SLASH_LOWERCASE       = -1451284584,
		ALLCAPS               = 0x000000000D0298A0,
		SLASH_ALLCAPS         = -797437649,
		UPPERCASE             = -305409418,
		SLASH_UPPERCASE       = -582368199,
		SMALLCAPS             = -766062114,
		SLASH_SMALLCAPS       = 0x000000000BEA90D1,
		LIGA                  = 0x00000000002886E3,
		SLASH_LIGA            = 0x0000000003703A4C,
		FRAC                  = 0x000000000027A676,
		SLASH_FRAC            = 0x0000000003719259,
		NAME                  = 0x00000000002BE0E7,
		INDEX                 = 0x000000000505D3FE,
		TINT                  = 0x00000000002D2C87,
		ANIM                  = 0x000000000022D74B,
		MATERIAL              = 0x00000000313400CB,
		HREF                  = 0x000000000026AFB9,
		ANGLE                 = 0x00000000047DB7C1,
		RED                   = 0x00000000000165F3,
		GREEN                 = 0x00000000053084FB,
		BLUE                  = 0x0000000000257E7E,
		YELLOW                = -882444668,
		ORANGE                = -1108587920,
		BLACK                 = 0x0000000004D51A27,
		WHITE                 = 0x00000000064C8D87,
		PURPLE                = -1250222130,
		BR                    = 0x00000000000008D0,
		ZWSP                  = 0x0000000000322CAE,
		NBSP                  = 0x00000000002BC72F,
		SHY                   = 0x0000000000016A02,
		LEFT                  = 0x000000000028989B,
		RIGHT                 = 0x0000000005F4EC60,
		CENTER                = -1591113269,
		JUSTIFIED             = 0x0000000030B3D31F,
		FLUSH                 = 0x0000000005196C24,
		NONE                  = 0x00000000002B984A,
		PLUS                  = 0x000000000000002B,
		MINUS                 = 0x000000000000002D,
		PX                    = 0x0000000000000A08,
		PLUS_PX               = 0x000000000000C163,
		MINUS_PX              = 0x000000000000B965,
		EM                    = 0x00000000000008A8,
		PLUS_EM               = 0x000000000000BFC3,
		MINUS_EM              = 0x000000000000B6C5,
		PCT                   = 0x0000000000014C27,
		PLUS_PCT              = 0x000000000018F02C,
		MINUS_PCT             = 0x000000000017E96A,
		PERCENTAGE            = 0x0000000000000025,
		PLUS_PERCENTAGE       = 0x00000000000005AE,
		MINUS_PERCENTAGE      = 0x00000000000005E8,
		_TRUE_                = 0x00000000002CBD36,
		_FALSE_               = 0x00000000051772DD,
		INVALID               = 0x000000005E7F8411,
		NORMAL                = -1183493901,
		DEFAULT               = -620974005
	};

	/**
	 * Enum Unity.TextMeshPro.TMPro.TagValueType
	 */
	enum class TagValueType : int32_t
	{
		None           = 0x0000000000000000,
		NumericalValue = 0x0000000000000001,
		StringValue    = 0x0000000000000002,
		ColorValue     = 0x0000000000000004
	};

	/**
	 * Enum Unity.TextMeshPro.TMPro.TagUnitType
	 */
	enum class TagUnitType : int32_t
	{
		Pixels     = 0x0000000000000000,
		FontUnits  = 0x0000000000000001,
		Percentage = 0x0000000000000002
	};

	/**
	 * Enum Unity.TextMeshPro.TMPro.TextAlignmentOptions
	 */
	enum class TextAlignmentOptions : int32_t
	{
		TopLeft            = 0x0000000000000101,
		Top                = 0x0000000000000102,
		TopRight           = 0x0000000000000104,
		TopJustified       = 0x0000000000000108,
		TopFlush           = 0x0000000000000110,
		TopGeoAligned      = 0x0000000000000120,
		Left               = 0x0000000000000201,
		Center             = 0x0000000000000202,
		Right              = 0x0000000000000204,
		Justified          = 0x0000000000000208,
		Flush              = 0x0000000000000210,
		CenterGeoAligned   = 0x0000000000000220,
		BottomLeft         = 0x0000000000000401,
		Bottom             = 0x0000000000000402,
		BottomRight        = 0x0000000000000404,
		BottomJustified    = 0x0000000000000408,
		BottomFlush        = 0x0000000000000410,
		BottomGeoAligned   = 0x0000000000000420,
		BaselineLeft       = 0x0000000000000801,
		Baseline           = 0x0000000000000802,
		BaselineRight      = 0x0000000000000804,
		BaselineJustified  = 0x0000000000000808,
		BaselineFlush      = 0x0000000000000810,
		BaselineGeoAligned = 0x0000000000000820,
		MidlineLeft        = 0x0000000000001001,
		Midline            = 0x0000000000001002,
		MidlineRight       = 0x0000000000001004,
		MidlineJustified   = 0x0000000000001008,
		MidlineFlush       = 0x0000000000001010,
		MidlineGeoAligned  = 0x0000000000001020,
		CaplineLeft        = 0x0000000000002001,
		Capline            = 0x0000000000002002,
		CaplineRight       = 0x0000000000002004,
		CaplineJustified   = 0x0000000000002008,
		CaplineFlush       = 0x0000000000002010,
		CaplineGeoAligned  = 0x0000000000002020,
		Converted          = 0x000000000000FFFF
	};

	/**
	 * Enum Unity.TextMeshPro.TMPro.HorizontalAlignmentOptions
	 */
	enum class HorizontalAlignmentOptions : int32_t
	{
		Left      = 0x0000000000000001,
		Center    = 0x0000000000000002,
		Right     = 0x0000000000000004,
		Justified = 0x0000000000000008,
		Flush     = 0x0000000000000010,
		Geometry  = 0x0000000000000020
	};

	/**
	 * Enum Unity.TextMeshPro.TMPro.VerticalAlignmentOptions
	 */
	enum class VerticalAlignmentOptions : int32_t
	{
		Top      = 0x0000000000000100,
		Middle   = 0x0000000000000200,
		Bottom   = 0x0000000000000400,
		Baseline = 0x0000000000000800,
		Geometry = 0x0000000000001000,
		Capline  = 0x0000000000002000
	};

	/**
	 * Enum Unity.TextMeshPro.TMPro.TextRenderFlags
	 */
	enum class TextRenderFlags : int32_t
	{
		DontRender = 0x0000000000000000,
		Render     = 0x00000000000000FF
	};

	/**
	 * Enum Unity.TextMeshPro.TMPro.TMP_TextElementType
	 */
	enum class TMP_TextElementType : int32_t
	{
		Character = 0x0000000000000000,
		Sprite    = 0x0000000000000001
	};

	/**
	 * Enum Unity.TextMeshPro.TMPro.MaskingTypes
	 */
	enum class MaskingTypes : int32_t
	{
		MaskOff  = 0x0000000000000000,
		MaskHard = 0x0000000000000001,
		MaskSoft = 0x0000000000000002
	};

	/**
	 * Enum Unity.TextMeshPro.TMPro.TextOverflowModes
	 */
	enum class TextOverflowModes : int32_t
	{
		Overflow   = 0x0000000000000000,
		Ellipsis   = 0x0000000000000001,
		Masking    = 0x0000000000000002,
		Truncate   = 0x0000000000000003,
		ScrollRect = 0x0000000000000004,
		Page       = 0x0000000000000005,
		Linked     = 0x0000000000000006
	};

	/**
	 * Enum Unity.TextMeshPro.TMPro.MaskingOffsetMode
	 */
	enum class MaskingOffsetMode : int32_t
	{
		Percentage = 0x0000000000000000,
		Pixel      = 0x0000000000000001
	};

	/**
	 * Enum Unity.TextMeshPro.TMPro.TextureMappingOptions
	 */
	enum class TextureMappingOptions : int32_t
	{
		Character   = 0x0000000000000000,
		Line        = 0x0000000000000001,
		Paragraph   = 0x0000000000000002,
		MatchAspect = 0x0000000000000003
	};

	/**
	 * Enum Unity.TextMeshPro.TMPro.FontStyles
	 */
	enum class FontStyles : int32_t
	{
		Normal        = 0x0000000000000000,
		Bold          = 0x0000000000000001,
		Italic        = 0x0000000000000002,
		Underline     = 0x0000000000000004,
		LowerCase     = 0x0000000000000008,
		UpperCase     = 0x0000000000000010,
		SmallCaps     = 0x0000000000000020,
		Strikethrough = 0x0000000000000040,
		Superscript   = 0x0000000000000080,
		Subscript     = 0x0000000000000100,
		Highlight     = 0x0000000000000200
	};

	/**
	 * Enum Unity.TextMeshPro.TMPro.FontWeight
	 */
	enum class FontWeight : int32_t
	{
		Thin       = 0x0000000000000064,
		ExtraLight = 0x00000000000000C8,
		Light      = 0x000000000000012C,
		Regular    = 0x0000000000000190,
		Medium     = 0x00000000000001F4,
		SemiBold   = 0x0000000000000258,
		Bold       = 0x00000000000002BC,
		Heavy      = 0x0000000000000320,
		Black      = 0x0000000000000384
	};

	/**
	 * Enum Unity.TextMeshPro.TMPro.TMP_Text+TextInputSources
	 */
	enum class TMP_Text_TextInputSources : int32_t
	{
		TextInputBox = 0x0000000000000000,
		SetText      = 0x0000000000000001,
		SetTextArray = 0x0000000000000002,
		TextString   = 0x0000000000000003
	};

	/**
	 * Enum Unity.TextMeshPro.TMPro.TextElementType
	 */
	enum class TextElementType : uint8_t
	{
		Character = 0x0000000000000001,
		Sprite    = 0x0000000000000002
	};

	/**
	 * Enum Unity.TextMeshPro.TMPro.CaretPosition
	 */
	enum class CaretPosition : int32_t
	{
		None  = 0x0000000000000000,
		Left  = 0x0000000000000001,
		Right = 0x0000000000000002
	};

	/**
	 * Enum Unity.TextMeshPro.TMPro.SpriteAssetUtilities.SpriteAssetImportFormats
	 */
	enum class SpriteAssetImportFormats : int32_t
	{
		None                   = 0x0000000000000000,
		TexturePackerJsonArray = 0x0000000000000001
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.LightAnchor+UpDirection
	 */
	enum class LightAnchor_UpDirection : int32_t
	{
		World = 0x0000000000000000,
		Local = 0x0000000000000001
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.ProbeVolumeTextureMemoryBudget
	 */
	enum class ProbeVolumeTextureMemoryBudget : int32_t
	{
		MemoryBudgetLow    = 0x0000000000000200,
		MemoryBudgetMedium = 0x0000000000000400,
		MemoryBudgetHigh   = 0x0000000000000800
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.ProbeVolumeSHBands
	 */
	enum class ProbeVolumeSHBands : int32_t
	{
		SphericalHarmonicsL1 = 0x0000000000000001,
		SphericalHarmonicsL2 = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.DebugProbeShadingMode
	 */
	enum class DebugProbeShadingMode : int32_t
	{
		SH                            = 0x0000000000000000,
		Validity                      = 0x0000000000000001,
		ValidityOverDilationThreshold = 0x0000000000000002,
		Size                          = 0x0000000000000003
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.ProbeReferenceVolumeProfile+Version
	 */
	enum class ProbeReferenceVolumeProfile_Version : int32_t
	{
		Initial = 0x0000000000000000
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.ProbeVolumeAsset+AssetVersion
	 */
	enum class ProbeVolumeAsset_AssetVersion : int32_t
	{
		First                             = 0x0000000000000000,
		AddProbeVolumesAtlasEncodingModes = 0x0000000000000001,
		PV2                               = 0x0000000000000002,
		ChunkBasedIndex                   = 0x0000000000000003,
		Max                               = 0x0000000000000004,
		Current                           = 0x0000000000000003
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.ProbeVolumeState
	 */
	enum class ProbeVolumeState : int32_t
	{
		Default = 0x0000000000000000,
		Invalid = 0x00000000000003E7
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.RenderGraphModule.DepthAccess
	 */
	enum class DepthAccess : int32_t
	{
		Read      = 0x0000000000000001,
		Write     = 0x0000000000000002,
		ReadWrite = 0x0000000000000003
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphProfileId
	 */
	enum class RenderGraphProfileId : int32_t
	{
		CompileRenderGraph    = 0x0000000000000000,
		ExecuteRenderGraph    = 0x0000000000000001,
		RenderGraphClear      = 0x0000000000000002,
		RenderGraphClearDebug = 0x0000000000000003
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphResourceType
	 */
	enum class RenderGraphResourceType : int32_t
	{
		Texture       = 0x0000000000000000,
		ComputeBuffer = 0x0000000000000001,
		Count         = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.RenderGraphModule.TextureSizeMode
	 */
	enum class TextureSizeMode : int32_t
	{
		Explicit = 0x0000000000000000,
		Scale    = 0x0000000000000001,
		Functor  = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.ClearFlag
	 */
	enum class ClearFlag : int32_t
	{
		None         = 0x0000000000000000,
		Color        = 0x0000000000000001,
		Depth        = 0x0000000000000002,
		Stencil      = 0x0000000000000004,
		DepthStencil = 0x0000000000000006,
		ColorStencil = 0x0000000000000005,
		All          = 0x0000000000000007
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.CoreProfileId
	 */
	enum class CoreProfileId : int32_t
	{
		BlitTextureInPotAtlas = 0x0000000000000000
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.DynamicResScalePolicyType
	 */
	enum class DynamicResScalePolicyType : int32_t
	{
		ReturnsPercentage       = 0x0000000000000000,
		ReturnsMinMaxLerpFactor = 0x0000000000000001
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.DynamicResScalerSlot
	 */
	enum class DynamicResScalerSlot : int32_t
	{
		User   = 0x0000000000000000,
		System = 0x0000000000000001,
		Count  = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.DynamicResolutionHandler+UpsamplerScheduleType
	 */
	enum class DynamicResolutionHandler_UpsamplerScheduleType : int32_t
	{
		BeforePost = 0x0000000000000000,
		AfterPost  = 0x0000000000000001
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.DynamicResolutionType
	 */
	enum class DynamicResolutionType : uint8_t
	{
		Software = 0x0000000000000000,
		Hardware = 0x0000000000000001
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.DynamicResUpscaleFilter
	 */
	enum class DynamicResUpscaleFilter : uint8_t
	{
		Bilinear                 = 0x0000000000000000,
		CatmullRom               = 0x0000000000000001,
		Lanczos                  = 0x0000000000000002,
		ContrastAdaptiveSharpen  = 0x0000000000000003,
		EdgeAdaptiveScalingUpres = 0x0000000000000004,
		TAAU                     = 0x0000000000000005
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.XRGraphics+StereoRenderingMode
	 */
	enum class XRGraphics_StereoRenderingMode : int32_t
	{
		MultiPass           = 0x0000000000000000,
		SinglePass          = 0x0000000000000001,
		SinglePassInstanced = 0x0000000000000002,
		SinglePassMultiView = 0x0000000000000003
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.DebugAction
	 */
	enum class DebugAction : int32_t
	{
		EnableDebugMenu    = 0x0000000000000000,
		PreviousDebugPanel = 0x0000000000000001,
		NextDebugPanel     = 0x0000000000000002,
		Action             = 0x0000000000000003,
		MakePersistent     = 0x0000000000000004,
		MoveVertical       = 0x0000000000000005,
		MoveHorizontal     = 0x0000000000000006,
		Multiplier         = 0x0000000000000007,
		ResetAll           = 0x0000000000000008,
		DebugActionCount   = 0x0000000000000009
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.DebugActionRepeatMode
	 */
	enum class DebugActionRepeatMode : int32_t
	{
		Never = 0x0000000000000000,
		Delay = 0x0000000000000001
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.DebugActionState+DebugActionKeyType
	 */
	enum class DebugActionState_DebugActionKeyType : int32_t
	{
		Button = 0x0000000000000000,
		Axis   = 0x0000000000000001,
		Key    = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.DebugUI+Flags
	 */
	enum class DebugUI_Flags : int32_t
	{
		None              = 0x0000000000000000,
		EditorOnly        = 0x0000000000000002,
		RuntimeOnly       = 0x0000000000000004,
		EditorForceUpdate = 0x0000000000000008
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.DebugUI.MessageBox+Style
	 */
	enum class DebugUI_MessageBox_Style : int32_t
	{
		Info    = 0x0000000000000000,
		Warning = 0x0000000000000001,
		Error   = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.APVConstantBufferRegister
	 */
	enum class APVConstantBufferRegister : int32_t
	{
		GlobalRegister = 0x0000000000000005
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.SRPLensFlareBlendMode
	 */
	enum class SRPLensFlareBlendMode : int32_t
	{
		Additive    = 0x0000000000000000,
		Screen      = 0x0000000000000001,
		Premultiply = 0x0000000000000002,
		Lerp        = 0x0000000000000003
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.SRPLensFlareDistribution
	 */
	enum class SRPLensFlareDistribution : int32_t
	{
		Uniform = 0x0000000000000000,
		Curve   = 0x0000000000000001,
		Random  = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.SRPLensFlareType
	 */
	enum class SRPLensFlareType : int32_t
	{
		Image   = 0x0000000000000000,
		Circle  = 0x0000000000000001,
		Polygon = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.PackingRules
	 */
	enum class PackingRules : int32_t
	{
		Exact      = 0x0000000000000000,
		Aggressive = 0x0000000000000001
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.FieldPacking
	 */
	enum class FieldPacking : int32_t
	{
		NoPacking   = 0x0000000000000000,
		R11G11B10   = 0x0000000000000001,
		PackedFloat = 0x0000000000000002,
		PackedUint  = 0x0000000000000003
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.FieldPrecision
	 */
	enum class FieldPrecision : int32_t
	{
		Half    = 0x0000000000000000,
		Real    = 0x0000000000000001,
		Default = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.DepthBits
	 */
	enum class DepthBits : int32_t
	{
		None    = 0x0000000000000000,
		Depth8  = 0x0000000000000008,
		Depth16 = 0x0000000000000010,
		Depth24 = 0x0000000000000018,
		Depth32 = 0x0000000000000020
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.MSAASamples
	 */
	enum class MSAASamples : int32_t
	{
		None   = 0x0000000000000001,
		MSAA2x = 0x0000000000000002,
		MSAA4x = 0x0000000000000004,
		MSAA8x = 0x0000000000000008
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.PowerOfTwoTextureAtlas+BlitType
	 */
	enum class PowerOfTwoTextureAtlas_BlitType : int32_t
	{
		Padding                   = 0x0000000000000000,
		PaddingMultiply           = 0x0000000000000001,
		OctahedralPadding         = 0x0000000000000002,
		OctahedralPaddingMultiply = 0x0000000000000003
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.RTHandleSystem+ResizeMode
	 */
	enum class RTHandleSystem_ResizeMode : int32_t
	{
		Auto     = 0x0000000000000000,
		OnDemand = 0x0000000000000001
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.Texture2DAtlas+BlitType
	 */
	enum class Texture2DAtlas_BlitType : int32_t
	{
		Default                         = 0x0000000000000000,
		CubeTo2DOctahedral              = 0x0000000000000001,
		SingleChannel                   = 0x0000000000000002,
		CubeTo2DOctahedralSingleChannel = 0x0000000000000003
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.AtlasAllocatorDynamic.AtlasNode+AtlasNodeFlags
	 */
	enum class AtlasAllocatorDynamic_AtlasNode_AtlasNodeFlags : uint32_t
	{
		IsOccupied = 0x0000000000000001
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.MaterialQuality
	 */
	enum class MaterialQuality : int32_t
	{
		Low    = 0x0000000000000001,
		Medium = 0x0000000000000002,
		High   = 0x0000000000000004
	};

	/**
	 * Enum Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.ReloadAttribute+Package
	 */
	enum class ReloadAttribute_Package : int32_t
	{
		Builtin = 0x0000000000000000,
		Root    = 0x0000000000000001
	};

	/**
	 * Enum Unity.Burst.Unity.Burst.OptimizeFor
	 */
	enum class OptimizeFor : int32_t
	{
		Default         = 0x0000000000000000,
		Performance     = 0x0000000000000001,
		Size            = 0x0000000000000002,
		FastCompilation = 0x0000000000000003,
		Balanced        = 0x0000000000000004
	};

	/**
	 * Enum Unity.Burst.Unity.Burst.FloatMode
	 */
	enum class FloatMode : int32_t
	{
		Default       = 0x0000000000000000,
		Strict        = 0x0000000000000001,
		Deterministic = 0x0000000000000002,
		Fast          = 0x0000000000000003
	};

	/**
	 * Enum Unity.Burst.Unity.Burst.FloatPrecision
	 */
	enum class FloatPrecision : int32_t
	{
		Standard = 0x0000000000000000,
		High     = 0x0000000000000001,
		Medium   = 0x0000000000000002,
		Low      = 0x0000000000000003
	};

	/**
	 * Enum Unity.Burst.Unity.Burst.GlobalSafetyChecksSettingKind
	 */
	enum class GlobalSafetyChecksSettingKind : int32_t
	{
		Off     = 0x0000000000000000,
		On      = 0x0000000000000001,
		ForceOn = 0x0000000000000002
	};

	/**
	 * Enum Unity.Burst.Unity.Burst.BurstTargetCpu
	 */
	enum class BurstTargetCpu : int32_t
	{
		Auto                  = 0x0000000000000000,
		X86_SSE2              = 0x0000000000000001,
		X86_SSE4              = 0x0000000000000002,
		X64_SSE2              = 0x0000000000000003,
		X64_SSE4              = 0x0000000000000004,
		AVX                   = 0x0000000000000005,
		AVX2                  = 0x0000000000000006,
		WASM32                = 0x0000000000000007,
		ARMV7A_NEON32         = 0x0000000000000008,
		ARMV8A_AARCH64        = 0x0000000000000009,
		THUMB2_NEON32         = 0x000000000000000A,
		ARMV8A_AARCH64_HALFFP = 0x000000000000000B
	};

	/**
	 * Enum Unity.Burst.Unity.Burst.NativeDumpFlags
	 */
	enum class NativeDumpFlags : int32_t
	{
		None            = 0x0000000000000000,
		IL              = 0x0000000000000001,
		Backend         = 0x0000000000000002,
		IR              = 0x0000000000000004,
		IROptimized     = 0x0000000000000008,
		Asm             = 0x0000000000000010,
		Function        = 0x0000000000000020,
		Analysis        = 0x0000000000000040,
		IRPassAnalysis  = 0x0000000000000080,
		ILPre           = 0x0000000000000100,
		IRPerEntryPoint = 0x0000000000000200,
		All             = 0x00000000000003FD
	};

	/**
	 * Enum Unity.Burst.Unity.Burst.CompilationPriority
	 */
	enum class CompilationPriority : int32_t
	{
		EagerCompilationSynchronous  = 0x0000000000000000,
		Asynchronous                 = 0x0000000000000001,
		ILPP                         = 0x0000000000000002,
		EagerCompilationAsynchronous = 0x0000000000000003
	};

	/**
	 * Enum Unity.Burst.Unity.Burst.BurstExecutionEnvironment
	 */
	enum class BurstExecutionEnvironment : int32_t
	{
		Default          = 0x0000000000000000,
		NonDeterministic = 0x0000000000000000,
		Deterministic    = 0x0000000000000001
	};

	/**
	 * Enum Unity.Burst.Unity.Burst.BurstString+NumberBufferKind
	 */
	enum class BurstString_NumberBufferKind : int32_t
	{
		Integer = 0x0000000000000000,
		Float   = 0x0000000000000001
	};

	/**
	 * Enum Unity.Burst.Unity.Burst.BurstString+NumberFormatKind
	 */
	enum class BurstString_NumberFormatKind : uint8_t
	{
		General            = 0x0000000000000000,
		Decimal            = 0x0000000000000001,
		DecimalForceSigned = 0x0000000000000002,
		Hexadecimal        = 0x0000000000000003
	};

	/**
	 * Enum Unity.Burst.Unity.Burst.BurstString+CutoffMode
	 */
	enum class BurstString_CutoffMode : int32_t
	{
		Unique         = 0x0000000000000000,
		TotalLength    = 0x0000000000000001,
		FractionLength = 0x0000000000000002
	};

	/**
	 * Enum Unity.Burst.Unity.Burst.BurstString+PrintFloatFormat
	 */
	enum class BurstString_PrintFloatFormat : int32_t
	{
		Positional = 0x0000000000000000,
		Scientific = 0x0000000000000001
	};

	/**
	 * Enum Unity.Burst.Unity.Burst.DiagnosticId
	 */
	enum class DiagnosticId : int32_t
	{
		ERR_InternalCompilerErrorInBackend                                  = 0x0000000000000064,
		ERR_InternalCompilerErrorInFunction                                 = 0x0000000000000065,
		ERR_InternalCompilerErrorInInstruction                              = 0x0000000000000066,
		ERR_OnlyStaticMethodsAllowed                                        = 0x00000000000003E8,
		ERR_UnableToAccessManagedMethod                                     = 0x00000000000003E9,
		ERR_UnableToFindInterfaceMethod                                     = 0x00000000000003EA,
		ERR_UnexpectedEmptyMethodBody                                       = 0x00000000000003EB,
		ERR_ManagedArgumentsNotSupported                                    = 0x00000000000003EC,
		ERR_CatchConstructionNotSupported                                   = 0x00000000000003EE,
		ERR_CatchAndFilterConstructionNotSupported                          = 0x00000000000003EF,
		ERR_LdfldaWithFixedArrayExpected                                    = 0x00000000000003F0,
		ERR_PointerExpected                                                 = 0x00000000000003F1,
		ERR_LoadingFieldFromManagedObjectNotSupported                       = 0x00000000000003F2,
		ERR_LoadingFieldWithManagedTypeNotSupported                         = 0x00000000000003F3,
		ERR_LoadingArgumentWithManagedTypeNotSupported                      = 0x00000000000003F4,
		ERR_CallingBurstDiscardMethodWithReturnValueNotSupported            = 0x00000000000003F7,
		ERR_CallingManagedMethodNotSupported                                = 0x00000000000003F8,
		ERR_InstructionUnboxNotSupported                                    = 0x00000000000003FB,
		ERR_InstructionBoxNotSupported                                      = 0x00000000000003FC,
		ERR_InstructionNewobjWithManagedTypeNotSupported                    = 0x00000000000003FD,
		ERR_AccessingManagedArrayNotSupported                               = 0x00000000000003FE,
		ERR_InstructionLdtokenFieldNotSupported                             = 0x00000000000003FF,
		ERR_InstructionLdtokenMethodNotSupported                            = 0x0000000000000400,
		ERR_InstructionLdtokenTypeNotSupported                              = 0x0000000000000401,
		ERR_InstructionLdtokenNotSupported                                  = 0x0000000000000402,
		ERR_InstructionLdvirtftnNotSupported                                = 0x0000000000000403,
		ERR_InstructionNewarrNotSupported                                   = 0x0000000000000404,
		ERR_InstructionRethrowNotSupported                                  = 0x0000000000000405,
		ERR_InstructionCastclassNotSupported                                = 0x0000000000000406,
		ERR_InstructionLdftnNotSupported                                    = 0x0000000000000408,
		ERR_InstructionLdstrNotSupported                                    = 0x0000000000000409,
		ERR_InstructionStsfldNotSupported                                   = 0x000000000000040A,
		ERR_InstructionEndfilterNotSupported                                = 0x000000000000040B,
		ERR_InstructionEndfinallyNotSupported                               = 0x000000000000040C,
		ERR_InstructionLeaveNotSupported                                    = 0x000000000000040D,
		ERR_InstructionNotSupported                                         = 0x000000000000040E,
		ERR_LoadingFromStaticFieldNotSupported                              = 0x000000000000040F,
		ERR_LoadingFromNonReadonlyStaticFieldNotSupported                   = 0x0000000000000410,
		ERR_LoadingFromManagedStaticFieldNotSupported                       = 0x0000000000000411,
		ERR_LoadingFromManagedNonReadonlyStaticFieldNotSupported            = 0x0000000000000412,
		ERR_InstructionStfldToManagedObjectNotSupported                     = 0x0000000000000413,
		ERR_InstructionLdlenNonConstantLengthNotSupported                   = 0x0000000000000414,
		ERR_StructWithAutoLayoutNotSupported                                = 0x0000000000000415,
		ERR_StructWithGenericParametersAndExplicitLayoutNotSupported        = 0x0000000000000417,
		ERR_StructSizeNotSupported                                          = 0x0000000000000418,
		ERR_StructZeroSizeNotSupported                                      = 0x0000000000000419,
		ERR_MarshalAsOnFieldNotSupported                                    = 0x000000000000041A,
		ERR_TypeNotSupported                                                = 0x000000000000041B,
		ERR_RequiredTypeModifierNotSupported                                = 0x000000000000041C,
		ERR_ErrorWhileProcessingVariable                                    = 0x000000000000041D,
		ERR_UnableToResolveType                                             = 0x000000000000041E,
		ERR_UnableToResolveMethod                                           = 0x000000000000041F,
		ERR_ConstructorNotSupported                                         = 0x0000000000000420,
		ERR_FunctionPointerMethodMissingBurstCompileAttribute               = 0x0000000000000421,
		ERR_FunctionPointerTypeMissingBurstCompileAttribute                 = 0x0000000000000422,
		ERR_FunctionPointerMethodAndTypeMissingBurstCompileAttribute        = 0x0000000000000423,
		INF_FunctionPointerMethodAndTypeMissingMonoPInvokeCallbackAttribute = 0x000000000000295E,
		ERR_MarshalAsOnParameterNotSupported                                = 0x0000000000000425,
		ERR_MarshalAsOnReturnTypeNotSupported                               = 0x0000000000000426,
		ERR_TypeNotBlittableForFunctionPointer                              = 0x0000000000000427,
		ERR_StructByValueNotSupported                                       = 0x0000000000000428,
		ERR_StructsWithNonUnicodeCharsNotSupported                          = 0x000000000000042A,
		ERR_VectorsByValueNotSupported                                      = 0x000000000000042B,
		ERR_MissingExternBindings                                           = 0x000000000000042C,
		ERR_MarshalAsNativeTypeOnReturnTypeNotSupported                     = 0x000000000000042D,
		ERR_AssertTypeNotSupported                                          = 0x000000000000042F,
		ERR_StoringToReadOnlyFieldNotAllowed                                = 0x0000000000000430,
		ERR_StoringToFieldInReadOnlyParameterNotAllowed                     = 0x0000000000000431,
		ERR_StoringToReadOnlyParameterNotAllowed                            = 0x0000000000000432,
		ERR_TypeManagerStaticFieldNotCompatible                             = 0x0000000000000433,
		ERR_UnableToFindTypeIndexForTypeManagerType                         = 0x0000000000000434,
		ERR_UnableToFindFieldForTypeManager                                 = 0x0000000000000435,
		ERR_CircularStaticConstructorUsage                                  = 0x0000000000000442,
		ERR_ExternalInternalCallsInStaticConstructorsNotSupported           = 0x0000000000000443,
		ERR_PlatformNotSupported                                            = 0x0000000000000444,
		ERR_InitModuleVerificationError                                     = 0x0000000000000445,
		ERR_ModuleVerificationError                                         = 0x0000000000000446,
		ERR_UnableToFindTypeRequiredForTypeManager                          = 0x0000000000000447,
		ERR_UnexpectedIntegerTypesForBinaryOperation                        = 0x0000000000000448,
		ERR_BinaryOperationNotSupported                                     = 0x0000000000000449,
		ERR_CalliWithThisNotSupported                                       = 0x000000000000044A,
		ERR_CalliNonCCallingConventionNotSupported                          = 0x000000000000044B,
		ERR_StringLiteralTooBig                                             = 0x000000000000044C,
		ERR_InstructionTargetCpuFeatureNotAllowedInThisBlock                = 0x00000000000004B0,
		ERR_AssumeRangeTypeMustBeInteger                                    = 0x00000000000004B1,
		ERR_AssumeRangeTypeMustBeSameSign                                   = 0x00000000000004B2,
		ERR_UnsupportedSpillTransform                                       = 0x0000000000000514,
		ERR_UnsupportedSpillTransformTooManyUsers                           = 0x0000000000000515,
		ERR_MethodNotSupported                                              = 0x0000000000000516,
		ERR_VectorsLoadFieldIsAddress                                       = 0x0000000000000517,
		ERR_ConstantExpressionRequired                                      = 0x0000000000000518,
		ERR_PointerArgumentsUnexpectedAliasing                              = 0x000000000000051E,
		ERR_LoopIntrinsicMustBeCalledInsideLoop                             = 0x0000000000000528,
		ERR_LoopUnexpectedAutoVectorization                                 = 0x0000000000000529,
		WRN_LoopIntrinsicCalledButLoopOptimizedAway                         = 0x000000000000052A,
		ERR_AssertArgTypesDiffer                                            = 0x0000000000000532,
		ERR_StringInternalCompilerFixedStringTooManyUsers                   = 0x000000000000053C,
		ERR_StringInvalidFormatMissingClosingBrace                          = 0x000000000000053D,
		ERR_StringInvalidIntegerForArgumentIndex                            = 0x000000000000053E,
		ERR_StringInvalidFormatForArgument                                  = 0x000000000000053F,
		ERR_StringArgumentIndexOutOfRange                                   = 0x0000000000000540,
		ERR_StringInvalidArgumentType                                       = 0x0000000000000541,
		ERR_DebugLogNotSupported                                            = 0x0000000000000542,
		ERR_StringInvalidNonLiteralFormat                                   = 0x0000000000000543,
		ERR_StringInvalidStringFormatMethod                                 = 0x0000000000000544,
		ERR_StringInvalidArgument                                           = 0x0000000000000545,
		ERR_StringArrayInvalidArrayCreation                                 = 0x0000000000000546,
		ERR_StringArrayInvalidArraySize                                     = 0x0000000000000547,
		ERR_StringArrayInvalidControlFlow                                   = 0x0000000000000548,
		ERR_StringArrayInvalidArrayIndex                                    = 0x0000000000000549,
		ERR_StringArrayInvalidArrayIndexOutOfRange                          = 0x000000000000054A,
		ERR_UnmanagedStringMethodMissing                                    = 0x000000000000054B,
		ERR_UnmanagedStringMethodInvalid                                    = 0x000000000000054C,
		ERR_ManagedStaticConstructor                                        = 0x0000000000000550,
		ERR_StaticConstantArrayInStaticConstructor                          = 0x0000000000000551,
		WRN_ExceptionThrownInNonSafetyCheckGuardedFunction                  = 0x000000000000055A,
		WRN_ACallToMethodHasBeenDiscarded                                   = 0x000000000000055B,
		ERR_AccessingNestedManagedArrayNotSupported                         = 0x0000000000000564,
		ERR_LdobjFromANonPointerNonReference                                = 0x0000000000000565,
		ERR_StringLiteralRequired                                           = 0x0000000000000566,
		ERR_MultiDimensionalArrayUnsupported                                = 0x0000000000000567,
		ERR_NonBlittableAndNonManagedSequentialStructNotSupported           = 0x0000000000000568,
		ERR_VarArgFunctionNotSupported                                      = 0x0000000000000569
	};

	/**
	 * Enum Unity.Burst.Unity.Burst.Intrinsics.X86.Avx+CMP
	 */
	enum class X86_Avx_CMP : int32_t
	{
		EQ_OQ    = 0x0000000000000000,
		LT_OS    = 0x0000000000000001,
		LE_OS    = 0x0000000000000002,
		UNORD_Q  = 0x0000000000000003,
		NEQ_UQ   = 0x0000000000000004,
		NLT_US   = 0x0000000000000005,
		NLE_US   = 0x0000000000000006,
		ORD_Q    = 0x0000000000000007,
		EQ_UQ    = 0x0000000000000008,
		NGE_US   = 0x0000000000000009,
		NGT_US   = 0x000000000000000A,
		FALSE_OQ = 0x000000000000000B,
		NEQ_OQ   = 0x000000000000000C,
		GE_OS    = 0x000000000000000D,
		GT_OS    = 0x000000000000000E,
		TRUE_UQ  = 0x000000000000000F,
		EQ_OS    = 0x0000000000000010,
		LT_OQ    = 0x0000000000000011,
		LE_OQ    = 0x0000000000000012,
		UNORD_S  = 0x0000000000000013,
		NEQ_US   = 0x0000000000000014,
		NLT_UQ   = 0x0000000000000015,
		NLE_UQ   = 0x0000000000000016,
		ORD_S    = 0x0000000000000017,
		EQ_US    = 0x0000000000000018,
		NGE_UQ   = 0x0000000000000019,
		NGT_UQ   = 0x000000000000001A,
		FALSE_OS = 0x000000000000001B,
		NEQ_OS   = 0x000000000000001C,
		GE_OQ    = 0x000000000000001D,
		GT_OQ    = 0x000000000000001E,
		TRUE_US  = 0x000000000000001F
	};

	/**
	 * Enum Unity.Burst.Unity.Burst.Intrinsics.X86+MXCSRBits
	 */
	enum class X86_MXCSRBits : int32_t
	{
		FlushToZero           = 0x0000000000008000,
		RoundingControlMask   = 0x0000000000006000,
		RoundToNearest        = 0x0000000000000000,
		RoundDown             = 0x0000000000002000,
		RoundUp               = 0x0000000000004000,
		RoundTowardZero       = 0x0000000000006000,
		PrecisionMask         = 0x0000000000001000,
		UnderflowMask         = 0x0000000000000800,
		OverflowMask          = 0x0000000000000400,
		DivideByZeroMask      = 0x0000000000000200,
		DenormalOperationMask = 0x0000000000000100,
		InvalidOperationMask  = 0x0000000000000080,
		ExceptionMask         = 0x0000000000001F80,
		DenormalsAreZeroes    = 0x0000000000000040,
		PrecisionFlag         = 0x0000000000000020,
		UnderflowFlag         = 0x0000000000000010,
		OverflowFlag          = 0x0000000000000008,
		DivideByZeroFlag      = 0x0000000000000004,
		DenormalFlag          = 0x0000000000000002,
		InvalidOperationFlag  = 0x0000000000000001,
		FlagMask              = 0x000000000000003F
	};

	/**
	 * Enum Unity.Burst.Unity.Burst.Intrinsics.X86+RoundingMode
	 */
	enum class X86_RoundingMode : int32_t
	{
		FROUND_TO_NEAREST_INT = 0x0000000000000000,
		FROUND_TO_NEG_INF     = 0x0000000000000001,
		FROUND_TO_POS_INF     = 0x0000000000000002,
		FROUND_TO_ZERO        = 0x0000000000000003,
		FROUND_CUR_DIRECTION  = 0x0000000000000004,
		FROUND_RAISE_EXC      = 0x0000000000000000,
		FROUND_NO_EXC         = 0x0000000000000008,
		FROUND_NINT           = 0x0000000000000000,
		FROUND_FLOOR          = 0x0000000000000001,
		FROUND_CEIL           = 0x0000000000000002,
		FROUND_TRUNC          = 0x0000000000000003,
		FROUND_RINT           = 0x0000000000000004,
		FROUND_NEARBYINT      = 0x000000000000000C,
		FROUND_NINT_NOEXC     = 0x0000000000000008,
		FROUND_FLOOR_NOEXC    = 0x0000000000000009,
		FROUND_CEIL_NOEXC     = 0x000000000000000A,
		FROUND_TRUNC_NOEXC    = 0x000000000000000B,
		FROUND_RINT_NOEXC     = 0x000000000000000C
	};

	/**
	 * Enum Unity.Burst.Unity.Burst.Intrinsics.X86.Sse4_2+SIDD
	 */
	enum class X86_Sse4_2_SIDD : int32_t
	{
		UBYTE_OPS                = 0x0000000000000000,
		UWORD_OPS                = 0x0000000000000001,
		SBYTE_OPS                = 0x0000000000000002,
		SWORD_OPS                = 0x0000000000000003,
		CMP_EQUAL_ANY            = 0x0000000000000000,
		CMP_RANGES               = 0x0000000000000004,
		CMP_EQUAL_EACH           = 0x0000000000000008,
		CMP_EQUAL_ORDERED        = 0x000000000000000C,
		POSITIVE_POLARITY        = 0x0000000000000000,
		NEGATIVE_POLARITY        = 0x0000000000000010,
		MASKED_POSITIVE_POLARITY = 0x0000000000000020,
		MASKED_NEGATIVE_POLARITY = 0x0000000000000030,
		LEAST_SIGNIFICANT        = 0x0000000000000000,
		MOST_SIGNIFICANT         = 0x0000000000000040,
		BIT_MASK                 = 0x0000000000000000,
		UNIT_MASK                = 0x0000000000000040
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.CanvasUpdate
	 */
	enum class CanvasUpdate : int32_t
	{
		Prelayout      = 0x0000000000000000,
		Layout         = 0x0000000000000001,
		PostLayout     = 0x0000000000000002,
		PreRender      = 0x0000000000000003,
		LatePreRender  = 0x0000000000000004,
		MaxUpdateValue = 0x0000000000000005
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.GraphicRaycaster+BlockingObjects
	 */
	enum class GraphicRaycaster_BlockingObjects : int32_t
	{
		None   = 0x0000000000000000,
		TwoD   = 0x0000000000000001,
		ThreeD = 0x0000000000000002,
		All    = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.Image+Type
	 */
	enum class Image_Type : int32_t
	{
		Simple = 0x0000000000000000,
		Sliced = 0x0000000000000001,
		Tiled  = 0x0000000000000002,
		Filled = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.Image+FillMethod
	 */
	enum class Image_FillMethod : int32_t
	{
		Horizontal = 0x0000000000000000,
		Vertical   = 0x0000000000000001,
		Radial90   = 0x0000000000000002,
		Radial180  = 0x0000000000000003,
		Radial360  = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.Image+OriginHorizontal
	 */
	enum class Image_OriginHorizontal : int32_t
	{
		Left  = 0x0000000000000000,
		Right = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.Image+OriginVertical
	 */
	enum class Image_OriginVertical : int32_t
	{
		Bottom = 0x0000000000000000,
		Top    = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.Image+Origin90
	 */
	enum class Image_Origin90 : int32_t
	{
		BottomLeft  = 0x0000000000000000,
		TopLeft     = 0x0000000000000001,
		TopRight    = 0x0000000000000002,
		BottomRight = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.Image+Origin180
	 */
	enum class Image_Origin180 : int32_t
	{
		Bottom = 0x0000000000000000,
		Left   = 0x0000000000000001,
		Top    = 0x0000000000000002,
		Right  = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.Image+Origin360
	 */
	enum class Image_Origin360 : int32_t
	{
		Bottom = 0x0000000000000000,
		Right  = 0x0000000000000001,
		Top    = 0x0000000000000002,
		Left   = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.InputField+ContentType
	 */
	enum class InputField_ContentType : int32_t
	{
		Standard      = 0x0000000000000000,
		Autocorrected = 0x0000000000000001,
		IntegerNumber = 0x0000000000000002,
		DecimalNumber = 0x0000000000000003,
		Alphanumeric  = 0x0000000000000004,
		Name          = 0x0000000000000005,
		EmailAddress  = 0x0000000000000006,
		Password      = 0x0000000000000007,
		Pin           = 0x0000000000000008,
		Custom        = 0x0000000000000009
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.InputField+InputType
	 */
	enum class InputField_InputType : int32_t
	{
		Standard    = 0x0000000000000000,
		AutoCorrect = 0x0000000000000001,
		Password    = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.InputField+CharacterValidation
	 */
	enum class InputField_CharacterValidation : int32_t
	{
		None         = 0x0000000000000000,
		Integer      = 0x0000000000000001,
		Decimal      = 0x0000000000000002,
		Alphanumeric = 0x0000000000000003,
		Name         = 0x0000000000000004,
		EmailAddress = 0x0000000000000005
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.InputField+LineType
	 */
	enum class InputField_LineType : int32_t
	{
		SingleLine       = 0x0000000000000000,
		MultiLineSubmit  = 0x0000000000000001,
		MultiLineNewline = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.InputField+EditState
	 */
	enum class InputField_EditState : int32_t
	{
		Continue = 0x0000000000000000,
		Finish   = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.AspectRatioFitter+AspectMode
	 */
	enum class AspectRatioFitter_AspectMode : int32_t
	{
		None                = 0x0000000000000000,
		WidthControlsHeight = 0x0000000000000001,
		HeightControlsWidth = 0x0000000000000002,
		FitInParent         = 0x0000000000000003,
		EnvelopeParent      = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.CanvasScaler+ScaleMode
	 */
	enum class CanvasScaler_ScaleMode : int32_t
	{
		ConstantPixelSize    = 0x0000000000000000,
		ScaleWithScreenSize  = 0x0000000000000001,
		ConstantPhysicalSize = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.CanvasScaler+ScreenMatchMode
	 */
	enum class CanvasScaler_ScreenMatchMode : int32_t
	{
		MatchWidthOrHeight = 0x0000000000000000,
		Expand             = 0x0000000000000001,
		Shrink             = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.CanvasScaler+Unit
	 */
	enum class CanvasScaler_Unit : int32_t
	{
		Centimeters = 0x0000000000000000,
		Millimeters = 0x0000000000000001,
		Inches      = 0x0000000000000002,
		Points      = 0x0000000000000003,
		Picas       = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.ContentSizeFitter+FitMode
	 */
	enum class ContentSizeFitter_FitMode : int32_t
	{
		Unconstrained = 0x0000000000000000,
		MinSize       = 0x0000000000000001,
		PreferredSize = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.GridLayoutGroup+Corner
	 */
	enum class GridLayoutGroup_Corner : int32_t
	{
		UpperLeft  = 0x0000000000000000,
		UpperRight = 0x0000000000000001,
		LowerLeft  = 0x0000000000000002,
		LowerRight = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.GridLayoutGroup+Axis
	 */
	enum class GridLayoutGroup_Axis : int32_t
	{
		Horizontal = 0x0000000000000000,
		Vertical   = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.GridLayoutGroup+Constraint
	 */
	enum class GridLayoutGroup_Constraint : int32_t
	{
		Flexible         = 0x0000000000000000,
		FixedColumnCount = 0x0000000000000001,
		FixedRowCount    = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.Navigation+Mode
	 */
	enum class Navigation_Mode : int32_t
	{
		None       = 0x0000000000000000,
		Horizontal = 0x0000000000000001,
		Vertical   = 0x0000000000000002,
		Automatic  = 0x0000000000000003,
		Explicit   = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.Scrollbar+Direction
	 */
	enum class Scrollbar_Direction : int32_t
	{
		LeftToRight = 0x0000000000000000,
		RightToLeft = 0x0000000000000001,
		BottomToTop = 0x0000000000000002,
		TopToBottom = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.Scrollbar+Axis
	 */
	enum class Scrollbar_Axis : int32_t
	{
		Horizontal = 0x0000000000000000,
		Vertical   = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.ScrollRect+MovementType
	 */
	enum class ScrollRect_MovementType : int32_t
	{
		Unrestricted = 0x0000000000000000,
		Elastic      = 0x0000000000000001,
		Clamped      = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.ScrollRect+ScrollbarVisibility
	 */
	enum class ScrollRect_ScrollbarVisibility : int32_t
	{
		Permanent                 = 0x0000000000000000,
		AutoHide                  = 0x0000000000000001,
		AutoHideAndExpandViewport = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.Selectable+Transition
	 */
	enum class Selectable_Transition : int32_t
	{
		None       = 0x0000000000000000,
		ColorTint  = 0x0000000000000001,
		SpriteSwap = 0x0000000000000002,
		Animation  = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.Selectable+SelectionState
	 */
	enum class Selectable_SelectionState : int32_t
	{
		Normal      = 0x0000000000000000,
		Highlighted = 0x0000000000000001,
		Pressed     = 0x0000000000000002,
		Selected    = 0x0000000000000003,
		Disabled    = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.Slider+Direction
	 */
	enum class Slider_Direction : int32_t
	{
		LeftToRight = 0x0000000000000000,
		RightToLeft = 0x0000000000000001,
		BottomToTop = 0x0000000000000002,
		TopToBottom = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.Slider+Axis
	 */
	enum class Slider_Axis : int32_t
	{
		Horizontal = 0x0000000000000000,
		Vertical   = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.Toggle+ToggleTransition
	 */
	enum class Toggle_ToggleTransition : int32_t
	{
		None = 0x0000000000000000,
		Fade = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UI.CoroutineTween.ColorTween+ColorTweenMode
	 */
	enum class ColorTween_ColorTweenMode_1 : int32_t
	{
		All   = 0x0000000000000000,
		RGB   = 0x0000000000000001,
		Alpha = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.UIElements.PanelEventHandler+PointerEventType
	 */
	enum class PanelEventHandler_PointerEventType : int32_t
	{
		Default = 0x0000000000000000,
		Down    = 0x0000000000000001,
		Up      = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.EventSystems.PointerEventData+InputButton
	 */
	enum class PointerEventData_InputButton : int32_t
	{
		Left   = 0x0000000000000000,
		Right  = 0x0000000000000001,
		Middle = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.EventSystems.PointerEventData+FramePressState
	 */
	enum class PointerEventData_FramePressState : int32_t
	{
		Pressed            = 0x0000000000000000,
		Released           = 0x0000000000000001,
		PressedAndReleased = 0x0000000000000002,
		NotChanged         = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.EventSystems.EventHandle
	 */
	enum class EventHandle : int32_t
	{
		Unused = 0x0000000000000000,
		Used   = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.EventSystems.EventTriggerType
	 */
	enum class EventTriggerType : int32_t
	{
		PointerEnter            = 0x0000000000000000,
		PointerExit             = 0x0000000000000001,
		PointerDown             = 0x0000000000000002,
		PointerUp               = 0x0000000000000003,
		PointerClick            = 0x0000000000000004,
		Drag                    = 0x0000000000000005,
		Drop                    = 0x0000000000000006,
		Scroll                  = 0x0000000000000007,
		UpdateSelected          = 0x0000000000000008,
		Select                  = 0x0000000000000009,
		Deselect                = 0x000000000000000A,
		Move                    = 0x000000000000000B,
		InitializePotentialDrag = 0x000000000000000C,
		BeginDrag               = 0x000000000000000D,
		EndDrag                 = 0x000000000000000E,
		Submit                  = 0x000000000000000F,
		Cancel                  = 0x0000000000000010
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.EventSystems.StandaloneInputModule+InputMode
	 */
	enum class StandaloneInputModule_InputMode : int32_t
	{
		Mouse   = 0x0000000000000000,
		Buttons = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.UI.UnityEngine.EventSystems.MoveDirection
	 */
	enum class MoveDirection : int32_t
	{
		Left  = 0x0000000000000000,
		Up    = 0x0000000000000001,
		Right = 0x0000000000000002,
		Down  = 0x0000000000000003,
		None  = 0x0000000000000004
	};

	/**
	 * Enum websocket-sharp.WebSocketSharp.ByteOrder
	 */
	enum class ByteOrder : int32_t
	{
		Little = 0x0000000000000000,
		Big    = 0x0000000000000001
	};

	/**
	 * Enum websocket-sharp.WebSocketSharp.Net.AuthenticationSchemes
	 */
	enum class AuthenticationSchemes_1 : int32_t
	{
		None      = 0x0000000000000000,
		Digest    = 0x0000000000000001,
		Basic     = 0x0000000000000008,
		Anonymous = 0x0000000000008000
	};

	/**
	 * Enum websocket-sharp.WebSocketSharp.Net.HttpStatusCode
	 */
	enum class HttpStatusCode_1 : int32_t
	{
		Continue                     = 0x0000000000000064,
		SwitchingProtocols           = 0x0000000000000065,
		OK                           = 0x00000000000000C8,
		Created                      = 0x00000000000000C9,
		Accepted                     = 0x00000000000000CA,
		NonAuthoritativeInformation  = 0x00000000000000CB,
		NoContent                    = 0x00000000000000CC,
		ResetContent                 = 0x00000000000000CD,
		PartialContent               = 0x00000000000000CE,
		MultipleChoices              = 0x000000000000012C,
		Ambiguous                    = 0x000000000000012C,
		MovedPermanently             = 0x000000000000012D,
		Moved                        = 0x000000000000012D,
		Found                        = 0x000000000000012E,
		Redirect                     = 0x000000000000012E,
		SeeOther                     = 0x000000000000012F,
		RedirectMethod               = 0x000000000000012F,
		NotModified                  = 0x0000000000000130,
		UseProxy                     = 0x0000000000000131,
		Unused                       = 0x0000000000000132,
		TemporaryRedirect            = 0x0000000000000133,
		RedirectKeepVerb             = 0x0000000000000133,
		BadRequest                   = 0x0000000000000190,
		Unauthorized                 = 0x0000000000000191,
		PaymentRequired              = 0x0000000000000192,
		Forbidden                    = 0x0000000000000193,
		NotFound                     = 0x0000000000000194,
		MethodNotAllowed             = 0x0000000000000195,
		NotAcceptable                = 0x0000000000000196,
		ProxyAuthenticationRequired  = 0x0000000000000197,
		RequestTimeout               = 0x0000000000000198,
		Conflict                     = 0x0000000000000199,
		Gone                         = 0x000000000000019A,
		LengthRequired               = 0x000000000000019B,
		PreconditionFailed           = 0x000000000000019C,
		RequestEntityTooLarge        = 0x000000000000019D,
		RequestUriTooLong            = 0x000000000000019E,
		UnsupportedMediaType         = 0x000000000000019F,
		RequestedRangeNotSatisfiable = 0x00000000000001A0,
		ExpectationFailed            = 0x00000000000001A1,
		InternalServerError          = 0x00000000000001F4,
		NotImplemented               = 0x00000000000001F5,
		BadGateway                   = 0x00000000000001F6,
		ServiceUnavailable           = 0x00000000000001F7,
		GatewayTimeout               = 0x00000000000001F8,
		HttpVersionNotSupported      = 0x00000000000001F9
	};

	/**
	 * Enum websocket-sharp.WebSocketSharp.CloseStatusCode
	 */
	enum class CloseStatusCode : uint16_t
	{
		Normal              = 0x00000000000003E8,
		Away                = 0x00000000000003E9,
		ProtocolError       = 0x00000000000003EA,
		UnsupportedData     = 0x00000000000003EB,
		Undefined           = 0x00000000000003EC,
		NoStatus            = 0x00000000000003ED,
		Abnormal            = 0x00000000000003EE,
		InvalidData         = 0x00000000000003EF,
		PolicyViolation     = 0x00000000000003F0,
		TooBig              = 0x00000000000003F1,
		MandatoryExtension  = 0x00000000000003F2,
		ServerError         = 0x00000000000003F3,
		TlsHandshakeFailure = 0x00000000000003F7
	};

	/**
	 * Enum websocket-sharp.WebSocketSharp.Fin
	 */
	enum class Fin : uint8_t
	{
		More  = 0x0000000000000000,
		Final = 0x0000000000000001
	};

	/**
	 * Enum websocket-sharp.WebSocketSharp.Mask
	 */
	enum class Mask_1 : uint8_t
	{
		Off = 0x0000000000000000,
		On  = 0x0000000000000001
	};

	/**
	 * Enum websocket-sharp.WebSocketSharp.Opcode
	 */
	enum class Opcode : uint8_t
	{
		Cont   = 0x0000000000000000,
		Text   = 0x0000000000000001,
		Binary = 0x0000000000000002,
		Close  = 0x0000000000000008,
		Ping   = 0x0000000000000009,
		Pong   = 0x000000000000000A
	};

	/**
	 * Enum websocket-sharp.WebSocketSharp.Rsv
	 */
	enum class Rsv : uint8_t
	{
		Off = 0x0000000000000000,
		On  = 0x0000000000000001
	};

	/**
	 * Enum websocket-sharp.WebSocketSharp.Net.HttpHeaderType
	 */
	enum class HttpHeaderType : int32_t
	{
		Unspecified          = 0x0000000000000000,
		Request              = 0x0000000000000001,
		Response             = 0x0000000000000002,
		Restricted           = 0x0000000000000004,
		MultiValue           = 0x0000000000000008,
		MultiValueInRequest  = 0x0000000000000010,
		MultiValueInResponse = 0x0000000000000020
	};

	/**
	 * Enum websocket-sharp.WebSocketSharp.CompressionMethod
	 */
	enum class CompressionMethod_2 : uint8_t
	{
		None    = 0x0000000000000000,
		Deflate = 0x0000000000000001
	};

	/**
	 * Enum websocket-sharp.WebSocketSharp.LogLevel
	 */
	enum class LogLevel : int32_t
	{
		Trace = 0x0000000000000000,
		Debug = 0x0000000000000001,
		Info  = 0x0000000000000002,
		Warn  = 0x0000000000000003,
		Error = 0x0000000000000004,
		Fatal = 0x0000000000000005
	};

	/**
	 * Enum websocket-sharp.WebSocketSharp.WebSocketState
	 */
	enum class WebSocketState_1 : uint16_t
	{
		Connecting = 0x0000000000000000,
		Open       = 0x0000000000000001,
		Closing    = 0x0000000000000002,
		Closed     = 0x0000000000000003
	};

	/**
	 * Enum websocket-sharp.WebSocketSharp.Server.ServerState
	 */
	enum class ServerState : int32_t
	{
		Ready        = 0x0000000000000000,
		Start        = 0x0000000000000001,
		ShuttingDown = 0x0000000000000002,
		Stop         = 0x0000000000000003
	};

	/**
	 * Enum websocket-sharp.WebSocketSharp.Net.InputState
	 */
	enum class InputState_1 : int32_t
	{
		RequestLine = 0x0000000000000000,
		Headers     = 0x0000000000000001
	};

	/**
	 * Enum websocket-sharp.WebSocketSharp.Net.LineState
	 */
	enum class LineState : int32_t
	{
		None = 0x0000000000000000,
		Cr   = 0x0000000000000001,
		Lf   = 0x0000000000000002
	};

	/**
	 * Enum websocket-sharp.WebSocketSharp.Net.InputChunkState
	 */
	enum class InputChunkState : int32_t
	{
		None      = 0x0000000000000000,
		Data      = 0x0000000000000001,
		DataEnded = 0x0000000000000002,
		Trailer   = 0x0000000000000003,
		End       = 0x0000000000000004
	};

	/**
	 * Enum websocket-sharp.WebSocketSharp.Net.HttpRequestHeader
	 */
	enum class HttpRequestHeader_1 : int32_t
	{
		CacheControl           = 0x0000000000000000,
		Connection             = 0x0000000000000001,
		Date                   = 0x0000000000000002,
		KeepAlive              = 0x0000000000000003,
		Pragma                 = 0x0000000000000004,
		Trailer                = 0x0000000000000005,
		TransferEncoding       = 0x0000000000000006,
		Upgrade                = 0x0000000000000007,
		Via                    = 0x0000000000000008,
		Warning                = 0x0000000000000009,
		Allow                  = 0x000000000000000A,
		ContentLength          = 0x000000000000000B,
		ContentType            = 0x000000000000000C,
		ContentEncoding        = 0x000000000000000D,
		ContentLanguage        = 0x000000000000000E,
		ContentLocation        = 0x000000000000000F,
		ContentMd5             = 0x0000000000000010,
		ContentRange           = 0x0000000000000011,
		Expires                = 0x0000000000000012,
		LastModified           = 0x0000000000000013,
		Accept                 = 0x0000000000000014,
		AcceptCharset          = 0x0000000000000015,
		AcceptEncoding         = 0x0000000000000016,
		AcceptLanguage         = 0x0000000000000017,
		Authorization          = 0x0000000000000018,
		Cookie                 = 0x0000000000000019,
		Expect                 = 0x000000000000001A,
		From                   = 0x000000000000001B,
		Host                   = 0x000000000000001C,
		IfMatch                = 0x000000000000001D,
		IfModifiedSince        = 0x000000000000001E,
		IfNoneMatch            = 0x000000000000001F,
		IfRange                = 0x0000000000000020,
		IfUnmodifiedSince      = 0x0000000000000021,
		MaxForwards            = 0x0000000000000022,
		ProxyAuthorization     = 0x0000000000000023,
		Referer                = 0x0000000000000024,
		Range                  = 0x0000000000000025,
		Te                     = 0x0000000000000026,
		Translate              = 0x0000000000000027,
		UserAgent              = 0x0000000000000028,
		SecWebSocketKey        = 0x0000000000000029,
		SecWebSocketExtensions = 0x000000000000002A,
		SecWebSocketProtocol   = 0x000000000000002B,
		SecWebSocketVersion    = 0x000000000000002C
	};

	/**
	 * Enum websocket-sharp.WebSocketSharp.Net.HttpResponseHeader
	 */
	enum class HttpResponseHeader : int32_t
	{
		CacheControl           = 0x0000000000000000,
		Connection             = 0x0000000000000001,
		Date                   = 0x0000000000000002,
		KeepAlive              = 0x0000000000000003,
		Pragma                 = 0x0000000000000004,
		Trailer                = 0x0000000000000005,
		TransferEncoding       = 0x0000000000000006,
		Upgrade                = 0x0000000000000007,
		Via                    = 0x0000000000000008,
		Warning                = 0x0000000000000009,
		Allow                  = 0x000000000000000A,
		ContentLength          = 0x000000000000000B,
		ContentType            = 0x000000000000000C,
		ContentEncoding        = 0x000000000000000D,
		ContentLanguage        = 0x000000000000000E,
		ContentLocation        = 0x000000000000000F,
		ContentMd5             = 0x0000000000000010,
		ContentRange           = 0x0000000000000011,
		Expires                = 0x0000000000000012,
		LastModified           = 0x0000000000000013,
		AcceptRanges           = 0x0000000000000014,
		Age                    = 0x0000000000000015,
		ETag                   = 0x0000000000000016,
		Location               = 0x0000000000000017,
		ProxyAuthenticate      = 0x0000000000000018,
		RetryAfter             = 0x0000000000000019,
		Server                 = 0x000000000000001A,
		SetCookie              = 0x000000000000001B,
		Vary                   = 0x000000000000001C,
		WwwAuthenticate        = 0x000000000000001D,
		SecWebSocketExtensions = 0x000000000000001E,
		SecWebSocketAccept     = 0x000000000000001F,
		SecWebSocketProtocol   = 0x0000000000000020,
		SecWebSocketVersion    = 0x0000000000000021
	};

	/**
	 * Enum Cinemachine.Cinemachine.CinemachineBrain+UpdateMethod
	 */
	enum class CinemachineBrain_UpdateMethod : int32_t
	{
		FixedUpdate  = 0x0000000000000000,
		LateUpdate   = 0x0000000000000001,
		SmartUpdate  = 0x0000000000000002,
		ManualUpdate = 0x0000000000000003
	};

	/**
	 * Enum Cinemachine.Cinemachine.CinemachineBrain+BrainUpdateMethod
	 */
	enum class CinemachineBrain_BrainUpdateMethod : int32_t
	{
		FixedUpdate = 0x0000000000000000,
		LateUpdate  = 0x0000000000000001
	};

	/**
	 * Enum Cinemachine.Cinemachine.CinemachineCollider+ResolutionStrategy
	 */
	enum class CinemachineCollider_ResolutionStrategy : int32_t
	{
		PullCameraForward      = 0x0000000000000000,
		PreserveCameraHeight   = 0x0000000000000001,
		PreserveCameraDistance = 0x0000000000000002
	};

	/**
	 * Enum Cinemachine.Cinemachine.CinemachineConfiner+Mode
	 */
	enum class CinemachineConfiner_Mode : int32_t
	{
		Confine2D = 0x0000000000000000,
		Confine3D = 0x0000000000000001
	};

	/**
	 * Enum Cinemachine.Cinemachine.CinemachineDollyCart+UpdateMethod
	 */
	enum class CinemachineDollyCart_UpdateMethod : int32_t
	{
		Update      = 0x0000000000000000,
		FixedUpdate = 0x0000000000000001,
		LateUpdate  = 0x0000000000000002
	};

	/**
	 * Enum Cinemachine.Cinemachine.CinemachineStoryboard+FillStrategy
	 */
	enum class CinemachineStoryboard_FillStrategy : int32_t
	{
		BestFit        = 0x0000000000000000,
		CropImageToFit = 0x0000000000000001,
		StretchToFit   = 0x0000000000000002
	};

	/**
	 * Enum Cinemachine.Cinemachine.CinemachineStoryboard+StoryboardRenderMode
	 */
	enum class CinemachineStoryboard_StoryboardRenderMode : int32_t
	{
		ScreenSpaceOverlay = 0x0000000000000000,
		ScreenSpaceCamera  = 0x0000000000000001
	};

	/**
	 * Enum Cinemachine.Cinemachine.CinemachineTargetGroup+PositionMode
	 */
	enum class CinemachineTargetGroup_PositionMode : int32_t
	{
		GroupCenter  = 0x0000000000000000,
		GroupAverage = 0x0000000000000001
	};

	/**
	 * Enum Cinemachine.Cinemachine.CinemachineTargetGroup+RotationMode
	 */
	enum class CinemachineTargetGroup_RotationMode : int32_t
	{
		Manual       = 0x0000000000000000,
		GroupAverage = 0x0000000000000001
	};

	/**
	 * Enum Cinemachine.Cinemachine.CinemachineTargetGroup+UpdateMethod
	 */
	enum class CinemachineTargetGroup_UpdateMethod : int32_t
	{
		Update      = 0x0000000000000000,
		FixedUpdate = 0x0000000000000001,
		LateUpdate  = 0x0000000000000002
	};

	/**
	 * Enum Cinemachine.Cinemachine.CinemachineFramingTransposer+FramingMode
	 */
	enum class CinemachineFramingTransposer_FramingMode : int32_t
	{
		Horizontal            = 0x0000000000000000,
		Vertical              = 0x0000000000000001,
		HorizontalAndVertical = 0x0000000000000002,
		None                  = 0x0000000000000003
	};

	/**
	 * Enum Cinemachine.Cinemachine.CinemachineFramingTransposer+AdjustmentMode
	 */
	enum class CinemachineFramingTransposer_AdjustmentMode : int32_t
	{
		ZoomOnly      = 0x0000000000000000,
		DollyOnly     = 0x0000000000000001,
		DollyThenZoom = 0x0000000000000002
	};

	/**
	 * Enum Cinemachine.Cinemachine.CinemachineGroupComposer+FramingMode
	 */
	enum class CinemachineGroupComposer_FramingMode : int32_t
	{
		Horizontal            = 0x0000000000000000,
		Vertical              = 0x0000000000000001,
		HorizontalAndVertical = 0x0000000000000002
	};

	/**
	 * Enum Cinemachine.Cinemachine.CinemachineGroupComposer+AdjustmentMode
	 */
	enum class CinemachineGroupComposer_AdjustmentMode : int32_t
	{
		ZoomOnly      = 0x0000000000000000,
		DollyOnly     = 0x0000000000000001,
		DollyThenZoom = 0x0000000000000002
	};

	/**
	 * Enum Cinemachine.Cinemachine.CinemachineOrbitalTransposer.Heading+HeadingDefinition
	 */
	enum class CinemachineOrbitalTransposer_Heading_HeadingDefinition : int32_t
	{
		PositionDelta = 0x0000000000000000,
		Velocity      = 0x0000000000000001,
		TargetForward = 0x0000000000000002,
		WorldForward  = 0x0000000000000003
	};

	/**
	 * Enum Cinemachine.Cinemachine.CinemachinePOV+RecenterTargetMode
	 */
	enum class CinemachinePOV_RecenterTargetMode : int32_t
	{
		None                = 0x0000000000000000,
		FollowTargetForward = 0x0000000000000001,
		LookAtTargetForward = 0x0000000000000002
	};

	/**
	 * Enum Cinemachine.Cinemachine.CinemachineTrackedDolly+CameraUpMode
	 */
	enum class CinemachineTrackedDolly_CameraUpMode : int32_t
	{
		Default            = 0x0000000000000000,
		Path               = 0x0000000000000001,
		PathNoRoll         = 0x0000000000000002,
		FollowTarget       = 0x0000000000000003,
		FollowTargetNoRoll = 0x0000000000000004
	};

	/**
	 * Enum Cinemachine.Cinemachine.CinemachineTransposer+BindingMode
	 */
	enum class CinemachineTransposer_BindingMode : int32_t
	{
		LockToTargetOnAssign    = 0x0000000000000000,
		LockToTargetWithWorldUp = 0x0000000000000001,
		LockToTargetNoRoll      = 0x0000000000000002,
		LockToTarget            = 0x0000000000000003,
		WorldSpace              = 0x0000000000000004,
		SimpleFollowWithWorldUp = 0x0000000000000005
	};

	/**
	 * Enum Cinemachine.Cinemachine.CinemachineTransposer+AngularDampingMode
	 */
	enum class CinemachineTransposer_AngularDampingMode : int32_t
	{
		Euler      = 0x0000000000000000,
		Quaternion = 0x0000000000000001
	};

	/**
	 * Enum Cinemachine.Cinemachine.AxisState+SpeedMode
	 */
	enum class AxisState_SpeedMode : int32_t
	{
		MaxSpeed       = 0x0000000000000000,
		InputValueGain = 0x0000000000000001
	};

	/**
	 * Enum Cinemachine.Cinemachine.CameraState+BlendHintValue
	 */
	enum class CameraState_BlendHintValue : int32_t
	{
		Nothing                  = 0x0000000000000000,
		NoPosition               = 0x0000000000000001,
		NoOrientation            = 0x0000000000000002,
		NoTransform              = 0x0000000000000003,
		SphericalPositionBlend   = 0x0000000000000004,
		CylindricalPositionBlend = 0x0000000000000008,
		RadialAimBlend           = 0x0000000000000010,
		IgnoreLookAtTarget       = 0x0000000000000020,
		NoLens                   = 0x0000000000000040
	};

	/**
	 * Enum Cinemachine.Cinemachine.CinemachineBlendDefinition+Style
	 */
	enum class CinemachineBlendDefinition_Style : int32_t
	{
		Cut       = 0x0000000000000000,
		EaseInOut = 0x0000000000000001,
		EaseIn    = 0x0000000000000002,
		EaseOut   = 0x0000000000000003,
		HardIn    = 0x0000000000000004,
		HardOut   = 0x0000000000000005,
		Linear    = 0x0000000000000006,
		Custom    = 0x0000000000000007
	};

	/**
	 * Enum Cinemachine.Cinemachine.CinemachineCore+Stage
	 */
	enum class CinemachineCore_Stage : int32_t
	{
		Body     = 0x0000000000000000,
		Aim      = 0x0000000000000001,
		Noise    = 0x0000000000000002,
		Finalize = 0x0000000000000003
	};

	/**
	 * Enum Cinemachine.Cinemachine.CinemachineCore+UpdateFilter
	 */
	enum class CinemachineCore_UpdateFilter : int32_t
	{
		Fixed      = 0x0000000000000000,
		Late       = 0x0000000000000001,
		Smart      = 0x0000000000000008,
		SmartFixed = 0x0000000000000008,
		SmartLate  = 0x0000000000000009
	};

	/**
	 * Enum Cinemachine.Cinemachine.CinemachinePathBase+PositionUnits
	 */
	enum class CinemachinePathBase_PositionUnits : int32_t
	{
		PathUnits  = 0x0000000000000000,
		Distance   = 0x0000000000000001,
		Normalized = 0x0000000000000002
	};

	/**
	 * Enum Cinemachine.Cinemachine.DocumentationSortingAttribute+Level
	 */
	enum class DocumentationSortingAttribute_Level : int32_t
	{
		Undoc   = 0x0000000000000000,
		API     = 0x0000000000000001,
		UserRef = 0x0000000000000002
	};

	/**
	 * Enum Cinemachine.Cinemachine.CinemachineVirtualCameraBase+StandbyUpdateMode
	 */
	enum class CinemachineVirtualCameraBase_StandbyUpdateMode : int32_t
	{
		Never      = 0x0000000000000000,
		Always     = 0x0000000000000001,
		RoundRobin = 0x0000000000000002
	};

	/**
	 * Enum Cinemachine.Cinemachine.CinemachineVirtualCameraBase+BlendHint
	 */
	enum class CinemachineVirtualCameraBase_BlendHint : int32_t
	{
		None                            = 0x0000000000000000,
		SphericalPosition               = 0x0000000000000001,
		CylindricalPosition             = 0x0000000000000002,
		ScreenSpaceAimWhenTargetsDiffer = 0x0000000000000003
	};

	/**
	 * Enum Cinemachine.Cinemachine.ConfinerOven+BakingState
	 */
	enum class ConfinerOven_BakingState : int32_t
	{
		BAKING  = 0x0000000000000000,
		BAKED   = 0x0000000000000001,
		TIMEOUT = 0x0000000000000002
	};

	/**
	 * Enum Cinemachine.Cinemachine.LensSettings+OverrideModes
	 */
	enum class LensSettings_OverrideModes : int32_t
	{
		None         = 0x0000000000000000,
		Orthographic = 0x0000000000000001,
		Perspective  = 0x0000000000000002,
		Physical     = 0x0000000000000003
	};

	/**
	 * Enum Cinemachine.Cinemachine.TargetPositionCache+Mode
	 */
	enum class TargetPositionCache_Mode : int32_t
	{
		Disabled = 0x0000000000000000,
		Record   = 0x0000000000000001,
		Playback = 0x0000000000000002
	};

	/**
	 * Enum Cinemachine.Cinemachine.UpdateTracker+UpdateClock
	 */
	enum class UpdateTracker_UpdateClock : int32_t
	{
		Fixed = 0x0000000000000000,
		Late  = 0x0000000000000001
	};

	/**
	 * Enum Cinemachine.Cinemachine.CinemachineTriggerAction.ActionSettings+Mode
	 */
	enum class CinemachineTriggerAction_ActionSettings_Mode : int32_t
	{
		Custom        = 0x0000000000000000,
		PriorityBoost = 0x0000000000000001,
		Activate      = 0x0000000000000002,
		Deactivate    = 0x0000000000000003,
		Enable        = 0x0000000000000004,
		Disable       = 0x0000000000000005,
		Play          = 0x0000000000000006,
		Stop          = 0x0000000000000007
	};

	/**
	 * Enum Cinemachine.Cinemachine.CinemachineTriggerAction.ActionSettings+TimeMode
	 */
	enum class CinemachineTriggerAction_ActionSettings_TimeMode : int32_t
	{
		FromStart = 0x0000000000000000,
		FromEnd   = 0x0000000000000001,
		BeforeNow = 0x0000000000000002,
		AfterNow  = 0x0000000000000003
	};

	/**
	 * Enum Cinemachine.Cinemachine.CinemachineImpulseDefinition+ImpulseShapes
	 */
	enum class CinemachineImpulseDefinition_ImpulseShapes : int32_t
	{
		Custom    = 0x0000000000000000,
		Recoil    = 0x0000000000000001,
		Bump      = 0x0000000000000002,
		Explosion = 0x0000000000000003,
		Rumble    = 0x0000000000000004
	};

	/**
	 * Enum Cinemachine.Cinemachine.CinemachineImpulseDefinition+ImpulseTypes
	 */
	enum class CinemachineImpulseDefinition_ImpulseTypes : int32_t
	{
		Uniform     = 0x0000000000000000,
		Dissipating = 0x0000000000000001,
		Propagating = 0x0000000000000002,
		Legacy      = 0x0000000000000003
	};

	/**
	 * Enum Cinemachine.Cinemachine.CinemachineImpulseDefinition+RepeatMode
	 */
	enum class CinemachineImpulseDefinition_RepeatMode : int32_t
	{
		Stretch = 0x0000000000000000,
		Loop    = 0x0000000000000001
	};

	/**
	 * Enum Cinemachine.Cinemachine.CinemachineImpulseManager.ImpulseEvent+DirectionMode
	 */
	enum class CinemachineImpulseManager_ImpulseEvent_DirectionMode : int32_t
	{
		Fixed              = 0x0000000000000000,
		RotateTowardSource = 0x0000000000000001
	};

	/**
	 * Enum Cinemachine.Cinemachine.CinemachineImpulseManager.ImpulseEvent+DissipationMode
	 */
	enum class CinemachineImpulseManager_ImpulseEvent_DissipationMode : int32_t
	{
		LinearDecay      = 0x0000000000000000,
		SoftDecay        = 0x0000000000000001,
		ExponentialDecay = 0x0000000000000002
	};

	/**
	 * Enum Cinemachine.Cinemachine.PostFX.CinemachinePostProcessing+FocusTrackingMode
	 */
	enum class CinemachinePostProcessing_FocusTrackingMode : int32_t
	{
		None         = 0x0000000000000000,
		LookAtTarget = 0x0000000000000001,
		FollowTarget = 0x0000000000000002,
		CustomTarget = 0x0000000000000003,
		Camera       = 0x0000000000000004
	};

	/**
	 * Enum Cinemachine.Cinemachine.PostFX.CinemachineVolumeSettings+FocusTrackingMode
	 */
	enum class CinemachineVolumeSettings_FocusTrackingMode : int32_t
	{
		None         = 0x0000000000000000,
		LookAtTarget = 0x0000000000000001,
		FollowTarget = 0x0000000000000002,
		CustomTarget = 0x0000000000000003,
		Camera       = 0x0000000000000004
	};

	/**
	 * Enum Photon3Unity3D.ExitGames.Client.Photon.StatusCode
	 */
	enum class StatusCode : int32_t
	{
		Connect                         = 0x0000000000000400,
		Disconnect                      = 0x0000000000000401,
		Exception                       = 0x0000000000000402,
		ExceptionOnConnect              = 0x00000000000003FF,
		ServerAddressInvalid            = 0x000000000000041A,
		DnsExceptionOnConnect           = 0x000000000000041B,
		SecurityExceptionOnConnect      = 0x00000000000003FE,
		SendError                       = 0x0000000000000406,
		ExceptionOnReceive              = 0x000000000000040F,
		TimeoutDisconnect               = 0x0000000000000410,
		DisconnectByServerTimeout       = 0x0000000000000411,
		DisconnectByServerUserLimit     = 0x0000000000000412,
		DisconnectByServerLogic         = 0x0000000000000413,
		DisconnectByServerReasonUnknown = 0x0000000000000414,
		EncryptionEstablished           = 0x0000000000000418,
		EncryptionFailedToEstablish     = 0x0000000000000419
	};

	/**
	 * Enum Photon3Unity3D.ExitGames.Client.Photon.PhotonSocketState
	 */
	enum class PhotonSocketState : int32_t
	{
		Disconnected  = 0x0000000000000000,
		Connecting    = 0x0000000000000001,
		Connected     = 0x0000000000000002,
		Disconnecting = 0x0000000000000003
	};

	/**
	 * Enum Photon3Unity3D.ExitGames.Client.Photon.PhotonSocketError
	 */
	enum class PhotonSocketError : int32_t
	{
		Success   = 0x0000000000000000,
		Skipped   = 0x0000000000000001,
		NoData    = 0x0000000000000002,
		Exception = 0x0000000000000003,
		Busy      = 0x0000000000000004
	};

	/**
	 * Enum Photon3Unity3D.ExitGames.Client.Photon.SerializationProtocol
	 */
	enum class SerializationProtocol : int32_t
	{
		GpBinaryV16 = 0x0000000000000000,
		GpBinaryV18 = 0x0000000000000001
	};

	/**
	 * Enum Photon3Unity3D.ExitGames.Client.Photon.IProtocol+DeserializationFlags
	 */
	enum class IProtocol_DeserializationFlags : int32_t
	{
		None                 = 0x0000000000000000,
		AllowPooledByteArray = 0x0000000000000001,
		WrapIncomingStructs  = 0x0000000000000002
	};

	/**
	 * Enum Photon3Unity3D.ExitGames.Client.Photon.ConnectionStateValue
	 */
	enum class ConnectionStateValue : uint8_t
	{
		Disconnected            = 0x0000000000000000,
		Connecting              = 0x0000000000000001,
		Connected               = 0x0000000000000003,
		Disconnecting           = 0x0000000000000004,
		AcknowledgingDisconnect = 0x0000000000000005,
		Zombie                  = 0x0000000000000006
	};

	/**
	 * Enum Photon3Unity3D.ExitGames.Client.Photon.EgMessageType
	 */
	enum class EgMessageType : uint8_t
	{
		Init                      = 0x0000000000000000,
		InitResponse              = 0x0000000000000001,
		Operation                 = 0x0000000000000002,
		OperationResponse         = 0x0000000000000003,
		Event                     = 0x0000000000000004,
		DisconnectReason          = 0x0000000000000005,
		InternalOperationRequest  = 0x0000000000000006,
		InternalOperationResponse = 0x0000000000000007,
		Message                   = 0x0000000000000008,
		RawMessage                = 0x0000000000000009
	};

	/**
	 * Enum Photon3Unity3D.ExitGames.Client.Photon.InitV3Flags
	 */
	enum class InitV3Flags : int16_t
	{
		NoFlags        = 0x0000000000000000,
		EncryptionFlag = 0x0000000000000001,
		IPv6Flag       = 0x0000000000000002,
		ReleaseSdkFlag = 0x0000000000000004
	};

	/**
	 * Enum Photon3Unity3D.ExitGames.Client.Photon.PeerStateValue
	 */
	enum class PeerStateValue : uint8_t
	{
		Disconnected            = 0x0000000000000000,
		Connecting              = 0x0000000000000001,
		InitializingApplication = 0x000000000000000A,
		Connected               = 0x0000000000000003,
		Disconnecting           = 0x0000000000000004
	};

	/**
	 * Enum Photon3Unity3D.ExitGames.Client.Photon.ConnectionProtocol
	 */
	enum class ConnectionProtocol : uint8_t
	{
		Udp             = 0x0000000000000000,
		Tcp             = 0x0000000000000001,
		WebSocket       = 0x0000000000000004,
		WebSocketSecure = 0x0000000000000005
	};

	/**
	 * Enum Photon3Unity3D.ExitGames.Client.Photon.DebugLevel
	 */
	enum class DebugLevel : uint8_t
	{
		OFF     = 0x0000000000000000,
		_ERROR_ = 0x0000000000000001,
		WARNING = 0x0000000000000002,
		INFO    = 0x0000000000000003,
		ALL     = 0x0000000000000005
	};

	/**
	 * Enum Photon3Unity3D.ExitGames.Client.Photon.TargetFrameworks
	 */
	enum class TargetFrameworks : int32_t
	{
		Unknown       = 0x0000000000000000,
		Net35         = 0x0000000000000001,
		NetStandard20 = 0x0000000000000002,
		Metro         = 0x0000000000000003
	};

	/**
	 * Enum Photon3Unity3D.ExitGames.Client.Photon.Protocol16+GpType
	 */
	enum class Protocol16_GpType : uint8_t
	{
		Unknown           = 0x0000000000000000,
		Array             = 0x0000000000000079,
		Boolean           = 0x000000000000006F,
		Byte              = 0x0000000000000062,
		ByteArray         = 0x0000000000000078,
		ObjectArray       = 0x000000000000007A,
		Short             = 0x000000000000006B,
		Float             = 0x0000000000000066,
		Dictionary        = 0x0000000000000044,
		Double            = 0x0000000000000064,
		Hashtable         = 0x0000000000000068,
		Integer           = 0x0000000000000069,
		IntegerArray      = 0x000000000000006E,
		Long              = 0x000000000000006C,
		String            = 0x0000000000000073,
		StringArray       = 0x0000000000000061,
		Custom            = 0x0000000000000063,
		Null              = 0x000000000000002A,
		EventData         = 0x0000000000000065,
		OperationRequest  = 0x0000000000000071,
		OperationResponse = 0x0000000000000070
	};

	/**
	 * Enum Photon3Unity3D.ExitGames.Client.Photon.Protocol18+GpType
	 */
	enum class Protocol18_GpType : uint8_t
	{
		Unknown             = 0x0000000000000000,
		Boolean             = 0x0000000000000002,
		Byte                = 0x0000000000000003,
		Short               = 0x0000000000000004,
		Float               = 0x0000000000000005,
		Double              = 0x0000000000000006,
		String              = 0x0000000000000007,
		Null                = 0x0000000000000008,
		CompressedInt       = 0x0000000000000009,
		CompressedLong      = 0x000000000000000A,
		Int1                = 0x000000000000000B,
		Int1_12             = 0x000000000000000C,
		Int2                = 0x000000000000000D,
		Int2_14             = 0x000000000000000E,
		L1                  = 0x000000000000000F,
		L1_16               = 0x0000000000000010,
		L2                  = 0x0000000000000011,
		L2_18               = 0x0000000000000012,
		Custom              = 0x0000000000000013,
		CustomTypeSlim      = 0x0000000000000080,
		Dictionary          = 0x0000000000000014,
		Hashtable           = 0x0000000000000015,
		ObjectArray         = 0x0000000000000017,
		OperationRequest    = 0x0000000000000018,
		OperationResponse   = 0x0000000000000019,
		EventData           = 0x000000000000001A,
		BooleanFalse        = 0x000000000000001B,
		BooleanTrue         = 0x000000000000001C,
		ShortZero           = 0x000000000000001D,
		IntZero             = 0x000000000000001E,
		LongZero            = 0x000000000000001F,
		FloatZero           = 0x0000000000000020,
		DoubleZero          = 0x0000000000000021,
		ByteZero            = 0x0000000000000022,
		Array               = 0x0000000000000040,
		BooleanArray        = 0x0000000000000042,
		ByteArray           = 0x0000000000000043,
		ShortArray          = 0x0000000000000044,
		DoubleArray         = 0x0000000000000046,
		FloatArray          = 0x0000000000000045,
		StringArray         = 0x0000000000000047,
		HashtableArray      = 0x0000000000000055,
		DictionaryArray     = 0x0000000000000054,
		CustomTypeArray     = 0x0000000000000053,
		CompressedIntArray  = 0x0000000000000049,
		CompressedLongArray = 0x000000000000004A
	};

	/**
	 * Enum Photon3Unity3D.ExitGames.Client.Photon.DeliveryMode
	 */
	enum class DeliveryMode : int32_t
	{
		Unreliable            = 0x0000000000000000,
		Reliable              = 0x0000000000000001,
		UnreliableUnsequenced = 0x0000000000000002,
		ReliableUnsequenced   = 0x0000000000000003
	};

	/**
	 * Enum Photon3Unity3D.ExitGames.Client.Photon.StructWrapping.WrappedType
	 */
	enum class WrappedType : int32_t
	{
		Unknown = 0x0000000000000000,
		Bool    = 0x0000000000000001,
		Byte    = 0x0000000000000002,
		Int16   = 0x0000000000000003,
		Int32   = 0x0000000000000004,
		Int64   = 0x0000000000000005,
		Single  = 0x0000000000000006,
		Double  = 0x0000000000000007
	};

	/**
	 * Enum Photon3Unity3D.ExitGames.Client.Photon.StructWrapping.Pooling
	 */
	enum class Pooling : int32_t
	{
		Disconnected    = 0x0000000000000000,
		Connected       = 0x0000000000000001,
		ReleaseOnUnwrap = 0x0000000000000002,
		Readonly        = 0x0000000000000004,
		CheckedOut      = 0x0000000000000008
	};

	/**
	 * Enum UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.TextFontWeight
	 */
	enum class TextFontWeight : int32_t
	{
		Thin       = 0x0000000000000064,
		ExtraLight = 0x00000000000000C8,
		Light      = 0x000000000000012C,
		Regular    = 0x0000000000000190,
		Medium     = 0x00000000000001F4,
		SemiBold   = 0x0000000000000258,
		Bold       = 0x00000000000002BC,
		Heavy      = 0x0000000000000320,
		Black      = 0x0000000000000384
	};

	/**
	 * Enum UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.AtlasPopulationMode
	 */
	enum class AtlasPopulationMode_1 : int32_t
	{
		Static    = 0x0000000000000000,
		Dynamic   = 0x0000000000000001,
		DynamicOS = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.VertexSortingOrder
	 */
	enum class VertexSortingOrder_1 : int32_t
	{
		Normal  = 0x0000000000000000,
		Reverse = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.ColorGradientMode
	 */
	enum class ColorGradientMode : int32_t
	{
		Single              = 0x0000000000000000,
		HorizontalGradient  = 0x0000000000000001,
		VerticalGradient    = 0x0000000000000002,
		FourCornersGradient = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.TextElementType
	 */
	enum class TextElementType_1 : uint8_t
	{
		Character = 0x0000000000000001,
		Sprite    = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.TextOverflowMode
	 */
	enum class TextOverflowMode : int32_t
	{
		Overflow   = 0x0000000000000000,
		Ellipsis   = 0x0000000000000001,
		Masking    = 0x0000000000000002,
		Truncate   = 0x0000000000000003,
		ScrollRect = 0x0000000000000004,
		Page       = 0x0000000000000005,
		Linked     = 0x0000000000000006
	};

	/**
	 * Enum UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.TextureMapping
	 */
	enum class TextureMapping : int32_t
	{
		Character   = 0x0000000000000000,
		Line        = 0x0000000000000001,
		Paragraph   = 0x0000000000000002,
		MatchAspect = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.TextAlignment
	 */
	enum class TextAlignment : int32_t
	{
		TopLeft            = 0x0000000000000101,
		TopCenter          = 0x0000000000000102,
		TopRight           = 0x0000000000000104,
		TopJustified       = 0x0000000000000108,
		TopFlush           = 0x0000000000000110,
		TopGeoAligned      = 0x0000000000000120,
		MiddleLeft         = 0x0000000000000201,
		MiddleCenter       = 0x0000000000000202,
		MiddleRight        = 0x0000000000000204,
		MiddleJustified    = 0x0000000000000208,
		MiddleFlush        = 0x0000000000000210,
		MiddleGeoAligned   = 0x0000000000000220,
		BottomLeft         = 0x0000000000000401,
		BottomCenter       = 0x0000000000000402,
		BottomRight        = 0x0000000000000404,
		BottomJustified    = 0x0000000000000408,
		BottomFlush        = 0x0000000000000410,
		BottomGeoAligned   = 0x0000000000000420,
		BaselineLeft       = 0x0000000000000801,
		BaselineCenter     = 0x0000000000000802,
		BaselineRight      = 0x0000000000000804,
		BaselineJustified  = 0x0000000000000808,
		BaselineFlush      = 0x0000000000000810,
		BaselineGeoAligned = 0x0000000000000820,
		MidlineLeft        = 0x0000000000001001,
		MidlineCenter      = 0x0000000000001002,
		MidlineRight       = 0x0000000000001004,
		MidlineJustified   = 0x0000000000001008,
		MidlineFlush       = 0x0000000000001010,
		MidlineGeoAligned  = 0x0000000000001020,
		CaplineLeft        = 0x0000000000002001,
		CaplineCenter      = 0x0000000000002002,
		CaplineRight       = 0x0000000000002004,
		CaplineJustified   = 0x0000000000002008,
		CaplineFlush       = 0x0000000000002010,
		CaplineGeoAligned  = 0x0000000000002020
	};

	/**
	 * Enum UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.FontStyles
	 */
	enum class FontStyles_1 : int32_t
	{
		Normal        = 0x0000000000000000,
		Bold          = 0x0000000000000001,
		Italic        = 0x0000000000000002,
		Underline     = 0x0000000000000004,
		LowerCase     = 0x0000000000000008,
		UpperCase     = 0x0000000000000010,
		SmallCaps     = 0x0000000000000020,
		Strikethrough = 0x0000000000000040,
		Superscript   = 0x0000000000000080,
		Subscript     = 0x0000000000000100,
		Highlight     = 0x0000000000000200
	};

	/**
	 * Enum UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.MarkupTag
	 */
	enum class MarkupTag_1 : int32_t
	{
		BOLD                  = 0x0000000000000042,
		SLASH_BOLD            = 0x000000000000064D,
		ITALIC                = 0x0000000000000049,
		SLASH_ITALIC          = 0x0000000000000646,
		UNDERLINE             = 0x0000000000000055,
		SLASH_UNDERLINE       = 0x000000000000065A,
		STRIKETHROUGH         = 0x0000000000000053,
		SLASH_STRIKETHROUGH   = 0x000000000000065C,
		MARK                  = 0x0000000000292F75,
		SLASH_MARK            = 0x00000000036F95DA,
		SUBSCRIPT             = 0x00000000000167E4,
		SLASH_SUBSCRIPT       = 0x00000000001B02EB,
		SUPERSCRIPT           = 0x00000000000167F6,
		SLASH_SUPERSCRIPT     = 0x00000000001B02F9,
		COLOR                 = 0x0000000004E3381D,
		SLASH_COLOR           = 0x0000000071C96D92,
		ALPHA                 = 0x00000000047AF054,
		A                     = 0x0000000000000041,
		SLASH_A               = 0x000000000000064E,
		SIZE                  = 0x00000000002EB625,
		SLASH_SIZE            = 0x00000000037B920A,
		SPRITE                = -991527447,
		NO_BREAK              = 0x00000000002B96D1,
		SLASH_NO_BREAK        = 0x00000000036D097E,
		STYLE                 = 0x0000000005F9BD17,
		SLASH_STYLE           = 0x0000000072E6F418,
		FONT                  = 0x0000000000277753,
		SLASH_FONT            = 0x00000000037128FC,
		SLASH_MATERIAL        = -1100708252,
		LINK                  = 0x0000000000288780,
		SLASH_LINK            = 0x00000000037038AF,
		FONT_WEIGHT           = -1889896162,
		SLASH_FONT_WEIGHT     = -757976431,
		NO_PARSE              = -408011596,
		SLASH_NO_PARSE        = -294095813,
		POSITION              = 0x0000000000014DAC,
		SLASH_POSITION        = 0x00000000001B2023,
		VERTICAL_OFFSET       = 0x00000000745EF45B,
		SLASH_VERTICAL_OFFSET = -11107948,
		SPACE                 = 0x0000000005F72764,
		SLASH_SPACE           = 0x0000000072E9022B,
		PAGE                  = 0x00000000002ADB73,
		SLASH_PAGE            = 0x00000000037F71DC,
		ALIGN                 = 0x00000000047A86ED,
		SLASH_ALIGN           = 0x0000000072343FA2,
		WIDTH                 = 0x00000000064E48E6,
		SLASH_WIDTH           = 0x0000000072A5AA29,
		GRADIENT              = -1999759898,
		SLASH_GRADIENT        = -1854491959,
		CHARACTER_SPACE       = -1584382009,
		SLASH_CHARACTER_SPACE = -1394426712,
		MONOSPACE             = -1340221943,
		SLASH_MONOSPACE       = -1638865562,
		CLASS                 = 0x0000000004E4FBEE,
		INDENT                = -1514123076,
		SLASH_INDENT          = -1496889389,
		LINE_INDENT           = -844305121,
		SLASH_LINE_INDENT     = 0x0000000005989790,
		MARGIN                = -1355614050,
		SLASH_MARGIN          = -1649644303,
		MARGIN_LEFT           = -272933656,
		MARGIN_RIGHT          = -447416589,
		LINE_HEIGHT           = -799081892,
		SLASH_LINE_HEIGHT     = 0x000000000BF2AAD3,
		ACTION                = -1827519330,
		SLASH_ACTION          = -1187217679,
		SCALE                 = 0x0000000005FE5278,
		SLASH_SCALE           = 0x0000000072F142B7,
		ROTATE                = -1000007783,
		SLASH_ROTATE          = -764695562,
		LOWERCASE             = -1506899689,
		SLASH_LOWERCASE       = -1451284584,
		ALLCAPS               = 0x000000000D0298A0,
		SLASH_ALLCAPS         = -797437649,
		UPPERCASE             = -305409418,
		SLASH_UPPERCASE       = -582368199,
		SMALLCAPS             = -766062114,
		SLASH_SMALLCAPS       = 0x000000000BEA90D1,
		LIGA                  = 0x00000000002886E3,
		SLASH_LIGA            = 0x0000000003703A4C,
		FRAC                  = 0x000000000027A676,
		SLASH_FRAC            = 0x0000000003719259,
		NAME                  = 0x00000000002BE0E7,
		INDEX                 = 0x000000000505D3FE,
		TINT                  = 0x00000000002D2C87,
		ANIM                  = 0x000000000022D74B,
		MATERIAL              = 0x00000000313400CB,
		HREF                  = 0x000000000026AFB9,
		ANGLE                 = 0x00000000047DB7C1,
		RED                   = 0x00000000000165F3,
		GREEN                 = 0x00000000053084FB,
		BLUE                  = 0x0000000000257E7E,
		YELLOW                = -882444668,
		ORANGE                = -1108587920,
		BLACK                 = 0x0000000004D51A27,
		WHITE                 = 0x00000000064C8D87,
		PURPLE                = -1250222130,
		BR                    = 0x00000000000008D0,
		ZWSP                  = 0x0000000000322CAE,
		NBSP                  = 0x00000000002BC72F,
		SHY                   = 0x0000000000016A02,
		LEFT                  = 0x000000000028989B,
		RIGHT                 = 0x0000000005F4EC60,
		CENTER                = -1591113269,
		JUSTIFIED             = 0x0000000030B3D31F,
		FLUSH                 = 0x0000000005196C24,
		NONE                  = 0x00000000002B984A,
		PLUS                  = 0x000000000000002B,
		MINUS                 = 0x000000000000002D,
		PX                    = 0x0000000000000A08,
		PLUS_PX               = 0x000000000000C163,
		MINUS_PX              = 0x000000000000B965,
		EM                    = 0x00000000000008A8,
		PLUS_EM               = 0x000000000000BFC3,
		MINUS_EM              = 0x000000000000B6C5,
		PCT                   = 0x0000000000014C27,
		PLUS_PCT              = 0x000000000018F02C,
		MINUS_PCT             = 0x000000000017E96A,
		PERCENTAGE            = 0x0000000000000025,
		PLUS_PERCENTAGE       = 0x00000000000005AE,
		MINUS_PERCENTAGE      = 0x00000000000005E8,
		_TRUE_                = 0x00000000002CBD36,
		_FALSE_               = 0x00000000051772DD,
		INVALID               = 0x000000005E7F8411,
		NORMAL                = -1183493901,
		DEFAULT               = -620974005
	};

	/**
	 * Enum UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.TagValueType
	 */
	enum class TagValueType_1 : int32_t
	{
		None           = 0x0000000000000000,
		NumericalValue = 0x0000000000000001,
		StringValue    = 0x0000000000000002,
		ColorValue     = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.TagUnitType
	 */
	enum class TagUnitType_1 : int32_t
	{
		Pixels     = 0x0000000000000000,
		FontUnits  = 0x0000000000000001,
		Percentage = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.Purchasing.Stores.UnityEngine.Purchasing.AndroidStore
	 */
	enum class AndroidStore : int32_t
	{
		GooglePlay     = 0x0000000000000000,
		AmazonAppStore = 0x0000000000000001,
		UDP            = 0x0000000000000002,
		NotSpecified   = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.Purchasing.Stores.UnityEngine.Purchasing.AndroidStoreMeta
	 */
	enum class AndroidStoreMeta : int32_t
	{
		AndroidStoreStart = 0x0000000000000000,
		AndroidStoreEnd   = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.Purchasing.Stores.UnityEngine.Purchasing.GoogleBillingConnectionState
	 */
	enum class GoogleBillingConnectionState : int32_t
	{
		Disconnected = 0x0000000000000000,
		Connecting   = 0x0000000000000001,
		Connected    = 0x0000000000000002,
		Closed       = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.Purchasing.Stores.UnityEngine.Purchasing.GooglePlayProrationMode
	 */
	enum class GooglePlayProrationMode : int32_t
	{
		UnknownSubscriptionUpgradeDowngradePolicy = 0x0000000000000000,
		ImmediateWithTimeProration                = 0x0000000000000001,
		ImmediateAndChargeProratedPrice           = 0x0000000000000002,
		ImmediateWithoutProration                 = 0x0000000000000003,
		Deferred                                  = 0x0000000000000004,
		ImmediateAndChargeFullPrice               = 0x0000000000000005
	};

	/**
	 * Enum UnityEngine.Purchasing.Stores.UnityEngine.Purchasing.AppleStorePromotionVisibility
	 */
	enum class AppleStorePromotionVisibility : int32_t
	{
		Default = 0x0000000000000000,
		Hide    = 0x0000000000000001,
		Show    = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.Purchasing.Stores.UnityEngine.Purchasing.AppStore
	 */
	enum class AppStore : int32_t
	{
		NotSpecified   = 0x0000000000000000,
		GooglePlay     = 0x0000000000000001,
		AmazonAppStore = 0x0000000000000002,
		UDP            = 0x0000000000000003,
		MacAppStore    = 0x0000000000000004,
		AppleAppStore  = 0x0000000000000005,
		WinRT          = 0x0000000000000006,
		fake           = 0x0000000000000007
	};

	/**
	 * Enum UnityEngine.Purchasing.Stores.UnityEngine.Purchasing.AppStoreMeta
	 */
	enum class AppStoreMeta : int32_t
	{
		AndroidStoreStart = 0x0000000000000001,
		AndroidStoreEnd   = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.Purchasing.Stores.UnityEngine.Purchasing.FakeStoreUIMode
	 */
	enum class FakeStoreUIMode : int32_t
	{
		Default       = 0x0000000000000000,
		StandardUser  = 0x0000000000000001,
		DeveloperUser = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.Purchasing.Stores.UnityEngine.Purchasing.FakeStore+DialogType
	 */
	enum class FakeStore_DialogType : int32_t
	{
		Purchase         = 0x0000000000000000,
		RetrieveProducts = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.Purchasing.Stores.UnityEngine.Purchasing.TranslationLocale
	 */
	enum class TranslationLocale : int32_t
	{
		zh_TW = 0x0000000000000000,
		cs_CZ = 0x0000000000000001,
		da_DK = 0x0000000000000002,
		nl_NL = 0x0000000000000003,
		en_US = 0x0000000000000004,
		fr_FR = 0x0000000000000005,
		fi_FI = 0x0000000000000006,
		de_DE = 0x0000000000000007,
		iw_IL = 0x0000000000000008,
		hi_IN = 0x0000000000000009,
		it_IT = 0x000000000000000A,
		ja_JP = 0x000000000000000B,
		ko_KR = 0x000000000000000C,
		no_NO = 0x000000000000000D,
		pl_PL = 0x000000000000000E,
		pt_PT = 0x000000000000000F,
		ru_RU = 0x0000000000000010,
		es_ES = 0x0000000000000011,
		sv_SE = 0x0000000000000012,
		zh_CN = 0x0000000000000013,
		en_AU = 0x0000000000000014,
		en_CA = 0x0000000000000015,
		en_GB = 0x0000000000000016,
		fr_CA = 0x0000000000000017,
		el_GR = 0x0000000000000018,
		id_ID = 0x0000000000000019,
		ms_MY = 0x000000000000001A,
		pt_BR = 0x000000000000001B,
		es_MX = 0x000000000000001C,
		th_TH = 0x000000000000001D,
		tr_TR = 0x000000000000001E,
		vi_VN = 0x000000000000001F
	};

	/**
	 * Enum UnityEngine.Purchasing.Stores.UnityEngine.Purchasing.ProductCatalogPayout+ProductCatalogPayoutType
	 */
	enum class ProductCatalogPayout_ProductCatalogPayoutType : int32_t
	{
		Other    = 0x0000000000000000,
		Currency = 0x0000000000000001,
		Item     = 0x0000000000000002,
		Resource = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.Purchasing.Stores.UnityEngine.Purchasing.StoreSpecificPurchaseErrorCode
	 */
	enum class StoreSpecificPurchaseErrorCode : int32_t
	{
		SKErrorUnknown                              = 0x0000000000000000,
		SKErrorClientInvalid                        = 0x0000000000000001,
		SKErrorPaymentCancelled                     = 0x0000000000000002,
		SKErrorPaymentInvalid                       = 0x0000000000000003,
		SKErrorPaymentNotAllowed                    = 0x0000000000000004,
		SKErrorStoreProductNotAvailable             = 0x0000000000000005,
		SKErrorCloudServicePermissionDenied         = 0x0000000000000006,
		SKErrorCloudServiceNetworkConnectionFailed  = 0x0000000000000007,
		SKErrorCloudServiceRevoked                  = 0x0000000000000008,
		BILLING_RESPONSE_RESULT_OK                  = 0x0000000000000009,
		BILLING_RESPONSE_RESULT_USER_CANCELED       = 0x000000000000000A,
		BILLING_RESPONSE_RESULT_SERVICE_UNAVAILABLE = 0x000000000000000B,
		BILLING_RESPONSE_RESULT_BILLING_UNAVAILABLE = 0x000000000000000C,
		BILLING_RESPONSE_RESULT_ITEM_UNAVAILABLE    = 0x000000000000000D,
		BILLING_RESPONSE_RESULT_DEVELOPER_ERROR     = 0x000000000000000E,
		BILLING_RESPONSE_RESULT_ERROR               = 0x000000000000000F,
		BILLING_RESPONSE_RESULT_ITEM_ALREADY_OWNED  = 0x0000000000000010,
		BILLING_RESPONSE_RESULT_ITEM_NOT_OWNED      = 0x0000000000000011,
		IABHELPER_ERROR_BASE                        = 0x0000000000000012,
		IABHELPER_REMOTE_EXCEPTION                  = 0x0000000000000013,
		IABHELPER_BAD_RESPONSE                      = 0x0000000000000014,
		IABHELPER_VERIFICATION_FAILED               = 0x0000000000000015,
		IABHELPER_SEND_INTENT_FAILED                = 0x0000000000000016,
		IABHELPER_USER_CANCELLED                    = 0x0000000000000017,
		IABHELPER_UNKNOWN_PURCHASE_RESPONSE         = 0x0000000000000018,
		IABHELPER_MISSING_TOKEN                     = 0x0000000000000019,
		IABHELPER_UNKNOWN_ERROR                     = 0x000000000000001A,
		IABHELPER_SUBSCRIPTIONS_NOT_AVAILABLE       = 0x000000000000001B,
		IABHELPER_INVALID_CONSUMPTION               = 0x000000000000001C,
		Amazon_ALREADY_PURCHASED                    = 0x000000000000001D,
		Amazon_FAILED                               = 0x000000000000001E,
		Amazon_INVALID_SKU                          = 0x000000000000001F,
		Amazon_NOT_SUPPORTED                        = 0x0000000000000020,
		Unknown                                     = 0x0000000000000021
	};

	/**
	 * Enum UnityEngine.Purchasing.Stores.UnityEngine.Purchasing.Result
	 */
	enum class Result : int32_t
	{
		True        = 0x0000000000000000,
		False       = 0x0000000000000001,
		Unsupported = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.Purchasing.Stores.UnityEngine.Purchasing.SubscriptionPeriodUnit
	 */
	enum class SubscriptionPeriodUnit : int32_t
	{
		Day          = 0x0000000000000000,
		Month        = 0x0000000000000001,
		Week         = 0x0000000000000002,
		Year         = 0x0000000000000003,
		NotAvailable = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.Purchasing.Stores.UnityEngine.Purchasing.AppleStoreProductType
	 */
	enum class AppleStoreProductType : int32_t
	{
		NonConsumable            = 0x0000000000000000,
		Consumable               = 0x0000000000000001,
		NonRenewingSubscription  = 0x0000000000000002,
		AutoRenewingSubscription = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.Purchasing.Stores.UnityEngine.Purchasing.Models.GoogleRetrieveProductsFailureReason
	 */
	enum class GoogleRetrieveProductsFailureReason : int32_t
	{
		BillingServiceDisconnected = 0x0000000000000000,
		BillingServiceUnavailable  = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.Purchasing.Stores.UnityEngine.Purchasing.Models.GoogleBillingResponseCode
	 */
	enum class GoogleBillingResponseCode : int32_t
	{
		Ok                 = 0x0000000000000000,
		UserCanceled       = 0x0000000000000001,
		ServiceUnavailable = 0x0000000000000002,
		DeveloperError     = 0x0000000000000005,
		FatalError         = 0x0000000000000006,
		ItemAlreadyOwned   = 0x0000000000000007
	};

	/**
	 * Enum Unity.Postprocessing.Runtime.UnityEngine.Rendering.PostProcessing.TrackballAttribute+Mode
	 */
	enum class TrackballAttribute_Mode : int32_t
	{
		None  = 0x0000000000000000,
		Lift  = 0x0000000000000001,
		Gamma = 0x0000000000000002,
		Gain  = 0x0000000000000003
	};

	/**
	 * Enum Unity.Postprocessing.Runtime.UnityEngine.Rendering.PostProcessing.AmbientOcclusionMode
	 */
	enum class AmbientOcclusionMode : int32_t
	{
		ScalableAmbientObscurance      = 0x0000000000000000,
		MultiScaleVolumetricObscurance = 0x0000000000000001
	};

	/**
	 * Enum Unity.Postprocessing.Runtime.UnityEngine.Rendering.PostProcessing.AmbientOcclusionQuality
	 */
	enum class AmbientOcclusionQuality : int32_t
	{
		Lowest = 0x0000000000000000,
		Low    = 0x0000000000000001,
		Medium = 0x0000000000000002,
		High   = 0x0000000000000003,
		Ultra  = 0x0000000000000004
	};

	/**
	 * Enum Unity.Postprocessing.Runtime.UnityEngine.Rendering.PostProcessing.EyeAdaptation
	 */
	enum class EyeAdaptation : int32_t
	{
		Progressive = 0x0000000000000000,
		Fixed       = 0x0000000000000001
	};

	/**
	 * Enum Unity.Postprocessing.Runtime.UnityEngine.Rendering.PostProcessing.BloomRenderer+Pass
	 */
	enum class BloomRenderer_Pass : int32_t
	{
		Prefilter13           = 0x0000000000000000,
		Prefilter4            = 0x0000000000000001,
		Downsample13          = 0x0000000000000002,
		Downsample4           = 0x0000000000000003,
		UpsampleTent          = 0x0000000000000004,
		UpsampleBox           = 0x0000000000000005,
		DebugOverlayThreshold = 0x0000000000000006,
		DebugOverlayTent      = 0x0000000000000007,
		DebugOverlayBox       = 0x0000000000000008
	};

	/**
	 * Enum Unity.Postprocessing.Runtime.UnityEngine.Rendering.PostProcessing.GradingMode
	 */
	enum class GradingMode : int32_t
	{
		LowDefinitionRange  = 0x0000000000000000,
		HighDefinitionRange = 0x0000000000000001,
		External            = 0x0000000000000002
	};

	/**
	 * Enum Unity.Postprocessing.Runtime.UnityEngine.Rendering.PostProcessing.Tonemapper
	 */
	enum class Tonemapper : int32_t
	{
		None    = 0x0000000000000000,
		Neutral = 0x0000000000000001,
		ACES    = 0x0000000000000002,
		Custom  = 0x0000000000000003
	};

	/**
	 * Enum Unity.Postprocessing.Runtime.UnityEngine.Rendering.PostProcessing.ColorGradingRenderer+Pass
	 */
	enum class ColorGradingRenderer_Pass : int32_t
	{
		LutGenLDRFromScratch = 0x0000000000000000,
		LutGenLDR            = 0x0000000000000001,
		LutGenHDR2D          = 0x0000000000000002
	};

	/**
	 * Enum Unity.Postprocessing.Runtime.UnityEngine.Rendering.PostProcessing.KernelSize
	 */
	enum class KernelSize : int32_t
	{
		Small     = 0x0000000000000000,
		Medium    = 0x0000000000000001,
		Large     = 0x0000000000000002,
		VeryLarge = 0x0000000000000003
	};

	/**
	 * Enum Unity.Postprocessing.Runtime.UnityEngine.Rendering.PostProcessing.DepthOfFieldRenderer+Pass
	 */
	enum class DepthOfFieldRenderer_Pass : int32_t
	{
		CoCCalculation         = 0x0000000000000000,
		CoCTemporalFilter      = 0x0000000000000001,
		DownsampleAndPrefilter = 0x0000000000000002,
		BokehSmallKernel       = 0x0000000000000003,
		BokehMediumKernel      = 0x0000000000000004,
		BokehLargeKernel       = 0x0000000000000005,
		BokehVeryLargeKernel   = 0x0000000000000006,
		PostFilter             = 0x0000000000000007,
		Combine                = 0x0000000000000008,
		DebugOverlay           = 0x0000000000000009
	};

	/**
	 * Enum Unity.Postprocessing.Runtime.UnityEngine.Rendering.PostProcessing.MotionBlurRenderer+Pass
	 */
	enum class MotionBlurRenderer_Pass : int32_t
	{
		VelocitySetup  = 0x0000000000000000,
		TileMax1       = 0x0000000000000001,
		TileMax2       = 0x0000000000000002,
		TileMaxV       = 0x0000000000000003,
		NeighborMax    = 0x0000000000000004,
		Reconstruction = 0x0000000000000005
	};

	/**
	 * Enum Unity.Postprocessing.Runtime.UnityEngine.Rendering.PostProcessing.MultiScaleVO+MipLevel
	 */
	enum class MultiScaleVO_MipLevel : int32_t
	{
		Original = 0x0000000000000000,
		L1       = 0x0000000000000001,
		L2       = 0x0000000000000002,
		L3       = 0x0000000000000003,
		L4       = 0x0000000000000004,
		L5       = 0x0000000000000005,
		L6       = 0x0000000000000006
	};

	/**
	 * Enum Unity.Postprocessing.Runtime.UnityEngine.Rendering.PostProcessing.MultiScaleVO+Pass
	 */
	enum class MultiScaleVO_Pass : int32_t
	{
		DepthCopy           = 0x0000000000000000,
		CompositionDeferred = 0x0000000000000001,
		CompositionForward  = 0x0000000000000002,
		DebugOverlay        = 0x0000000000000003
	};

	/**
	 * Enum Unity.Postprocessing.Runtime.UnityEngine.Rendering.PostProcessing.ScalableAO+Pass
	 */
	enum class ScalableAO_Pass : int32_t
	{
		OcclusionEstimationForward  = 0x0000000000000000,
		OcclusionEstimationDeferred = 0x0000000000000001,
		HorizontalBlurForward       = 0x0000000000000002,
		HorizontalBlurDeferred      = 0x0000000000000003,
		VerticalBlur                = 0x0000000000000004,
		CompositionForward          = 0x0000000000000005,
		CompositionDeferred         = 0x0000000000000006,
		DebugOverlay                = 0x0000000000000007
	};

	/**
	 * Enum Unity.Postprocessing.Runtime.UnityEngine.Rendering.PostProcessing.ScreenSpaceReflectionPreset
	 */
	enum class ScreenSpaceReflectionPreset : int32_t
	{
		Lower    = 0x0000000000000000,
		Low      = 0x0000000000000001,
		Medium   = 0x0000000000000002,
		High     = 0x0000000000000003,
		Higher   = 0x0000000000000004,
		Ultra    = 0x0000000000000005,
		Overkill = 0x0000000000000006,
		Custom   = 0x0000000000000007
	};

	/**
	 * Enum Unity.Postprocessing.Runtime.UnityEngine.Rendering.PostProcessing.ScreenSpaceReflectionResolution
	 */
	enum class ScreenSpaceReflectionResolution : int32_t
	{
		Downsampled  = 0x0000000000000000,
		FullSize     = 0x0000000000000001,
		Supersampled = 0x0000000000000002
	};

	/**
	 * Enum Unity.Postprocessing.Runtime.UnityEngine.Rendering.PostProcessing.ScreenSpaceReflectionsRenderer+Pass
	 */
	enum class ScreenSpaceReflectionsRenderer_Pass : int32_t
	{
		Test      = 0x0000000000000000,
		Resolve   = 0x0000000000000001,
		Reproject = 0x0000000000000002,
		Composite = 0x0000000000000003
	};

	/**
	 * Enum Unity.Postprocessing.Runtime.UnityEngine.Rendering.PostProcessing.SubpixelMorphologicalAntialiasing+Pass
	 */
	enum class SubpixelMorphologicalAntialiasing_Pass : int32_t
	{
		EdgeDetection        = 0x0000000000000000,
		BlendWeights         = 0x0000000000000003,
		NeighborhoodBlending = 0x0000000000000006
	};

	/**
	 * Enum Unity.Postprocessing.Runtime.UnityEngine.Rendering.PostProcessing.SubpixelMorphologicalAntialiasing+Quality
	 */
	enum class SubpixelMorphologicalAntialiasing_Quality : int32_t
	{
		Low    = 0x0000000000000000,
		Medium = 0x0000000000000001,
		High   = 0x0000000000000002
	};

	/**
	 * Enum Unity.Postprocessing.Runtime.UnityEngine.Rendering.PostProcessing.TemporalAntialiasing+Pass
	 */
	enum class TemporalAntialiasing_Pass : int32_t
	{
		SolverDilate   = 0x0000000000000000,
		SolverNoDilate = 0x0000000000000001
	};

	/**
	 * Enum Unity.Postprocessing.Runtime.UnityEngine.Rendering.PostProcessing.VignetteMode
	 */
	enum class VignetteMode : int32_t
	{
		Classic = 0x0000000000000000,
		Masked  = 0x0000000000000001
	};

	/**
	 * Enum Unity.Postprocessing.Runtime.UnityEngine.Rendering.PostProcessing.HistogramMonitor+Channel
	 */
	enum class HistogramMonitor_Channel : int32_t
	{
		Red    = 0x0000000000000000,
		Green  = 0x0000000000000001,
		Blue   = 0x0000000000000002,
		Master = 0x0000000000000003
	};

	/**
	 * Enum Unity.Postprocessing.Runtime.UnityEngine.Rendering.PostProcessing.MonitorType
	 */
	enum class MonitorType : int32_t
	{
		LightMeter  = 0x0000000000000000,
		Histogram   = 0x0000000000000001,
		Waveform    = 0x0000000000000002,
		Vectorscope = 0x0000000000000003
	};

	/**
	 * Enum Unity.Postprocessing.Runtime.UnityEngine.Rendering.PostProcessing.TextureParameterDefault
	 */
	enum class TextureParameterDefault : int32_t
	{
		None        = 0x0000000000000000,
		Black       = 0x0000000000000001,
		White       = 0x0000000000000002,
		Transparent = 0x0000000000000003,
		Lut2D       = 0x0000000000000004
	};

	/**
	 * Enum Unity.Postprocessing.Runtime.UnityEngine.Rendering.PostProcessing.DebugOverlay
	 */
	enum class DebugOverlay : int32_t
	{
		None                     = 0x0000000000000000,
		Depth                    = 0x0000000000000001,
		Normals                  = 0x0000000000000002,
		MotionVectors            = 0x0000000000000003,
		NANTracker               = 0x0000000000000004,
		ColorBlindnessSimulation = 0x0000000000000005,
		__                       = 0x0000000000000006,
		AmbientOcclusion         = 0x0000000000000007,
		BloomBuffer              = 0x0000000000000008,
		BloomThreshold           = 0x0000000000000009,
		DepthOfField             = 0x000000000000000A
	};

	/**
	 * Enum Unity.Postprocessing.Runtime.UnityEngine.Rendering.PostProcessing.ColorBlindnessType
	 */
	enum class ColorBlindnessType : int32_t
	{
		Deuteranopia = 0x0000000000000000,
		Protanopia   = 0x0000000000000001,
		Tritanopia   = 0x0000000000000002
	};

	/**
	 * Enum Unity.Postprocessing.Runtime.UnityEngine.Rendering.PostProcessing.PostProcessEvent
	 */
	enum class PostProcessEvent : int32_t
	{
		BeforeTransparent = 0x0000000000000000,
		BeforeStack       = 0x0000000000000001,
		AfterStack        = 0x0000000000000002
	};

	/**
	 * Enum Unity.Postprocessing.Runtime.UnityEngine.Rendering.PostProcessing.PostProcessLayer+Antialiasing
	 */
	enum class PostProcessLayer_Antialiasing : int32_t
	{
		None                              = 0x0000000000000000,
		FastApproximateAntialiasing       = 0x0000000000000001,
		SubpixelMorphologicalAntialiasing = 0x0000000000000002,
		TemporalAntialiasing              = 0x0000000000000003
	};

	/**
	 * Enum Unity.Postprocessing.Runtime.UnityEngine.Rendering.PostProcessing.PostProcessRenderContext+StereoRenderingMode
	 */
	enum class PostProcessRenderContext_StereoRenderingMode : int32_t
	{
		MultiPass           = 0x0000000000000000,
		SinglePass          = 0x0000000000000001,
		SinglePassInstanced = 0x0000000000000002,
		SinglePassMultiview = 0x0000000000000003
	};

	/**
	 * Enum PhotonVoice.API.POpusCodec.Enums.Bandwidth
	 */
	enum class Bandwidth : int32_t
	{
		Narrowband    = 0x000000000000044D,
		Mediumband    = 0x000000000000044E,
		Wideband      = 0x000000000000044F,
		SuperWideband = 0x0000000000000450,
		Fullband      = 0x0000000000000451
	};

	/**
	 * Enum PhotonVoice.API.POpusCodec.Enums.Channels
	 */
	enum class Channels : int32_t
	{
		Mono   = 0x0000000000000001,
		Stereo = 0x0000000000000002
	};

	/**
	 * Enum PhotonVoice.API.POpusCodec.Enums.Complexity
	 */
	enum class Complexity : int32_t
	{
		Complexity0  = 0x0000000000000000,
		Complexity1  = 0x0000000000000001,
		Complexity2  = 0x0000000000000002,
		Complexity3  = 0x0000000000000003,
		Complexity4  = 0x0000000000000004,
		Complexity5  = 0x0000000000000005,
		Complexity6  = 0x0000000000000006,
		Complexity7  = 0x0000000000000007,
		Complexity8  = 0x0000000000000008,
		Complexity9  = 0x0000000000000009,
		Complexity10 = 0x000000000000000A
	};

	/**
	 * Enum PhotonVoice.API.POpusCodec.Enums.Delay
	 */
	enum class Delay : int32_t
	{
		Delay2dot5ms = 0x0000000000000005,
		Delay5ms     = 0x000000000000000A,
		Delay10ms    = 0x0000000000000014,
		Delay20ms    = 0x0000000000000028,
		Delay40ms    = 0x0000000000000050,
		Delay60ms    = 0x0000000000000078
	};

	/**
	 * Enum PhotonVoice.API.POpusCodec.Enums.ForceChannels
	 */
	enum class ForceChannels : int32_t
	{
		NoForce = -1000,
		Mono    = 0x0000000000000001,
		Stereo  = 0x0000000000000002
	};

	/**
	 * Enum PhotonVoice.API.POpusCodec.Enums.OpusApplicationType
	 */
	enum class OpusApplicationType : int32_t
	{
		Voip               = 0x0000000000000800,
		Audio              = 0x0000000000000801,
		RestrictedLowDelay = 0x0000000000000803
	};

	/**
	 * Enum PhotonVoice.API.POpusCodec.Enums.OpusCtlGetRequest
	 */
	enum class OpusCtlGetRequest : int32_t
	{
		Application               = 0x0000000000000FA1,
		Bitrate                   = 0x0000000000000FA3,
		MaxBandwidth              = 0x0000000000000FA5,
		VBR                       = 0x0000000000000FA7,
		Bandwidth                 = 0x0000000000000FA9,
		Complexity                = 0x0000000000000FAB,
		InbandFec                 = 0x0000000000000FAD,
		PacketLossPercentage      = 0x0000000000000FAF,
		Dtx                       = 0x0000000000000FB1,
		VBRConstraint             = 0x0000000000000FB5,
		ForceChannels             = 0x0000000000000FB7,
		Signal                    = 0x0000000000000FB9,
		LookAhead                 = 0x0000000000000FBB,
		SampleRate                = 0x0000000000000FBD,
		FinalRange                = 0x0000000000000FBF,
		Pitch                     = 0x0000000000000FC1,
		Gain                      = 0x0000000000000FC3,
		LsbDepth                  = 0x0000000000000FC5,
		LastPacketDurationRequest = 0x0000000000000FC7
	};

	/**
	 * Enum PhotonVoice.API.POpusCodec.Enums.OpusCtlSetRequest
	 */
	enum class OpusCtlSetRequest : int32_t
	{
		Application          = 0x0000000000000FA0,
		Bitrate              = 0x0000000000000FA2,
		MaxBandwidth         = 0x0000000000000FA4,
		VBR                  = 0x0000000000000FA6,
		Bandwidth            = 0x0000000000000FA8,
		Complexity           = 0x0000000000000FAA,
		InbandFec            = 0x0000000000000FAC,
		PacketLossPercentage = 0x0000000000000FAE,
		Dtx                  = 0x0000000000000FB0,
		VBRConstraint        = 0x0000000000000FB4,
		ForceChannels        = 0x0000000000000FB6,
		Signal               = 0x0000000000000FB8,
		Gain                 = 0x0000000000000FC2,
		LsbDepth             = 0x0000000000000FC4
	};

	/**
	 * Enum PhotonVoice.API.POpusCodec.Enums.OpusStatusCode
	 */
	enum class OpusStatusCode : int32_t
	{
		OK             = 0x0000000000000000,
		BadArguments   = -1,
		BufferTooSmall = -2,
		InternalError  = -3,
		InvalidPacket  = -4,
		Unimplemented  = -5,
		InvalidState   = -6,
		AllocFail      = -7
	};

	/**
	 * Enum PhotonVoice.API.POpusCodec.Enums.SamplingRate
	 */
	enum class SamplingRate : int32_t
	{
		Sampling08000 = 0x0000000000001F40,
		Sampling12000 = 0x0000000000002EE0,
		Sampling16000 = 0x0000000000003E80,
		Sampling24000 = 0x0000000000005DC0,
		Sampling48000 = 0x000000000000BB80
	};

	/**
	 * Enum PhotonVoice.API.POpusCodec.Enums.SignalHint
	 */
	enum class SignalHint : int32_t
	{
		Auto  = -1000,
		Voice = 0x0000000000000BB9,
		Music = 0x0000000000000BBA
	};

	/**
	 * Enum PhotonVoice.API.Photon.Voice.OpusCodec+FrameDuration
	 */
	enum class OpusCodec_FrameDuration : int32_t
	{
		Frame2dot5ms = 0x00000000000009C4,
		Frame5ms     = 0x0000000000001388,
		Frame10ms    = 0x0000000000002710,
		Frame20ms    = 0x0000000000004E20,
		Frame40ms    = 0x0000000000009C40,
		Frame60ms    = 0x000000000000EA60
	};

	/**
	 * Enum PhotonVoice.API.Photon.Voice.AudioSampleType
	 */
	enum class AudioSampleType : int32_t
	{
		Source = 0x0000000000000000,
		Short  = 0x0000000000000001,
		Float  = 0x0000000000000002
	};

	/**
	 * Enum PhotonVoice.API.Photon.Voice.FrameFlags
	 */
	enum class FrameFlags : uint8_t
	{
		Config       = 0x0000000000000001,
		KeyFrame     = 0x0000000000000002,
		PartialFrame = 0x0000000000000004,
		EndOfStream  = 0x0000000000000008
	};

	/**
	 * Enum PhotonVoice.API.Photon.Voice.Codec
	 */
	enum class Codec : int32_t
	{
		Raw       = 0x0000000000000001,
		AudioOpus = 0x000000000000000B
	};

	/**
	 * Enum PhotonVoice.API.Photon.Voice.ImageFormat
	 */
	enum class ImageFormat : int32_t
	{
		Undefined  = 0x0000000000000000,
		I420       = 0x0000000000000001,
		YV12       = 0x0000000000000002,
		Android420 = 0x0000000000000003,
		ABGR       = 0x0000000000000004,
		BGRA       = 0x0000000000000005,
		ARGB       = 0x0000000000000006,
		NV12       = 0x0000000000000007
	};

	/**
	 * Enum PhotonVoice.API.Photon.Voice.Rotation
	 */
	enum class Rotation : int32_t
	{
		Undefined = -1,
		Rotate0   = 0x0000000000000000,
		Rotate90  = 0x000000000000005A,
		Rotate180 = 0x00000000000000B4,
		Rotate270 = 0x000000000000010E
	};

	/**
	 * Enum PhotonVoice.API.Photon.Voice.WebRTCAudioLib+Error
	 */
	enum class WebRTCAudioLib_Error : int32_t
	{
		kNoError                    = 0x0000000000000000,
		kUnspecifiedError           = -1,
		kCreationFailedError        = -2,
		kUnsupportedComponentError  = -3,
		kUnsupportedFunctionError   = -4,
		kNullPointerError           = -5,
		kBadParameterError          = -6,
		kBadSampleRateError         = -7,
		kBadDataLengthError         = -8,
		kBadNumberChannelsError     = -9,
		kFileError                  = -10,
		kStreamParameterNotSetError = -11,
		kNotEnabledError            = -12,
		kBadStreamParameterWarning  = -13
	};

	/**
	 * Enum PhotonVoice.API.Photon.Voice.WebRTCAudioLib+Param
	 */
	enum class WebRTCAudioLib_Param : int32_t
	{
		REVERSE_STREAM_DELAY_MS = 0x0000000000000001,
		AEC                     = 0x000000000000000A,
		AEC_HIGH_PASS_FILTER    = 0x000000000000000B,
		AECM                    = 0x0000000000000014,
		HIGH_PASS_FILTER        = 0x000000000000001F,
		NS                      = 0x0000000000000029,
		NS_LEVEL                = 0x000000000000002A,
		AGC                     = 0x0000000000000033,
		AGC_TARGET_LEVEL_DBFS   = 0x0000000000000037,
		AGC_COMPRESSION_GAIN    = 0x0000000000000038,
		AGC_LIMITER             = 0x0000000000000039,
		VAD                     = 0x000000000000003D,
		VAD_FRAME_SIZE_MS       = 0x000000000000003E,
		VAD_LIKELIHOOD          = 0x000000000000003F,
		AGC2                    = 0x0000000000000047
	};

	/**
	 * Enum PhotonVoice.API.Photon.Voice.PhotonTransportProtocol+EventSubcode
	 */
	enum class PhotonTransportProtocol_EventSubcode : uint8_t
	{
		VoiceInfo   = 0x0000000000000001,
		VoiceRemove = 0x0000000000000002,
		Frame       = 0x0000000000000003
	};

	/**
	 * Enum PhotonVoice.API.Photon.Voice.PhotonTransportProtocol+EventParam
	 */
	enum class PhotonTransportProtocol_EventParam : uint8_t
	{
		VoiceId         = 0x0000000000000001,
		SamplingRate    = 0x0000000000000002,
		Channels        = 0x0000000000000003,
		FrameDurationUs = 0x0000000000000004,
		Bitrate         = 0x0000000000000005,
		Width           = 0x0000000000000006,
		Height          = 0x0000000000000007,
		FPS             = 0x0000000000000008,
		KeyFrameInt     = 0x0000000000000009,
		UserData        = 0x000000000000000A,
		EventNumber     = 0x000000000000000B,
		Codec           = 0x000000000000000C
	};

	/**
	 * Enum PhotonVoice.API.Photon.Voice.Windows.WindowsAudioInPusher+SystemMode
	 */
	enum class WindowsAudioInPusher_SystemMode : int32_t
	{
		SINGLE_CHANNEL_AEC     = 0x0000000000000000,
		OPTIBEAM_ARRAY_ONLY    = 0x0000000000000002,
		OPTIBEAM_ARRAY_AND_AEC = 0x0000000000000004,
		SINGLE_CHANNEL_NSAGC   = 0x0000000000000005
	};

	/**
	 * Enum PhotonVoice.API.Photon.Voice.IOS.AudioSessionCategory
	 */
	enum class AudioSessionCategory : int32_t
	{
		Ambient         = 0x0000000000000000,
		SoloAmbient     = 0x0000000000000001,
		Playback        = 0x0000000000000002,
		Record          = 0x0000000000000003,
		PlayAndRecord   = 0x0000000000000004,
		AudioProcessing = 0x0000000000000005,
		MultiRoute      = 0x0000000000000006
	};

	/**
	 * Enum PhotonVoice.API.Photon.Voice.IOS.AudioSessionMode
	 */
	enum class AudioSessionMode : int32_t
	{
		Default        = 0x0000000000000000,
		VoiceChat      = 0x0000000000000001,
		VideoRecording = 0x0000000000000003,
		Measurement    = 0x0000000000000004,
		MoviePlayback  = 0x0000000000000005,
		VideoChat      = 0x0000000000000006
	};

	/**
	 * Enum PhotonVoice.API.Photon.Voice.IOS.AudioSessionCategoryOption
	 */
	enum class AudioSessionCategoryOption : int32_t
	{
		MixWithOthers    = 0x0000000000000001,
		DuckOthers       = 0x0000000000000002,
		AllowBluetooth   = 0x0000000000000004,
		DefaultToSpeaker = 0x0000000000000008
	};

	/**
	 * Enum Mono.Security.Mono.Security.X509.X509ChainStatusFlags
	 */
	enum class X509ChainStatusFlags_1 : int32_t
	{
		InvalidBasicConstraints = 0x0000000000000400,
		NoError                 = 0x0000000000000000,
		NotSignatureValid       = 0x0000000000000008,
		NotTimeNested           = 0x0000000000000002,
		NotTimeValid            = 0x0000000000000001,
		PartialChain            = 0x0000000000010000,
		UntrustedRoot           = 0x0000000000000020
	};

	/**
	 * Enum Mono.Security.Mono.Security.Protocol.Ntlm.NtlmAuthLevel
	 */
	enum class NtlmAuthLevel : int32_t
	{
		LM_and_NTLM                        = 0x0000000000000000,
		LM_and_NTLM_and_try_NTLMv2_Session = 0x0000000000000001,
		NTLM_only                          = 0x0000000000000002,
		NTLMv2_only                        = 0x0000000000000003
	};

	/**
	 * Enum Mono.Security.Mono.Security.Protocol.Ntlm.NtlmFlags
	 */
	enum class NtlmFlags : int32_t
	{
		NegotiateUnicode             = 0x0000000000000001,
		NegotiateOem                 = 0x0000000000000002,
		RequestTarget                = 0x0000000000000004,
		NegotiateNtlm                = 0x0000000000000200,
		NegotiateDomainSupplied      = 0x0000000000001000,
		NegotiateWorkstationSupplied = 0x0000000000002000,
		NegotiateAlwaysSign          = 0x0000000000008000,
		NegotiateNtlm2Key            = 0x0000000000080000,
		Negotiate128                 = 0x0000000020000000,
		Negotiate56                  = -2147483648
	};

	/**
	 * Enum Mono.Security.Mono.Security.Interface.AlertLevel
	 */
	enum class AlertLevel_2 : uint8_t
	{
		Warning = 0x0000000000000001,
		Fatal   = 0x0000000000000002
	};

	/**
	 * Enum Mono.Security.Mono.Security.Interface.AlertDescription
	 */
	enum class AlertDescription_2 : uint8_t
	{
		CloseNotify               = 0x0000000000000000,
		UnexpectedMessage         = 0x000000000000000A,
		BadRecordMAC              = 0x0000000000000014,
		DecryptionFailed_RESERVED = 0x0000000000000015,
		RecordOverflow            = 0x0000000000000016,
		DecompressionFailure      = 0x000000000000001E,
		HandshakeFailure          = 0x0000000000000028,
		NoCertificate_RESERVED    = 0x0000000000000029,
		BadCertificate            = 0x000000000000002A,
		UnsupportedCertificate    = 0x000000000000002B,
		CertificateRevoked        = 0x000000000000002C,
		CertificateExpired        = 0x000000000000002D,
		CertificateUnknown        = 0x000000000000002E,
		IlegalParameter           = 0x000000000000002F,
		UnknownCA                 = 0x0000000000000030,
		AccessDenied              = 0x0000000000000031,
		DecodeError               = 0x0000000000000032,
		DecryptError              = 0x0000000000000033,
		ExportRestriction         = 0x000000000000003C,
		ProtocolVersion           = 0x0000000000000046,
		InsuficientSecurity       = 0x0000000000000047,
		InternalError             = 0x0000000000000050,
		UserCancelled             = 0x000000000000005A,
		NoRenegotiation           = 0x0000000000000064,
		UnsupportedExtension      = 0x000000000000006E
	};

	/**
	 * Enum Mono.Security.Mono.Security.Interface.CipherSuiteCode
	 */
	enum class CipherSuiteCode : uint16_t
	{
		TLS_NULL_WITH_NULL_NULL                       = 0x0000000000000000,
		TLS_RSA_WITH_NULL_MD5                         = 0x0000000000000001,
		TLS_RSA_WITH_NULL_SHA                         = 0x0000000000000002,
		TLS_RSA_EXPORT_WITH_RC4_40_MD5                = 0x0000000000000003,
		TLS_RSA_WITH_RC4_128_MD5                      = 0x0000000000000004,
		TLS_RSA_WITH_RC4_128_SHA                      = 0x0000000000000005,
		TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5            = 0x0000000000000006,
		TLS_RSA_WITH_IDEA_CBC_SHA                     = 0x0000000000000007,
		TLS_RSA_EXPORT_WITH_DES40_CBC_SHA             = 0x0000000000000008,
		TLS_RSA_WITH_DES_CBC_SHA                      = 0x0000000000000009,
		TLS_RSA_WITH_3DES_EDE_CBC_SHA                 = 0x000000000000000A,
		TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA          = 0x000000000000000B,
		TLS_DH_DSS_WITH_DES_CBC_SHA                   = 0x000000000000000C,
		TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA              = 0x000000000000000D,
		TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA          = 0x000000000000000E,
		TLS_DH_RSA_WITH_DES_CBC_SHA                   = 0x000000000000000F,
		TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA              = 0x0000000000000010,
		TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA         = 0x0000000000000011,
		TLS_DHE_DSS_WITH_DES_CBC_SHA                  = 0x0000000000000012,
		TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA             = 0x0000000000000013,
		TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA         = 0x0000000000000014,
		TLS_DHE_RSA_WITH_DES_CBC_SHA                  = 0x0000000000000015,
		TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA             = 0x0000000000000016,
		TLS_DH_anon_EXPORT_WITH_RC4_40_MD5            = 0x0000000000000017,
		TLS_DH_anon_WITH_RC4_128_MD5                  = 0x0000000000000018,
		TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA         = 0x0000000000000019,
		TLS_DH_anon_WITH_DES_CBC_SHA                  = 0x000000000000001A,
		TLS_DH_anon_WITH_3DES_EDE_CBC_SHA             = 0x000000000000001B,
		TLS_RSA_WITH_AES_128_CBC_SHA                  = 0x000000000000002F,
		TLS_DH_DSS_WITH_AES_128_CBC_SHA               = 0x0000000000000030,
		TLS_DH_RSA_WITH_AES_128_CBC_SHA               = 0x0000000000000031,
		TLS_DHE_DSS_WITH_AES_128_CBC_SHA              = 0x0000000000000032,
		TLS_DHE_RSA_WITH_AES_128_CBC_SHA              = 0x0000000000000033,
		TLS_DH_anon_WITH_AES_128_CBC_SHA              = 0x0000000000000034,
		TLS_RSA_WITH_AES_256_CBC_SHA                  = 0x0000000000000035,
		TLS_DH_DSS_WITH_AES_256_CBC_SHA               = 0x0000000000000036,
		TLS_DH_RSA_WITH_AES_256_CBC_SHA               = 0x0000000000000037,
		TLS_DHE_DSS_WITH_AES_256_CBC_SHA              = 0x0000000000000038,
		TLS_DHE_RSA_WITH_AES_256_CBC_SHA              = 0x0000000000000039,
		TLS_DH_anon_WITH_AES_256_CBC_SHA              = 0x000000000000003A,
		TLS_RSA_WITH_CAMELLIA_128_CBC_SHA             = 0x0000000000000041,
		TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA          = 0x0000000000000042,
		TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA          = 0x0000000000000043,
		TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA         = 0x0000000000000044,
		TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA         = 0x0000000000000045,
		TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA         = 0x0000000000000046,
		TLS_RSA_WITH_CAMELLIA_256_CBC_SHA             = 0x0000000000000084,
		TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA          = 0x0000000000000085,
		TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA          = 0x0000000000000086,
		TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA         = 0x0000000000000087,
		TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA         = 0x0000000000000088,
		TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA         = 0x0000000000000089,
		TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256          = 0x00000000000000BA,
		TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256       = 0x00000000000000BB,
		TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256       = 0x00000000000000BC,
		TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256      = 0x00000000000000BD,
		TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256      = 0x00000000000000BE,
		TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256      = 0x00000000000000BF,
		TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256          = 0x00000000000000C0,
		TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256       = 0x00000000000000C1,
		TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256       = 0x00000000000000C2,
		TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256      = 0x00000000000000C3,
		TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256      = 0x00000000000000C4,
		TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256      = 0x00000000000000C5,
		TLS_RSA_WITH_SEED_CBC_SHA                     = 0x0000000000000096,
		TLS_DH_DSS_WITH_SEED_CBC_SHA                  = 0x0000000000000097,
		TLS_DH_RSA_WITH_SEED_CBC_SHA                  = 0x0000000000000098,
		TLS_DHE_DSS_WITH_SEED_CBC_SHA                 = 0x0000000000000099,
		TLS_DHE_RSA_WITH_SEED_CBC_SHA                 = 0x000000000000009A,
		TLS_DH_anon_WITH_SEED_CBC_SHA                 = 0x000000000000009B,
		TLS_PSK_WITH_RC4_128_SHA                      = 0x000000000000008A,
		TLS_PSK_WITH_3DES_EDE_CBC_SHA                 = 0x000000000000008B,
		TLS_PSK_WITH_AES_128_CBC_SHA                  = 0x000000000000008C,
		TLS_PSK_WITH_AES_256_CBC_SHA                  = 0x000000000000008D,
		TLS_DHE_PSK_WITH_RC4_128_SHA                  = 0x000000000000008E,
		TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA             = 0x000000000000008F,
		TLS_DHE_PSK_WITH_AES_128_CBC_SHA              = 0x0000000000000090,
		TLS_DHE_PSK_WITH_AES_256_CBC_SHA              = 0x0000000000000091,
		TLS_RSA_PSK_WITH_RC4_128_SHA                  = 0x0000000000000092,
		TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA             = 0x0000000000000093,
		TLS_RSA_PSK_WITH_AES_128_CBC_SHA              = 0x0000000000000094,
		TLS_RSA_PSK_WITH_AES_256_CBC_SHA              = 0x0000000000000095,
		TLS_ECDH_ECDSA_WITH_NULL_SHA                  = 0x000000000000C001,
		TLS_ECDH_ECDSA_WITH_RC4_128_SHA               = 0x000000000000C002,
		TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA          = 0x000000000000C003,
		TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA           = 0x000000000000C004,
		TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA           = 0x000000000000C005,
		TLS_ECDHE_ECDSA_WITH_NULL_SHA                 = 0x000000000000C006,
		TLS_ECDHE_ECDSA_WITH_RC4_128_SHA              = 0x000000000000C007,
		TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA         = 0x000000000000C008,
		TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA          = 0x000000000000C009,
		TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA          = 0x000000000000C00A,
		TLS_ECDH_RSA_WITH_NULL_SHA                    = 0x000000000000C00B,
		TLS_ECDH_RSA_WITH_RC4_128_SHA                 = 0x000000000000C00C,
		TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA            = 0x000000000000C00D,
		TLS_ECDH_RSA_WITH_AES_128_CBC_SHA             = 0x000000000000C00E,
		TLS_ECDH_RSA_WITH_AES_256_CBC_SHA             = 0x000000000000C00F,
		TLS_ECDHE_RSA_WITH_NULL_SHA                   = 0x000000000000C010,
		TLS_ECDHE_RSA_WITH_RC4_128_SHA                = 0x000000000000C011,
		TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA           = 0x000000000000C012,
		TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA            = 0x000000000000C013,
		TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA            = 0x000000000000C014,
		TLS_ECDH_anon_WITH_NULL_SHA                   = 0x000000000000C015,
		TLS_ECDH_anon_WITH_RC4_128_SHA                = 0x000000000000C016,
		TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA           = 0x000000000000C017,
		TLS_ECDH_anon_WITH_AES_128_CBC_SHA            = 0x000000000000C018,
		TLS_ECDH_anon_WITH_AES_256_CBC_SHA            = 0x000000000000C019,
		TLS_PSK_WITH_NULL_SHA                         = 0x000000000000002C,
		TLS_DHE_PSK_WITH_NULL_SHA                     = 0x000000000000002D,
		TLS_RSA_PSK_WITH_NULL_SHA                     = 0x000000000000002E,
		TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA             = 0x000000000000C01A,
		TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA         = 0x000000000000C01B,
		TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA         = 0x000000000000C01C,
		TLS_SRP_SHA_WITH_AES_128_CBC_SHA              = 0x000000000000C01D,
		TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA          = 0x000000000000C01E,
		TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA          = 0x000000000000C01F,
		TLS_SRP_SHA_WITH_AES_256_CBC_SHA              = 0x000000000000C020,
		TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA          = 0x000000000000C021,
		TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA          = 0x000000000000C022,
		TLS_RSA_WITH_NULL_SHA256                      = 0x000000000000003B,
		TLS_RSA_WITH_AES_128_CBC_SHA256               = 0x000000000000003C,
		TLS_RSA_WITH_AES_256_CBC_SHA256               = 0x000000000000003D,
		TLS_DH_DSS_WITH_AES_128_CBC_SHA256            = 0x000000000000003E,
		TLS_DH_RSA_WITH_AES_128_CBC_SHA256            = 0x000000000000003F,
		TLS_DHE_DSS_WITH_AES_128_CBC_SHA256           = 0x0000000000000040,
		TLS_DHE_RSA_WITH_AES_128_CBC_SHA256           = 0x0000000000000067,
		TLS_DH_DSS_WITH_AES_256_CBC_SHA256            = 0x0000000000000068,
		TLS_DH_RSA_WITH_AES_256_CBC_SHA256            = 0x0000000000000069,
		TLS_DHE_DSS_WITH_AES_256_CBC_SHA256           = 0x000000000000006A,
		TLS_DHE_RSA_WITH_AES_256_CBC_SHA256           = 0x000000000000006B,
		TLS_DH_anon_WITH_AES_128_CBC_SHA256           = 0x000000000000006C,
		TLS_DH_anon_WITH_AES_256_CBC_SHA256           = 0x000000000000006D,
		TLS_RSA_WITH_AES_128_GCM_SHA256               = 0x000000000000009C,
		TLS_RSA_WITH_AES_256_GCM_SHA384               = 0x000000000000009D,
		TLS_DHE_RSA_WITH_AES_128_GCM_SHA256           = 0x000000000000009E,
		TLS_DHE_RSA_WITH_AES_256_GCM_SHA384           = 0x000000000000009F,
		TLS_DH_RSA_WITH_AES_128_GCM_SHA256            = 0x00000000000000A0,
		TLS_DH_RSA_WITH_AES_256_GCM_SHA384            = 0x00000000000000A1,
		TLS_DHE_DSS_WITH_AES_128_GCM_SHA256           = 0x00000000000000A2,
		TLS_DHE_DSS_WITH_AES_256_GCM_SHA384           = 0x00000000000000A3,
		TLS_DH_DSS_WITH_AES_128_GCM_SHA256            = 0x00000000000000A4,
		TLS_DH_DSS_WITH_AES_256_GCM_SHA384            = 0x00000000000000A5,
		TLS_DH_anon_WITH_AES_128_GCM_SHA256           = 0x00000000000000A6,
		TLS_DH_anon_WITH_AES_256_GCM_SHA384           = 0x00000000000000A7,
		TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256       = 0x000000000000C023,
		TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384       = 0x000000000000C024,
		TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256        = 0x000000000000C025,
		TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384        = 0x000000000000C026,
		TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256         = 0x000000000000C027,
		TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384         = 0x000000000000C028,
		TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256          = 0x000000000000C029,
		TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384          = 0x000000000000C02A,
		TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256       = 0x000000000000C02B,
		TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384       = 0x000000000000C02C,
		TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256        = 0x000000000000C02D,
		TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384        = 0x000000000000C02E,
		TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256         = 0x000000000000C02F,
		TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384         = 0x000000000000C030,
		TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256          = 0x000000000000C031,
		TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384          = 0x000000000000C032,
		TLS_PSK_WITH_AES_128_GCM_SHA256               = 0x00000000000000A8,
		TLS_PSK_WITH_AES_256_GCM_SHA384               = 0x00000000000000A9,
		TLS_DHE_PSK_WITH_AES_128_GCM_SHA256           = 0x00000000000000AA,
		TLS_DHE_PSK_WITH_AES_256_GCM_SHA384           = 0x00000000000000AB,
		TLS_RSA_PSK_WITH_AES_128_GCM_SHA256           = 0x00000000000000AC,
		TLS_RSA_PSK_WITH_AES_256_GCM_SHA384           = 0x00000000000000AD,
		TLS_PSK_WITH_AES_128_CBC_SHA256               = 0x00000000000000AE,
		TLS_PSK_WITH_AES_256_CBC_SHA384               = 0x00000000000000AF,
		TLS_PSK_WITH_NULL_SHA256                      = 0x00000000000000B0,
		TLS_PSK_WITH_NULL_SHA384                      = 0x00000000000000B1,
		TLS_DHE_PSK_WITH_AES_128_CBC_SHA256           = 0x00000000000000B2,
		TLS_DHE_PSK_WITH_AES_256_CBC_SHA384           = 0x00000000000000B3,
		TLS_DHE_PSK_WITH_NULL_SHA256                  = 0x00000000000000B4,
		TLS_DHE_PSK_WITH_NULL_SHA384                  = 0x00000000000000B5,
		TLS_RSA_PSK_WITH_AES_128_CBC_SHA256           = 0x00000000000000B6,
		TLS_RSA_PSK_WITH_AES_256_CBC_SHA384           = 0x00000000000000B7,
		TLS_RSA_PSK_WITH_NULL_SHA256                  = 0x00000000000000B8,
		TLS_RSA_PSK_WITH_NULL_SHA384                  = 0x00000000000000B9,
		TLS_ECDHE_PSK_WITH_RC4_128_SHA                = 0x000000000000C033,
		TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA           = 0x000000000000C034,
		TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA            = 0x000000000000C035,
		TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA            = 0x000000000000C036,
		TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256         = 0x000000000000C037,
		TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384         = 0x000000000000C038,
		TLS_ECDHE_PSK_WITH_NULL_SHA                   = 0x000000000000C039,
		TLS_ECDHE_PSK_WITH_NULL_SHA256                = 0x000000000000C03A,
		TLS_ECDHE_PSK_WITH_NULL_SHA384                = 0x000000000000C03B,
		TLS_EMPTY_RENEGOTIATION_INFO_SCSV             = 0x00000000000000FF,
		TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256  = 0x000000000000C072,
		TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384  = 0x000000000000C073,
		TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256   = 0x000000000000C074,
		TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384   = 0x000000000000C075,
		TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256    = 0x000000000000C076,
		TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384    = 0x000000000000C077,
		TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256     = 0x000000000000C078,
		TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384     = 0x000000000000C079,
		TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256          = 0x000000000000C07A,
		TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384          = 0x000000000000C07B,
		TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256      = 0x000000000000C07C,
		TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384      = 0x000000000000C07D,
		TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256       = 0x000000000000C07E,
		TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384       = 0x000000000000C07F,
		TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256      = 0x000000000000C080,
		TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384      = 0x000000000000C081,
		TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256       = 0x000000000000C082,
		TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384       = 0x000000000000C083,
		TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256      = 0x000000000000C084,
		TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384      = 0x000000000000C085,
		TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256  = 0x000000000000C086,
		TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384  = 0x000000000000C087,
		TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256   = 0x000000000000C088,
		TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384   = 0x000000000000C089,
		TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256    = 0x000000000000C08A,
		TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384    = 0x000000000000C08B,
		TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256     = 0x000000000000C08C,
		TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384     = 0x000000000000C08D,
		TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256          = 0x000000000000C08E,
		TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384          = 0x000000000000C08F,
		TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256      = 0x000000000000C090,
		TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384      = 0x000000000000C091,
		TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256      = 0x000000000000C092,
		TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384      = 0x000000000000C093,
		TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256          = 0x000000000000C094,
		TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384          = 0x000000000000C095,
		TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256      = 0x000000000000C096,
		TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384      = 0x000000000000C097,
		TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256      = 0x000000000000C098,
		TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384      = 0x000000000000C099,
		TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256    = 0x000000000000C09A,
		TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384    = 0x000000000000C09B,
		TLS_RSA_WITH_AES_128_CCM                      = 0x000000000000C09C,
		TLS_RSA_WITH_AES_256_CCM                      = 0x000000000000C09D,
		TLS_DHE_RSA_WITH_AES_128_CCM                  = 0x000000000000C09E,
		TLS_DHE_RSA_WITH_AES_256_CCM                  = 0x000000000000C09F,
		TLS_RSA_WITH_AES_128_CCM_8                    = 0x000000000000C0A0,
		TLS_RSA_WITH_AES_256_CCM_8                    = 0x000000000000C0A1,
		TLS_DHE_RSA_WITH_AES_128_CCM_8                = 0x000000000000C0A2,
		TLS_DHE_RSA_WITH_AES_256_CCM_8                = 0x000000000000C0A3,
		TLS_PSK_WITH_AES_128_CCM                      = 0x000000000000C0A4,
		TLS_PSK_WITH_AES_256_CCM                      = 0x000000000000C0A5,
		TLS_DHE_PSK_WITH_AES_128_CCM                  = 0x000000000000C0A6,
		TLS_DHE_PSK_WITH_AES_256_CCM                  = 0x000000000000C0A7,
		TLS_PSK_WITH_AES_128_CCM_8                    = 0x000000000000C0A8,
		TLS_PSK_WITH_AES_256_CCM_8                    = 0x000000000000C0A9,
		TLS_PSK_DHE_WITH_AES_128_CCM_8                = 0x000000000000C0AA,
		TLS_PSK_DHE_WITH_AES_256_CCM_8                = 0x000000000000C0AB,
		TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256   = 0x000000000000CC13,
		TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 = 0x000000000000CC14,
		TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256     = 0x000000000000CC15,
		TLS_RSA_WITH_ESTREAM_SALSA20_SHA1             = 0x000000000000E410,
		TLS_RSA_WITH_SALSA20_SHA1                     = 0x000000000000E411,
		TLS_ECDHE_RSA_WITH_ESTREAM_SALSA20_SHA1       = 0x000000000000E412,
		TLS_ECDHE_RSA_WITH_SALSA20_SHA1               = 0x000000000000E413,
		TLS_ECDHE_ECDSA_WITH_ESTREAM_SALSA20_SHA1     = 0x000000000000E414,
		TLS_ECDHE_ECDSA_WITH_SALSA20_SHA1             = 0x000000000000E415,
		TLS_PSK_WITH_ESTREAM_SALSA20_SHA1             = 0x000000000000E416,
		TLS_PSK_WITH_SALSA20_SHA1                     = 0x000000000000E417,
		TLS_ECDHE_PSK_WITH_ESTREAM_SALSA20_SHA1       = 0x000000000000E418,
		TLS_ECDHE_PSK_WITH_SALSA20_SHA1               = 0x000000000000E419,
		TLS_RSA_PSK_WITH_ESTREAM_SALSA20_SHA1         = 0x000000000000E41A,
		TLS_RSA_PSK_WITH_SALSA20_SHA1                 = 0x000000000000E41B,
		TLS_DHE_PSK_WITH_ESTREAM_SALSA20_SHA1         = 0x000000000000E41C,
		TLS_DHE_PSK_WITH_SALSA20_SHA1                 = 0x000000000000E41D,
		TLS_DHE_RSA_WITH_ESTREAM_SALSA20_SHA1         = 0x000000000000E41E,
		TLS_DHE_RSA_WITH_SALSA20_SHA1                 = 0x000000000000E41F,
		TLS_FALLBACK_SCSV                             = 0x0000000000005600
	};

	/**
	 * Enum Mono.Security.Mono.Security.Interface.MonoSslPolicyErrors
	 */
	enum class MonoSslPolicyErrors : int32_t
	{
		None                          = 0x0000000000000000,
		RemoteCertificateNotAvailable = 0x0000000000000001,
		RemoteCertificateNameMismatch = 0x0000000000000002,
		RemoteCertificateChainErrors  = 0x0000000000000004
	};

	/**
	 * Enum Mono.Security.Mono.Security.Interface.TlsProtocolCode
	 */
	enum class TlsProtocolCode : int16_t
	{
		Tls10 = 0x0000000000000301,
		Tls11 = 0x0000000000000302,
		Tls12 = 0x0000000000000303
	};

	/**
	 * Enum Mono.Security.Mono.Security.Interface.TlsProtocols
	 */
	enum class TlsProtocols : int32_t
	{
		Zero        = 0x0000000000000000,
		Tls10Client = 0x0000000000000080,
		Tls10Server = 0x0000000000000040,
		Tls10       = 0x00000000000000C0,
		Tls11Client = 0x0000000000000200,
		Tls11Server = 0x0000000000000100,
		Tls11       = 0x0000000000000300,
		Tls12Client = 0x0000000000000800,
		Tls12Server = 0x0000000000000400,
		Tls12       = 0x0000000000000C00,
		ClientMask  = 0x0000000000000A80,
		ServerMask  = 0x0000000000000540
	};

	/**
	 * Enum Mono.Security.Mono.Math.BigInteger+Sign
	 */
	enum class BigInteger_Sign_1 : int32_t
	{
		Negative = -1,
		Zero     = 0x0000000000000000,
		Positive = 0x0000000000000001
	};

	/**
	 * Enum Mono.Security.Mono.Math.Prime.ConfidenceFactor
	 */
	enum class ConfidenceFactor_1 : int32_t
	{
		ExtraLow  = 0x0000000000000000,
		Low       = 0x0000000000000001,
		Medium    = 0x0000000000000002,
		High      = 0x0000000000000003,
		ExtraHigh = 0x0000000000000004,
		Provable  = 0x0000000000000005
	};

	/**
	 * Enum ACTk.Runtime.CodeStage.AntiCheat.Storage.ObscuredPrefs+DataType
	 */
	enum class ObscuredPrefs_DataType : uint8_t
	{
		Unknown    = 0x0000000000000000,
		Int        = 0x0000000000000005,
		UInt       = 0x000000000000000A,
		String     = 0x000000000000000F,
		Float      = 0x0000000000000014,
		Double     = 0x0000000000000019,
		Decimal    = 0x000000000000001B,
		Long       = 0x000000000000001E,
		ULong      = 0x0000000000000020,
		Bool       = 0x0000000000000023,
		ByteArray  = 0x0000000000000028,
		Vector2    = 0x000000000000002D,
		Vector3    = 0x0000000000000032,
		Quaternion = 0x0000000000000037,
		Color      = 0x000000000000003C,
		Rect       = 0x0000000000000041
	};

	/**
	 * Enum ACTk.Runtime.CodeStage.AntiCheat.Storage.ObscuredPrefs+DeviceLockLevel
	 */
	enum class ObscuredPrefs_DeviceLockLevel : uint8_t
	{
		None   = 0x0000000000000000,
		Soft   = 0x0000000000000001,
		Strict = 0x0000000000000002
	};

	/**
	 * Enum ACTk.Runtime.CodeStage.AntiCheat.Detectors.TimeCheatingDetector+CheckResult
	 */
	enum class TimeCheatingDetector_CheckResult : int32_t
	{
		Unknown           = 0x0000000000000000,
		CheckPassed       = 0x0000000000000005,
		WrongTimeDetected = 0x000000000000000A,
		CheatDetected     = 0x000000000000000F,
		Error             = 0x0000000000000064
	};

	/**
	 * Enum ACTk.Runtime.CodeStage.AntiCheat.Detectors.TimeCheatingDetector+ErrorKind
	 */
	enum class TimeCheatingDetector_ErrorKind : int32_t
	{
		NoError                 = 0x0000000000000000,
		IncorrectUri            = 0x0000000000000003,
		OnlineTimeError         = 0x0000000000000005,
		NotStarted              = 0x000000000000000A,
		AlreadyCheckingForCheat = 0x000000000000000F,
		Unknown                 = 0x0000000000000064
	};

	/**
	 * Enum ACTk.Runtime.CodeStage.AntiCheat.Detectors.TimeCheatingDetector+RequestMethod
	 */
	enum class TimeCheatingDetector_RequestMethod : int32_t
	{
		Head = 0x0000000000000000,
		Get  = 0x0000000000000001
	};

	/**
	 * Enum PhotonVoice.CSCore.AudioEncoding
	 */
	enum class AudioEncoding : int16_t
	{
		Unknown                             = 0x0000000000000000,
		Pcm                                 = 0x0000000000000001,
		Adpcm                               = 0x0000000000000002,
		IeeeFloat                           = 0x0000000000000003,
		Vselp                               = 0x0000000000000004,
		IbmCvsd                             = 0x0000000000000005,
		ALaw                                = 0x0000000000000006,
		MuLaw                               = 0x0000000000000007,
		Dts                                 = 0x0000000000000008,
		Drm                                 = 0x0000000000000009,
		WmaVoice9                           = 0x000000000000000A,
		OkiAdpcm                            = 0x0000000000000010,
		DviAdpcm                            = 0x0000000000000011,
		ImaAdpcm                            = 0x0000000000000011,
		MediaspaceAdpcm                     = 0x0000000000000012,
		SierraAdpcm                         = 0x0000000000000013,
		G723Adpcm                           = 0x0000000000000014,
		DigiStd                             = 0x0000000000000015,
		DigiFix                             = 0x0000000000000016,
		DialogicOkiAdpcm                    = 0x0000000000000017,
		MediaVisionAdpcm                    = 0x0000000000000018,
		CUCodec                             = 0x0000000000000019,
		YamahaAdpcm                         = 0x0000000000000020,
		SonarC                              = 0x0000000000000021,
		DspGroupTrueSpeech                  = 0x0000000000000022,
		EchoSpeechCorporation1              = 0x0000000000000023,
		AudioFileAf36                       = 0x0000000000000024,
		Aptx                                = 0x0000000000000025,
		AudioFileAf10                       = 0x0000000000000026,
		Prosody1612                         = 0x0000000000000027,
		Lrc                                 = 0x0000000000000028,
		DolbyAc2                            = 0x0000000000000030,
		Gsm610                              = 0x0000000000000031,
		MsnAudio                            = 0x0000000000000032,
		AntexAdpcme                         = 0x0000000000000033,
		ControlResVqlpc                     = 0x0000000000000034,
		DigiReal                            = 0x0000000000000035,
		DigiAdpcm                           = 0x0000000000000036,
		ControlResCr10                      = 0x0000000000000037,
		WAVE_FORMAT_NMS_VBXADPCM            = 0x0000000000000038,
		WAVE_FORMAT_CS_IMAADPCM             = 0x0000000000000039,
		WAVE_FORMAT_ECHOSC3                 = 0x000000000000003A,
		WAVE_FORMAT_ROCKWELL_ADPCM          = 0x000000000000003B,
		WAVE_FORMAT_ROCKWELL_DIGITALK       = 0x000000000000003C,
		WAVE_FORMAT_XEBEC                   = 0x000000000000003D,
		WAVE_FORMAT_G721_ADPCM              = 0x0000000000000040,
		WAVE_FORMAT_G728_CELP               = 0x0000000000000041,
		WAVE_FORMAT_MSG723                  = 0x0000000000000042,
		Mpeg                                = 0x0000000000000050,
		WAVE_FORMAT_RT24                    = 0x0000000000000052,
		WAVE_FORMAT_PAC                     = 0x0000000000000053,
		MpegLayer3                          = 0x0000000000000055,
		WAVE_FORMAT_LUCENT_G723             = 0x0000000000000059,
		WAVE_FORMAT_CIRRUS                  = 0x0000000000000060,
		WAVE_FORMAT_ESPCM                   = 0x0000000000000061,
		WAVE_FORMAT_VOXWARE                 = 0x0000000000000062,
		WAVE_FORMAT_CANOPUS_ATRAC           = 0x0000000000000063,
		WAVE_FORMAT_G726_ADPCM              = 0x0000000000000064,
		WAVE_FORMAT_G722_ADPCM              = 0x0000000000000065,
		WAVE_FORMAT_DSAT_DISPLAY            = 0x0000000000000067,
		WAVE_FORMAT_VOXWARE_BYTE_ALIGNED    = 0x0000000000000069,
		WAVE_FORMAT_VOXWARE_AC8             = 0x0000000000000070,
		WAVE_FORMAT_VOXWARE_AC10            = 0x0000000000000071,
		WAVE_FORMAT_VOXWARE_AC16            = 0x0000000000000072,
		WAVE_FORMAT_VOXWARE_AC20            = 0x0000000000000073,
		WAVE_FORMAT_VOXWARE_RT24            = 0x0000000000000074,
		WAVE_FORMAT_VOXWARE_RT29            = 0x0000000000000075,
		WAVE_FORMAT_VOXWARE_RT29HW          = 0x0000000000000076,
		WAVE_FORMAT_VOXWARE_VR12            = 0x0000000000000077,
		WAVE_FORMAT_VOXWARE_VR18            = 0x0000000000000078,
		WAVE_FORMAT_VOXWARE_TQ40            = 0x0000000000000079,
		WAVE_FORMAT_SOFTSOUND               = 0x0000000000000080,
		WAVE_FORMAT_VOXWARE_TQ60            = 0x0000000000000081,
		WAVE_FORMAT_MSRT24                  = 0x0000000000000082,
		WAVE_FORMAT_G729A                   = 0x0000000000000083,
		WAVE_FORMAT_MVI_MVI2                = 0x0000000000000084,
		WAVE_FORMAT_DF_G726                 = 0x0000000000000085,
		WAVE_FORMAT_DF_GSM610               = 0x0000000000000086,
		WAVE_FORMAT_ISIAUDIO                = 0x0000000000000088,
		WAVE_FORMAT_ONLIVE                  = 0x0000000000000089,
		WAVE_FORMAT_SBC24                   = 0x0000000000000091,
		WAVE_FORMAT_DOLBY_AC3_SPDIF         = 0x0000000000000092,
		WAVE_FORMAT_MEDIASONIC_G723         = 0x0000000000000093,
		WAVE_FORMAT_PROSODY_8KBPS           = 0x0000000000000094,
		WAVE_FORMAT_ZYXEL_ADPCM             = 0x0000000000000097,
		WAVE_FORMAT_PHILIPS_LPCBB           = 0x0000000000000098,
		WAVE_FORMAT_PACKED                  = 0x0000000000000099,
		WAVE_FORMAT_MALDEN_PHONYTALK        = 0x00000000000000A0,
		Gsm                                 = 0x00000000000000A1,
		G729                                = 0x00000000000000A2,
		G723                                = 0x00000000000000A3,
		Acelp                               = 0x00000000000000A4,
		RawAac                              = 0x00000000000000FF,
		WAVE_FORMAT_RHETOREX_ADPCM          = 0x0000000000000100,
		WAVE_FORMAT_IRAT                    = 0x0000000000000101,
		WAVE_FORMAT_VIVO_G723               = 0x0000000000000111,
		WAVE_FORMAT_VIVO_SIREN              = 0x0000000000000112,
		WAVE_FORMAT_DIGITAL_G723            = 0x0000000000000123,
		WAVE_FORMAT_SANYO_LD_ADPCM          = 0x0000000000000125,
		WAVE_FORMAT_SIPROLAB_ACEPLNET       = 0x0000000000000130,
		WAVE_FORMAT_SIPROLAB_ACELP4800      = 0x0000000000000131,
		WAVE_FORMAT_SIPROLAB_ACELP8V3       = 0x0000000000000132,
		WAVE_FORMAT_SIPROLAB_G729           = 0x0000000000000133,
		WAVE_FORMAT_SIPROLAB_G729A          = 0x0000000000000134,
		WAVE_FORMAT_SIPROLAB_KELVIN         = 0x0000000000000135,
		WAVE_FORMAT_G726ADPCM               = 0x0000000000000140,
		WAVE_FORMAT_QUALCOMM_PUREVOICE      = 0x0000000000000150,
		WAVE_FORMAT_QUALCOMM_HALFRATE       = 0x0000000000000151,
		WAVE_FORMAT_TUBGSM                  = 0x0000000000000155,
		WAVE_FORMAT_MSAUDIO1                = 0x0000000000000160,
		WindowsMediaAudio                   = 0x0000000000000161,
		WindowsMediaAudioProfessional       = 0x0000000000000162,
		WindowsMediaAudioLosseless          = 0x0000000000000163,
		WindowsMediaAudioSpdif              = 0x0000000000000164,
		WAVE_FORMAT_UNISYS_NAP_ADPCM        = 0x0000000000000170,
		WAVE_FORMAT_UNISYS_NAP_ULAW         = 0x0000000000000171,
		WAVE_FORMAT_UNISYS_NAP_ALAW         = 0x0000000000000172,
		WAVE_FORMAT_UNISYS_NAP_16K          = 0x0000000000000173,
		WAVE_FORMAT_CREATIVE_ADPCM          = 0x0000000000000200,
		WAVE_FORMAT_CREATIVE_FASTSPEECH8    = 0x0000000000000202,
		WAVE_FORMAT_CREATIVE_FASTSPEECH10   = 0x0000000000000203,
		WAVE_FORMAT_UHER_ADPCM              = 0x0000000000000210,
		WAVE_FORMAT_QUARTERDECK             = 0x0000000000000220,
		WAVE_FORMAT_ILINK_VC                = 0x0000000000000230,
		WAVE_FORMAT_RAW_SPORT               = 0x0000000000000240,
		WAVE_FORMAT_ESST_AC3                = 0x0000000000000241,
		WAVE_FORMAT_IPI_HSX                 = 0x0000000000000250,
		WAVE_FORMAT_IPI_RPELP               = 0x0000000000000251,
		WAVE_FORMAT_CS2                     = 0x0000000000000260,
		WAVE_FORMAT_SONY_SCX                = 0x0000000000000270,
		WAVE_FORMAT_FM_TOWNS_SND            = 0x0000000000000300,
		WAVE_FORMAT_BTV_DIGITAL             = 0x0000000000000400,
		WAVE_FORMAT_QDESIGN_MUSIC           = 0x0000000000000450,
		WAVE_FORMAT_VME_VMPCM               = 0x0000000000000680,
		WAVE_FORMAT_TPC                     = 0x0000000000000681,
		WAVE_FORMAT_OLIGSM                  = 0x0000000000001000,
		WAVE_FORMAT_OLIADPCM                = 0x0000000000001001,
		WAVE_FORMAT_OLICELP                 = 0x0000000000001002,
		WAVE_FORMAT_OLISBC                  = 0x0000000000001003,
		WAVE_FORMAT_OLIOPR                  = 0x0000000000001004,
		WAVE_FORMAT_LH_CODEC                = 0x0000000000001100,
		WAVE_FORMAT_NORRIS                  = 0x0000000000001400,
		WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS = 0x0000000000001500,
		MPEG_ADTS_AAC                       = 0x0000000000001600,
		MPEG_RAW_AAC                        = 0x0000000000001601,
		MPEG_LOAS                           = 0x0000000000001602,
		NOKIA_MPEG_ADTS_AAC                 = 0x0000000000001608,
		NOKIA_MPEG_RAW_AAC                  = 0x0000000000001609,
		VODAFONE_MPEG_ADTS_AAC              = 0x000000000000160A,
		VODAFONE_MPEG_RAW_AAC               = 0x000000000000160B,
		MPEG_HEAAC                          = 0x0000000000001610,
		WAVE_FORMAT_DVM                     = 0x0000000000002000,
		Vorbis1                             = 0x000000000000674F,
		Vorbis2                             = 0x0000000000006750,
		Vorbis3                             = 0x0000000000006751,
		Vorbis1P                            = 0x000000000000676F,
		Vorbis2P                            = 0x0000000000006770,
		Vorbis3P                            = 0x0000000000006771,
		WAVE_FORMAT_RAW_AAC1                = 0x00000000000000FF,
		WAVE_FORMAT_WMAVOICE9               = 0x000000000000000A,
		Extensible                          = -2,
		WAVE_FORMAT_DEVELOPMENT             = -1,
		WAVE_FORMAT_FLAC                    = -3668
	};

	/**
	 * Enum PhotonVoice.CSCore.ChannelMask
	 */
	enum class ChannelMask : int32_t
	{
		SpeakerFrontLeft          = 0x0000000000000001,
		SpeakerFrontRight         = 0x0000000000000002,
		SpeakerFrontCenter        = 0x0000000000000004,
		SpeakerLowFrequency       = 0x0000000000000008,
		SpeakerBackLeft           = 0x0000000000000010,
		SpeakerBackRight          = 0x0000000000000020,
		SpeakerFrontLeftOfCenter  = 0x0000000000000040,
		SpeakerFrontRightOfCenter = 0x0000000000000080,
		SpeakerBackCenter         = 0x0000000000000100,
		SpeakerSideLeft           = 0x0000000000000200,
		SpeakerSideRight          = 0x0000000000000400,
		SpeakerTopCenter          = 0x0000000000000800,
		SpeakerTopFrontLeft       = 0x0000000000001000,
		SpeakerTopFrontCenter     = 0x0000000000002000,
		SpeakerTopFrontRight      = 0x0000000000004000,
		SpeakerTopBackLeft        = 0x0000000000008000,
		SpeakerTopBackCenter      = 0x0000000000010000,
		SpeakerTopBackRight       = 0x0000000000020000
	};

	/**
	 * Enum PhotonVoice.Photon.Voice.Unity.Recorder+InputSourceType
	 */
	enum class Recorder_InputSourceType : int32_t
	{
		Microphone = 0x0000000000000000,
		AudioClip  = 0x0000000000000001,
		Factory    = 0x0000000000000002
	};

	/**
	 * Enum PhotonVoice.Photon.Voice.Unity.Recorder+MicType
	 */
	enum class Recorder_MicType : int32_t
	{
		Unity  = 0x0000000000000000,
		Photon = 0x0000000000000001
	};

	/**
	 * Enum PhotonVoice.Photon.Voice.Unity.Recorder+SampleTypeConv
	 */
	enum class Recorder_SampleTypeConv : int32_t
	{
		None  = 0x0000000000000000,
		Short = 0x0000000000000001
	};

	/**
	 * Enum PhotonUnityNetworking.Demos.Photon.Pun.Demo.Shared.DocLinks+DocTypes
	 */
	enum class DocLinks_DocTypes : int32_t
	{
		Doc = 0x0000000000000000,
		Api = 0x0000000000000001
	};

	/**
	 * Enum PhotonUnityNetworking.Demos.Photon.Pun.Demo.Shared.DocLinks+Products
	 */
	enum class DocLinks_Products : int32_t
	{
		OnPremise = 0x0000000000000000,
		Realtime  = 0x0000000000000001,
		Pun       = 0x0000000000000002,
		Chat      = 0x0000000000000003,
		Voice     = 0x0000000000000004,
		Bolt      = 0x0000000000000005,
		Quantum   = 0x0000000000000006
	};

	/**
	 * Enum PhotonUnityNetworking.Demos.Photon.Pun.Demo.Shared.DocLinks+Versions
	 */
	enum class DocLinks_Versions : int32_t
	{
		Current = 0x0000000000000000,
		V1      = 0x0000000000000001,
		V2      = 0x0000000000000002
	};

	/**
	 * Enum PhotonUnityNetworking.Demos.Photon.Pun.Demo.Shared.DocLinks+Languages
	 */
	enum class DocLinks_Languages : int32_t
	{
		English  = 0x0000000000000000,
		Japanese = 0x0000000000000001,
		Korean   = 0x0000000000000002,
		Chinese  = 0x0000000000000003
	};

	/**
	 * Enum PhotonUnityNetworking.Demos.Photon.Pun.Demo.SlotRacer.Utils.BezierControlPointMode
	 */
	enum class BezierControlPointMode : int32_t
	{
		Free     = 0x0000000000000000,
		Aligned  = 0x0000000000000001,
		Mirrored = 0x0000000000000002
	};

	/**
	 * Enum PhotonUnityNetworking.Demos.Photon.Pun.Demo.Procedural.WorldSize
	 */
	enum class WorldSize : int32_t
	{
		Tiny   = 0x0000000000000010,
		Small  = 0x0000000000000020,
		Medium = 0x0000000000000040,
		Large  = 0x0000000000000080
	};

	/**
	 * Enum PhotonUnityNetworking.Demos.Photon.Pun.Demo.Procedural.WorldType
	 */
	enum class WorldType : int32_t
	{
		Flat     = 0x0000000000000004,
		Standard = 0x0000000000000008,
		Mountain = 0x0000000000000010
	};

	/**
	 * Enum PhotonUnityNetworking.Demos.Photon.Pun.Demo.Procedural.ClusterSize
	 */
	enum class ClusterSize : int32_t
	{
		Small  = 0x0000000000000004,
		Medium = 0x0000000000000010,
		Large  = 0x0000000000000040
	};

	/**
	 * Enum UnityEngine.IMGUIModule.UnityEngine.EventType
	 */
	enum class EventType : int32_t
	{
		MouseDown        = 0x0000000000000000,
		MouseUp          = 0x0000000000000001,
		MouseMove        = 0x0000000000000002,
		MouseDrag        = 0x0000000000000003,
		KeyDown          = 0x0000000000000004,
		KeyUp            = 0x0000000000000005,
		ScrollWheel      = 0x0000000000000006,
		Repaint          = 0x0000000000000007,
		Layout           = 0x0000000000000008,
		DragUpdated      = 0x0000000000000009,
		DragPerform      = 0x000000000000000A,
		DragExited       = 0x000000000000000F,
		Ignore           = 0x000000000000000B,
		Used             = 0x000000000000000C,
		ValidateCommand  = 0x000000000000000D,
		ExecuteCommand   = 0x000000000000000E,
		ContextClick     = 0x0000000000000010,
		MouseEnterWindow = 0x0000000000000014,
		MouseLeaveWindow = 0x0000000000000015,
		TouchDown        = 0x000000000000001E,
		TouchUp          = 0x000000000000001F,
		TouchMove        = 0x0000000000000020,
		TouchEnter       = 0x0000000000000021,
		TouchLeave       = 0x0000000000000022,
		TouchStationary  = 0x0000000000000023,
		mouseDown        = 0x0000000000000000,
		mouseUp          = 0x0000000000000001,
		mouseMove        = 0x0000000000000002,
		mouseDrag        = 0x0000000000000003,
		keyDown          = 0x0000000000000004,
		keyUp            = 0x0000000000000005,
		scrollWheel      = 0x0000000000000006,
		repaint          = 0x0000000000000007,
		layout           = 0x0000000000000008,
		dragUpdated      = 0x0000000000000009,
		dragPerform      = 0x000000000000000A,
		ignore           = 0x000000000000000B,
		used             = 0x000000000000000C
	};

	/**
	 * Enum UnityEngine.IMGUIModule.UnityEngine.EventModifiers
	 */
	enum class EventModifiers : int32_t
	{
		None        = 0x0000000000000000,
		Shift       = 0x0000000000000001,
		Control     = 0x0000000000000002,
		Alt         = 0x0000000000000004,
		Command     = 0x0000000000000008,
		Numeric     = 0x0000000000000010,
		CapsLock    = 0x0000000000000020,
		FunctionKey = 0x0000000000000040
	};

	/**
	 * Enum UnityEngine.IMGUIModule.UnityEngine.PointerType
	 */
	enum class PointerType_1 : int32_t
	{
		Mouse = 0x0000000000000000,
		Touch = 0x0000000000000001,
		Pen   = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.IMGUIModule.UnityEngine.GUI+ToolbarButtonSize
	 */
	enum class GUI_ToolbarButtonSize : int32_t
	{
		Fixed         = 0x0000000000000000,
		FitToContents = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.IMGUIModule.UnityEngine.ScaleMode
	 */
	enum class ScaleMode : int32_t
	{
		StretchToFill = 0x0000000000000000,
		ScaleAndCrop  = 0x0000000000000001,
		ScaleToFit    = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.IMGUIModule.UnityEngine.FocusType
	 */
	enum class FocusType : int32_t
	{
		Native   = 0x0000000000000000,
		Keyboard = 0x0000000000000001,
		Passive  = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.IMGUIModule.UnityEngine.GUILayoutOption+Type
	 */
	enum class GUILayoutOption_Type : int32_t
	{
		fixedWidth    = 0x0000000000000000,
		fixedHeight   = 0x0000000000000001,
		minWidth      = 0x0000000000000002,
		maxWidth      = 0x0000000000000003,
		minHeight     = 0x0000000000000004,
		maxHeight     = 0x0000000000000005,
		stretchWidth  = 0x0000000000000006,
		stretchHeight = 0x0000000000000007,
		alignStart    = 0x0000000000000008,
		alignMiddle   = 0x0000000000000009,
		alignEnd      = 0x000000000000000A,
		alignJustify  = 0x000000000000000B,
		equalSize     = 0x000000000000000C,
		spacing       = 0x000000000000000D
	};

	/**
	 * Enum UnityEngine.IMGUIModule.UnityEngine.ImagePosition
	 */
	enum class ImagePosition : int32_t
	{
		ImageLeft  = 0x0000000000000000,
		ImageAbove = 0x0000000000000001,
		ImageOnly  = 0x0000000000000002,
		TextOnly   = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.IMGUIModule.UnityEngine.TextClipping
	 */
	enum class TextClipping : int32_t
	{
		Overflow = 0x0000000000000000,
		Clip     = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.IMGUIModule.UnityEngine.TextEditor+DblClickSnapping
	 */
	enum class TextEditor_DblClickSnapping : uint8_t
	{
		WORDS      = 0x0000000000000000,
		PARAGRAPHS = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.IMGUIModule.UnityEngine.TextEditor+CharacterType
	 */
	enum class TextEditor_CharacterType : int32_t
	{
		LetterLike = 0x0000000000000000,
		Symbol     = 0x0000000000000001,
		Symbol2    = 0x0000000000000002,
		WhiteSpace = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.IMGUIModule.UnityEngine.TextEditor+Direction
	 */
	enum class TextEditor_Direction : int32_t
	{
		Forward  = 0x0000000000000000,
		Backward = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.IMGUIModule.UnityEngine.TextEditor+TextEditOp
	 */
	enum class TextEditor_TextEditOp : int32_t
	{
		MoveLeft                       = 0x0000000000000000,
		MoveRight                      = 0x0000000000000001,
		MoveUp                         = 0x0000000000000002,
		MoveDown                       = 0x0000000000000003,
		MoveLineStart                  = 0x0000000000000004,
		MoveLineEnd                    = 0x0000000000000005,
		MoveTextStart                  = 0x0000000000000006,
		MoveTextEnd                    = 0x0000000000000007,
		MovePageUp                     = 0x0000000000000008,
		MovePageDown                   = 0x0000000000000009,
		MoveGraphicalLineStart         = 0x000000000000000A,
		MoveGraphicalLineEnd           = 0x000000000000000B,
		MoveWordLeft                   = 0x000000000000000C,
		MoveWordRight                  = 0x000000000000000D,
		MoveParagraphForward           = 0x000000000000000E,
		MoveParagraphBackward          = 0x000000000000000F,
		MoveToStartOfNextWord          = 0x0000000000000010,
		MoveToEndOfPreviousWord        = 0x0000000000000011,
		SelectLeft                     = 0x0000000000000012,
		SelectRight                    = 0x0000000000000013,
		SelectUp                       = 0x0000000000000014,
		SelectDown                     = 0x0000000000000015,
		SelectTextStart                = 0x0000000000000016,
		SelectTextEnd                  = 0x0000000000000017,
		SelectPageUp                   = 0x0000000000000018,
		SelectPageDown                 = 0x0000000000000019,
		ExpandSelectGraphicalLineStart = 0x000000000000001A,
		ExpandSelectGraphicalLineEnd   = 0x000000000000001B,
		SelectGraphicalLineStart       = 0x000000000000001C,
		SelectGraphicalLineEnd         = 0x000000000000001D,
		SelectWordLeft                 = 0x000000000000001E,
		SelectWordRight                = 0x000000000000001F,
		SelectToEndOfPreviousWord      = 0x0000000000000020,
		SelectToStartOfNextWord        = 0x0000000000000021,
		SelectParagraphBackward        = 0x0000000000000022,
		SelectParagraphForward         = 0x0000000000000023,
		Delete                         = 0x0000000000000024,
		Backspace                      = 0x0000000000000025,
		DeleteWordBack                 = 0x0000000000000026,
		DeleteWordForward              = 0x0000000000000027,
		DeleteLineBack                 = 0x0000000000000028,
		Cut                            = 0x0000000000000029,
		Copy                           = 0x000000000000002A,
		Paste                          = 0x000000000000002B,
		SelectAll                      = 0x000000000000002C,
		SelectNone                     = 0x000000000000002D,
		ScrollStart                    = 0x000000000000002E,
		ScrollEnd                      = 0x000000000000002F,
		ScrollPageUp                   = 0x0000000000000030,
		ScrollPageDown                 = 0x0000000000000031
	};

	/**
	 * Enum Unity.Timeline.UnityEngine.Timeline.ActivationTrack+PostPlaybackState
	 */
	enum class ActivationTrack_PostPlaybackState : int32_t
	{
		Active    = 0x0000000000000000,
		Inactive  = 0x0000000000000001,
		Revert    = 0x0000000000000002,
		LeaveAsIs = 0x0000000000000003
	};

	/**
	 * Enum Unity.Timeline.UnityEngine.Timeline.AnimationPlayableAsset+LoopMode
	 */
	enum class AnimationPlayableAsset_LoopMode : int32_t
	{
		UseSourceAsset = 0x0000000000000000,
		On             = 0x0000000000000001,
		Off            = 0x0000000000000002
	};

	/**
	 * Enum Unity.Timeline.UnityEngine.Timeline.AnimationPlayableAsset+Versions
	 */
	enum class AnimationPlayableAsset_Versions : int32_t
	{
		Initial         = 0x0000000000000000,
		RotationAsEuler = 0x0000000000000001
	};

	/**
	 * Enum Unity.Timeline.UnityEngine.Timeline.MatchTargetFields
	 */
	enum class MatchTargetFields : int32_t
	{
		PositionX = 0x0000000000000001,
		PositionY = 0x0000000000000002,
		PositionZ = 0x0000000000000004,
		RotationX = 0x0000000000000008,
		RotationY = 0x0000000000000010,
		RotationZ = 0x0000000000000020
	};

	/**
	 * Enum Unity.Timeline.UnityEngine.Timeline.TrackOffset
	 */
	enum class TrackOffset : int32_t
	{
		ApplyTransformOffsets = 0x0000000000000000,
		ApplySceneOffsets     = 0x0000000000000001,
		Auto                  = 0x0000000000000002
	};

	/**
	 * Enum Unity.Timeline.UnityEngine.Timeline.AppliedOffsetMode
	 */
	enum class AppliedOffsetMode : int32_t
	{
		NoRootTransform         = 0x0000000000000000,
		TransformOffset         = 0x0000000000000001,
		SceneOffset             = 0x0000000000000002,
		TransformOffsetLegacy   = 0x0000000000000003,
		SceneOffsetLegacy       = 0x0000000000000004,
		SceneOffsetEditor       = 0x0000000000000005,
		SceneOffsetLegacyEditor = 0x0000000000000006
	};

	/**
	 * Enum Unity.Timeline.UnityEngine.Timeline.TimelineClip+Versions
	 */
	enum class TimelineClip_Versions : int32_t
	{
		Initial                 = 0x0000000000000000,
		ClipInFromGlobalToLocal = 0x0000000000000001
	};

	/**
	 * Enum Unity.Timeline.UnityEngine.Timeline.TimelineClip+ClipExtrapolation
	 */
	enum class TimelineClip_ClipExtrapolation : int32_t
	{
		None     = 0x0000000000000000,
		Hold     = 0x0000000000000001,
		Loop     = 0x0000000000000002,
		PingPong = 0x0000000000000003,
		Continue = 0x0000000000000004
	};

	/**
	 * Enum Unity.Timeline.UnityEngine.Timeline.TimelineClip+BlendCurveMode
	 */
	enum class TimelineClip_BlendCurveMode : int32_t
	{
		Auto   = 0x0000000000000000,
		Manual = 0x0000000000000001
	};

	/**
	 * Enum Unity.Timeline.UnityEngine.Timeline.TimelineAsset+Versions
	 */
	enum class TimelineAsset_Versions : int32_t
	{
		Initial = 0x0000000000000000
	};

	/**
	 * Enum Unity.Timeline.UnityEngine.Timeline.TimelineAsset+MediaType
	 */
	enum class TimelineAsset_MediaType : int32_t
	{
		Animation = 0x0000000000000000,
		Audio     = 0x0000000000000001,
		Texture   = 0x0000000000000002,
		Video     = 0x0000000000000002,
		Script    = 0x0000000000000003,
		Hybrid    = 0x0000000000000004,
		Group     = 0x0000000000000005
	};

	/**
	 * Enum Unity.Timeline.UnityEngine.Timeline.TimelineAsset+DurationMode
	 */
	enum class TimelineAsset_DurationMode : int32_t
	{
		BasedOnClips = 0x0000000000000000,
		FixedLength  = 0x0000000000000001
	};

	/**
	 * Enum Unity.Timeline.UnityEngine.Timeline.TrackAsset+Versions
	 */
	enum class TrackAsset_Versions : int32_t
	{
		Initial                 = 0x0000000000000000,
		RotationAsEuler         = 0x0000000000000001,
		RootMotionUpgrade       = 0x0000000000000002,
		AnimatedTrackProperties = 0x0000000000000003
	};

	/**
	 * Enum Unity.Timeline.UnityEngine.Timeline.ClipCaps
	 */
	enum class ClipCaps : int32_t
	{
		None            = 0x0000000000000000,
		Looping         = 0x0000000000000001,
		Extrapolation   = 0x0000000000000002,
		ClipIn          = 0x0000000000000004,
		SpeedMultiplier = 0x0000000000000008,
		Blending        = 0x0000000000000010,
		AutoScale       = 0x0000000000000028,
		All             = -1
	};

	/**
	 * Enum Unity.Timeline.UnityEngine.Timeline.ActivationControlPlayable+PostPlaybackState
	 */
	enum class ActivationControlPlayable_PostPlaybackState : int32_t
	{
		Active   = 0x0000000000000000,
		Inactive = 0x0000000000000001,
		Revert   = 0x0000000000000002
	};

	/**
	 * Enum Unity.Timeline.UnityEngine.Timeline.ActivationControlPlayable+InitialState
	 */
	enum class ActivationControlPlayable_InitialState : int32_t
	{
		Unset    = 0x0000000000000000,
		Active   = 0x0000000000000001,
		Inactive = 0x0000000000000002
	};

	/**
	 * Enum Unity.Timeline.UnityEngine.Timeline.NotificationFlags
	 */
	enum class NotificationFlags : int16_t
	{
		TriggerInEditMode = 0x0000000000000001,
		Retroactive       = 0x0000000000000002,
		TriggerOnce       = 0x0000000000000004
	};

	/**
	 * Enum Unity.Timeline.UnityEngine.Timeline.TrackBindingFlags
	 */
	enum class TrackBindingFlags : int32_t
	{
		None                 = 0x0000000000000000,
		AllowCreateComponent = 0x0000000000000001,
		All                  = 0x0000000000000001
	};

	/**
	 * Enum Unity.Timeline.UnityEngine.Timeline.TimeFieldAttribute+UseEditMode
	 */
	enum class TimeFieldAttribute_UseEditMode : int32_t
	{
		None          = 0x0000000000000000,
		ApplyEditMode = 0x0000000000000001
	};

	/**
	 * Enum Unity.Timeline.UnityEngine.Timeline.StandardFrameRates
	 */
	enum class StandardFrameRates : int32_t
	{
		Fps24    = 0x0000000000000000,
		Fps23_97 = 0x0000000000000001,
		Fps25    = 0x0000000000000002,
		Fps30    = 0x0000000000000003,
		Fps29_97 = 0x0000000000000004,
		Fps50    = 0x0000000000000005,
		Fps60    = 0x0000000000000006,
		Fps59_94 = 0x0000000000000007
	};

	/**
	 * Enum PhotonUnityNetworking.Photon.Pun.ConnectMethod
	 */
	enum class ConnectMethod : int32_t
	{
		NotCalled       = 0x0000000000000000,
		ConnectToMaster = 0x0000000000000001,
		ConnectToRegion = 0x0000000000000002,
		ConnectToBest   = 0x0000000000000003
	};

	/**
	 * Enum PhotonUnityNetworking.Photon.Pun.PunLogLevel
	 */
	enum class PunLogLevel : int32_t
	{
		ErrorsOnly    = 0x0000000000000000,
		Informational = 0x0000000000000001,
		Full          = 0x0000000000000002
	};

	/**
	 * Enum PhotonUnityNetworking.Photon.Pun.RpcTarget
	 */
	enum class RpcTarget : int32_t
	{
		All                  = 0x0000000000000000,
		Others               = 0x0000000000000001,
		MasterClient         = 0x0000000000000002,
		AllBuffered          = 0x0000000000000003,
		OthersBuffered       = 0x0000000000000004,
		AllViaServer         = 0x0000000000000005,
		AllBufferedViaServer = 0x0000000000000006
	};

	/**
	 * Enum PhotonUnityNetworking.Photon.Pun.ViewSynchronization
	 */
	enum class ViewSynchronization : int32_t
	{
		Off                     = 0x0000000000000000,
		ReliableDeltaCompressed = 0x0000000000000001,
		Unreliable              = 0x0000000000000002,
		UnreliableOnChange      = 0x0000000000000003
	};

	/**
	 * Enum PhotonUnityNetworking.Photon.Pun.OwnershipOption
	 */
	enum class OwnershipOption : int32_t
	{
		Fixed    = 0x0000000000000000,
		Takeover = 0x0000000000000001,
		Request  = 0x0000000000000002
	};

	/**
	 * Enum PhotonUnityNetworking.Photon.Pun.PhotonView+ObservableSearch
	 */
	enum class PhotonView_ObservableSearch : int32_t
	{
		Manual         = 0x0000000000000000,
		AutoFindActive = 0x0000000000000001,
		AutoFindAll    = 0x0000000000000002
	};

	/**
	 * Enum PhotonUnityNetworking.Photon.Pun.PhotonAnimatorView+ParameterType
	 */
	enum class PhotonAnimatorView_ParameterType : int32_t
	{
		Float   = 0x0000000000000001,
		Int     = 0x0000000000000003,
		Bool    = 0x0000000000000004,
		Trigger = 0x0000000000000009
	};

	/**
	 * Enum PhotonUnityNetworking.Photon.Pun.PhotonAnimatorView+SynchronizeType
	 */
	enum class PhotonAnimatorView_SynchronizeType : int32_t
	{
		Disabled   = 0x0000000000000000,
		Discrete   = 0x0000000000000001,
		Continuous = 0x0000000000000002
	};

	/**
	 * Enum PhotonUnityNetworking.Photon.Pun.PhotonTransformViewPositionModel+InterpolateOptions
	 */
	enum class PhotonTransformViewPositionModel_InterpolateOptions : int32_t
	{
		Disabled          = 0x0000000000000000,
		FixedSpeed        = 0x0000000000000001,
		EstimatedSpeed    = 0x0000000000000002,
		SynchronizeValues = 0x0000000000000003,
		Lerp              = 0x0000000000000004
	};

	/**
	 * Enum PhotonUnityNetworking.Photon.Pun.PhotonTransformViewPositionModel+ExtrapolateOptions
	 */
	enum class PhotonTransformViewPositionModel_ExtrapolateOptions : int32_t
	{
		Disabled             = 0x0000000000000000,
		SynchronizeValues    = 0x0000000000000001,
		EstimateSpeedAndTurn = 0x0000000000000002,
		FixedSpeed           = 0x0000000000000003
	};

	/**
	 * Enum PhotonUnityNetworking.Photon.Pun.PhotonTransformViewRotationModel+InterpolateOptions
	 */
	enum class PhotonTransformViewRotationModel_InterpolateOptions : int32_t
	{
		Disabled      = 0x0000000000000000,
		RotateTowards = 0x0000000000000001,
		Lerp          = 0x0000000000000002
	};

	/**
	 * Enum PhotonUnityNetworking.Photon.Pun.PhotonTransformViewScaleModel+InterpolateOptions
	 */
	enum class PhotonTransformViewScaleModel_InterpolateOptions : int32_t
	{
		Disabled    = 0x0000000000000000,
		MoveTowards = 0x0000000000000001,
		Lerp        = 0x0000000000000002
	};

	/**
	 * Enum PhotonRealtime.Photon.Realtime.ClientState
	 */
	enum class ClientState : int32_t
	{
		PeerCreated                   = 0x0000000000000000,
		Authenticating                = 0x0000000000000001,
		Authenticated                 = 0x0000000000000002,
		JoiningLobby                  = 0x0000000000000003,
		JoinedLobby                   = 0x0000000000000004,
		DisconnectingFromMasterServer = 0x0000000000000005,
		DisconnectingFromMasterserver = 0x0000000000000005,
		ConnectingToGameServer        = 0x0000000000000006,
		ConnectingToGameserver        = 0x0000000000000006,
		ConnectedToGameServer         = 0x0000000000000007,
		ConnectedToGameserver         = 0x0000000000000007,
		Joining                       = 0x0000000000000008,
		Joined                        = 0x0000000000000009,
		Leaving                       = 0x000000000000000A,
		DisconnectingFromGameServer   = 0x000000000000000B,
		DisconnectingFromGameserver   = 0x000000000000000B,
		ConnectingToMasterServer      = 0x000000000000000C,
		ConnectingToMasterserver      = 0x000000000000000C,
		Disconnecting                 = 0x000000000000000D,
		Disconnected                  = 0x000000000000000E,
		ConnectedToMasterServer       = 0x000000000000000F,
		ConnectedToMasterserver       = 0x000000000000000F,
		ConnectedToMaster             = 0x000000000000000F,
		ConnectingToNameServer        = 0x0000000000000010,
		ConnectedToNameServer         = 0x0000000000000011,
		DisconnectingFromNameServer   = 0x0000000000000012,
		ConnectWithFallbackProtocol   = 0x0000000000000013
	};

	/**
	 * Enum PhotonRealtime.Photon.Realtime.JoinType
	 */
	enum class JoinType_1 : int32_t
	{
		CreateRoom             = 0x0000000000000000,
		JoinRoom               = 0x0000000000000001,
		JoinRandomRoom         = 0x0000000000000002,
		JoinRandomOrCreateRoom = 0x0000000000000003,
		JoinOrCreateRoom       = 0x0000000000000004
	};

	/**
	 * Enum PhotonRealtime.Photon.Realtime.DisconnectCause
	 */
	enum class DisconnectCause : int32_t
	{
		None                              = 0x0000000000000000,
		ExceptionOnConnect                = 0x0000000000000001,
		DnsExceptionOnConnect             = 0x0000000000000002,
		ServerAddressInvalid              = 0x0000000000000003,
		Exception                         = 0x0000000000000004,
		ServerTimeout                     = 0x0000000000000005,
		ClientTimeout                     = 0x0000000000000006,
		DisconnectByServerLogic           = 0x0000000000000007,
		DisconnectByServerReasonUnknown   = 0x0000000000000008,
		InvalidAuthentication             = 0x0000000000000009,
		CustomAuthenticationFailed        = 0x000000000000000A,
		AuthenticationTicketExpired       = 0x000000000000000B,
		MaxCcuReached                     = 0x000000000000000C,
		InvalidRegion                     = 0x000000000000000D,
		OperationNotAllowedInCurrentState = 0x000000000000000E,
		DisconnectByClientLogic           = 0x000000000000000F,
		DisconnectByOperationLimit        = 0x0000000000000010,
		DisconnectByDisconnectMessage     = 0x0000000000000011
	};

	/**
	 * Enum PhotonRealtime.Photon.Realtime.ServerConnection
	 */
	enum class ServerConnection : int32_t
	{
		MasterServer = 0x0000000000000000,
		GameServer   = 0x0000000000000001,
		NameServer   = 0x0000000000000002
	};

	/**
	 * Enum PhotonRealtime.Photon.Realtime.ClientAppType
	 */
	enum class ClientAppType : int32_t
	{
		Realtime = 0x0000000000000000,
		Voice    = 0x0000000000000001,
		Fusion   = 0x0000000000000002
	};

	/**
	 * Enum PhotonRealtime.Photon.Realtime.EncryptionMode
	 */
	enum class EncryptionMode : int32_t
	{
		PayloadEncryption                = 0x0000000000000000,
		DatagramEncryption               = 0x000000000000000A,
		DatagramEncryptionRandomSequence = 0x000000000000000B,
		DatagramEncryptionGCM            = 0x000000000000000D
	};

	/**
	 * Enum PhotonRealtime.Photon.Realtime.RoomOptionBit
	 */
	enum class RoomOptionBit : int32_t
	{
		CheckUserOnJoin           = 0x0000000000000001,
		DeleteCacheOnLeave        = 0x0000000000000002,
		SuppressRoomEvents        = 0x0000000000000004,
		PublishUserId             = 0x0000000000000008,
		DeleteNullProps           = 0x0000000000000010,
		BroadcastPropsChangeToAll = 0x0000000000000020,
		SuppressPlayerInfo        = 0x0000000000000040
	};

	/**
	 * Enum PhotonRealtime.Photon.Realtime.JoinMode
	 */
	enum class JoinMode : uint8_t
	{
		Default           = 0x0000000000000000,
		CreateIfNotExists = 0x0000000000000001,
		JoinOrRejoin      = 0x0000000000000002,
		RejoinOnly        = 0x0000000000000003
	};

	/**
	 * Enum PhotonRealtime.Photon.Realtime.MatchmakingMode
	 */
	enum class MatchmakingMode : uint8_t
	{
		FillRoom       = 0x0000000000000000,
		SerialMatching = 0x0000000000000001,
		RandomMatching = 0x0000000000000002
	};

	/**
	 * Enum PhotonRealtime.Photon.Realtime.ReceiverGroup
	 */
	enum class ReceiverGroup : uint8_t
	{
		Others       = 0x0000000000000000,
		All          = 0x0000000000000001,
		MasterClient = 0x0000000000000002
	};

	/**
	 * Enum PhotonRealtime.Photon.Realtime.EventCaching
	 */
	enum class EventCaching : uint8_t
	{
		DoNotCache                       = 0x0000000000000000,
		MergeCache                       = 0x0000000000000001,
		ReplaceCache                     = 0x0000000000000002,
		RemoveCache                      = 0x0000000000000003,
		AddToRoomCache                   = 0x0000000000000004,
		AddToRoomCacheGlobal             = 0x0000000000000005,
		RemoveFromRoomCache              = 0x0000000000000006,
		RemoveFromRoomCacheForActorsLeft = 0x0000000000000007,
		SliceIncreaseIndex               = 0x000000000000000A,
		SliceSetIndex                    = 0x000000000000000B,
		SlicePurgeIndex                  = 0x000000000000000C,
		SlicePurgeUpToIndex              = 0x000000000000000D
	};

	/**
	 * Enum PhotonRealtime.Photon.Realtime.PropertyTypeFlag
	 */
	enum class PropertyTypeFlag : uint8_t
	{
		None         = 0x0000000000000000,
		Game         = 0x0000000000000001,
		Actor        = 0x0000000000000002,
		GameAndActor = 0x0000000000000003
	};

	/**
	 * Enum PhotonRealtime.Photon.Realtime.LobbyType
	 */
	enum class LobbyType : uint8_t
	{
		Default          = 0x0000000000000000,
		SqlLobby         = 0x0000000000000002,
		AsyncRandomLobby = 0x0000000000000003
	};

	/**
	 * Enum PhotonRealtime.Photon.Realtime.AuthModeOption
	 */
	enum class AuthModeOption : int32_t
	{
		Auth        = 0x0000000000000000,
		AuthOnce    = 0x0000000000000001,
		AuthOnceWss = 0x0000000000000002
	};

	/**
	 * Enum PhotonRealtime.Photon.Realtime.CustomAuthenticationType
	 */
	enum class CustomAuthenticationType : uint8_t
	{
		Custom         = 0x0000000000000000,
		Steam          = 0x0000000000000001,
		Facebook       = 0x0000000000000002,
		Oculus         = 0x0000000000000003,
		PlayStation4   = 0x0000000000000004,
		PlayStation    = 0x0000000000000004,
		Xbox           = 0x0000000000000005,
		Viveport       = 0x000000000000000A,
		NintendoSwitch = 0x000000000000000B,
		PlayStation5   = 0x000000000000000C,
		Playstation5   = 0x000000000000000C,
		Epic           = 0x000000000000000D,
		FacebookGaming = 0x000000000000000F,
		None           = 0x00000000000000FF
	};

	/**
	 * Enum Firebase.App.Firebase.DependencyStatus
	 */
	enum class DependencyStatus : int32_t
	{
		Available                 = 0x0000000000000000,
		UnavailableDisabled       = 0x0000000000000001,
		UnavailableInvalid        = 0x0000000000000002,
		UnavilableMissing         = 0x0000000000000003,
		UnavailablePermission     = 0x0000000000000004,
		UnavailableUpdaterequired = 0x0000000000000005,
		UnavailableUpdating       = 0x0000000000000006,
		UnavailableOther          = 0x0000000000000007
	};

	/**
	 * Enum Firebase.App.Firebase.VariantExtension+KeyOptions
	 */
	enum class VariantExtension_KeyOptions : int32_t
	{
		UseObjectKeys = 0x0000000000000000,
		UseStringKeys = 0x0000000000000001
	};

	/**
	 * Enum Firebase.App.Firebase.FutureStatus
	 */
	enum class FutureStatus : int32_t
	{
		Complete = 0x0000000000000000,
		Pending  = 0x0000000000000001,
		Invalid  = 0x0000000000000002
	};

	/**
	 * Enum Firebase.App.Firebase.InitResult
	 */
	enum class InitResult : int32_t
	{
		Success                 = 0x0000000000000000,
		FailedMissingDependency = 0x0000000000000001
	};

	/**
	 * Enum Firebase.App.Firebase.LogLevel
	 */
	enum class LogLevel_1 : int32_t
	{
		Verbose = 0x0000000000000000,
		Debug   = 0x0000000000000001,
		Info    = 0x0000000000000002,
		Warning = 0x0000000000000003,
		Error   = 0x0000000000000004,
		Assert  = 0x0000000000000005
	};

	/**
	 * Enum Firebase.App.Firebase.GooglePlayServicesAvailability
	 */
	enum class GooglePlayServicesAvailability : int32_t
	{
		AvailabilityAvailable                 = 0x0000000000000000,
		AvailabilityUnavailableDisabled       = 0x0000000000000001,
		AvailabilityUnavailableInvalid        = 0x0000000000000002,
		AvailabilityUnavailableMissing        = 0x0000000000000003,
		AvailabilityUnavailablePermissions    = 0x0000000000000004,
		AvailabilityUnavailableUpdateRequired = 0x0000000000000005,
		AvailabilityUnavailableUpdating       = 0x0000000000000006,
		AvailabilityUnavailableOther          = 0x0000000000000007
	};

	/**
	 * Enum Firebase.App.Firebase.Variant+Type
	 */
	enum class Variant_Type : int32_t
	{
		Null          = 0x0000000000000000,
		Int64         = 0x0000000000000001,
		Double        = 0x0000000000000002,
		Bool          = 0x0000000000000003,
		StaticString  = 0x0000000000000004,
		MutableString = 0x0000000000000005,
		Vector        = 0x0000000000000006,
		Map           = 0x0000000000000007,
		StaticBlob    = 0x0000000000000008,
		MutableBlob   = 0x0000000000000009
	};

	/**
	 * Enum System.Net.Http.System.Net.Http.ClientCertificateOption
	 */
	enum class ClientCertificateOption : int32_t
	{
		Manual    = 0x0000000000000000,
		Automatic = 0x0000000000000001
	};

	/**
	 * Enum System.Net.Http.System.Net.Http.HttpCompletionOption
	 */
	enum class HttpCompletionOption : int32_t
	{
		ResponseContentRead = 0x0000000000000000,
		ResponseHeadersRead = 0x0000000000000001
	};

	/**
	 * Enum System.Net.Http.System.Net.Http.Headers.HttpHeaderKind
	 */
	enum class HttpHeaderKind : int32_t
	{
		None     = 0x0000000000000000,
		Request  = 0x0000000000000001,
		Response = 0x0000000000000002,
		Content  = 0x0000000000000004
	};

	/**
	 * Enum System.Net.Http.System.Net.Http.Headers.Token+Type
	 */
	enum class Token_Type : int32_t
	{
		Error              = 0x0000000000000000,
		End                = 0x0000000000000001,
		Token              = 0x0000000000000002,
		QuotedString       = 0x0000000000000003,
		SeparatorEqual     = 0x0000000000000004,
		SeparatorSemicolon = 0x0000000000000005,
		SeparatorSlash     = 0x0000000000000006,
		SeparatorDash      = 0x0000000000000007,
		SeparatorComma     = 0x0000000000000008,
		OpenParens         = 0x0000000000000009
	};

	/**
	 * Enum Firebase.Auth.Firebase.Auth.AuthError
	 */
	enum class AuthError : int32_t
	{
		None                                  = 0x0000000000000000,
		Unimplemented                         = -1,
		Failure                               = 0x0000000000000001,
		InvalidCustomToken                    = 0x0000000000000002,
		CustomTokenMismatch                   = 0x0000000000000003,
		InvalidCredential                     = 0x0000000000000004,
		UserDisabled                          = 0x0000000000000005,
		AccountExistsWithDifferentCredentials = 0x0000000000000006,
		OperationNotAllowed                   = 0x0000000000000007,
		EmailAlreadyInUse                     = 0x0000000000000008,
		RequiresRecentLogin                   = 0x0000000000000009,
		CredentialAlreadyInUse                = 0x000000000000000A,
		InvalidEmail                          = 0x000000000000000B,
		WrongPassword                         = 0x000000000000000C,
		TooManyRequests                       = 0x000000000000000D,
		UserNotFound                          = 0x000000000000000E,
		ProviderAlreadyLinked                 = 0x000000000000000F,
		NoSuchProvider                        = 0x0000000000000010,
		InvalidUserToken                      = 0x0000000000000011,
		UserTokenExpired                      = 0x0000000000000012,
		NetworkRequestFailed                  = 0x0000000000000013,
		InvalidApiKey                         = 0x0000000000000014,
		AppNotAuthorized                      = 0x0000000000000015,
		UserMismatch                          = 0x0000000000000016,
		WeakPassword                          = 0x0000000000000017,
		NoSignedInUser                        = 0x0000000000000018,
		ApiNotAvailable                       = 0x0000000000000019,
		ExpiredActionCode                     = 0x000000000000001A,
		InvalidActionCode                     = 0x000000000000001B,
		InvalidMessagePayload                 = 0x000000000000001C,
		InvalidPhoneNumber                    = 0x000000000000001D,
		MissingPhoneNumber                    = 0x000000000000001E,
		InvalidRecipientEmail                 = 0x000000000000001F,
		InvalidSender                         = 0x0000000000000020,
		InvalidVerificationCode               = 0x0000000000000021,
		InvalidVerificationId                 = 0x0000000000000022,
		MissingVerificationCode               = 0x0000000000000023,
		MissingVerificationId                 = 0x0000000000000024,
		MissingEmail                          = 0x0000000000000025,
		MissingPassword                       = 0x0000000000000026,
		QuotaExceeded                         = 0x0000000000000027,
		RetryPhoneAuth                        = 0x0000000000000028,
		SessionExpired                        = 0x0000000000000029,
		AppNotVerified                        = 0x000000000000002A,
		AppVerificationFailed                 = 0x000000000000002B,
		CaptchaCheckFailed                    = 0x000000000000002C,
		InvalidAppCredential                  = 0x000000000000002D,
		MissingAppCredential                  = 0x000000000000002E,
		InvalidClientId                       = 0x000000000000002F,
		InvalidContinueUri                    = 0x0000000000000030,
		MissingContinueUri                    = 0x0000000000000031,
		KeychainError                         = 0x0000000000000032,
		MissingAppToken                       = 0x0000000000000033,
		MissingIosBundleId                    = 0x0000000000000034,
		NotificationNotForwarded              = 0x0000000000000035,
		UnauthorizedDomain                    = 0x0000000000000036,
		WebContextAlreadyPresented            = 0x0000000000000037,
		WebContextCancelled                   = 0x0000000000000038,
		DynamicLinkNotActivated               = 0x0000000000000039,
		Cancelled                             = 0x000000000000003A,
		InvalidProviderId                     = 0x000000000000003B,
		WebInternalError                      = 0x000000000000003C,
		WebStorateUnsupported                 = 0x000000000000003D,
		TenantIdMismatch                      = 0x000000000000003E,
		UnsupportedTenantOperation            = 0x000000000000003F,
		InvalidLinkDomain                     = 0x0000000000000040,
		RejectedCredential                    = 0x0000000000000041,
		PhoneNumberNotFound                   = 0x0000000000000042,
		InvalidTenantId                       = 0x0000000000000043,
		MissingClientIdentifier               = 0x0000000000000044,
		MissingMultiFactorSession             = 0x0000000000000045,
		MissingMultiFactorInfo                = 0x0000000000000046,
		InvalidMultiFactorSession             = 0x0000000000000047,
		MultiFactorInfoNotFound               = 0x0000000000000048,
		AdminRestrictedOperation              = 0x0000000000000049,
		UnverifiedEmail                       = 0x000000000000004A,
		SecondFactorAlreadyEnrolled           = 0x000000000000004B,
		MaximumSecondFactorCountExceeded      = 0x000000000000004C,
		UnsupportedFirstFactor                = 0x000000000000004D,
		EmailChangeNeedsVerification          = 0x000000000000004E
	};

	/**
	 * Enum Unity.Services.Analytics.Unity.Services.Analytics.AdCompletionStatus
	 */
	enum class AdCompletionStatus : int32_t
	{
		Completed  = 0x0000000000000000,
		Partial    = 0x0000000000000001,
		Incomplete = 0x0000000000000002
	};

	/**
	 * Enum Unity.Services.Analytics.Unity.Services.Analytics.AdPlacementType
	 */
	enum class AdPlacementType : int32_t
	{
		BANNER       = 0x0000000000000000,
		REWARDED     = 0x0000000000000001,
		INTERSTITIAL = 0x0000000000000002,
		OTHER        = 0x0000000000000003
	};

	/**
	 * Enum Unity.Services.Analytics.Unity.Services.Analytics.AdProvider
	 */
	enum class AdProvider : int32_t
	{
		AdColony   = 0x0000000000000000,
		AdMob      = 0x0000000000000001,
		Amazon     = 0x0000000000000002,
		AppLovin   = 0x0000000000000003,
		ChartBoost = 0x0000000000000004,
		Facebook   = 0x0000000000000005,
		Fyber      = 0x0000000000000006,
		Hyprmx     = 0x0000000000000007,
		Inmobi     = 0x0000000000000008,
		Maio       = 0x0000000000000009,
		Pangle     = 0x000000000000000A,
		Tapjoy     = 0x000000000000000B,
		UnityAds   = 0x000000000000000C,
		Vungle     = 0x000000000000000D,
		IrnSource  = 0x000000000000000E,
		Other      = 0x000000000000000F
	};

	/**
	 * Enum Unity.Services.Analytics.Unity.Services.Analytics.TransactionServer
	 */
	enum class TransactionServer : int32_t
	{
		APPLE  = 0x0000000000000000,
		AMAZON = 0x0000000000000001,
		GOOGLE = 0x0000000000000002
	};

	/**
	 * Enum Unity.Services.Analytics.Unity.Services.Analytics.TransactionType
	 */
	enum class TransactionType : int32_t
	{
		INVALID  = 0x0000000000000000,
		SALE     = 0x0000000000000001,
		PURCHASE = 0x0000000000000002,
		TRADE    = 0x0000000000000003
	};

	/**
	 * Enum Unity.Services.Analytics.Unity.Services.Analytics.VirtualCurrencyType
	 */
	enum class VirtualCurrencyType : int32_t
	{
		GRIND         = 0x0000000000000000,
		PREMIUM       = 0x0000000000000001,
		PREMIUM_GRIND = 0x0000000000000002
	};

	/**
	 * Enum Unity.Services.Analytics.Unity.Services.Analytics.Events+AdCompletionStatus
	 */
	enum class Events_AdCompletionStatus : int32_t
	{
		Completed  = 0x0000000000000000,
		Partial    = 0x0000000000000001,
		Incomplete = 0x0000000000000002
	};

	/**
	 * Enum Unity.Services.Analytics.Unity.Services.Analytics.Events+AdProvider
	 */
	enum class Events_AdProvider : int32_t
	{
		AdColony   = 0x0000000000000000,
		AdMob      = 0x0000000000000001,
		Amazon     = 0x0000000000000002,
		AppLovin   = 0x0000000000000003,
		ChartBoost = 0x0000000000000004,
		Facebook   = 0x0000000000000005,
		Fyber      = 0x0000000000000006,
		Hyprmx     = 0x0000000000000007,
		Inmobi     = 0x0000000000000008,
		Maio       = 0x0000000000000009,
		Pangle     = 0x000000000000000A,
		Tapjoy     = 0x000000000000000B,
		UnityAds   = 0x000000000000000C,
		Vungle     = 0x000000000000000D,
		IrnSource  = 0x000000000000000E,
		Other      = 0x000000000000000F
	};

	/**
	 * Enum Unity.Services.Analytics.Unity.Services.Analytics.Events+TransactionServer
	 */
	enum class Events_TransactionServer : int32_t
	{
		APPLE  = 0x0000000000000000,
		AMAZON = 0x0000000000000001,
		GOOGLE = 0x0000000000000002
	};

	/**
	 * Enum Unity.Services.Analytics.Unity.Services.Analytics.Events+TransactionType
	 */
	enum class Events_TransactionType : int32_t
	{
		INVALID  = 0x0000000000000000,
		SALE     = 0x0000000000000001,
		PURCHASE = 0x0000000000000002,
		TRADE    = 0x0000000000000003
	};

	/**
	 * Enum Unity.Services.Analytics.Unity.Services.Analytics.ConsentCheckExceptionReason
	 */
	enum class ConsentCheckExceptionReason : int32_t
	{
		Unknown              = 0x0000000000000000,
		DeserializationIssue = 0x0000000000000001,
		NoInternetConnection = 0x0000000000000002,
		InvalidConsentFlow   = 0x0000000000000003,
		ConsentFlowNotKnown  = 0x0000000000000004
	};

	/**
	 * Enum Unity.Services.Analytics.Unity.Services.Analytics.Internal.Buffer+TokenType
	 */
	enum class Buffer_TokenType : int32_t
	{
		EventStart       = 0x0000000000000000,
		EventEnd         = 0x0000000000000001,
		EventParamsStart = 0x0000000000000002,
		EventParamsEnd   = 0x0000000000000003,
		EventObjectStart = 0x0000000000000004,
		EventObjectEnd   = 0x0000000000000005,
		EventArrayStart  = 0x0000000000000006,
		EventArrayEnd    = 0x0000000000000007,
		Boolean          = 0x0000000000000008,
		Float64          = 0x0000000000000009,
		String           = 0x000000000000000A,
		Int64            = 0x000000000000000B,
		Timestamp        = 0x000000000000000C,
		EventTimestamp   = 0x000000000000000D,
		StandardEventIds = 0x000000000000000E
	};

	/**
	 * Enum Unity.Services.Analytics.Unity.Services.Analytics.Internal.ConsentStatus
	 */
	enum class ConsentStatus : int32_t
	{
		Unknown              = 0x0000000000000000,
		Forgetting           = 0x0000000000000001,
		OptedOut             = 0x0000000000000002,
		NotRequired          = 0x0000000000000003,
		RequiredButUnchecked = 0x0000000000000004,
		ConsentGiven         = 0x0000000000000005,
		ConsentDenied        = 0x0000000000000006
	};

	/**
	 * Enum Unity.Services.Analytics.Unity.Services.Analytics.Platform.UA2PlatformCode
	 */
	enum class UA2PlatformCode : int32_t
	{
		UNKNOWN           = 0x0000000000000000,
		IOS               = 0x0000000000000001,
		IOS_MOBILE        = 0x0000000000000002,
		IOS_TABLET        = 0x0000000000000003,
		IOS_TV            = 0x0000000000000004,
		ANDROID           = 0x0000000000000005,
		ANDROID_MOBILE    = 0x0000000000000006,
		ANDROID_CONSOLE   = 0x0000000000000007,
		WINDOWS_MOBILE    = 0x0000000000000008,
		WINDOWS_TABLET    = 0x0000000000000009,
		BLACKBERRY_MOBILE = 0x000000000000000A,
		BLACKBERRY_TABLET = 0x000000000000000B,
		FACEBOOK          = 0x000000000000000C,
		AMAZON            = 0x000000000000000D,
		WEB               = 0x000000000000000E,
		PC_CLIENT         = 0x000000000000000F,
		MAC_CLIENT        = 0x0000000000000010,
		PS3               = 0x0000000000000011,
		PS4               = 0x0000000000000012,
		PSVITA            = 0x0000000000000013,
		XBOX360           = 0x0000000000000014,
		XBOXONE           = 0x0000000000000015,
		WIIU              = 0x0000000000000016,
		SWITCH            = 0x0000000000000017
	};

	/**
	 * Enum Unity.Services.Analytics.Unity.Services.Analytics.Data.DataGenerator+SessionEndState
	 */
	enum class DataGenerator_SessionEndState : int32_t
	{
		PAUSED             = 0x0000000000000000,
		KILLEDINBACKGROUND = 0x0000000000000001,
		KILLEDINFOREGROUND = 0x0000000000000002,
		QUIT               = 0x0000000000000003
	};

	/**
	 * Enum Unity.VisualEffectGraph.Runtime.VisualEffectActivationBehaviour+AttributeType
	 */
	enum class VisualEffectActivationBehaviour_AttributeType : int32_t
	{
		Float   = 0x0000000000000001,
		Float2  = 0x0000000000000002,
		Float3  = 0x0000000000000003,
		Float4  = 0x0000000000000004,
		Int32   = 0x0000000000000005,
		Uint32  = 0x0000000000000006,
		Boolean = 0x0000000000000011
	};

	/**
	 * Enum Unity.VisualEffectGraph.Runtime.UnityEngine.VFX.VFXTypeAttribute+Usage
	 */
	enum class VFXTypeAttribute_Usage : int32_t
	{
		Default             = 0x0000000000000001,
		GraphicsBuffer      = 0x0000000000000002,
		ExcludeFromProperty = 0x0000000000000004
	};

	/**
	 * Enum Unity.VisualEffectGraph.Runtime.UnityEngine.VFX.Utility.VFXMouseEventBinder+Activation
	 */
	enum class VFXMouseEventBinder_Activation : int32_t
	{
		OnMouseUp    = 0x0000000000000000,
		OnMouseDown  = 0x0000000000000001,
		OnMouseEnter = 0x0000000000000002,
		OnMouseExit  = 0x0000000000000003,
		OnMouseOver  = 0x0000000000000004,
		OnMouseDrag  = 0x0000000000000005
	};

	/**
	 * Enum Unity.VisualEffectGraph.Runtime.UnityEngine.VFX.Utility.VFXTriggerEventBinder+Activation
	 */
	enum class VFXTriggerEventBinder_Activation : int32_t
	{
		OnEnter = 0x0000000000000000,
		OnExit  = 0x0000000000000001,
		OnStay  = 0x0000000000000002
	};

	/**
	 * Enum Unity.VisualEffectGraph.Runtime.UnityEngine.VFX.Utility.VFXVisibilityEventBinder+Activation
	 */
	enum class VFXVisibilityEventBinder_Activation : int32_t
	{
		OnBecameVisible   = 0x0000000000000000,
		OnBecameInvisible = 0x0000000000000001
	};

	/**
	 * Enum Unity.VisualEffectGraph.Runtime.UnityEngine.VFX.Utility.VFXAudioSpectrumBinder+AudioSourceMode
	 */
	enum class VFXAudioSpectrumBinder_AudioSourceMode : int32_t
	{
		AudioSource   = 0x0000000000000000,
		AudioListener = 0x0000000000000001
	};

	/**
	 * Enum Unity.VisualEffectGraph.Runtime.UnityEngine.VFX.Utility.VFXEnabledBinder+Check
	 */
	enum class VFXEnabledBinder_Check : int32_t
	{
		ActiveInHierarchy = 0x0000000000000000,
		ActiveSelf        = 0x0000000000000001
	};

	/**
	 * Enum Unity.VisualEffectGraph.Runtime.UnityEngine.VFX.Utility.VFXHierarchyAttributeMapBinder+RadiusMode
	 */
	enum class VFXHierarchyAttributeMapBinder_RadiusMode : int32_t
	{
		Fixed       = 0x0000000000000000,
		Interpolate = 0x0000000000000001
	};

	/**
	 * Enum Unity.VisualEffectGraph.Runtime.UnityEngine.VFX.Utility.VFXRaycastBinder+Space
	 */
	enum class VFXRaycastBinder_Space : int32_t
	{
		Local = 0x0000000000000000,
		World = 0x0000000000000001
	};

	/**
	 * Enum PhotonUnityNetworking.Utilities.Photon.Pun.UtilityScripts.CellTreeNode+ENodeType
	 */
	enum class CellTreeNode_ENodeType : uint8_t
	{
		Root = 0x0000000000000000,
		Node = 0x0000000000000001,
		Leaf = 0x0000000000000002
	};

	/**
	 * Enum PhotonUnityNetworking.Utilities.Photon.Pun.UtilityScripts.PunTeams+Team
	 */
	enum class PunTeams_Team : uint8_t
	{
		none = 0x0000000000000000,
		red  = 0x0000000000000001,
		blue = 0x0000000000000002
	};

	/**
	 * Enum PhotonUnityNetworking.Utilities.Photon.Pun.UtilityScripts.OnClickInstantiate+InstantiateOption
	 */
	enum class OnClickInstantiate_InstantiateOption : int32_t
	{
		Mine  = 0x0000000000000000,
		Scene = 0x0000000000000001
	};

	/**
	 * Enum PhotonUnityNetworking.Utilities.Photon.Pun.UtilityScripts.OnJoinedInstantiate+SpawnSequence
	 */
	enum class OnJoinedInstantiate_SpawnSequence : int32_t
	{
		Connection = 0x0000000000000000,
		Random     = 0x0000000000000001,
		RoundRobin = 0x0000000000000002
	};

	/**
	 * Enum clipper_library.ClipperLib.ClipType
	 */
	enum class ClipType_1 : int32_t
	{
		ctIntersection = 0x0000000000000000,
		ctUnion        = 0x0000000000000001,
		ctDifference   = 0x0000000000000002,
		ctXor          = 0x0000000000000003
	};

	/**
	 * Enum clipper_library.ClipperLib.PolyType
	 */
	enum class PolyType_1 : int32_t
	{
		ptSubject = 0x0000000000000000,
		ptClip    = 0x0000000000000001
	};

	/**
	 * Enum clipper_library.ClipperLib.PolyFillType
	 */
	enum class PolyFillType_1 : int32_t
	{
		pftEvenOdd  = 0x0000000000000000,
		pftNonZero  = 0x0000000000000001,
		pftPositive = 0x0000000000000002,
		pftNegative = 0x0000000000000003
	};

	/**
	 * Enum clipper_library.ClipperLib.JoinType
	 */
	enum class JoinType_2 : int32_t
	{
		jtSquare = 0x0000000000000000,
		jtRound  = 0x0000000000000001,
		jtMiter  = 0x0000000000000002
	};

	/**
	 * Enum clipper_library.ClipperLib.EndType
	 */
	enum class EndType_1 : int32_t
	{
		etClosedPolygon = 0x0000000000000000,
		etClosedLine    = 0x0000000000000001,
		etOpenButt      = 0x0000000000000002,
		etOpenSquare    = 0x0000000000000003,
		etOpenRound     = 0x0000000000000004
	};

	/**
	 * Enum clipper_library.ClipperLib.EdgeSide
	 */
	enum class EdgeSide_1 : int32_t
	{
		esLeft  = 0x0000000000000000,
		esRight = 0x0000000000000001
	};

	/**
	 * Enum clipper_library.ClipperLib.Direction
	 */
	enum class Direction_1 : int32_t
	{
		dRightToLeft = 0x0000000000000000,
		dLeftToRight = 0x0000000000000001
	};

	/**
	 * Enum clipper_library.ClipperLib.Clipper+NodeType
	 */
	enum class Clipper_NodeType_1 : int32_t
	{
		ntAny    = 0x0000000000000000,
		ntOpen   = 0x0000000000000001,
		ntClosed = 0x0000000000000002
	};

	/**
	 * Enum Unity.Services.Core.Internal.Unity.Services.Wire.Internal.SubscriptionState
	 */
	enum class SubscriptionState : int32_t
	{
		Unsubscribed = 0x0000000000000000,
		Synced       = 0x0000000000000001,
		Unsynced     = 0x0000000000000002,
		Error        = 0x0000000000000003,
		Subscribing  = 0x0000000000000004
	};

	/**
	 * Enum Unity.Services.Core.Internal.Unity.Services.Core.Internal.AsyncOperationStatus
	 */
	enum class AsyncOperationStatus_1 : int32_t
	{
		None       = 0x0000000000000000,
		InProgress = 0x0000000000000001,
		Succeeded  = 0x0000000000000002,
		Failed     = 0x0000000000000003,
		Cancelled  = 0x0000000000000004
	};

	/**
	 * Enum Unity.Services.Core.Internal.Unity.Services.Core.Internal.DependencyTreeInitializeOrderSorter+ExplorationMark
	 */
	enum class DependencyTreeInitializeOrderSorter_ExplorationMark : int32_t
	{
		None   = 0x0000000000000000,
		Viewed = 0x0000000000000001,
		Sorted = 0x0000000000000002
	};

	/**
	 * Enum System.Numerics.System.Numerics.BigInteger+GetBytesMode
	 */
	enum class BigInteger_GetBytesMode : int32_t
	{
		AllocateArray = 0x0000000000000000,
		Count         = 0x0000000000000001,
		Span          = 0x0000000000000002
	};

	/**
	 * Enum Unity.2D.Animation.Runtime.UnityEngine.U2D.Animation.SpriteSkinValidationResult
	 */
	enum class SpriteSkinValidationResult : int32_t
	{
		SpriteNotFound                 = 0x0000000000000000,
		SpriteHasNoSkinningInformation = 0x0000000000000001,
		SpriteHasNoWeights             = 0x0000000000000002,
		RootTransformNotFound          = 0x0000000000000003,
		InvalidTransformArray          = 0x0000000000000004,
		InvalidTransformArrayLength    = 0x0000000000000005,
		TransformArrayContainsNull     = 0x0000000000000006,
		RootNotFoundInTransformArray   = 0x0000000000000007,
		Ready                          = 0x0000000000000008
	};

	/**
	 * Enum UnityEngine.Purchasing.UnityEngine.Purchasing.InitializationFailureReason
	 */
	enum class InitializationFailureReason : int32_t
	{
		PurchasingUnavailable = 0x0000000000000000,
		NoProductsAvailable   = 0x0000000000000001,
		AppNotKnown           = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.Purchasing.UnityEngine.Purchasing.PayoutType
	 */
	enum class PayoutType : int32_t
	{
		Other    = 0x0000000000000000,
		Currency = 0x0000000000000001,
		Item     = 0x0000000000000002,
		Resource = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.Purchasing.UnityEngine.Purchasing.ProductType
	 */
	enum class ProductType : int32_t
	{
		Consumable    = 0x0000000000000000,
		NonConsumable = 0x0000000000000001,
		Subscription  = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.Purchasing.UnityEngine.Purchasing.PurchaseFailureReason
	 */
	enum class PurchaseFailureReason : int32_t
	{
		PurchasingUnavailable   = 0x0000000000000000,
		ExistingPurchasePending = 0x0000000000000001,
		ProductUnavailable      = 0x0000000000000002,
		SignatureInvalid        = 0x0000000000000003,
		UserCancelled           = 0x0000000000000004,
		PaymentDeclined         = 0x0000000000000005,
		DuplicateTransaction    = 0x0000000000000006,
		Unknown                 = 0x0000000000000007
	};

	/**
	 * Enum UnityEngine.Purchasing.UnityEngine.Purchasing.PurchaseProcessingResult
	 */
	enum class PurchaseProcessingResult : int32_t
	{
		Complete = 0x0000000000000000,
		Pending  = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.Purchasing.UnityEngine.Purchasing.Telemetry.TelemetryMetricTypes
	 */
	enum class TelemetryMetricTypes : int32_t
	{
		Gauge     = 0x0000000000000000,
		Sum       = 0x0000000000000001,
		Histogram = 0x0000000000000002
	};

	/**
	 * Enum ACTk.Examples.Runtime.CodeStage.AntiCheat.Examples.ExamplesGUI+ExamplePage
	 */
	enum class ExamplesGUI_ExamplePage : int32_t
	{
		ObscuredTypes = 0x0000000000000000,
		ObscuredPrefs = 0x0000000000000001,
		Detectors     = 0x0000000000000002,
		CodeHashing   = 0x0000000000000003
	};

	/**
	 * Enum System.Xml.Linq.System.Xml.Linq.XObjectChange
	 */
	enum class XObjectChange : int32_t
	{
		Add    = 0x0000000000000000,
		Remove = 0x0000000000000001,
		Name   = 0x0000000000000002,
		Value  = 0x0000000000000003
	};

	/**
	 * Enum System.Xml.Linq.System.Xml.Linq.LoadOptions
	 */
	enum class LoadOptions : int32_t
	{
		None               = 0x0000000000000000,
		PreserveWhitespace = 0x0000000000000001,
		SetBaseUri         = 0x0000000000000002,
		SetLineInfo        = 0x0000000000000004
	};

	/**
	 * Enum System.Xml.Linq.System.Xml.Linq.SaveOptions
	 */
	enum class SaveOptions : int32_t
	{
		None                    = 0x0000000000000000,
		DisableFormatting       = 0x0000000000000001,
		OmitDuplicateNamespaces = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.AnimationModule.UnityEngine.PlayMode
	 */
	enum class PlayMode : int32_t
	{
		StopSameLayer = 0x0000000000000000,
		StopAll       = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.AnimationModule.UnityEngine.AnimationEventSource
	 */
	enum class AnimationEventSource : int32_t
	{
		NoSource = 0x0000000000000000,
		Legacy   = 0x0000000000000001,
		Animator = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.AnimationModule.UnityEngine.StateInfoIndex
	 */
	enum class StateInfoIndex : int32_t
	{
		CurrentState     = 0x0000000000000000,
		NextState        = 0x0000000000000001,
		ExitState        = 0x0000000000000002,
		InterruptedState = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.AnimationModule.UnityEngine.AvatarMaskBodyPart
	 */
	enum class AvatarMaskBodyPart : int32_t
	{
		Root         = 0x0000000000000000,
		Body         = 0x0000000000000001,
		Head         = 0x0000000000000002,
		LeftLeg      = 0x0000000000000003,
		RightLeg     = 0x0000000000000004,
		LeftArm      = 0x0000000000000005,
		RightArm     = 0x0000000000000006,
		LeftFingers  = 0x0000000000000007,
		RightFingers = 0x0000000000000008,
		LeftFootIK   = 0x0000000000000009,
		RightFootIK  = 0x000000000000000A,
		LeftHandIK   = 0x000000000000000B,
		RightHandIK  = 0x000000000000000C,
		LastBodyPart = 0x000000000000000D
	};

	/**
	 * Enum UnityEngine.UIElementsNativeModule.UnityEngine.Yoga.YogaAlign
	 */
	enum class YogaAlign : int32_t
	{
		Auto         = 0x0000000000000000,
		FlexStart    = 0x0000000000000001,
		Center       = 0x0000000000000002,
		FlexEnd      = 0x0000000000000003,
		Stretch      = 0x0000000000000004,
		Baseline     = 0x0000000000000005,
		SpaceBetween = 0x0000000000000006,
		SpaceAround  = 0x0000000000000007
	};

	/**
	 * Enum UnityEngine.UIElementsNativeModule.UnityEngine.Yoga.YogaDirection
	 */
	enum class YogaDirection : int32_t
	{
		Inherit = 0x0000000000000000,
		LTR     = 0x0000000000000001,
		RTL     = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsNativeModule.UnityEngine.Yoga.YogaDisplay
	 */
	enum class YogaDisplay : int32_t
	{
		Flex = 0x0000000000000000,
		None = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.UIElementsNativeModule.UnityEngine.Yoga.YogaEdge
	 */
	enum class YogaEdge : int32_t
	{
		Left       = 0x0000000000000000,
		Top        = 0x0000000000000001,
		Right      = 0x0000000000000002,
		Bottom     = 0x0000000000000003,
		Start      = 0x0000000000000004,
		End        = 0x0000000000000005,
		Horizontal = 0x0000000000000006,
		Vertical   = 0x0000000000000007,
		All        = 0x0000000000000008
	};

	/**
	 * Enum UnityEngine.UIElementsNativeModule.UnityEngine.Yoga.YogaFlexDirection
	 */
	enum class YogaFlexDirection : int32_t
	{
		Column        = 0x0000000000000000,
		ColumnReverse = 0x0000000000000001,
		Row           = 0x0000000000000002,
		RowReverse    = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.UIElementsNativeModule.UnityEngine.Yoga.YogaJustify
	 */
	enum class YogaJustify : int32_t
	{
		FlexStart    = 0x0000000000000000,
		Center       = 0x0000000000000001,
		FlexEnd      = 0x0000000000000002,
		SpaceBetween = 0x0000000000000003,
		SpaceAround  = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.UIElementsNativeModule.UnityEngine.Yoga.YogaLogLevel
	 */
	enum class YogaLogLevel : int32_t
	{
		Error   = 0x0000000000000000,
		Warn    = 0x0000000000000001,
		Info    = 0x0000000000000002,
		Debug   = 0x0000000000000003,
		Verbose = 0x0000000000000004,
		Fatal   = 0x0000000000000005
	};

	/**
	 * Enum UnityEngine.UIElementsNativeModule.UnityEngine.Yoga.YogaMeasureMode
	 */
	enum class YogaMeasureMode : int32_t
	{
		Undefined = 0x0000000000000000,
		Exactly   = 0x0000000000000001,
		AtMost    = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsNativeModule.UnityEngine.Yoga.YogaOverflow
	 */
	enum class YogaOverflow : int32_t
	{
		Visible = 0x0000000000000000,
		Hidden  = 0x0000000000000001,
		Scroll  = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsNativeModule.UnityEngine.Yoga.YogaPositionType
	 */
	enum class YogaPositionType : int32_t
	{
		Relative = 0x0000000000000000,
		Absolute = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.UIElementsNativeModule.UnityEngine.Yoga.YogaUnit
	 */
	enum class YogaUnit : int32_t
	{
		Undefined = 0x0000000000000000,
		Point     = 0x0000000000000001,
		Percent   = 0x0000000000000002,
		Auto      = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.UIElementsNativeModule.UnityEngine.Yoga.YogaWrap
	 */
	enum class YogaWrap : int32_t
	{
		NoWrap      = 0x0000000000000000,
		Wrap        = 0x0000000000000001,
		WrapReverse = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIElementsNativeModule.UnityEngine.UIElements.UIR.Utility+GPUBufferType
	 */
	enum class Utility_GPUBufferType : int32_t
	{
		Vertex = 0x0000000000000000,
		Index  = 0x0000000000000001
	};

	/**
	 * Enum PhotonChat.Photon.Chat.ChatDisconnectCause
	 */
	enum class ChatDisconnectCause : int32_t
	{
		None                              = 0x0000000000000000,
		ExceptionOnConnect                = 0x0000000000000001,
		DisconnectByServerLogic           = 0x0000000000000002,
		DisconnectByServerReasonUnknown   = 0x0000000000000003,
		ServerTimeout                     = 0x0000000000000004,
		ClientTimeout                     = 0x0000000000000005,
		Exception                         = 0x0000000000000006,
		InvalidAuthentication             = 0x0000000000000007,
		MaxCcuReached                     = 0x0000000000000008,
		InvalidRegion                     = 0x0000000000000009,
		OperationNotAllowedInCurrentState = 0x000000000000000A,
		CustomAuthenticationFailed        = 0x000000000000000B,
		AuthenticationTicketExpired       = 0x000000000000000C,
		DisconnectByClientLogic           = 0x000000000000000D
	};

	/**
	 * Enum PhotonChat.Photon.Chat.CustomAuthenticationType
	 */
	enum class CustomAuthenticationType_1 : uint8_t
	{
		Custom         = 0x0000000000000000,
		Steam          = 0x0000000000000001,
		Facebook       = 0x0000000000000002,
		Oculus         = 0x0000000000000003,
		PlayStation4   = 0x0000000000000004,
		PlayStation    = 0x0000000000000004,
		Xbox           = 0x0000000000000005,
		Viveport       = 0x000000000000000A,
		NintendoSwitch = 0x000000000000000B,
		PlayStation5   = 0x000000000000000C,
		Playstation5   = 0x000000000000000C,
		Epic           = 0x000000000000000D,
		FacebookGaming = 0x000000000000000F,
		None           = 0x00000000000000FF
	};

	/**
	 * Enum PhotonChat.Photon.Chat.ChatState
	 */
	enum class ChatState : int32_t
	{
		Uninitialized               = 0x0000000000000000,
		ConnectingToNameServer      = 0x0000000000000001,
		ConnectedToNameServer       = 0x0000000000000002,
		Authenticating              = 0x0000000000000003,
		Authenticated               = 0x0000000000000004,
		DisconnectingFromNameServer = 0x0000000000000005,
		ConnectingToFrontEnd        = 0x0000000000000006,
		ConnectedToFrontEnd         = 0x0000000000000007,
		DisconnectingFromFrontEnd   = 0x0000000000000008,
		QueuedComingFromFrontEnd    = 0x0000000000000009,
		Disconnecting               = 0x000000000000000A,
		Disconnected                = 0x000000000000000B,
		ConnectWithFallbackProtocol = 0x000000000000000C
	};

	/**
	 * Enum UnityEngine.UnityWebRequestModule.UnityEngine.Networking.UnityWebRequest+UnityWebRequestMethod
	 */
	enum class UnityWebRequest_UnityWebRequestMethod : int32_t
	{
		Get    = 0x0000000000000000,
		Post   = 0x0000000000000001,
		Put    = 0x0000000000000002,
		Head   = 0x0000000000000003,
		Custom = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.UnityWebRequestModule.UnityEngine.Networking.UnityWebRequest+UnityWebRequestError
	 */
	enum class UnityWebRequest_UnityWebRequestError : int32_t
	{
		OK                          = 0x0000000000000000,
		Unknown                     = 0x0000000000000001,
		SDKError                    = 0x0000000000000002,
		UnsupportedProtocol         = 0x0000000000000003,
		MalformattedUrl             = 0x0000000000000004,
		CannotResolveProxy          = 0x0000000000000005,
		CannotResolveHost           = 0x0000000000000006,
		CannotConnectToHost         = 0x0000000000000007,
		AccessDenied                = 0x0000000000000008,
		GenericHttpError            = 0x0000000000000009,
		WriteError                  = 0x000000000000000A,
		ReadError                   = 0x000000000000000B,
		OutOfMemory                 = 0x000000000000000C,
		Timeout                     = 0x000000000000000D,
		HTTPPostError               = 0x000000000000000E,
		SSLCannotConnect            = 0x000000000000000F,
		Aborted                     = 0x0000000000000010,
		TooManyRedirects            = 0x0000000000000011,
		ReceivedNoData              = 0x0000000000000012,
		SSLNotSupported             = 0x0000000000000013,
		FailedToSendData            = 0x0000000000000014,
		FailedToReceiveData         = 0x0000000000000015,
		SSLCertificateError         = 0x0000000000000016,
		SSLCipherNotAvailable       = 0x0000000000000017,
		SSLCACertError              = 0x0000000000000018,
		UnrecognizedContentEncoding = 0x0000000000000019,
		LoginFailed                 = 0x000000000000001A,
		SSLShutdownFailed           = 0x000000000000001B,
		NoInternetConnection        = 0x000000000000001C
	};

	/**
	 * Enum UnityEngine.UnityWebRequestModule.UnityEngine.Networking.UnityWebRequest+Result
	 */
	enum class UnityWebRequest_Result : int32_t
	{
		InProgress          = 0x0000000000000000,
		Success             = 0x0000000000000001,
		ConnectionError     = 0x0000000000000002,
		ProtocolError       = 0x0000000000000003,
		DataProcessingError = 0x0000000000000004
	};

	/**
	 * Enum Firebase.Platform.Firebase.Platform.PlatformLogLevel
	 */
	enum class PlatformLogLevel : int32_t
	{
		Verbose = 0x0000000000000000,
		Debug   = 0x0000000000000001,
		Info    = 0x0000000000000002,
		Warning = 0x0000000000000003,
		Error   = 0x0000000000000004,
		Assert  = 0x0000000000000005
	};

	/**
	 * Enum Firebase.Platform.Firebase.Platform.Default.AppConfigExtensions+ExtraStringState
	 */
	enum class AppConfigExtensions_ExtraStringState : int32_t
	{
		DatabaseUrl         = 0x0000000000000000,
		P12FileName         = 0x0000000000000001,
		P12Password         = 0x0000000000000002,
		ServiceAccountEmail = 0x0000000000000003,
		CertTxtFileName     = 0x0000000000000004,
		WebCertUpdateUrl    = 0x0000000000000005
	};

	/**
	 * Enum UnityEngine.AudioModule.UnityEngine.AudioSpeakerMode
	 */
	enum class AudioSpeakerMode : int32_t
	{
		Raw         = 0x0000000000000000,
		Mono        = 0x0000000000000001,
		Stereo      = 0x0000000000000002,
		Quad        = 0x0000000000000003,
		Surround    = 0x0000000000000004,
		Mode5point1 = 0x0000000000000005,
		Mode7point1 = 0x0000000000000006,
		Prologic    = 0x0000000000000007
	};

	/**
	 * Enum UnityEngine.AudioModule.UnityEngine.FFTWindow
	 */
	enum class FFTWindow : int32_t
	{
		Rectangular    = 0x0000000000000000,
		Triangle       = 0x0000000000000001,
		Hamming        = 0x0000000000000002,
		Hanning        = 0x0000000000000003,
		Blackman       = 0x0000000000000004,
		BlackmanHarris = 0x0000000000000005
	};

	/**
	 * Enum Firebase.Messaging.Firebase.Messaging.Error
	 */
	enum class Error_6 : int32_t
	{
		None                                   = 0x0000000000000000,
		FailedToRegisterForRemoteNotifications = 0x0000000000000001,
		InvalidTopicName                       = 0x0000000000000002,
		NoRegistrationToken                    = 0x0000000000000003,
		Unknown                                = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.Physics2DModule.UnityEngine.RigidbodyConstraints2D
	 */
	enum class RigidbodyConstraints2D : int32_t
	{
		None            = 0x0000000000000000,
		FreezePositionX = 0x0000000000000001,
		FreezePositionY = 0x0000000000000002,
		FreezeRotation  = 0x0000000000000004,
		FreezePosition  = 0x0000000000000003,
		FreezeAll       = 0x0000000000000007
	};

	/**
	 * Enum UnityEngine.Physics2DModule.UnityEngine.RigidbodyType2D
	 */
	enum class RigidbodyType2D : int32_t
	{
		Dynamic   = 0x0000000000000000,
		Kinematic = 0x0000000000000001,
		Static    = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.Physics2DModule.UnityEngine.ForceMode2D
	 */
	enum class ForceMode2D : int32_t
	{
		Force   = 0x0000000000000000,
		Impulse = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.PhysicsModule.UnityEngine.RigidbodyConstraints
	 */
	enum class RigidbodyConstraints : int32_t
	{
		None            = 0x0000000000000000,
		FreezePositionX = 0x0000000000000002,
		FreezePositionY = 0x0000000000000004,
		FreezePositionZ = 0x0000000000000008,
		FreezeRotationX = 0x0000000000000010,
		FreezeRotationY = 0x0000000000000020,
		FreezeRotationZ = 0x0000000000000040,
		FreezePosition  = 0x000000000000000E,
		FreezeRotation  = 0x0000000000000070,
		FreezeAll       = 0x000000000000007E
	};

	/**
	 * Enum UnityEngine.PhysicsModule.UnityEngine.ForceMode
	 */
	enum class ForceMode : int32_t
	{
		Force          = 0x0000000000000000,
		Acceleration   = 0x0000000000000005,
		Impulse        = 0x0000000000000001,
		VelocityChange = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.PhysicsModule.UnityEngine.CollisionFlags
	 */
	enum class CollisionFlags : int32_t
	{
		None          = 0x0000000000000000,
		Sides         = 0x0000000000000001,
		Above         = 0x0000000000000002,
		Below         = 0x0000000000000004,
		CollidedSides = 0x0000000000000001,
		CollidedAbove = 0x0000000000000002,
		CollidedBelow = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.PhysicsModule.UnityEngine.QueryTriggerInteraction
	 */
	enum class QueryTriggerInteraction : int32_t
	{
		UseGlobal = 0x0000000000000000,
		Ignore    = 0x0000000000000001,
		Collide   = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.TextCoreFontEngineModule.UnityEngine.TextCore.LowLevel.GlyphLoadFlags
	 */
	enum class GlyphLoadFlags : int32_t
	{
		LOAD_DEFAULT             = 0x0000000000000000,
		LOAD_NO_SCALE            = 0x0000000000000001,
		LOAD_NO_HINTING          = 0x0000000000000002,
		LOAD_RENDER              = 0x0000000000000004,
		LOAD_NO_BITMAP           = 0x0000000000000008,
		LOAD_FORCE_AUTOHINT      = 0x0000000000000020,
		LOAD_MONOCHROME          = 0x0000000000001000,
		LOAD_NO_AUTOHINT         = 0x0000000000008000,
		LOAD_COMPUTE_METRICS     = 0x0000000000200000,
		LOAD_BITMAP_METRICS_ONLY = 0x0000000000400000
	};

	/**
	 * Enum UnityEngine.TextCoreFontEngineModule.UnityEngine.TextCore.LowLevel.FontEngineError
	 */
	enum class FontEngineError : int32_t
	{
		Success                    = 0x0000000000000000,
		Invalid_File_Path          = 0x0000000000000001,
		Invalid_File_Format        = 0x0000000000000002,
		Invalid_File_Structure     = 0x0000000000000003,
		Invalid_File               = 0x0000000000000004,
		Invalid_Table              = 0x0000000000000008,
		Invalid_Glyph_Index        = 0x0000000000000010,
		Invalid_Character_Code     = 0x0000000000000011,
		Invalid_Pixel_Size         = 0x0000000000000017,
		Invalid_Library            = 0x0000000000000021,
		Invalid_Face               = 0x0000000000000023,
		Invalid_Library_or_Face    = 0x0000000000000029,
		Atlas_Generation_Cancelled = 0x0000000000000064,
		Invalid_SharedTextureData  = 0x0000000000000065
	};

	/**
	 * Enum UnityEngine.TextCoreFontEngineModule.UnityEngine.TextCore.LowLevel.GlyphRenderMode
	 */
	enum class GlyphRenderMode : int32_t
	{
		SMOOTH_HINTED = 0x0000000000001019,
		SMOOTH        = 0x0000000000001015,
		RASTER_HINTED = 0x000000000000101A,
		RASTER        = 0x0000000000001016,
		SDF           = 0x0000000000001026,
		SDF8          = 0x0000000000002026,
		SDF16         = 0x0000000000004026,
		SDF32         = 0x0000000000008026,
		SDFAA_HINTED  = 0x0000000000001049,
		SDFAA         = 0x0000000000001045
	};

	/**
	 * Enum UnityEngine.TextCoreFontEngineModule.UnityEngine.TextCore.LowLevel.GlyphPackingMode
	 */
	enum class GlyphPackingMode : int32_t
	{
		BestShortSideFit = 0x0000000000000000,
		BestLongSideFit  = 0x0000000000000001,
		BestAreaFit      = 0x0000000000000002,
		BottomLeftRule   = 0x0000000000000003,
		ContactPointRule = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.TextCoreFontEngineModule.UnityEngine.TextCore.LowLevel.FontFeatureLookupFlags
	 */
	enum class FontFeatureLookupFlags_1 : int32_t
	{
		None                     = 0x0000000000000000,
		IgnoreLigatures          = 0x0000000000000004,
		IgnoreSpacingAdjustments = 0x0000000000000100
	};

	/**
	 * Enum Unity.Services.Core.Telemetry.Unity.Services.Core.Telemetry.Internal.MetricType
	 */
	enum class MetricType : int32_t
	{
		Gauge     = 0x0000000000000000,
		Sum       = 0x0000000000000001,
		Histogram = 0x0000000000000002
	};

	/**
	 * Enum Unity.Services.Core.Telemetry.Unity.Services.Core.Telemetry.Internal.WebRequestResult
	 */
	enum class WebRequestResult : int32_t
	{
		Success         = 0x0000000000000000,
		ConnectionError = 0x0000000000000001,
		ProtocolError   = 0x0000000000000002,
		UnknownError    = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.XRModule.UnityEngine.XR.InputTracking+TrackingStateEventType
	 */
	enum class InputTracking_TrackingStateEventType : int32_t
	{
		NodeAdded        = 0x0000000000000000,
		NodeRemoved      = 0x0000000000000001,
		TrackingAcquired = 0x0000000000000002,
		TrackingLost     = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.XRModule.UnityEngine.XR.XRNode
	 */
	enum class XRNode : int32_t
	{
		LeftEye           = 0x0000000000000000,
		RightEye          = 0x0000000000000001,
		CenterEye         = 0x0000000000000002,
		Head              = 0x0000000000000003,
		LeftHand          = 0x0000000000000004,
		RightHand         = 0x0000000000000005,
		GameController    = 0x0000000000000006,
		TrackingReference = 0x0000000000000007,
		HardwareTracker   = 0x0000000000000008
	};

	/**
	 * Enum UnityEngine.XRModule.UnityEngine.XR.AvailableTrackingData
	 */
	enum class AvailableTrackingData : int32_t
	{
		None                         = 0x0000000000000000,
		PositionAvailable            = 0x0000000000000001,
		RotationAvailable            = 0x0000000000000002,
		VelocityAvailable            = 0x0000000000000004,
		AngularVelocityAvailable     = 0x0000000000000008,
		AccelerationAvailable        = 0x0000000000000010,
		AngularAccelerationAvailable = 0x0000000000000020
	};

	/**
	 * Enum UnityEngine.XRModule.UnityEngine.XR.InputFeatureType
	 */
	enum class InputFeatureType : uint32_t
	{
		Custom                          = 0x0000000000000000,
		Binary                          = 0x0000000000000001,
		DiscreteStates                  = 0x0000000000000002,
		Axis1D                          = 0x0000000000000003,
		Axis2D                          = 0x0000000000000004,
		Axis3D                          = 0x0000000000000005,
		Rotation                        = 0x0000000000000006,
		Hand                            = 0x0000000000000007,
		Bone                            = 0x0000000000000008,
		Eyes                            = 0x0000000000000009,
		kUnityXRInputFeatureTypeInvalid = 0x00000000FFFFFFFF
	};

	/**
	 * Enum UnityEngine.XRModule.UnityEngine.XR.ConnectionChangeType
	 */
	enum class ConnectionChangeType : uint32_t
	{
		Connected    = 0x0000000000000000,
		Disconnected = 0x0000000000000001,
		ConfigChange = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.XRModule.UnityEngine.XR.InputDeviceCharacteristics
	 */
	enum class InputDeviceCharacteristics : uint32_t
	{
		None              = 0x0000000000000000,
		HeadMounted       = 0x0000000000000001,
		Camera            = 0x0000000000000002,
		HeldInHand        = 0x0000000000000004,
		HandTracking      = 0x0000000000000008,
		EyeTracking       = 0x0000000000000010,
		TrackedDevice     = 0x0000000000000020,
		Controller        = 0x0000000000000040,
		TrackingReference = 0x0000000000000080,
		Left              = 0x0000000000000100,
		Right             = 0x0000000000000200,
		Simulated6DOF     = 0x0000000000000400
	};

	/**
	 * Enum UnityEngine.XRModule.UnityEngine.XR.InputTrackingState
	 */
	enum class InputTrackingState : uint32_t
	{
		None                = 0x0000000000000000,
		Position            = 0x0000000000000001,
		Rotation            = 0x0000000000000002,
		Velocity            = 0x0000000000000004,
		AngularVelocity     = 0x0000000000000008,
		Acceleration        = 0x0000000000000010,
		AngularAcceleration = 0x0000000000000020,
		All                 = 0x000000000000003F
	};

	/**
	 * Enum UnityEngine.XRModule.UnityEngine.XR.XRDisplaySubsystem+TextureLayout
	 */
	enum class XRDisplaySubsystem_TextureLayout : int32_t
	{
		Texture2DArray     = 0x0000000000000001,
		SingleTexture2D    = 0x0000000000000002,
		SeparateTexture2Ds = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.XRModule.UnityEngine.XR.MeshGenerationStatus
	 */
	enum class MeshGenerationStatus : int32_t
	{
		Success                     = 0x0000000000000000,
		InvalidMeshId               = 0x0000000000000001,
		GenerationAlreadyInProgress = 0x0000000000000002,
		Canceled                    = 0x0000000000000003,
		UnknownError                = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.XRModule.UnityEngine.XR.MeshVertexAttributes
	 */
	enum class MeshVertexAttributes : int32_t
	{
		None     = 0x0000000000000000,
		Normals  = 0x0000000000000001,
		Tangents = 0x0000000000000002,
		UVs      = 0x0000000000000004,
		Colors   = 0x0000000000000008
	};

	/**
	 * Enum UnityEngine.UIModule.UnityEngine.RenderMode
	 */
	enum class RenderMode : int32_t
	{
		ScreenSpaceOverlay = 0x0000000000000000,
		ScreenSpaceCamera  = 0x0000000000000001,
		WorldSpace         = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.UIModule.UnityEngine.AdditionalCanvasShaderChannels
	 */
	enum class AdditionalCanvasShaderChannels : int32_t
	{
		None      = 0x0000000000000000,
		TexCoord1 = 0x0000000000000001,
		TexCoord2 = 0x0000000000000002,
		TexCoord3 = 0x0000000000000004,
		Normal    = 0x0000000000000008,
		Tangent   = 0x0000000000000010
	};

	/**
	 * Enum UnityEngine.UIModule.UnityEngine.UISystemProfilerApi+SampleType
	 */
	enum class UISystemProfilerApi_SampleType : int32_t
	{
		Layout = 0x0000000000000000,
		Render = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.VFXModule.UnityEngine.VFX.VFXSpawnerLoopState
	 */
	enum class VFXSpawnerLoopState : int32_t
	{
		Finished           = 0x0000000000000000,
		DelayingBeforeLoop = 0x0000000000000001,
		Looping            = 0x0000000000000002,
		DelayingAfterLoop  = 0x0000000000000003
	};

	/**
	 * Enum Coffee.SoftMaskForUGUI.Coffee.UISoftMask.SoftMask+DownSamplingRate
	 */
	enum class SoftMask_DownSamplingRate : int32_t
	{
		None = 0x0000000000000000,
		x1   = 0x0000000000000001,
		x2   = 0x0000000000000002,
		x4   = 0x0000000000000004,
		x8   = 0x0000000000000008
	};

	/**
	 * Enum UnityEngine.TerrainModule.UnityEngine.TerrainData+BoundaryValueType
	 */
	enum class TerrainData_BoundaryValueType : int32_t
	{
		MaxHeightmapRes      = 0x0000000000000000,
		MinDetailResPerPatch = 0x0000000000000001,
		MaxDetailResPerPatch = 0x0000000000000002,
		MaxDetailPatchCount  = 0x0000000000000003,
		MaxDetailsPerRes     = 0x0000000000000004,
		MinAlphamapRes       = 0x0000000000000005,
		MaxAlphamapRes       = 0x0000000000000006,
		MinBaseMapRes        = 0x0000000000000007,
		MaxBaseMapRes        = 0x0000000000000008
	};

	/**
	 * Enum UnityEngine.TerrainModule.UnityEngine.TerrainUtils.TerrainMapStatusCode
	 */
	enum class TerrainMapStatusCode : int32_t
	{
		OK                    = 0x0000000000000000,
		Overlapping           = 0x0000000000000001,
		SizeMismatch          = 0x0000000000000004,
		EdgeAlignmentMismatch = 0x0000000000000008
	};

	/**
	 * Enum UnityEngine.TextRenderingModule.UnityEngine.FontStyle
	 */
	enum class FontStyle : int32_t
	{
		Normal        = 0x0000000000000000,
		Bold          = 0x0000000000000001,
		Italic        = 0x0000000000000002,
		BoldAndItalic = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.TextRenderingModule.UnityEngine.TextGenerationError
	 */
	enum class TextGenerationError : int32_t
	{
		None                        = 0x0000000000000000,
		CustomSizeOnNonDynamicFont  = 0x0000000000000001,
		CustomStyleOnNonDynamicFont = 0x0000000000000002,
		NoFont                      = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.TextRenderingModule.UnityEngine.TextAnchor
	 */
	enum class TextAnchor : int32_t
	{
		UpperLeft    = 0x0000000000000000,
		UpperCenter  = 0x0000000000000001,
		UpperRight   = 0x0000000000000002,
		MiddleLeft   = 0x0000000000000003,
		MiddleCenter = 0x0000000000000004,
		MiddleRight  = 0x0000000000000005,
		LowerLeft    = 0x0000000000000006,
		LowerCenter  = 0x0000000000000007,
		LowerRight   = 0x0000000000000008
	};

	/**
	 * Enum UnityEngine.TextRenderingModule.UnityEngine.HorizontalWrapMode
	 */
	enum class HorizontalWrapMode : int32_t
	{
		Wrap     = 0x0000000000000000,
		Overflow = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.TextRenderingModule.UnityEngine.VerticalWrapMode
	 */
	enum class VerticalWrapMode : int32_t
	{
		Truncate = 0x0000000000000000,
		Overflow = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.InputLegacyModule.UnityEngine.TouchPhase
	 */
	enum class TouchPhase_1 : int32_t
	{
		Began      = 0x0000000000000000,
		Moved      = 0x0000000000000001,
		Stationary = 0x0000000000000002,
		Ended      = 0x0000000000000003,
		Canceled   = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.InputLegacyModule.UnityEngine.IMECompositionMode
	 */
	enum class IMECompositionMode : int32_t
	{
		Auto = 0x0000000000000000,
		On   = 0x0000000000000001,
		Off  = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.InputLegacyModule.UnityEngine.TouchType
	 */
	enum class TouchType : int32_t
	{
		Direct   = 0x0000000000000000,
		Indirect = 0x0000000000000001,
		Stylus   = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.SharedInternalsModule.UnityEngine.Bindings.TargetType
	 */
	enum class TargetType : int32_t
	{
		Function = 0x0000000000000000,
		Field    = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.SharedInternalsModule.UnityEngine.Bindings.CodegenOptions
	 */
	enum class CodegenOptions : int32_t
	{
		Auto   = 0x0000000000000000,
		Custom = 0x0000000000000001,
		Force  = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.SharedInternalsModule.UnityEngine.Bindings.StaticAccessorType
	 */
	enum class StaticAccessorType : int32_t
	{
		Dot                          = 0x0000000000000000,
		Arrow                        = 0x0000000000000001,
		DoubleColon                  = 0x0000000000000002,
		ArrowWithDefaultReturnIfNull = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.ParticleSystemModule.UnityEngine.ParticleSystemGradientMode
	 */
	enum class ParticleSystemGradientMode : int32_t
	{
		Color        = 0x0000000000000000,
		Gradient     = 0x0000000000000001,
		TwoColors    = 0x0000000000000002,
		TwoGradients = 0x0000000000000003,
		RandomColor  = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.ParticleSystemModule.UnityEngine.ParticleSystemStopBehavior
	 */
	enum class ParticleSystemStopBehavior : int32_t
	{
		StopEmittingAndClear = 0x0000000000000000,
		StopEmitting         = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.TilemapModule.UnityEngine.Tilemaps.Tile+ColliderType
	 */
	enum class Tile_ColliderType : int32_t
	{
		None   = 0x0000000000000000,
		Sprite = 0x0000000000000001,
		Grid   = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.TilemapModule.UnityEngine.Tilemaps.TileFlags
	 */
	enum class TileFlags : int32_t
	{
		None                             = 0x0000000000000000,
		LockColor                        = 0x0000000000000001,
		LockTransform                    = 0x0000000000000002,
		InstantiateGameObjectRuntimeOnly = 0x0000000000000004,
		KeepGameObjectRuntimeOnly        = 0x0000000000000008,
		LockAll                          = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.UnityAnalyticsModule.UnityEngine.RemoteConfigSettingsHelper+Tag
	 */
	enum class RemoteConfigSettingsHelper_Tag : int32_t
	{
		kUnknown       = 0x0000000000000000,
		kIntVal        = 0x0000000000000001,
		kInt64Val      = 0x0000000000000002,
		kUInt64Val     = 0x0000000000000003,
		kDoubleVal     = 0x0000000000000004,
		kBoolVal       = 0x0000000000000005,
		kStringVal     = 0x0000000000000006,
		kArrayVal      = 0x0000000000000007,
		kMixedArrayVal = 0x0000000000000008,
		kMapVal        = 0x0000000000000009,
		kMaxTags       = 0x000000000000000A
	};

	/**
	 * Enum UnityEngine.UnityAnalyticsModule.UnityEngine.Analytics.AnalyticsSessionState
	 */
	enum class AnalyticsSessionState : int32_t
	{
		kSessionStopped = 0x0000000000000000,
		kSessionStarted = 0x0000000000000001,
		kSessionPaused  = 0x0000000000000002,
		kSessionResumed = 0x0000000000000003
	};

	/**
	 * Enum UnityEngine.UnityAnalyticsModule.UnityEngine.Analytics.AnalyticsResult
	 */
	enum class AnalyticsResult : int32_t
	{
		Ok                  = 0x0000000000000000,
		NotInitialized      = 0x0000000000000001,
		AnalyticsDisabled   = 0x0000000000000002,
		TooManyItems        = 0x0000000000000003,
		SizeLimitReached    = 0x0000000000000004,
		TooManyRequests     = 0x0000000000000005,
		InvalidData         = 0x0000000000000006,
		UnsupportedPlatform = 0x0000000000000007
	};

	/**
	 * Enum Assembly-CSharp-firstpass.Samsung.BuildMode
	 */
	enum class BuildMode : int32_t
	{
		Development = 0x0000000000000000,
		Production  = 0x0000000000000001
	};

	/**
	 * Enum Assembly-CSharp-firstpass.Samsung.TestResult
	 */
	enum class TestResult : int32_t
	{
		Success = 0x0000000000000000,
		Failure = 0x0000000000000001
	};

	/**
	 * Enum Assembly-CSharp-firstpass.Samsung.OperationMode
	 */
	enum class OperationMode : int32_t
	{
		OPERATION_MODE_TEST_FAILURE = 0x0000000000000000,
		OPERATION_MODE_PRODUCTION   = 0x0000000000000001,
		OPERATION_MODE_TEST         = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp-firstpass.Samsung.ItemType
	 */
	enum class ItemType : int32_t
	{
		item         = 0x0000000000000000,
		subscription = 0x0000000000000001,
		all          = 0x0000000000000002
	};

	/**
	 * Enum Assembly-CSharp-firstpass.Beebyte.Obfuscator.MessageCode
	 */
	enum class MessageCode : int32_t
	{
		UnityReflectionMethodNotFound = 0x0000000000000000
	};

	/**
	 * Enum UnityEngine.VideoModule.UnityEngine.Video.VideoRenderMode
	 */
	enum class VideoRenderMode : int32_t
	{
		CameraFarPlane   = 0x0000000000000000,
		CameraNearPlane  = 0x0000000000000001,
		RenderTexture    = 0x0000000000000002,
		MaterialOverride = 0x0000000000000003,
		APIOnly          = 0x0000000000000004
	};

	/**
	 * Enum UnityEngine.VideoModule.UnityEngine.Video.Video3DLayout
	 */
	enum class Video3DLayout : int32_t
	{
		No3D         = 0x0000000000000000,
		SideBySide3D = 0x0000000000000001,
		OverUnder3D  = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.VideoModule.UnityEngine.Video.VideoAspectRatio
	 */
	enum class VideoAspectRatio : int32_t
	{
		NoScaling       = 0x0000000000000000,
		FitVertically   = 0x0000000000000001,
		FitHorizontally = 0x0000000000000002,
		FitInside       = 0x0000000000000003,
		FitOutside      = 0x0000000000000004,
		Stretch         = 0x0000000000000005
	};

	/**
	 * Enum UnityEngine.VideoModule.UnityEngine.Video.VideoTimeSource
	 */
	enum class VideoTimeSource : int32_t
	{
		AudioDSPTimeSource = 0x0000000000000000,
		GameTimeSource     = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.VideoModule.UnityEngine.Video.VideoTimeReference
	 */
	enum class VideoTimeReference : int32_t
	{
		Freerun      = 0x0000000000000000,
		InternalTime = 0x0000000000000001,
		ExternalTime = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.VideoModule.UnityEngine.Video.VideoSource
	 */
	enum class VideoSource : int32_t
	{
		VideoClip = 0x0000000000000000,
		Url       = 0x0000000000000001
	};

	/**
	 * Enum UnityEngine.VideoModule.UnityEngine.Video.VideoAudioOutputMode
	 */
	enum class VideoAudioOutputMode : int32_t
	{
		None        = 0x0000000000000000,
		AudioSource = 0x0000000000000001,
		Direct      = 0x0000000000000002,
		APIOnly     = 0x0000000000000003
	};

	/**
	 * Enum Purchasing.Common.UnityEngine.Purchasing.MiniJSON.Json.Parser+TOKEN
	 */
	enum class Json_Parser_TOKEN : int32_t
	{
		NONE          = 0x0000000000000000,
		CURLY_OPEN    = 0x0000000000000001,
		CURLY_CLOSE   = 0x0000000000000002,
		SQUARED_OPEN  = 0x0000000000000003,
		SQUARED_CLOSE = 0x0000000000000004,
		COLON         = 0x0000000000000005,
		COMMA         = 0x0000000000000006,
		STRING        = 0x0000000000000007,
		NUMBER        = 0x0000000000000008,
		_TRUE_        = 0x0000000000000009,
		_FALSE_       = 0x000000000000000A,
		_NULL_        = 0x000000000000000B
	};

	/**
	 * Enum UnityEngine.InputModule.UnityEngineInternal.Input.NativeInputEventType
	 */
	enum class NativeInputEventType : int32_t
	{
		DeviceRemoved       = 0x000000004452454D,
		DeviceConfigChanged = 0x0000000044434647,
		Text                = 0x0000000054455854,
		State               = 0x0000000053544154,
		Delta               = 0x00000000444C5441
	};

	/**
	 * Enum UnityEngine.InputModule.UnityEngineInternal.Input.NativeInputUpdateType
	 */
	enum class NativeInputUpdateType : int32_t
	{
		Dynamic      = 0x0000000000000001,
		Fixed        = 0x0000000000000002,
		BeforeRender = 0x0000000000000004,
		Editor       = 0x0000000000000008,
		IgnoreFocus  = -2147483648
	};

	/**
	 * Enum UnityEngine.VRModule.UnityEngine.XR.XRSettings+StereoRenderingMode
	 */
	enum class XRSettings_StereoRenderingMode : int32_t
	{
		MultiPass           = 0x0000000000000000,
		SinglePass          = 0x0000000000000001,
		SinglePassInstanced = 0x0000000000000002,
		SinglePassMultiview = 0x0000000000000003
	};

	/**
	 * Enum ImaginationOverflow.UniversalDeepLinking.Core.ImaginationOverflow.UniversalDeepLinking.SupportedPlatforms
	 */
	enum class SupportedPlatforms : int32_t
	{
		Android = 0x0000000000000000,
		iOS     = 0x0000000000000001,
		UWP     = 0x0000000000000002,
		Windows = 0x0000000000000003,
		OSX     = 0x0000000000000004,
		Linux   = 0x0000000000000005,
		tvOS    = 0x0000000000000006
	};

	/**
	 * Enum Unity.Services.Core.Unity.Services.Core.ServicesInitializationState
	 */
	enum class ServicesInitializationState : int32_t
	{
		Uninitialized = 0x0000000000000000,
		Initializing  = 0x0000000000000001,
		Initialized   = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipeline.Universal.ShaderLibrary.UnityEngine.Rendering.Universal.DebugMaterialMode
	 */
	enum class DebugMaterialMode : int32_t
	{
		None               = 0x0000000000000000,
		Albedo             = 0x0000000000000001,
		Specular           = 0x0000000000000002,
		Alpha              = 0x0000000000000003,
		Smoothness         = 0x0000000000000004,
		AmbientOcclusion   = 0x0000000000000005,
		Emission           = 0x0000000000000006,
		NormalWorldSpace   = 0x0000000000000007,
		NormalTangentSpace = 0x0000000000000008,
		LightingComplexity = 0x0000000000000009,
		Metallic           = 0x000000000000000A,
		SpriteMask         = 0x000000000000000B
	};

	/**
	 * Enum Unity.RenderPipeline.Universal.ShaderLibrary.UnityEngine.Rendering.Universal.DebugVertexAttributeMode
	 */
	enum class DebugVertexAttributeMode : int32_t
	{
		None      = 0x0000000000000000,
		Texcoord0 = 0x0000000000000001,
		Texcoord1 = 0x0000000000000002,
		Texcoord2 = 0x0000000000000003,
		Texcoord3 = 0x0000000000000004,
		Color     = 0x0000000000000005,
		Tangent   = 0x0000000000000006,
		Normal    = 0x0000000000000007
	};

	/**
	 * Enum Unity.RenderPipeline.Universal.ShaderLibrary.UnityEngine.Rendering.Universal.DebugMaterialValidationMode
	 */
	enum class DebugMaterialValidationMode : int32_t
	{
		None     = 0x0000000000000000,
		Albedo   = 0x0000000000000001,
		Metallic = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipeline.Universal.ShaderLibrary.UnityEngine.Rendering.Universal.DebugFullScreenMode
	 */
	enum class DebugFullScreenMode : int32_t
	{
		None                      = 0x0000000000000000,
		Depth                     = 0x0000000000000001,
		AdditionalLightsShadowMap = 0x0000000000000002,
		MainLightShadowMap        = 0x0000000000000003
	};

	/**
	 * Enum Unity.RenderPipeline.Universal.ShaderLibrary.UnityEngine.Rendering.Universal.DebugSceneOverrideMode
	 */
	enum class DebugSceneOverrideMode : int32_t
	{
		None            = 0x0000000000000000,
		Overdraw        = 0x0000000000000001,
		Wireframe       = 0x0000000000000002,
		SolidWireframe  = 0x0000000000000003,
		ShadedWireframe = 0x0000000000000004
	};

	/**
	 * Enum Unity.RenderPipeline.Universal.ShaderLibrary.UnityEngine.Rendering.Universal.DebugMipInfoMode
	 */
	enum class DebugMipInfoMode : int32_t
	{
		None  = 0x0000000000000000,
		Level = 0x0000000000000001,
		Count = 0x0000000000000002,
		Ratio = 0x0000000000000003
	};

	/**
	 * Enum Unity.RenderPipeline.Universal.ShaderLibrary.UnityEngine.Rendering.Universal.DebugPostProcessingMode
	 */
	enum class DebugPostProcessingMode : int32_t
	{
		Disabled = 0x0000000000000000,
		Auto     = 0x0000000000000001,
		Enabled  = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipeline.Universal.ShaderLibrary.UnityEngine.Rendering.Universal.DebugValidationMode
	 */
	enum class DebugValidationMode : int32_t
	{
		None                    = 0x0000000000000000,
		HighlightNanInfNegative = 0x0000000000000001,
		HighlightOutsideOfRange = 0x0000000000000002
	};

	/**
	 * Enum Unity.RenderPipeline.Universal.ShaderLibrary.UnityEngine.Rendering.Universal.PixelValidationChannels
	 */
	enum class PixelValidationChannels : int32_t
	{
		RGB = 0x0000000000000000,
		R   = 0x0000000000000001,
		G   = 0x0000000000000002,
		B   = 0x0000000000000003,
		A   = 0x0000000000000004
	};

	/**
	 * Enum Unity.RenderPipeline.Universal.ShaderLibrary.UnityEngine.Rendering.Universal.DebugLightingMode
	 */
	enum class DebugLightingMode : int32_t
	{
		None                      = 0x0000000000000000,
		ShadowCascades            = 0x0000000000000001,
		LightingWithoutNormalMaps = 0x0000000000000002,
		LightingWithNormalMaps    = 0x0000000000000003,
		Reflections               = 0x0000000000000004,
		ReflectionsWithSmoothness = 0x0000000000000005
	};

	/**
	 * Enum Unity.RenderPipeline.Universal.ShaderLibrary.UnityEngine.Rendering.Universal.DebugLightingFeatureFlags
	 */
	enum class DebugLightingFeatureFlags : int32_t
	{
		None               = 0x0000000000000000,
		GlobalIllumination = 0x0000000000000001,
		MainLight          = 0x0000000000000002,
		AdditionalLights   = 0x0000000000000004,
		VertexLighting     = 0x0000000000000008,
		Emission           = 0x0000000000000010,
		AmbientOcclusion   = 0x0000000000000020
	};

	/**
	 * Enum System.Configuration.System.Configuration.ConfigurationSaveMode
	 */
	enum class ConfigurationSaveMode : int32_t
	{
		Full     = 0x0000000000000002,
		Minimal  = 0x0000000000000001,
		Modified = 0x0000000000000000
	};

	/**
	 * Enum System.Configuration.System.Configuration.ConfigurationElementCollectionType
	 */
	enum class ConfigurationElementCollectionType : int32_t
	{
		AddRemoveClearMap          = 0x0000000000000001,
		AddRemoveClearMapAlternate = 0x0000000000000003,
		BasicMap                   = 0x0000000000000000,
		BasicMapAlternate          = 0x0000000000000002
	};

	/**
	 * Enum UnityEngine.Purchasing.SecurityStub.UnityEngine.Purchasing.Security.GooglePurchaseState
	 */
	enum class GooglePurchaseState : int32_t
	{
		Purchased = 0x0000000000000000,
		Cancelled = 0x0000000000000001,
		Refunded  = 0x0000000000000002
	};

	// --------------------------------------------------
	// # Structs
	// --------------------------------------------------
	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncMethodBuilderCore
	 * Size -> 0x0000
	 */
	struct AsyncMethodBuilderCore
	{
	public:
		class IAsyncStateMachine*                                  m_stateMachine;                                          // 0x0000(0x0000)
		class Action*                                              m_defaultContextAction;                                  // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<TResult>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct AsyncTaskMethodBuilder_TResult
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<RequestState>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_RequestState
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<RequestResponse<AchievementsBackendResponse>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_RequestResponse_AchievementsBackendResponse
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<RequestState>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_RequestState
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.AchievementBox+OFIECCIEOKE
	 * Size -> 0x0000
	 */
	struct AchievementBox_OFIECCIEOKE
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestState                 t__builder;                                              // 0x0008(0x0000)
		class AchievementBox*                                      _4__this;                                                // 0x0020(0x0000)
		struct TaskAwaiter_RequestResponse_AchievementsBackendResponse u__1;                                                    // 0x0028(0x0000)
		struct TaskAwaiter_RequestState                            u__2;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<RequestResponse<UserAchievementsResponse>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_RequestResponse_UserAchievementsResponse
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.AchievementBox+GDABDGOIJNP
	 * Size -> 0x0000
	 */
	struct AchievementBox_GDABDGOIJNP
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestState                 t__builder;                                              // 0x0008(0x0000)
		class AchievementBox*                                      _4__this;                                                // 0x0020(0x0000)
		struct TaskAwaiter_RequestResponse_UserAchievementsResponse u__1;                                                    // 0x0028(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.LECLCPEGMCD+GPHOHJJJDFB
	 * Size -> 0x0000
	 */
	struct LECLCPEGMCD_GPHOHJJJDFB
	{
	public:
		class LECLCPEGMCD*                                         KBPEINOGALE;                                             // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.LECLCPEGMCD+LNIEEKJJNBM
	 * Size -> 0x0000
	 */
	struct LECLCPEGMCD_LNIEEKJJNBM
	{
	public:
		class LECLCPEGMCD*                                         KBPEINOGALE;                                             // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.LECLCPEGMCD+LPEHNCHANLH
	 * Size -> 0x0000
	 */
	struct LECLCPEGMCD_LPEHNCHANLH
	{
	public:
		class LECLCPEGMCD*                                         KBPEINOGALE;                                             // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.LECLCPEGMCD+NLMGLHENBFF
	 * Size -> 0x0000
	 */
	struct LECLCPEGMCD_NLMGLHENBFF
	{
	public:
		class LECLCPEGMCD*                                         KBPEINOGALE;                                             // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.LECLCPEGMCD+CCGDKCKMJEP
	 * Size -> 0x0000
	 */
	struct LECLCPEGMCD_CCGDKCKMJEP
	{
	public:
		class LECLCPEGMCD*                                         KBPEINOGALE;                                             // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.LECLCPEGMCD+NPBANPILKKC
	 * Size -> 0x0000
	 */
	struct LECLCPEGMCD_NPBANPILKKC
	{
	public:
		class LECLCPEGMCD*                                         KBPEINOGALE;                                             // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<VoidTaskResult>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_VoidTaskResult
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder
	 * Size -> 0x0000
	 */
	struct AsyncTaskMethodBuilder
	{
	public:
		struct AsyncTaskMethodBuilder_VoidTaskResult               m_builder;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<Stream>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_Stream
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<string>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_string
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.StreamingAPI+OKBDHBGFFFC
	 * Size -> 0x0000
	 */
	struct StreamingAPI_OKBDHBGFFFC
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class HttpClient*                                          client_5__2;                                             // 0x0020(0x0000)
		class Stream*                                              stream_5__3;                                             // 0x0028(0x0000)
		struct TaskAwaiter_Stream                                  u__1;                                                    // 0x0030(0x0000)
		class StreamReader*                                        reader_5__4;                                             // 0x0038(0x0000)
		struct TaskAwaiter_string                                  u__2;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncVoidMethodBuilder
	 * Size -> 0x0000
	 */
	struct AsyncVoidMethodBuilder
	{
	public:
		class SynchronizationContext*                              m_synchronizationContext;                                // 0x0000(0x0000)
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0008(0x0000)
		class Task*                                                m_task;                                                  // 0x0018(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.Achievement+OAFOKJCGODD
	 * Size -> 0x0000
	 */
	struct Achievement_OAFOKJCGODD
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncVoidMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class Achievement*                                         _4__this;                                                // 0x0028(0x0000)
		class Action*                                              callback;                                                // 0x0030(0x0000)
		class UnityWebRequest*                                     request_5__2;                                            // 0x0038(0x0000)
		class Il2CppObject*                                        u__1;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.NGJBJBPMPGG
	 * Size -> 0x0000
	 */
	struct NGJBJBPMPGG
	{
	public:
		class Il2CppString*                                        EOMDONBCNMH;                                             // 0x0000(0x0000)
		class Il2CppString*                                        NJDAMDNGGHL;                                             // 0x0008(0x0000)
		class Il2CppString*                                        JBCKMCIGIKH;                                             // 0x0010(0x0000)
		class Il2CppString*                                        GJEHNIMGINI;                                             // 0x0018(0x0000)
		class Il2CppString*                                        OCHBGIKLJLL;                                             // 0x0020(0x0000)
		class Il2CppString*                                        JEAIPDGONFB;                                             // 0x0028(0x0000)
		int32_t                                                    FNPJCLEKBFE;                                             // 0x0030(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.UnityEngine.SignInWithApple.SignInWithApple+CHJOLPINMBO
	 * Size -> 0x0000
	 */
	struct SignInWithApple_CHJOLPINMBO
	{
	public:
		int32_t                                                    HCLIGDDOOEP;                                             // 0x0000(0x0000)
		struct NGJBJBPMPGG                                         PLIMCKNFLLI;                                             // 0x0008(0x0000)
		class Il2CppString*                                        JEAIPDGONFB;                                             // 0x0040(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<RequestResponse<SignInWithApple.CHJOLPINMBO>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_RequestResponse_SignInWithApple_CHJOLPINMBO
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<RequestResponse<SignInWithApple.CHJOLPINMBO>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_RequestResponse_SignInWithApple_CHJOLPINMBO
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.UnityEngine.SignInWithApple.SignInWithApple+EJJIGONNJJD
	 * Size -> 0x0000
	 */
	struct SignInWithApple_EJJIGONNJJD
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestResponse_SignInWithApple_CHJOLPINMBO t__builder;                                              // 0x0008(0x0000)
		class SignInWithApple*                                     _4__this;                                                // 0x0020(0x0000)
		struct TaskAwaiter_RequestResponse_SignInWithApple_CHJOLPINMBO u__1;                                                    // 0x0028(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<RequestResponse<BackendResponse>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_RequestResponse_BackendResponse
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<RequestResponse<BackendResponse>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_RequestResponse_BackendResponse
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.Shop.IAPManager+PJELDMDCGND
	 * Size -> 0x0000
	 */
	struct IAPManager_PJELDMDCGND
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestResponse_BackendResponse t__builder;                                              // 0x0008(0x0000)
		class PurchasedInfo*                                       purchasedInfo;                                           // 0x0020(0x0000)
		struct TaskAwaiter_RequestResponse_BackendResponse         u__1;                                                    // 0x0028(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.Shop.IAPManager+CALEKKHEIGB
	 * Size -> 0x0000
	 */
	struct IAPManager_CALEKKHEIGB
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestResponse_BackendResponse t__builder;                                              // 0x0008(0x0000)
		class OwnedProductVo*                                      purchasedInfo;                                           // 0x0020(0x0000)
		struct TaskAwaiter_RequestResponse_BackendResponse         u__1;                                                    // 0x0028(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.Shop.IAPManager+IJFHFOIIEGL
	 * Size -> 0x0000
	 */
	struct IAPManager_IJFHFOIIEGL
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestResponse_BackendResponse t__builder;                                              // 0x0008(0x0000)
		struct TaskAwaiter_RequestResponse_BackendResponse         u__1;                                                    // 0x0020(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter
	 * Size -> 0x0000
	 */
	struct TaskAwaiter
	{
	public:
		class Task*                                                m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<List<string>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_List_string
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.LHFCGBJGKCI+PPNHEEDLIGJ
	 * Size -> 0x0000
	 */
	struct LHFCGBJGKCI_PPNHEEDLIGJ
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncVoidMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class Il2CppString*                                        userId;                                                  // 0x0028(0x0000)
		class Il2CppString*                                        consentIdentifier_5__2;                                  // 0x0030(0x0000)
		bool                                                       isOptInConsentRequired_5__3;                             // 0x0038(0x0000)
		struct TaskAwaiter                                         u__1;                                                    // 0x0040(0x0000)
		struct TaskAwaiter_List_string                             u__2;                                                    // 0x0048(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.PMPEJPADFBC
	 * Size -> 0x0000
	 */
	struct PMPEJPADFBC
	{
	public:
		float                                                      OHPOKHHOJKG;                                             // 0x0000(0x0000)
		float                                                      IIBKFDNCAKH;                                             // 0x0004(0x0000)
		int32_t                                                    MGOLHCKADNB;                                             // 0x0008(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.PBMIPEMAGMN
	 * Size -> 0x0000
	 */
	struct PBMIPEMAGMN
	{
	public:
		class Action_Exception*                                    MFJPCNMCELH;                                             // 0x0000(0x0000)
		class NGOPOOEPDAJ*                                         JDBMBPHOLKI;                                             // 0x0008(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.KBMOLMONNOJ
	 * Size -> 0x0000
	 */
	struct KBMOLMONNOJ
	{
	public:
		class Action_float*                                        MFJPCNMCELH;                                             // 0x0000(0x0000)
		class NGOPOOEPDAJ*                                         JDBMBPHOLKI;                                             // 0x0008(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.DPDHKJILKKC+BCKPGPBDNLE
	 * Size -> 0x0000
	 */
	struct DPDHKJILKKC_BCKPGPBDNLE
	{
	public:
		class Action*                                              MFJPCNMCELH;                                             // 0x0000(0x0000)
		class NGOPOOEPDAJ*                                         JDBMBPHOLKI;                                             // 0x0008(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.CPMMLEIJCBE
	 * Size -> 0x0000
	 */
	struct CPMMLEIJCBE
	{
	public:
		bool                                                       IJOBKGKHFLD;                                             // 0x0000(0x0000)
		class List_string*                                         JLAKOBIFDFH;                                             // 0x0008(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.EFCLKDBEFLK<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct EFCLKDBEFLK_T
	{
	public:
		bool                                                       AILCMMMDOIF;                                             // 0x0000(0x0000)
		class Il2CppObject*                                        MFIEOJECJHA;                                             // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.MLBBNAMENJA+GCGHGLLKIKG
	 * Size -> 0x0000
	 */
	struct MLBBNAMENJA_GCGHGLLKIKG
	{
	public:
		class MemberInfo*                                          LEJCBAKOANA;                                             // 0x0000(0x0000)
		class Type*                                                GGFPPEHBPOA;                                             // 0x0008(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.EDDOOFJKAPN
	 * Size -> 0x0000
	 */
	struct EDDOOFJKAPN
	{
	public:
		class EDDOOFJKAPN_Array*                                   BCCIGPGAFCN;                                             // 0x0000(0x0000)
		class Il2CppString*                                        GGBPPPLANLE;                                             // 0x0008(0x0000)
		class Type*                                                OAALEIMFPBN;                                             // 0x0010(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.APIs.FullSerializer.Source.Aot.fsAotConfiguration+Entry
	 * Size -> 0x0000
	 */
	struct fsAotConfiguration_Entry
	{
	public:
		int32_t                                                    State;                                                   // 0x0000(0x0000)
		class Il2CppString*                                        FullTypeName;                                            // 0x0008(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.DLFFLNPMGON+ICAKNNBAGPE
	 * Size -> 0x0000
	 */
	struct DLFFLNPMGON_ICAKNNBAGPE
	{
	public:
		class Il2CppString*                                        PNGBAGOAHFE;                                             // 0x0000(0x0000)
		class Il2CppString*                                        FBJPHHMAJJP;                                             // 0x0008(0x0000)
		class Il2CppString*                                        NCBDIEIPCDE;                                             // 0x0010(0x0000)
		class Il2CppString*                                        FCFHHLJCOHJ;                                             // 0x0018(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.DLFFLNPMGON
	 * Size -> 0x0000
	 */
	struct DLFFLNPMGON
	{
	public:
		bool                                                       JPOMFIDMPOB;                                             // 0x0000(0x0000)
		class DLFFLNPMGON_ICAKNNBAGPE_Array*                       PGLMDHAJEDN;                                             // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<RequestResponse<FirebaseUserInfo>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_RequestResponse_FirebaseUserInfo
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.FMFLBKMGAII+GGECOPPGJND
	 * Size -> 0x0000
	 */
	struct FMFLBKMGAII_GGECOPPGJND
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestState                 t__builder;                                              // 0x0008(0x0000)
		class Il2CppString*                                        email;                                                   // 0x0020(0x0000)
		class Il2CppString*                                        password;                                                // 0x0028(0x0000)
		struct TaskAwaiter_RequestResponse_FirebaseUserInfo        u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.FMFLBKMGAII+PLNGLLJIJNM
	 * Size -> 0x0000
	 */
	struct FMFLBKMGAII_PLNGLLJIJNM
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestState                 t__builder;                                              // 0x0008(0x0000)
		class Il2CppString*                                        email;                                                   // 0x0020(0x0000)
		class Il2CppString*                                        password;                                                // 0x0028(0x0000)
		struct TaskAwaiter_RequestResponse_FirebaseUserInfo        u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<RequestResponse<bool>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_RequestResponse_bool
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<RequestResponse<AuthTokenBackendResponse>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_RequestResponse_AuthTokenBackendResponse
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.FMFLBKMGAII+NGGKEMPLLAN
	 * Size -> 0x0000
	 */
	struct FMFLBKMGAII_NGGKEMPLLAN
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestResponse_bool         t__builder;                                              // 0x0008(0x0000)
		class Il2CppString*                                        appSecretGUID;                                           // 0x0020(0x0000)
		struct TaskAwaiter_RequestResponse_AuthTokenBackendResponse u__1;                                                    // 0x0028(0x0000)
		struct TaskAwaiter_RequestResponse_FirebaseUserInfo        u__2;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<RequestResponse<string>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_RequestResponse_string
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.FMFLBKMGAII+AKHKBECOOCN
	 * Size -> 0x0000
	 */
	struct FMFLBKMGAII_AKHKBECOOCN
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestState                 t__builder;                                              // 0x0008(0x0000)
		struct TaskAwaiter_RequestResponse_string                  u__1;                                                    // 0x0020(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.FMFLBKMGAII+KHOPAMGKCFH
	 * Size -> 0x0000
	 */
	struct FMFLBKMGAII_KHOPAMGKCFH
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestState                 t__builder;                                              // 0x0008(0x0000)
		class Il2CppString*                                        email;                                                   // 0x0020(0x0000)
		struct TaskAwaiter_RequestResponse_string                  u__1;                                                    // 0x0028(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<RequestResponse<FirebaseAccount>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_RequestResponse_FirebaseAccount
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<RequestResponse<bool>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_RequestResponse_bool
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.FMFLBKMGAII+NBFFEDCJLHI
	 * Size -> 0x0000
	 */
	struct FMFLBKMGAII_NBFFEDCJLHI
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestResponse_bool         t__builder;                                              // 0x0008(0x0000)
		bool                                                       reload;                                                  // 0x0020(0x0000)
		class RequestResponse_FirebaseAccount*                     response_5__2;                                           // 0x0028(0x0000)
		struct TaskAwaiter_RequestResponse_FirebaseAccount         u__1;                                                    // 0x0030(0x0000)
		struct TaskAwaiter_RequestResponse_bool                    u__2;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<RequestResponse<Dictionary<string, string>>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_RequestResponse_Dictionary_string__string
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.FMFLBKMGAII+GOIFLKBHCPJ
	 * Size -> 0x0000
	 */
	struct FMFLBKMGAII_GOIFLKBHCPJ
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestResponse_bool         t__builder;                                              // 0x0008(0x0000)
		struct TaskAwaiter_RequestResponse_Dictionary_string__string u__1;                                                    // 0x0020(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<RequestResponse<T>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_RequestResponse_T
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.FMFLBKMGAII+NKEBAJKMNLA<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct FMFLBKMGAII_NKEBAJKMNLA_T
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestResponse_T            t__builder;                                              // 0x0000(0x0000)
		class Il2CppString*                                        endPoint;                                                // 0x0000(0x0000)
		class Il2CppString*                                        payLoad;                                                 // 0x0000(0x0000)
		struct TaskAwaiter_RequestResponse_string                  u__1;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<RequestResponse<string>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_RequestResponse_string
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<HTTPResponse>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_HTTPResponse
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.FMFLBKMGAII+CBFMNHAHPMF
	 * Size -> 0x0000
	 */
	struct FMFLBKMGAII_CBFMNHAHPMF
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestResponse_string       t__builder;                                              // 0x0008(0x0000)
		class Il2CppString*                                        endPoint;                                                // 0x0020(0x0000)
		class Il2CppString*                                        payLoad;                                                 // 0x0028(0x0000)
		class HTTPRequest*                                         req_5__2;                                                // 0x0030(0x0000)
		struct TaskAwaiter_HTTPResponse                            u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.FMFLBKMGAII+JKMNGMLJAGA<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct FMFLBKMGAII_JKMNGMLJAGA_T
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestResponse_T            t__builder;                                              // 0x0000(0x0000)
		class Il2CppString*                                        endPoint;                                                // 0x0000(0x0000)
		class Il2CppString*                                        payLoad;                                                 // 0x0000(0x0000)
		struct TaskAwaiter_RequestResponse_string                  u__1;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.FMFLBKMGAII+MAOIEEHECHI
	 * Size -> 0x0000
	 */
	struct FMFLBKMGAII_MAOIEEHECHI
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestResponse_string       t__builder;                                              // 0x0008(0x0000)
		bool                                                       tryBackup;                                               // 0x0020(0x0000)
		class Il2CppString*                                        endPoint;                                                // 0x0028(0x0000)
		class Il2CppString*                                        payLoad;                                                 // 0x0030(0x0000)
		class HTTPRequest*                                         req_5__2;                                                // 0x0038(0x0000)
		struct TaskAwaiter_HTTPResponse                            u__1;                                                    // 0x0040(0x0000)
		struct TaskAwaiter_RequestResponse_string                  u__2;                                                    // 0x0048(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.LADOOMDDMNP+DGOAHNKLGCJ
	 * Size -> 0x0000
	 */
	struct LADOOMDDMNP_DGOAHNKLGCJ
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestState                 t__builder;                                              // 0x0008(0x0000)
		class Il2CppString*                                        path;                                                    // 0x0020(0x0000)
		bool                                                       useAuthDB;                                               // 0x0028(0x0000)
		class Il2CppString*                                        json;                                                    // 0x0030(0x0000)
		bool                                                       refreshIdTokenOnFallback;                                // 0x0038(0x0000)
		class HTTPRequest*                                         req_5__2;                                                // 0x0040(0x0000)
		class HTTPResponse*                                        res_5__3;                                                // 0x0048(0x0000)
		struct TaskAwaiter_HTTPResponse                            u__1;                                                    // 0x0050(0x0000)
		struct TaskAwaiter_RequestResponse_bool                    u__2;                                                    // 0x0058(0x0000)
		struct TaskAwaiter_RequestState                            u__3;                                                    // 0x0060(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.LADOOMDDMNP+PPKAHEJIKNH
	 * Size -> 0x0000
	 */
	struct LADOOMDDMNP_PPKAHEJIKNH
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestState                 t__builder;                                              // 0x0008(0x0000)
		class Il2CppString*                                        path;                                                    // 0x0020(0x0000)
		bool                                                       useAuthDB;                                               // 0x0028(0x0000)
		class Il2CppString*                                        json;                                                    // 0x0030(0x0000)
		bool                                                       refreshIdTokenOnFallback;                                // 0x0038(0x0000)
		class HTTPRequest*                                         req_5__2;                                                // 0x0040(0x0000)
		class HTTPResponse*                                        res_5__3;                                                // 0x0048(0x0000)
		struct TaskAwaiter_HTTPResponse                            u__1;                                                    // 0x0050(0x0000)
		struct TaskAwaiter_RequestResponse_bool                    u__2;                                                    // 0x0058(0x0000)
		struct TaskAwaiter_RequestState                            u__3;                                                    // 0x0060(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.LADOOMDDMNP+EMFJGKJCPMF
	 * Size -> 0x0000
	 */
	struct LADOOMDDMNP_EMFJGKJCPMF
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestResponse_string       t__builder;                                              // 0x0008(0x0000)
		class Il2CppString*                                        path;                                                    // 0x0020(0x0000)
		bool                                                       useAuthDB;                                               // 0x0028(0x0000)
		bool                                                       refreshIdTokenOnFallback;                                // 0x0029(0x0000)
		class HTTPRequest*                                         req_5__2;                                                // 0x0030(0x0000)
		class HTTPResponse*                                        res_5__3;                                                // 0x0038(0x0000)
		struct TaskAwaiter_HTTPResponse                            u__1;                                                    // 0x0040(0x0000)
		struct TaskAwaiter_RequestResponse_bool                    u__2;                                                    // 0x0048(0x0000)
		struct TaskAwaiter_RequestResponse_string                  u__3;                                                    // 0x0050(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.LADOOMDDMNP+IEEBOENKPDC
	 * Size -> 0x0000
	 */
	struct LADOOMDDMNP_IEEBOENKPDC
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestResponse_bool         t__builder;                                              // 0x0008(0x0000)
		class Il2CppString*                                        path;                                                    // 0x0020(0x0000)
		bool                                                       useAuthDB;                                               // 0x0028(0x0000)
		struct TaskAwaiter_RequestResponse_string                  u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.LADOOMDDMNP+KCIJBMDHAII<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct LADOOMDDMNP_KCIJBMDHAII_T
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestState                 t__builder;                                              // 0x0000(0x0000)
		class Il2CppString*                                        path;                                                    // 0x0000(0x0000)
		class Il2CppObject*                                        obj;                                                     // 0x0000(0x0000)
		bool                                                       useAuthDB;                                               // 0x0000(0x0000)
		struct TaskAwaiter_RequestState                            u__1;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.LADOOMDDMNP+FMBGJNDMHGO<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct LADOOMDDMNP_FMBGJNDMHGO_T
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestState                 t__builder;                                              // 0x0000(0x0000)
		class Il2CppString*                                        path;                                                    // 0x0000(0x0000)
		class Il2CppObject*                                        obj;                                                     // 0x0000(0x0000)
		bool                                                       useAuthDB;                                               // 0x0000(0x0000)
		struct TaskAwaiter_RequestState                            u__1;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.LADOOMDDMNP+JIOGKIHCNJJ<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct LADOOMDDMNP_JIOGKIHCNJJ_T
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestResponse_T            t__builder;                                              // 0x0000(0x0000)
		class Il2CppString*                                        path;                                                    // 0x0000(0x0000)
		bool                                                       useAuthDB;                                               // 0x0000(0x0000)
		struct TaskAwaiter_RequestResponse_string                  u__1;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<RequestResponse<T>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_RequestResponse_T
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.JPLLOBKJALC+IOCKKBECCOP<T, J>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct JPLLOBKJALC_IOCKKBECCOP_T__J
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestResponse_T            t__builder;                                              // 0x0000(0x0000)
		bool                                                       tryBackup;                                               // 0x0000(0x0000)
		class Il2CppString*                                        functionName;                                            // 0x0000(0x0000)
		class Dictionary_string__J*                                jsonData;                                                // 0x0000(0x0000)
		bool                                                       refreshIdTokenOnFallback;                                // 0x0000(0x0000)
		class HTTPRequest*                                         req_5__2;                                                // 0x0000(0x0000)
		class HTTPResponse*                                        res_5__3;                                                // 0x0000(0x0000)
		class RequestResponse_T*                                   parsedResponse_5__4;                                     // 0x0000(0x0000)
		struct TaskAwaiter_HTTPResponse                            u__1;                                                    // 0x0000(0x0000)
		struct TaskAwaiter_RequestResponse_T                       u__2;                                                    // 0x0000(0x0000)
		struct TaskAwaiter_RequestResponse_bool                    u__3;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.JPLLOBKJALC+CFMEKDILMFI<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct JPLLOBKJALC_CFMEKDILMFI_T
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestResponse_T            t__builder;                                              // 0x0000(0x0000)
		class Dictionary_string__string*                           jsonData;                                                // 0x0000(0x0000)
		class Il2CppString*                                        functionName;                                            // 0x0000(0x0000)
		bool                                                       refreshIdTokenOnFallback;                                // 0x0000(0x0000)
		struct TaskAwaiter_RequestResponse_T                       u__1;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.JPLLOBKJALC+PGOMAKPEGDJ<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct JPLLOBKJALC_PGOMAKPEGDJ_T
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestResponse_T            t__builder;                                              // 0x0000(0x0000)
		class Dictionary_string__object*                           jsonData;                                                // 0x0000(0x0000)
		class Il2CppString*                                        functionName;                                            // 0x0000(0x0000)
		bool                                                       refreshIdTokenOnFallback;                                // 0x0000(0x0000)
		struct TaskAwaiter_RequestResponse_T                       u__1;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<RequestResponse<GiftsManager.EOKPJBEPDBL>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_RequestResponse_GiftsManager_EOKPJBEPDBL
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<RequestResponse<IntResponse>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_RequestResponse_IntResponse
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.Managers.GiftsManager+OFPBPJNHHCJ
	 * Size -> 0x0000
	 */
	struct GiftsManager_OFPBPJNHHCJ
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestResponse_GiftsManager_EOKPJBEPDBL t__builder;                                              // 0x0008(0x0000)
		class Il2CppString*                                        friendId;                                                // 0x0020(0x0000)
		class Il2CppString*                                        unlockableId;                                            // 0x0028(0x0000)
		class Il2CppString*                                        giftBoxType;                                             // 0x0030(0x0000)
		class Il2CppString*                                        gifterNickname;                                          // 0x0038(0x0000)
		class Il2CppString*                                        giftMessage;                                             // 0x0040(0x0000)
		struct TaskAwaiter_RequestResponse_IntResponse             u__1;                                                    // 0x0048(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<RequestResponse<EmptyResponse>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_RequestResponse_EmptyResponse
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.Managers.GiftsManager+HFAEKGKLIBM
	 * Size -> 0x0000
	 */
	struct GiftsManager_HFAEKGKLIBM
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestState                 t__builder;                                              // 0x0008(0x0000)
		class Il2CppString*                                        unlockableId;                                            // 0x0020(0x0000)
		struct TaskAwaiter_RequestResponse_EmptyResponse           u__1;                                                    // 0x0028(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.Managers.MainManager+CJIBOLPBLBA
	 * Size -> 0x0000
	 */
	struct MainManager_CJIBOLPBLBA
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestState                 t__builder;                                              // 0x0008(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.Managers.MainManager+CCBGGMOEKFD
	 * Size -> 0x0000
	 */
	struct MainManager_CCBGGMOEKFD
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestState                 t__builder;                                              // 0x0008(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.Managers.MainManager+BJNJIDPLEDP
	 * Size -> 0x0000
	 */
	struct MainManager_BJNJIDPLEDP
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestState                 t__builder;                                              // 0x0008(0x0000)
		class MainManager*                                         _4__this;                                                // 0x0020(0x0000)
		class Il2CppString*                                        appSecretGUID;                                           // 0x0028(0x0000)
		struct TaskAwaiter                                         u__1;                                                    // 0x0030(0x0000)
		struct TaskAwaiter_RequestResponse_bool                    u__2;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.Managers.MainManager.PLMPHMHJKIH+<<WaitForTaskAsync>b__0>d
	 * Size -> 0x0000
	 */
	struct MainManager_PLMPHMHJKIH___WaitForTaskAsync_b__0_d
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class MainManager_PLMPHMHJKIH*                             _4__this;                                                // 0x0020(0x0000)
		struct TaskAwaiter                                         u__1;                                                    // 0x0028(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<Task>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_Task
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.Managers.MainManager+LAGPOPFGIPL
	 * Size -> 0x0000
	 */
	struct MainManager_LAGPOPFGIPL
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_Task                         t__builder;                                              // 0x0008(0x0000)
		class Task*                                                task;                                                    // 0x0020(0x0000)
		class MainManager_PLMPHMHJKIH*                             _8__1;                                                   // 0x0028(0x0000)
		struct TaskAwaiter                                         u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.Managers.MainManager+LPBKEGFKJEJ
	 * Size -> 0x0000
	 */
	struct MainManager_LPBKEGFKJEJ
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class MainManager*                                         _4__this;                                                // 0x0020(0x0000)
		int32_t                                                    runningTime_5__2;                                        // 0x0028(0x0000)
		struct TaskAwaiter                                         u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<RequestResponse<LoginBonusResponseBody>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_RequestResponse_LoginBonusResponseBody
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<RequestResponse<LoginBonusResponse>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_RequestResponse_LoginBonusResponse
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.Managers.InfoManagers.BalanceManager+ANIFMCJIDII
	 * Size -> 0x0000
	 */
	struct BalanceManager_ANIFMCJIDII
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestResponse_LoginBonusResponseBody t__builder;                                              // 0x0008(0x0000)
		struct TaskAwaiter_RequestResponse_LoginBonusResponse      u__1;                                                    // 0x0020(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<RequestResponse<Dictionary<string, UserWallet>>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_RequestResponse_Dictionary_string__UserWallet
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<RequestResponse<UserWalletBackendResponse>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_RequestResponse_UserWalletBackendResponse
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.Managers.InfoManagers.BalanceManager+PAIKNOBOCDK
	 * Size -> 0x0000
	 */
	struct BalanceManager_PAIKNOBOCDK
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestResponse_Dictionary_string__UserWallet t__builder;                                              // 0x0008(0x0000)
		bool                                                       ignoreHasBalance;                                        // 0x0020(0x0000)
		class BalanceManager*                                      _4__this;                                                // 0x0028(0x0000)
		struct TaskAwaiter_RequestResponse_UserWalletBackendResponse u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.Managers.InfoManagers.GeeseLostManager+GBCMIOFHMCD
	 * Size -> 0x0000
	 */
	struct GeeseLostManager_GBCMIOFHMCD
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestState                 t__builder;                                              // 0x0008(0x0000)
		int32_t                                                    value;                                                   // 0x0020(0x0000)
		struct TaskAwaiter_RequestResponse_EmptyResponse           u__1;                                                    // 0x0028(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<RequestResponse<int>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_RequestResponse_int
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<RequestResponse<GeeseLostResponse>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_RequestResponse_GeeseLostResponse
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.Managers.InfoManagers.GeeseLostManager+IKIABGPBKIB
	 * Size -> 0x0000
	 */
	struct GeeseLostManager_IKIABGPBKIB
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestResponse_int          t__builder;                                              // 0x0008(0x0000)
		struct TaskAwaiter_RequestResponse_GeeseLostResponse       u__1;                                                    // 0x0020(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<RequestResponse<GGDDataBody>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_RequestResponse_GGDDataBody
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<RequestResponse<Dictionary<string, GachaMachine>>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_RequestResponse_Dictionary_string__GachaMachine
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.Managers.InfoManagers.UnlockablesManager+ABKCHLFLCBC
	 * Size -> 0x0000
	 */
	struct UnlockablesManager_ABKCHLFLCBC
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestState                 t__builder;                                              // 0x0008(0x0000)
		bool                                                       ignoreLoadingDataBool;                                   // 0x0020(0x0000)
		class UnlockablesManager*                                  _4__this;                                                // 0x0028(0x0000)
		struct TaskAwaiter_RequestResponse_GGDDataBody             u__1;                                                    // 0x0030(0x0000)
		struct TaskAwaiter_RequestState                            u__2;                                                    // 0x0038(0x0000)
		struct TaskAwaiter_RequestResponse_Dictionary_string__GachaMachine u__3;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.Managers.InfoManagers.UnlockablesManager+BBDNOMJNPNG
	 * Size -> 0x0000
	 */
	struct UnlockablesManager_BBDNOMJNPNG
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestState                 t__builder;                                              // 0x0008(0x0000)
		class UnlockablesManager*                                  _4__this;                                                // 0x0020(0x0000)
		class GGDDataBody*                                         ggddata;                                                 // 0x0028(0x0000)
		int32_t                                                    attemptNumber;                                           // 0x0030(0x0000)
		struct TaskAwaiter_RequestState                            u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.Managers.InfoManagers.UnlockablesManager+MEEHAGGHIKP
	 * Size -> 0x0000
	 */
	struct UnlockablesManager_MEEHAGGHIKP
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestState                 t__builder;                                              // 0x0008(0x0000)
		class GGDDataBody*                                         ggddata;                                                 // 0x0020(0x0000)
		class UnlockablesManager*                                  _4__this;                                                // 0x0028(0x0000)
		class UnlockableInfo_Array*                                _7__wrap1;                                               // 0x0030(0x0000)
		int32_t                                                    _7__wrap2;                                               // 0x0038(0x0000)
		class UnlockableInfo*                                      newUnlockable_5__4;                                      // 0x0040(0x0000)
		class Il2CppObject*                                        _7__wrap4;                                               // 0x0048(0x0000)
		int32_t                                                    _7__wrap5;                                               // 0x0050(0x0000)
		struct TaskAwaiter_RequestState                            u__1;                                                    // 0x0058(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.Managers.InfoManagers.UnlockablesManager+ANAOJAICPAB
	 * Size -> 0x0000
	 */
	struct UnlockablesManager_ANAOJAICPAB
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestState                 t__builder;                                              // 0x0008(0x0000)
		class Unlockable*                                          unlockable;                                              // 0x0020(0x0000)
		int32_t                                                    attempt_5__2;                                            // 0x0028(0x0000)
		struct TaskAwaiter_RequestState                            u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<RequestResponse<GGDDataBody>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_RequestResponse_GGDDataBody
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<RequestResponse<GGDDataResponse>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_RequestResponse_GGDDataResponse
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.Managers.InfoManagers.UnlockablesManager+GDGCFMAEKED
	 * Size -> 0x0000
	 */
	struct UnlockablesManager_GDGCFMAEKED
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestResponse_GGDDataBody  t__builder;                                              // 0x0008(0x0000)
		struct TaskAwaiter_RequestResponse_GGDDataResponse         u__1;                                                    // 0x0020(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<RequestResponse<UnlockablesInfoBody>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_RequestResponse_UnlockablesInfoBody
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<RequestResponse<UnlockablesInfoResponse>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_RequestResponse_UnlockablesInfoResponse
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.Managers.InfoManagers.UnlockablesManager+MOKFHPINCPH
	 * Size -> 0x0000
	 */
	struct UnlockablesManager_MOKFHPINCPH
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestResponse_UnlockablesInfoBody t__builder;                                              // 0x0008(0x0000)
		struct TaskAwaiter_RequestResponse_UnlockablesInfoResponse u__1;                                                    // 0x0020(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<RequestResponse<UserUnlockAllBackendResponse>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_RequestResponse_UserUnlockAllBackendResponse
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<RequestResponse<UserUnlockAllBackendResponse>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_RequestResponse_UserUnlockAllBackendResponse
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.Managers.InfoManagers.UnlockablesManager+JIMLHHOIFFJ
	 * Size -> 0x0000
	 */
	struct UnlockablesManager_JIMLHHOIFFJ
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestResponse_UserUnlockAllBackendResponse t__builder;                                              // 0x0008(0x0000)
		class UnlockUnlockableInfo*                                unlockInfo;                                              // 0x0020(0x0000)
		class UnlockablesManager_GLNPMIKDBCI*                      _8__1;                                                   // 0x0028(0x0000)
		class UnlockablesManager*                                  _4__this;                                                // 0x0030(0x0000)
		struct TaskAwaiter_RequestResponse_UserUnlockAllBackendResponse u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.Managers.InfoManagers.UnlockablesManager+PNCLHGCBILG
	 * Size -> 0x0000
	 */
	struct UnlockablesManager_PNCLHGCBILG
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestResponse_UserUnlockAllBackendResponse t__builder;                                              // 0x0008(0x0000)
		class UnlockUnlockableInfo_Array*                          unlockables;                                             // 0x0020(0x0000)
		struct TaskAwaiter_RequestResponse_UserUnlockAllBackendResponse u__1;                                                    // 0x0028(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<RequestResponse<Dictionary<string, UserUnlockable>>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_RequestResponse_Dictionary_string__UserUnlockable
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<RequestResponse<UserUnlockablesBackendResponse>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_RequestResponse_UserUnlockablesBackendResponse
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.Managers.InfoManagers.UnlockablesManager+BDJBFFCMDFL
	 * Size -> 0x0000
	 */
	struct UnlockablesManager_BDJBFFCMDFL
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestResponse_Dictionary_string__UserUnlockable t__builder;                                              // 0x0008(0x0000)
		struct TaskAwaiter_RequestResponse_UserUnlockablesBackendResponse u__1;                                                    // 0x0020(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<RequestResponse<NonExistingGiftablesResponse>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_RequestResponse_NonExistingGiftablesResponse
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<RequestResponse<NonExistingGiftablesResponse>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_RequestResponse_NonExistingGiftablesResponse
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.Managers.InfoManagers.UnlockablesManager+DIIFDJFAMKF
	 * Size -> 0x0000
	 */
	struct UnlockablesManager_DIIFDJFAMKF
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestResponse_NonExistingGiftablesResponse t__builder;                                              // 0x0008(0x0000)
		class Il2CppString*                                        friendId;                                                // 0x0020(0x0000)
		struct TaskAwaiter_RequestResponse_NonExistingGiftablesResponse u__1;                                                    // 0x0028(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.Managers.InfoManagers.UnlockablesManager+DFIIIJIFDBM
	 * Size -> 0x0000
	 */
	struct UnlockablesManager_DFIIIJIFDBM
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class UnlockablesManager*                                  _4__this;                                                // 0x0020(0x0000)
		class Il2CppString*                                        petId;                                                   // 0x0028(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<RequestResponse<Dictionary<string, GachaMachine>>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_RequestResponse_Dictionary_string__GachaMachine
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<RequestResponse<GachaMachineResponse>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_RequestResponse_GachaMachineResponse
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.Managers.InfoManagers.UnlockablesManager+PHHOICIHKEJ
	 * Size -> 0x0000
	 */
	struct UnlockablesManager_PHHOICIHKEJ
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestResponse_Dictionary_string__GachaMachine t__builder;                                              // 0x0008(0x0000)
		struct TaskAwaiter_RequestResponse_GachaMachineResponse    u__1;                                                    // 0x0020(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<RequestResponse<User>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_RequestResponse_User
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<RequestResponse<UserBackendResponse>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_RequestResponse_UserBackendResponse
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.Managers.InfoManagers.UserInfoManager+GAMHLKAOALC
	 * Size -> 0x0000
	 */
	struct UserInfoManager_GAMHLKAOALC
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestResponse_User         t__builder;                                              // 0x0008(0x0000)
		struct TaskAwaiter_RequestResponse_UserBackendResponse     u__1;                                                    // 0x0020(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.Photon.Voice.Unity.Demos.DemoVoiceUI.MicRef
	 * Size -> 0x0000
	 */
	struct MicRef
	{
	public:
		int32_t                                                    MicType;                                                 // 0x0000(0x0000)
		class Il2CppString*                                        Name;                                                    // 0x0008(0x0000)
		int32_t                                                    PhotonId;                                                // 0x0010(0x0000)
		class Il2CppString*                                        PhotonIdString;                                          // 0x0018(0x0000)
	};

	/**
	 * Struct mscorlib.System.ByReference<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ByReference_T
	{
	public:
		intptr_t                                                   value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ReadOnlySpan<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ReadOnlySpan_T
	{
	public:
		struct ByReference_T                                       pointer;                                                 // 0x0000(0x0000)
		int32_t                                                    length;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Span<char>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Span_char
	{
	public:
		struct ByReference_T                                       pointer;                                                 // 0x0000(0x0000)
		int32_t                                                    length;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ReadOnlySpan<char>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ReadOnlySpan_char
	{
	public:
		struct ByReference_T                                       pointer;                                                 // 0x0000(0x0000)
		int32_t                                                    length;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.TimeSpan
	 * Size -> 0x0000
	 */
	struct TimeSpan
	{
	public:
		int64_t                                                    ticks;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct Nullable_T
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		class Il2CppObject*                                        value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<TimeSpan>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_TimeSpan
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct TimeSpan                                            value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.GooglePlayGames.BasicApi.SavedGame.SavedGameMetadataUpdate+Builder
	 * Size -> 0x0000
	 */
	struct SavedGameMetadataUpdate_Builder
	{
	public:
		bool                                                       mDescriptionUpdated;                                     // 0x0000(0x0000)
		class Il2CppString*                                        mNewDescription;                                         // 0x0008(0x0000)
		bool                                                       mCoverImageUpdated;                                      // 0x0010(0x0000)
		class Byte_Array*                                          mNewPngCoverImage;                                       // 0x0018(0x0000)
		struct Nullable_TimeSpan                                   mNewPlayedTime;                                          // 0x0020(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.GooglePlayGames.BasicApi.Nearby.AdvertisingResult
	 * Size -> 0x0000
	 */
	struct AdvertisingResult
	{
	public:
		int32_t                                                    mStatus;                                                 // 0x0000(0x0000)
		class Il2CppString*                                        mLocalEndpointName;                                      // 0x0008(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.GooglePlayGames.BasicApi.Nearby.EndpointDetails
	 * Size -> 0x0000
	 */
	struct EndpointDetails
	{
	public:
		class Il2CppString*                                        mEndpointId;                                             // 0x0000(0x0000)
		class Il2CppString*                                        mName;                                                   // 0x0008(0x0000)
		class Il2CppString*                                        mServiceId;                                              // 0x0010(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.GooglePlayGames.BasicApi.Nearby.ConnectionRequest
	 * Size -> 0x0000
	 */
	struct ConnectionRequest
	{
	public:
		struct EndpointDetails                                     mRemoteEndpoint;                                         // 0x0000(0x0000)
		class Byte_Array*                                          mPayload;                                                // 0x0018(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.GooglePlayGames.BasicApi.Nearby.ConnectionResponse
	 * Size -> 0x0000
	 */
	struct ConnectionResponse
	{
	public:
		int64_t                                                    mLocalClientId;                                          // 0x0000(0x0000)
		class Il2CppString*                                        mRemoteEndpointId;                                       // 0x0008(0x0000)
		int32_t                                                    mResponseStatus;                                         // 0x0010(0x0000)
		class Byte_Array*                                          mPayload;                                                // 0x0018(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.GooglePlayGames.BasicApi.Nearby.NearbyConnectionConfiguration
	 * Size -> 0x0000
	 */
	struct NearbyConnectionConfiguration
	{
	public:
		class Action_InitializationStatus*                         mInitializationCallback;                                 // 0x0000(0x0000)
		int64_t                                                    mLocalClientId;                                          // 0x0008(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.Objects.GameTask+TaskPair
	 * Size -> 0x0000
	 */
	struct GameTask_TaskPair
	{
	public:
		class TaskObjectHandler*                                   objectHandler;                                           // 0x0000(0x0000)
		class TaskPanelHandler*                                    panelHandler;                                            // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<Task>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_Task
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.NOIEDGGNKKC+MGKIGNIJKAH
	 * Size -> 0x0000
	 */
	struct NOIEDGGNKKC_MGKIGNIJKAH
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_Task                         t__builder;                                              // 0x0008(0x0000)
		class Task*                                                task;                                                    // 0x0020(0x0000)
		struct TaskAwaiter_Task                                    u__1;                                                    // 0x0028(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter<byte[]>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_byte
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
		bool                                                       m_continueOnCapturedContext;                             // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.Objects.Unlockable+ICFDEKMGBAB
	 * Size -> 0x0000
	 */
	struct Unlockable_ICFDEKMGBAB
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_RequestState                 t__builder;                                              // 0x0008(0x0000)
		class Unlockable*                                          _4__this;                                                // 0x0020(0x0000)
		bool                                                       reattempt;                                               // 0x0028(0x0000)
		class Il2CppString*                                        urlToRequest_5__2;                                       // 0x0030(0x0000)
		class HTTPRequest*                                         request_5__3;                                            // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_byte  u__1;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Vector3
	 * Size -> 0x0000
	 */
	struct Vector3
	{
	public:
		float                                                      x;                                                       // 0x0000(0x0000)
		float                                                      y;                                                       // 0x0004(0x0000)
		float                                                      z;                                                       // 0x0008(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.OHBAMCMFPFH
	 * Size -> 0x0000
	 */
	struct OHBAMCMFPFH
	{
	public:
		struct Vector3                                             LNGFHFJLEIF;                                             // 0x0000(0x0000)
		float                                                      IAPHMPMMEHA;                                             // 0x000C(0x0000)
		int32_t                                                    FIJHKBKKKFB;                                             // 0x0010(0x0000)
		int32_t                                                    NPIIBCFOEKL;                                             // 0x0014(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.HKPIHAFBPHK
	 * Size -> 0x0000
	 */
	struct HKPIHAFBPHK
	{
	public:
		bool                                                       EGHNMHOBDOF;                                             // 0x0000(0x0000)
		struct Vector3                                             KPKDNIGOLNG;                                             // 0x0004(0x0000)
		float                                                      ABCAGLLKNGG;                                             // 0x0010(0x0000)
		float                                                      DOHDLLPANDI;                                             // 0x0014(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.GGOKLFPGBDP
	 * Size -> 0x0000
	 */
	struct GGOKLFPGBDP
	{
	public:
		bool                                                       NBACAAMACJI_k__BackingField;                             // 0x0000(0x0000)
		bool                                                       PHGOOFDNGFC_k__BackingField;                             // 0x0001(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.NLNDKONFHJP
	 * Size -> 0x0000
	 */
	struct NLNDKONFHJP
	{
	public:
		class Il2CppString*                                        NMOKMGENFKE;                                             // 0x0000(0x0000)
		uint8_t                                                    MCMDEEKHLAH;                                             // 0x0008(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.KDPNCBFLPOF
	 * Size -> 0x0000
	 */
	struct KDPNCBFLPOF
	{
	public:
		class Il2CppString*                                        LJLENJLLJHO;                                             // 0x0000(0x0000)
		int64_t                                                    HPIOAJAPAAC;                                             // 0x0008(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=6
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_6
	{	};

	/**
	 * Struct Assembly-CSharp.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=12
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_12
	{	};

	/**
	 * Struct Assembly-CSharp.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=16
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_16
	{	};

	/**
	 * Struct Assembly-CSharp.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=18
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_18
	{	};

	/**
	 * Struct Assembly-CSharp.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=20
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_20
	{	};

	/**
	 * Struct Assembly-CSharp.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=24
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_24
	{	};

	/**
	 * Struct Assembly-CSharp.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=28
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_28
	{	};

	/**
	 * Struct Assembly-CSharp.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=30
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_30
	{	};

	/**
	 * Struct Assembly-CSharp.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=32
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_32
	{	};

	/**
	 * Struct Assembly-CSharp.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=36
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_36
	{	};

	/**
	 * Struct Assembly-CSharp.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=46
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_46
	{	};

	/**
	 * Struct Assembly-CSharp.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=60
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_60
	{	};

	/**
	 * Struct Assembly-CSharp.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=64
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_64
	{	};

	/**
	 * Struct Assembly-CSharp.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=92
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_92
	{	};

	/**
	 * Struct Assembly-CSharp.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=244
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_244
	{	};

	/**
	 * Struct Assembly-CSharp.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=3996
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_3996
	{	};

	/**
	 * Struct Assembly-CSharp.PrivateImplementationDetailsQOELAJF.ArrayCopy148+$ArrayType$151
	 * Size -> 0x0000
	 */
	struct ArrayCopy148__ArrayType_151
	{	};

	/**
	 * Struct Assembly-CSharp.PrivateImplementationDetailsQOELAJF.ArrayCopy128+$ArrayType$131
	 * Size -> 0x0000
	 */
	struct ArrayCopy128__ArrayType_131
	{	};

	/**
	 * Struct BestHTTP.LitJson.PropertyMetadata
	 * Size -> 0x0000
	 */
	struct PropertyMetadata
	{
	public:
		class MemberInfo*                                          Info;                                                    // 0x0000(0x0000)
		bool                                                       IsField;                                                 // 0x0008(0x0000)
		class Type*                                                Type;                                                    // 0x0010(0x0000)
	};

	/**
	 * Struct BestHTTP.LitJson.ArrayMetadata
	 * Size -> 0x0000
	 */
	struct ArrayMetadata
	{
	public:
		class Type*                                                element_type;                                            // 0x0000(0x0000)
		bool                                                       is_array;                                                // 0x0008(0x0000)
		bool                                                       is_list;                                                 // 0x0009(0x0000)
	};

	/**
	 * Struct BestHTTP.LitJson.ObjectMetadata
	 * Size -> 0x0000
	 */
	struct ObjectMetadata
	{
	public:
		class Type*                                                element_type;                                            // 0x0000(0x0000)
		bool                                                       is_dictionary;                                           // 0x0008(0x0000)
		class IDictionary_string__PropertyMetadata*                properties;                                              // 0x0010(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.HTTPRequest+UploadStreamInfo
	 * Size -> 0x0000
	 */
	struct HTTPRequest_UploadStreamInfo
	{
	public:
		class Stream*                                              Stream;                                                  // 0x0000(0x0000)
		int64_t                                                    Length;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.WebSocket.Frames.RawFrameData
	 * Size -> 0x0000
	 */
	struct RawFrameData
	{
	public:
		class Byte_Array*                                          Data;                                                    // 0x0000(0x0000)
		int32_t                                                    Length;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.WebSocket.Frames.WebSocketFrameReader
	 * Size -> 0x0000
	 */
	struct WebSocketFrameReader
	{
	public:
		uint8_t                                                    Header_k__BackingField;                                  // 0x0000(0x0000)
		bool                                                       IsFinal_k__BackingField;                                 // 0x0001(0x0000)
		uint8_t                                                    Type_k__BackingField;                                    // 0x0002(0x0000)
		bool                                                       HasMask_k__BackingField;                                 // 0x0003(0x0000)
		uint64_t                                                   Length_k__BackingField;                                  // 0x0008(0x0000)
		class Byte_Array*                                          Data_k__BackingField;                                    // 0x0010(0x0000)
		class Il2CppString*                                        DataAsText_k__BackingField;                              // 0x0018(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.Serialization.StreamingContext
	 * Size -> 0x0000
	 */
	struct StreamingContext
	{
	public:
		class Il2CppObject*                                        m_additionalContext;                                     // 0x0000(0x0000)
		int32_t                                                    m_state;                                                 // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.Decimal.DecCalc+Buf12
	 * Size -> 0x0000
	 */
	struct Decimal_DecCalc_Buf12
	{
	public:
		uint32_t                                                   U0;                                                      // 0x0000(0x0000)
		uint32_t                                                   U1;                                                      // 0x0004(0x0000)
		uint32_t                                                   U2;                                                      // 0x0008(0x0000)
		uint64_t                                                   ulo64LE;                                                 // 0x0000(0x0000)
		uint64_t                                                   uhigh64LE;                                               // 0x0004(0x0000)
	};

	/**
	 * Struct mscorlib.System.Decimal.DecCalc+Buf16
	 * Size -> 0x0000
	 */
	struct Decimal_DecCalc_Buf16
	{
	public:
		uint32_t                                                   U0;                                                      // 0x0000(0x0000)
		uint32_t                                                   U1;                                                      // 0x0004(0x0000)
		uint32_t                                                   U2;                                                      // 0x0008(0x0000)
		uint32_t                                                   U3;                                                      // 0x000C(0x0000)
		uint64_t                                                   ulo64LE;                                                 // 0x0000(0x0000)
		uint64_t                                                   uhigh64LE;                                               // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.DateTime
	 * Size -> 0x0000
	 */
	struct DateTime
	{
	public:
		uint64_t                                                   dateData;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.Timings.TimingEvent
	 * Size -> 0x0000
	 */
	struct TimingEvent
	{
	public:
		class Il2CppString*                                        Name;                                                    // 0x0000(0x0000)
		struct TimeSpan                                            Duration;                                                // 0x0008(0x0000)
		struct DateTime                                            When;                                                    // 0x0010(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.PlatformSupport.Memory.BufferSegment
	 * Size -> 0x0000
	 */
	struct BufferSegment
	{
	public:
		class Byte_Array*                                          Data;                                                    // 0x0000(0x0000)
		int32_t                                                    Offset;                                                  // 0x0008(0x0000)
		int32_t                                                    Count;                                                   // 0x000C(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.SocketIO3.OutgoingPacket
	 * Size -> 0x0000
	 */
	struct OutgoingPacket
	{
	public:
		class Il2CppString*                                        Payload_k__BackingField;                                 // 0x0000(0x0000)
		class List_byte*                                           Attachements_k__BackingField;                            // 0x0008(0x0000)
		struct BufferSegment                                       PayloadData_k__BackingField;                             // 0x0010(0x0000)
		bool                                                       IsVolatile_k__BackingField;                              // 0x0020(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.SocketIO3.IncomingPacket
	 * Size -> 0x0000
	 */
	struct IncomingPacket
	{
	public:
		int32_t                                                    TransportEvent_k__BackingField;                          // 0x0000(0x0000)
		int32_t                                                    SocketIOEvent_k__BackingField;                           // 0x0004(0x0000)
		int32_t                                                    Id_k__BackingField;                                      // 0x0008(0x0000)
		class Il2CppString*                                        Namespace_k__BackingField;                               // 0x0010(0x0000)
		int32_t                                                    AttachementCount_k__BackingField;                        // 0x0018(0x0000)
		class List_BufferSegment*                                  Attachements_k__BackingField;                            // 0x0020(0x0000)
		class Il2CppString*                                        EventName_k__BackingField;                               // 0x0028(0x0000)
		class Object_Array*                                        DecodedArgs_k__BackingField;                             // 0x0030(0x0000)
		class Il2CppObject*                                        DecodedArg_k__BackingField;                              // 0x0038(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.SocketIO3.EmitBuilder
	 * Size -> 0x0000
	 */
	struct EmitBuilder
	{
	public:
		class Socket*                                              socket;                                                  // 0x0000(0x0000)
		bool                                                       isVolatile;                                              // 0x0008(0x0000)
		int32_t                                                    id;                                                      // 0x000C(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.SocketIO3.Events.CallbackDescriptor
	 * Size -> 0x0000
	 */
	struct CallbackDescriptor
	{
	public:
		class Type_Array*                                          ParamTypes;                                              // 0x0000(0x0000)
		class Action_object*                                       Callback;                                                // 0x0008(0x0000)
		bool                                                       Once;                                                    // 0x0010(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.PlatformSupport.Threading.ReadLock
	 * Size -> 0x0000
	 */
	struct ReadLock
	{
	public:
		class ReaderWriterLockSlim*                                rwLock;                                                  // 0x0000(0x0000)
		bool                                                       locked;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.PlatformSupport.Threading.WriteLock
	 * Size -> 0x0000
	 */
	struct WriteLock
	{
	public:
		class ReaderWriterLockSlim*                                rwLock;                                                  // 0x0000(0x0000)
		bool                                                       locked;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.PlatformSupport.Memory.PooledBuffer
	 * Size -> 0x0000
	 */
	struct PooledBuffer
	{
	public:
		class Byte_Array*                                          Data;                                                    // 0x0000(0x0000)
		int32_t                                                    Length;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.PlatformSupport.Memory.BufferStore
	 * Size -> 0x0000
	 */
	struct BufferStore
	{
	public:
		int64_t                                                    Size;                                                    // 0x0000(0x0000)
		class List_BufferDesc*                                     buffers;                                                 // 0x0008(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.PlatformSupport.Memory.BufferDesc
	 * Size -> 0x0000
	 */
	struct BufferDesc
	{
	public:
		class Byte_Array*                                          buffer;                                                  // 0x0000(0x0000)
		struct DateTime                                            released;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.Logger.LoggingContext+LoggingContextField
	 * Size -> 0x0000
	 */
	struct LoggingContext_LoggingContextField
	{
	public:
		class Il2CppString*                                        key;                                                     // 0x0000(0x0000)
		int64_t                                                    longValue;                                               // 0x0008(0x0000)
		bool                                                       boolValue;                                               // 0x0010(0x0000)
		class Il2CppString*                                        stringValue;                                             // 0x0018(0x0000)
		class LoggingContext*                                      loggingContextValue;                                     // 0x0020(0x0000)
		int32_t                                                    fieldType;                                               // 0x0028(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.Logger.LogJob
	 * Size -> 0x0000
	 */
	struct LogJob
	{
	public:
		int32_t                                                    level;                                                   // 0x0000(0x0000)
		class Il2CppString*                                        division;                                                // 0x0008(0x0000)
		class Il2CppString*                                        msg;                                                     // 0x0010(0x0000)
		class Exception*                                           ex;                                                      // 0x0018(0x0000)
		struct DateTime                                            time;                                                    // 0x0020(0x0000)
		int32_t                                                    threadId;                                                // 0x0028(0x0000)
		class Il2CppString*                                        stackTrace;                                              // 0x0030(0x0000)
		class LoggingContext*                                      context1;                                                // 0x0038(0x0000)
		class LoggingContext*                                      context2;                                                // 0x0040(0x0000)
		class LoggingContext*                                      context3;                                                // 0x0048(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.JSON.LitJson.PropertyMetadata
	 * Size -> 0x0000
	 */
	struct PropertyMetadata_1
	{
	public:
		class MemberInfo*                                          Info;                                                    // 0x0000(0x0000)
		bool                                                       IsField;                                                 // 0x0008(0x0000)
		class Type*                                                Type;                                                    // 0x0010(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.JSON.LitJson.ArrayMetadata
	 * Size -> 0x0000
	 */
	struct ArrayMetadata_1
	{
	public:
		class Type*                                                element_type;                                            // 0x0000(0x0000)
		bool                                                       is_array;                                                // 0x0008(0x0000)
		bool                                                       is_list;                                                 // 0x0009(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.JSON.LitJson.ObjectMetadata
	 * Size -> 0x0000
	 */
	struct ObjectMetadata_1
	{
	public:
		class Type*                                                element_type;                                            // 0x0000(0x0000)
		bool                                                       is_dictionary;                                           // 0x0008(0x0000)
		class IDictionary_string__PropertyMetadata*                properties;                                              // 0x0010(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.Extensions.TimerData
	 * Size -> 0x0000
	 */
	struct TimerData
	{
	public:
		struct DateTime                                            Created;                                                 // 0x0000(0x0000)
		struct TimeSpan                                            Interval;                                                // 0x0008(0x0000)
		class Il2CppObject*                                        Context;                                                 // 0x0010(0x0000)
		class Func_DateTime__object__bool*                         OnTimer;                                                 // 0x0018(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.Decompression.DecompressedData
	 * Size -> 0x0000
	 */
	struct DecompressedData
	{
	public:
		class Byte_Array*                                          Data;                                                    // 0x0000(0x0000)
		int32_t                                                    Length;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.Core.ConnectionEventInfo
	 * Size -> 0x0000
	 */
	struct ConnectionEventInfo
	{
	public:
		class ConnectionBase*                                      Source;                                                  // 0x0000(0x0000)
		int32_t                                                    Event;                                                   // 0x0008(0x0000)
		int32_t                                                    State;                                                   // 0x000C(0x0000)
		uint8_t                                                    ProtocolSupport;                                         // 0x0010(0x0000)
		class HTTPRequest*                                         Request;                                                 // 0x0018(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.Core.HostConnectionKey
	 * Size -> 0x0000
	 */
	struct HostConnectionKey
	{
	public:
		class Il2CppString*                                        Host;                                                    // 0x0000(0x0000)
		class Il2CppString*                                        Connection;                                              // 0x0008(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.Core.PluginEventInfo
	 * Size -> 0x0000
	 */
	struct PluginEventInfo
	{
	public:
		int32_t                                                    Event;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        Payload;                                                 // 0x0008(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.Core.ProtocolEventInfo
	 * Size -> 0x0000
	 */
	struct ProtocolEventInfo
	{
	public:
		class IProtocol*                                           Source;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.Core.RequestEventInfo
	 * Size -> 0x0000
	 */
	struct RequestEventInfo
	{
	public:
		class HTTPRequest*                                         SourceRequest;                                           // 0x0000(0x0000)
		int32_t                                                    Event;                                                   // 0x0008(0x0000)
		int32_t                                                    State;                                                   // 0x000C(0x0000)
		int64_t                                                    Progress;                                                // 0x0010(0x0000)
		int64_t                                                    ProgressLength;                                          // 0x0018(0x0000)
		class Byte_Array*                                          Data;                                                    // 0x0020(0x0000)
		int32_t                                                    DataLength;                                              // 0x0028(0x0000)
		class Il2CppString*                                        Name;                                                    // 0x0030(0x0000)
		struct DateTime                                            Time;                                                    // 0x0038(0x0000)
		struct TimeSpan                                            Duration;                                                // 0x0040(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.Connections.HTTP2.HTTP2FrameHeaderAndPayload
	 * Size -> 0x0000
	 */
	struct HTTP2FrameHeaderAndPayload
	{
	public:
		uint32_t                                                   PayloadLength;                                           // 0x0000(0x0000)
		uint8_t                                                    Type;                                                    // 0x0004(0x0000)
		uint8_t                                                    Flags;                                                   // 0x0005(0x0000)
		uint32_t                                                   StreamId;                                                // 0x0008(0x0000)
		class Byte_Array*                                          Payload;                                                 // 0x0010(0x0000)
		uint32_t                                                   PayloadOffset;                                           // 0x0018(0x0000)
		bool                                                       DontUseMemPool;                                          // 0x001C(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.Connections.HTTP2.HTTP2SettingsFrame
	 * Size -> 0x0000
	 */
	struct HTTP2SettingsFrame
	{
	public:
		struct HTTP2FrameHeaderAndPayload                          Header;                                                  // 0x0000(0x0000)
		class List_KeyValuePair_HTTP2Settings__uint*               Settings;                                                // 0x0020(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<byte>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_byte
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		uint8_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.Connections.HTTP2.HTTP2DataFrame
	 * Size -> 0x0000
	 */
	struct HTTP2DataFrame
	{
	public:
		struct HTTP2FrameHeaderAndPayload                          Header;                                                  // 0x0000(0x0000)
		struct Nullable_byte                                       PadLength;                                               // 0x0020(0x0000)
		uint32_t                                                   DataIdx;                                                 // 0x0024(0x0000)
		class Byte_Array*                                          Data;                                                    // 0x0028(0x0000)
		uint32_t                                                   DataLength;                                              // 0x0030(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<uint>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_uint
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		uint32_t                                                   value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.Connections.HTTP2.HTTP2HeadersFrame
	 * Size -> 0x0000
	 */
	struct HTTP2HeadersFrame
	{
	public:
		struct HTTP2FrameHeaderAndPayload                          Header;                                                  // 0x0000(0x0000)
		struct Nullable_byte                                       PadLength;                                               // 0x0020(0x0000)
		struct Nullable_byte                                       IsExclusive;                                             // 0x0022(0x0000)
		struct Nullable_uint                                       StreamDependency;                                        // 0x0024(0x0000)
		struct Nullable_byte                                       Weight;                                                  // 0x002C(0x0000)
		uint32_t                                                   HeaderBlockFragmentIdx;                                  // 0x0030(0x0000)
		class Byte_Array*                                          HeaderBlockFragment;                                     // 0x0038(0x0000)
		uint32_t                                                   HeaderBlockFragmentLength;                               // 0x0040(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.Connections.HTTP2.HTTP2PriorityFrame
	 * Size -> 0x0000
	 */
	struct HTTP2PriorityFrame
	{
	public:
		struct HTTP2FrameHeaderAndPayload                          Header;                                                  // 0x0000(0x0000)
		uint8_t                                                    IsExclusive;                                             // 0x0020(0x0000)
		uint32_t                                                   StreamDependency;                                        // 0x0024(0x0000)
		uint8_t                                                    Weight;                                                  // 0x0028(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.Connections.HTTP2.HTTP2RSTStreamFrame
	 * Size -> 0x0000
	 */
	struct HTTP2RSTStreamFrame
	{
	public:
		struct HTTP2FrameHeaderAndPayload                          Header;                                                  // 0x0000(0x0000)
		uint32_t                                                   ErrorCode;                                               // 0x0020(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.Connections.HTTP2.HTTP2PushPromiseFrame
	 * Size -> 0x0000
	 */
	struct HTTP2PushPromiseFrame
	{
	public:
		struct HTTP2FrameHeaderAndPayload                          Header;                                                  // 0x0000(0x0000)
		struct Nullable_byte                                       PadLength;                                               // 0x0020(0x0000)
		uint8_t                                                    ReservedBit;                                             // 0x0022(0x0000)
		uint32_t                                                   PromisedStreamId;                                        // 0x0024(0x0000)
		uint32_t                                                   HeaderBlockFragmentIdx;                                  // 0x0028(0x0000)
		class Byte_Array*                                          HeaderBlockFragment;                                     // 0x0030(0x0000)
		uint32_t                                                   HeaderBlockFragmentLength;                               // 0x0038(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.Connections.HTTP2.HTTP2PingFrame
	 * Size -> 0x0000
	 */
	struct HTTP2PingFrame
	{
	public:
		struct HTTP2FrameHeaderAndPayload                          Header;                                                  // 0x0000(0x0000)
		class Byte_Array*                                          OpaqueData;                                              // 0x0020(0x0000)
		uint8_t                                                    OpaqueDataLength;                                        // 0x0028(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.Connections.HTTP2.HTTP2GoAwayFrame
	 * Size -> 0x0000
	 */
	struct HTTP2GoAwayFrame
	{
	public:
		struct HTTP2FrameHeaderAndPayload                          Header;                                                  // 0x0000(0x0000)
		uint8_t                                                    ReservedBit;                                             // 0x0020(0x0000)
		uint32_t                                                   LastStreamId;                                            // 0x0024(0x0000)
		uint32_t                                                   ErrorCode;                                               // 0x0028(0x0000)
		class Byte_Array*                                          AdditionalDebugData;                                     // 0x0030(0x0000)
		uint32_t                                                   AdditionalDebugDataLength;                               // 0x0038(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.Connections.HTTP2.HTTP2WindowUpdateFrame
	 * Size -> 0x0000
	 */
	struct HTTP2WindowUpdateFrame
	{
	public:
		struct HTTP2FrameHeaderAndPayload                          Header;                                                  // 0x0000(0x0000)
		uint8_t                                                    ReservedBit;                                             // 0x0020(0x0000)
		uint32_t                                                   WindowSizeIncrement;                                     // 0x0024(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.Connections.HTTP2.HTTP2ContinuationFrame
	 * Size -> 0x0000
	 */
	struct HTTP2ContinuationFrame
	{
	public:
		struct HTTP2FrameHeaderAndPayload                          Header;                                                  // 0x0000(0x0000)
		class Byte_Array*                                          HeaderBlockFragment;                                     // 0x0020(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.Connections.HTTP2.HTTP2AltSVCFrame
	 * Size -> 0x0000
	 */
	struct HTTP2AltSVCFrame
	{
	public:
		struct HTTP2FrameHeaderAndPayload                          Header;                                                  // 0x0000(0x0000)
		class Il2CppString*                                        Origin;                                                  // 0x0020(0x0000)
		class Il2CppString*                                        AltSvcFieldValue;                                        // 0x0028(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.Connections.HTTP2.HuffmanEncoder+TableEntry
	 * Size -> 0x0000
	 */
	struct HuffmanEncoder_TableEntry
	{
	public:
		uint32_t                                                   Code;                                                    // 0x0000(0x0000)
		uint8_t                                                    Bits;                                                    // 0x0004(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.Connections.HTTP2.HuffmanEncoder+TreeNode
	 * Size -> 0x0000
	 */
	struct HuffmanEncoder_TreeNode
	{
	public:
		uint16_t                                                   NextZeroIdx;                                             // 0x0000(0x0000)
		uint16_t                                                   NextOneIdx;                                              // 0x0002(0x0000)
		uint16_t                                                   Value;                                                   // 0x0004(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.SignalRCore.CallbackDescriptor
	 * Size -> 0x0000
	 */
	struct CallbackDescriptor_1
	{
	public:
		class Type_Array*                                          ParamTypes;                                              // 0x0000(0x0000)
		class Action_object*                                       Callback;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.SignalRCore.InvocationDefinition
	 * Size -> 0x0000
	 */
	struct InvocationDefinition
	{
	public:
		class Action_Message*                                      callback;                                                // 0x0000(0x0000)
		class Type*                                                returnType;                                              // 0x0008(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.SignalRCore.RetryContext
	 * Size -> 0x0000
	 */
	struct RetryContext
	{
	public:
		uint32_t                                                   PreviousRetryCount;                                      // 0x0000(0x0000)
		struct TimeSpan                                            ElapsedTime;                                             // 0x0008(0x0000)
		class Il2CppString*                                        RetryReason;                                             // 0x0010(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.SignalRCore.Messages.Completion
	 * Size -> 0x0000
	 */
	struct Completion
	{
	public:
		int32_t                                                    type;                                                    // 0x0000(0x0000)
		class Il2CppString*                                        invocationId;                                            // 0x0008(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.SignalRCore.Messages.CompletionWithResult
	 * Size -> 0x0000
	 */
	struct CompletionWithResult
	{
	public:
		int32_t                                                    type;                                                    // 0x0000(0x0000)
		class Il2CppString*                                        invocationId;                                            // 0x0008(0x0000)
		class Il2CppObject*                                        result;                                                  // 0x0010(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.SignalRCore.Messages.CompletionWithError
	 * Size -> 0x0000
	 */
	struct CompletionWithError
	{
	public:
		int32_t                                                    type;                                                    // 0x0000(0x0000)
		class Il2CppString*                                        invocationId;                                            // 0x0008(0x0000)
		class Il2CppString*                                        error;                                                   // 0x0010(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.SignalRCore.Messages.StreamItemMessage
	 * Size -> 0x0000
	 */
	struct StreamItemMessage
	{
	public:
		int32_t                                                    type;                                                    // 0x0000(0x0000)
		class Il2CppString*                                        invocationId;                                            // 0x0008(0x0000)
		class Il2CppObject*                                        item;                                                    // 0x0010(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.SignalRCore.Messages.InvocationMessage
	 * Size -> 0x0000
	 */
	struct InvocationMessage
	{
	public:
		int32_t                                                    type;                                                    // 0x0000(0x0000)
		class Il2CppString*                                        invocationId;                                            // 0x0008(0x0000)
		bool                                                       nonblocking;                                             // 0x0010(0x0000)
		class Il2CppString*                                        target;                                                  // 0x0018(0x0000)
		class Object_Array*                                        arguments;                                               // 0x0020(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.SignalRCore.Messages.UploadInvocationMessage
	 * Size -> 0x0000
	 */
	struct UploadInvocationMessage
	{
	public:
		int32_t                                                    type;                                                    // 0x0000(0x0000)
		class Il2CppString*                                        invocationId;                                            // 0x0008(0x0000)
		bool                                                       nonblocking;                                             // 0x0010(0x0000)
		class Il2CppString*                                        target;                                                  // 0x0018(0x0000)
		class Object_Array*                                        arguments;                                               // 0x0020(0x0000)
		class String_Array*                                        streamIds;                                               // 0x0028(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.SignalRCore.Messages.CancelInvocationMessage
	 * Size -> 0x0000
	 */
	struct CancelInvocationMessage
	{
	public:
		class Il2CppString*                                        invocationId;                                            // 0x0000(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.SignalRCore.Messages.PingMessage
	 * Size -> 0x0000
	 */
	struct PingMessage
	{	};

	/**
	 * Struct BestHTTP.BestHTTP.SignalRCore.Messages.CloseMessage
	 * Size -> 0x0000
	 */
	struct CloseMessage
	{	};

	/**
	 * Struct BestHTTP.BestHTTP.SignalRCore.Messages.CloseWithErrorMessage
	 * Size -> 0x0000
	 */
	struct CloseWithErrorMessage
	{
	public:
		class Il2CppString*                                        error;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.SignalRCore.Messages.Message
	 * Size -> 0x0000
	 */
	struct Message_1
	{
	public:
		int32_t                                                    type;                                                    // 0x0000(0x0000)
		class Il2CppString*                                        invocationId;                                            // 0x0008(0x0000)
		bool                                                       nonblocking;                                             // 0x0010(0x0000)
		class Il2CppString*                                        target;                                                  // 0x0018(0x0000)
		class Object_Array*                                        arguments;                                               // 0x0020(0x0000)
		class String_Array*                                        streamIds;                                               // 0x0028(0x0000)
		class Il2CppObject*                                        item;                                                    // 0x0030(0x0000)
		class Il2CppObject*                                        result;                                                  // 0x0038(0x0000)
		class Il2CppString*                                        error;                                                   // 0x0040(0x0000)
		bool                                                       allowReconnect;                                          // 0x0048(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.SignalR.Messages.ClientMessage
	 * Size -> 0x0000
	 */
	struct ClientMessage
	{
	public:
		class Hub*                                                 Hub;                                                     // 0x0000(0x0000)
		class Il2CppString*                                        Method;                                                  // 0x0008(0x0000)
		class Object_Array*                                        Args;                                                    // 0x0010(0x0000)
		uint64_t                                                   CallIdx;                                                 // 0x0018(0x0000)
		class OnMethodResultDelegate*                              ResultCallback;                                          // 0x0020(0x0000)
		class OnMethodFailedDelegate*                              ResultErrorCallback;                                     // 0x0028(0x0000)
		class OnMethodProgressDelegate*                            ProgressCallback;                                        // 0x0030(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<HubConnection>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_HubConnection
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.Examples.AsyncTestHubSample+<OnDestroy>d__9
	 * Size -> 0x0000
	 */
	struct AsyncTestHubSample__OnDestroy_d__9
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncVoidMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class AsyncTestHubSample*                                  _4__this;                                                // 0x0028(0x0000)
		struct TaskAwaiter_HubConnection                           u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<object>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_object
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<int>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_int
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<Nullable<int>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_Nullable_int
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<Person>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_Person
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.Examples.AsyncTestHubSample+<OnConnectButton>d__10
	 * Size -> 0x0000
	 */
	struct AsyncTestHubSample__OnConnectButton_d__10
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncVoidMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class AsyncTestHubSample*                                  _4__this;                                                // 0x0028(0x0000)
		struct TaskAwaiter_HubConnection                           u__1;                                                    // 0x0030(0x0000)
		struct TaskAwaiter_object                                  u__2;                                                    // 0x0038(0x0000)
		struct TaskAwaiter_string                                  u__3;                                                    // 0x0040(0x0000)
		struct TaskAwaiter_int                                     u__4;                                                    // 0x0048(0x0000)
		struct TaskAwaiter_Nullable_int                            u__5;                                                    // 0x0050(0x0000)
		struct TaskAwaiter_Person                                  u__6;                                                    // 0x0058(0x0000)
		struct TaskAwaiter_int                                     u__7;                                                    // 0x0060(0x0000)
	};

	/**
	 * Struct BestHTTP.BestHTTP.Examples.AsyncTestHubSample+<OnCloseButton>d__11
	 * Size -> 0x0000
	 */
	struct AsyncTestHubSample__OnCloseButton_d__11
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncVoidMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class AsyncTestHubSample*                                  _4__this;                                                // 0x0028(0x0000)
		struct TaskAwaiter_HubConnection                           u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=3
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_3
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=5
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_5
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=6
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_6_1
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=12
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_12_1
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=16
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_16_1
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=17
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_17
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=19
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_19
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=20
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_20_1
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=24
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_24_1
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=28
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_28_1
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=30
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_30_1
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=32
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_32_1
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=36
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_36_1
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=40
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_40
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=44
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_44
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=48
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_48
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=56
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_56
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=60
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_60_1
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=64
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_64_1
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=68
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_68
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=72
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_72
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=76
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_76
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=80
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_80
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=96
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_96
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=112
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_112
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=116
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_116
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=120
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_120
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=124
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_124
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=128
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_128
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=160
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_160
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=192
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_192
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=256
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_256
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=384
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_384
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=404
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_404
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=511
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_511
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=512
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_512
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=640
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_640
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=1024
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_1024
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=1152
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_1152
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=2048
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_2048
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=4096
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_4096
	{	};

	/**
	 * Struct BestHTTP.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=6144
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_6144
	{	};

	/**
	 * Struct mscorlib.Interop.Kernel32+SYSTEMTIME
	 * Size -> 0x0000
	 */
	struct Interop_Kernel32_SYSTEMTIME
	{
	public:
		uint16_t                                                   Year;                                                    // 0x0000(0x0000)
		uint16_t                                                   Month;                                                   // 0x0002(0x0000)
		uint16_t                                                   DayOfWeek;                                               // 0x0004(0x0000)
		uint16_t                                                   Day;                                                     // 0x0006(0x0000)
		uint16_t                                                   Hour;                                                    // 0x0008(0x0000)
		uint16_t                                                   Minute;                                                  // 0x000A(0x0000)
		uint16_t                                                   Second;                                                  // 0x000C(0x0000)
		uint16_t                                                   Milliseconds;                                            // 0x000E(0x0000)
	};

	/**
	 * Struct mscorlib.Interop.Kernel32.TIME_ZONE_INFORMATION+<StandardName>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct Interop_Kernel32_TIME_ZONE_INFORMATION__StandardName_e__FixedBuffer
	{
	public:
		uint16_t                                                   FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.Interop.Kernel32.TIME_ZONE_INFORMATION+<DaylightName>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct Interop_Kernel32_TIME_ZONE_INFORMATION__DaylightName_e__FixedBuffer
	{
	public:
		uint16_t                                                   FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.Interop.Kernel32.TIME_DYNAMIC_ZONE_INFORMATION+<StandardName>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct Interop_Kernel32_TIME_DYNAMIC_ZONE_INFORMATION__StandardName_e__FixedBuffer
	{
	public:
		uint16_t                                                   FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.Interop.Kernel32.TIME_DYNAMIC_ZONE_INFORMATION+<DaylightName>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct Interop_Kernel32_TIME_DYNAMIC_ZONE_INFORMATION__DaylightName_e__FixedBuffer
	{
	public:
		uint16_t                                                   FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.Interop.Kernel32.TIME_DYNAMIC_ZONE_INFORMATION+<TimeZoneKeyName>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct Interop_Kernel32_TIME_DYNAMIC_ZONE_INFORMATION__TimeZoneKeyName_e__FixedBuffer
	{
	public:
		uint16_t                                                   FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.Interop.Kernel32+TIME_DYNAMIC_ZONE_INFORMATION
	 * Size -> 0x0000
	 */
	struct Interop_Kernel32_TIME_DYNAMIC_ZONE_INFORMATION
	{
	public:
		int32_t                                                    Bias;                                                    // 0x0000(0x0000)
		struct Interop_Kernel32_TIME_DYNAMIC_ZONE_INFORMATION__StandardName_e__FixedBuffer StandardName;                                            // 0x0004(0x0000)
		struct Interop_Kernel32_SYSTEMTIME                         StandardDate;                                            // 0x0044(0x0000)
		int32_t                                                    StandardBias;                                            // 0x0054(0x0000)
		struct Interop_Kernel32_TIME_DYNAMIC_ZONE_INFORMATION__DaylightName_e__FixedBuffer DaylightName;                                            // 0x0058(0x0000)
		struct Interop_Kernel32_SYSTEMTIME                         DaylightDate;                                            // 0x0098(0x0000)
		int32_t                                                    DaylightBias;                                            // 0x00A8(0x0000)
		struct Interop_Kernel32_TIME_DYNAMIC_ZONE_INFORMATION__TimeZoneKeyName_e__FixedBuffer TimeZoneKeyName;                                         // 0x00AC(0x0000)
		uint8_t                                                    DynamicDaylightTimeDisabled;                             // 0x01AC(0x0000)
	};

	/**
	 * Struct mscorlib.Interop.Kernel32+TIME_ZONE_INFORMATION
	 * Size -> 0x0000
	 */
	struct Interop_Kernel32_TIME_ZONE_INFORMATION
	{
	public:
		int32_t                                                    Bias;                                                    // 0x0000(0x0000)
		struct Interop_Kernel32_TIME_ZONE_INFORMATION__StandardName_e__FixedBuffer StandardName;                                            // 0x0004(0x0000)
		struct Interop_Kernel32_SYSTEMTIME                         StandardDate;                                            // 0x0044(0x0000)
		int32_t                                                    StandardBias;                                            // 0x0054(0x0000)
		struct Interop_Kernel32_TIME_ZONE_INFORMATION__DaylightName_e__FixedBuffer DaylightName;                                            // 0x0058(0x0000)
		struct Interop_Kernel32_SYSTEMTIME                         DaylightDate;                                            // 0x0098(0x0000)
		int32_t                                                    DaylightBias;                                            // 0x00A8(0x0000)
	};

	/**
	 * Struct mscorlib.Interop.Kernel32+REG_TZI_FORMAT
	 * Size -> 0x0000
	 */
	struct Interop_Kernel32_REG_TZI_FORMAT
	{
	public:
		int32_t                                                    Bias;                                                    // 0x0000(0x0000)
		int32_t                                                    StandardBias;                                            // 0x0004(0x0000)
		int32_t                                                    DaylightBias;                                            // 0x0008(0x0000)
		struct Interop_Kernel32_SYSTEMTIME                         StandardDate;                                            // 0x000C(0x0000)
		struct Interop_Kernel32_SYSTEMTIME                         DaylightDate;                                            // 0x001C(0x0000)
	};

	/**
	 * Struct mscorlib.System.DateTimeOffset
	 * Size -> 0x0000
	 */
	struct DateTimeOffset
	{
	public:
		struct DateTime                                            dateTime;                                                // 0x0000(0x0000)
		int16_t                                                    offsetMinutes;                                           // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.Interop.Kernel32+FILE_TIME
	 * Size -> 0x0000
	 */
	struct Interop_Kernel32_FILE_TIME
	{
	public:
		uint32_t                                                   dwLowDateTime;                                           // 0x0000(0x0000)
		uint32_t                                                   dwHighDateTime;                                          // 0x0004(0x0000)
	};

	/**
	 * Struct mscorlib.Interop.Kernel32+SECURITY_ATTRIBUTES
	 * Size -> 0x0000
	 */
	struct Interop_Kernel32_SECURITY_ATTRIBUTES
	{
	public:
		uint32_t                                                   nLength;                                                 // 0x0000(0x0000)
		intptr_t                                                   lpSecurityDescriptor;                                    // 0x0008(0x0000)
		int32_t                                                    bInheritHandle;                                          // 0x0010(0x0000)
	};

	/**
	 * Struct mscorlib.Interop.Kernel32.WIN32_FIND_DATA+<_cFileName>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct Interop_Kernel32_WIN32_FIND_DATA___cFileName_e__FixedBuffer
	{
	public:
		uint16_t                                                   FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.Interop.Kernel32.WIN32_FIND_DATA+<_cAlternateFileName>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct Interop_Kernel32_WIN32_FIND_DATA___cAlternateFileName_e__FixedBuffer
	{
	public:
		uint16_t                                                   FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.Interop.Kernel32+WIN32_FIND_DATA
	 * Size -> 0x0000
	 */
	struct Interop_Kernel32_WIN32_FIND_DATA
	{
	public:
		uint32_t                                                   dwFileAttributes;                                        // 0x0000(0x0000)
		struct Interop_Kernel32_FILE_TIME                          ftCreationTime;                                          // 0x0004(0x0000)
		struct Interop_Kernel32_FILE_TIME                          ftLastAccessTime;                                        // 0x000C(0x0000)
		struct Interop_Kernel32_FILE_TIME                          ftLastWriteTime;                                         // 0x0014(0x0000)
		uint32_t                                                   nFileSizeHigh;                                           // 0x001C(0x0000)
		uint32_t                                                   nFileSizeLow;                                            // 0x0020(0x0000)
		uint32_t                                                   dwReserved0;                                             // 0x0024(0x0000)
		uint32_t                                                   dwReserved1;                                             // 0x0028(0x0000)
		struct Interop_Kernel32_WIN32_FIND_DATA___cFileName_e__FixedBuffer cFileName;                                               // 0x002C(0x0000)
		struct Interop_Kernel32_WIN32_FIND_DATA___cAlternateFileName_e__FixedBuffer cAlternateFileName;                                      // 0x0234(0x0000)
	};

	/**
	 * Struct mscorlib.Interop.Kernel32+WIN32_FILE_ATTRIBUTE_DATA
	 * Size -> 0x0000
	 */
	struct Interop_Kernel32_WIN32_FILE_ATTRIBUTE_DATA
	{
	public:
		int32_t                                                    dwFileAttributes;                                        // 0x0000(0x0000)
		struct Interop_Kernel32_FILE_TIME                          ftCreationTime;                                          // 0x0004(0x0000)
		struct Interop_Kernel32_FILE_TIME                          ftLastAccessTime;                                        // 0x000C(0x0000)
		struct Interop_Kernel32_FILE_TIME                          ftLastWriteTime;                                         // 0x0014(0x0000)
		uint32_t                                                   nFileSizeHigh;                                           // 0x001C(0x0000)
		uint32_t                                                   nFileSizeLow;                                            // 0x0020(0x0000)
	};

	/**
	 * Struct mscorlib.Interop+LongFileTime
	 * Size -> 0x0000
	 */
	struct Interop_LongFileTime
	{
	public:
		int64_t                                                    TicksSince1601;                                          // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.Interop+UNICODE_STRING
	 * Size -> 0x0000
	 */
	struct Interop_UNICODE_STRING
	{
	public:
		uint16_t                                                   Length;                                                  // 0x0000(0x0000)
		uint16_t                                                   MaximumLength;                                           // 0x0002(0x0000)
		intptr_t                                                   Buffer;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.Interop.NtDll+FILE_FULL_DIR_INFORMATION
	 * Size -> 0x0000
	 */
	struct Interop_NtDll_FILE_FULL_DIR_INFORMATION
	{
	public:
		uint32_t                                                   NextEntryOffset;                                         // 0x0000(0x0000)
		uint32_t                                                   FileIndex;                                               // 0x0004(0x0000)
		struct Interop_LongFileTime                                CreationTime;                                            // 0x0008(0x0000)
		struct Interop_LongFileTime                                LastAccessTime;                                          // 0x0010(0x0000)
		struct Interop_LongFileTime                                LastWriteTime;                                           // 0x0018(0x0000)
		struct Interop_LongFileTime                                ChangeTime;                                              // 0x0020(0x0000)
		int64_t                                                    EndOfFile;                                               // 0x0028(0x0000)
		int64_t                                                    AllocationSize;                                          // 0x0030(0x0000)
		int32_t                                                    FileAttributes;                                          // 0x0038(0x0000)
		uint32_t                                                   FileNameLength;                                          // 0x003C(0x0000)
		uint32_t                                                   EaSize;                                                  // 0x0040(0x0000)
		uint16_t                                                   fileName;                                                // 0x0044(0x0000)
	};

	/**
	 * Struct mscorlib.Interop.NtDll.IO_STATUS_BLOCK+IO_STATUS
	 * Size -> 0x0000
	 */
	struct Interop_NtDll_IO_STATUS_BLOCK_IO_STATUS
	{
	public:
		uint32_t                                                   Status;                                                  // 0x0000(0x0000)
		intptr_t                                                   Pointer;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.Interop.NtDll+IO_STATUS_BLOCK
	 * Size -> 0x0000
	 */
	struct Interop_NtDll_IO_STATUS_BLOCK
	{
	public:
		struct Interop_NtDll_IO_STATUS_BLOCK_IO_STATUS             Status;                                                  // 0x0000(0x0000)
		intptr_t                                                   Information;                                             // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.Interop.NtDll+OBJECT_ATTRIBUTES
	 * Size -> 0x0000
	 */
	struct Interop_NtDll_OBJECT_ATTRIBUTES
	{
	public:
		uint32_t                                                   Length;                                                  // 0x0000(0x0000)
		intptr_t                                                   RootDirectory;                                           // 0x0008(0x0000)
		struct Interop_UNICODE_STRING*                             ObjectName;                                              // 0x0010(0x0000)
		uint32_t                                                   Attributes;                                              // 0x0018(0x0000)
		void*                                                      SecurityDescriptor;                                      // 0x0020(0x0000)
		void*                                                      SecurityQualityOfService;                                // 0x0028(0x0000)
	};

	/**
	 * Struct mscorlib.System.RuntimeTypeHandle
	 * Size -> 0x0000
	 */
	struct RuntimeTypeHandle
	{
	public:
		intptr_t                                                   value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.Mono.RuntimeClassHandle
	 * Size -> 0x0000
	 */
	struct RuntimeClassHandle
	{
	public:
		struct RuntimeStructs_MonoClass*                           value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.Mono.RuntimeRemoteClassHandle
	 * Size -> 0x0000
	 */
	struct RuntimeRemoteClassHandle
	{
	public:
		struct RuntimeStructs_RemoteClass*                         value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.Mono.RuntimeGenericParamInfoHandle
	 * Size -> 0x0000
	 */
	struct RuntimeGenericParamInfoHandle
	{
	public:
		struct RuntimeStructs_GenericParamInfo*                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.Mono.RuntimeEventHandle
	 * Size -> 0x0000
	 */
	struct RuntimeEventHandle
	{
	public:
		intptr_t                                                   value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.Mono.RuntimePropertyHandle
	 * Size -> 0x0000
	 */
	struct RuntimePropertyHandle
	{
	public:
		intptr_t                                                   value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.Mono.RuntimeGPtrArrayHandle
	 * Size -> 0x0000
	 */
	struct RuntimeGPtrArrayHandle
	{
	public:
		struct RuntimeStructs_GPtrArray*                           value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.Mono.RuntimeStructs+RemoteClass
	 * Size -> 0x0000
	 */
	struct RuntimeStructs_RemoteClass
	{
	public:
		intptr_t                                                   default_vtable;                                          // 0x0000(0x0000)
		intptr_t                                                   xdomain_vtable;                                          // 0x0008(0x0000)
		struct RuntimeStructs_MonoClass*                           proxy_class;                                             // 0x0010(0x0000)
		intptr_t                                                   proxy_class_name;                                        // 0x0018(0x0000)
		uint32_t                                                   interface_count;                                         // 0x0020(0x0000)
	};

	/**
	 * Struct mscorlib.Mono.RuntimeStructs+MonoClass
	 * Size -> 0x0000
	 */
	struct RuntimeStructs_MonoClass
	{	};

	/**
	 * Struct mscorlib.Mono.RuntimeStructs+GenericParamInfo
	 * Size -> 0x0000
	 */
	struct RuntimeStructs_GenericParamInfo
	{
	public:
		struct RuntimeStructs_MonoClass*                           pklass;                                                  // 0x0000(0x0000)
		intptr_t                                                   name;                                                    // 0x0008(0x0000)
		uint16_t                                                   flags;                                                   // 0x0010(0x0000)
		uint32_t                                                   token;                                                   // 0x0014(0x0000)
		struct RuntimeStructs_MonoClass**                          constraints;                                             // 0x0018(0x0000)
	};

	/**
	 * Struct mscorlib.Mono.RuntimeStructs+GPtrArray
	 * Size -> 0x0000
	 */
	struct RuntimeStructs_GPtrArray
	{
	public:
		intptr_t*                                                  data;                                                    // 0x0000(0x0000)
		int32_t                                                    len;                                                     // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.Mono.MonoAssemblyName+<public_key_token>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct MonoAssemblyName__public_key_token_e__FixedBuffer
	{
	public:
		uint8_t                                                    FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.Mono.MonoAssemblyName
	 * Size -> 0x0000
	 */
	struct MonoAssemblyName
	{
	public:
		intptr_t                                                   name;                                                    // 0x0000(0x0000)
		intptr_t                                                   culture;                                                 // 0x0008(0x0000)
		intptr_t                                                   hash_value;                                              // 0x0010(0x0000)
		intptr_t                                                   public_key;                                              // 0x0018(0x0000)
		struct MonoAssemblyName__public_key_token_e__FixedBuffer   public_key_token;                                        // 0x0020(0x0000)
		uint32_t                                                   hash_alg;                                                // 0x0034(0x0000)
		uint32_t                                                   hash_len;                                                // 0x0038(0x0000)
		uint32_t                                                   flags;                                                   // 0x003C(0x0000)
		uint16_t                                                   major;                                                   // 0x0040(0x0000)
		uint16_t                                                   minor;                                                   // 0x0042(0x0000)
		uint16_t                                                   build;                                                   // 0x0044(0x0000)
		uint16_t                                                   revision;                                                // 0x0046(0x0000)
		uint16_t                                                   arch;                                                    // 0x0048(0x0000)
	};

	/**
	 * Struct mscorlib.Mono.ValueTuple
	 * Size -> 0x0000
	 */
	struct ValueTuple
	{	};

	/**
	 * Struct mscorlib.Mono.ValueTuple<T1>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ValueTuple_T1
	{
	public:
		class Il2CppObject*                                        Item1;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.Mono.ValueTuple<T1, T2>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ValueTuple_T1__T2
	{
	public:
		class Il2CppObject*                                        Item1;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        Item2;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.Mono.ValueTuple<T1, T2, T3>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ValueTuple_T1__T2__T3
	{
	public:
		class Il2CppObject*                                        Item1;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        Item2;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        Item3;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.Mono.ValueTuple<T1, T2, T3, T4>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ValueTuple_T1__T2__T3__T4
	{
	public:
		class Il2CppObject*                                        Item1;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        Item2;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        Item3;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        Item4;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.Mono.ValueTuple<T1, T2, T3, T4, T5>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ValueTuple_T1__T2__T3__T4__T5
	{
	public:
		class Il2CppObject*                                        Item1;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        Item2;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        Item3;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        Item4;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        Item5;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.Mono.SafeGPtrArrayHandle
	 * Size -> 0x0000
	 */
	struct SafeGPtrArrayHandle
	{
	public:
		struct RuntimeGPtrArrayHandle                              handle;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.Mono.SafeStringMarshal
	 * Size -> 0x0000
	 */
	struct SafeStringMarshal
	{
	public:
		class Il2CppString*                                        str;                                                     // 0x0000(0x0000)
		intptr_t                                                   marshaled_string;                                        // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.Mono.Globalization.Unicode.CodePointIndexer+TableRange
	 * Size -> 0x0000
	 */
	struct CodePointIndexer_TableRange
	{
	public:
		int32_t                                                    Start;                                                   // 0x0000(0x0000)
		int32_t                                                    End;                                                     // 0x0004(0x0000)
		int32_t                                                    Count;                                                   // 0x0008(0x0000)
		int32_t                                                    IndexStart;                                              // 0x000C(0x0000)
		int32_t                                                    IndexEnd;                                                // 0x0010(0x0000)
	};

	/**
	 * Struct mscorlib.Mono.Globalization.Unicode.SimpleCollator+Context
	 * Size -> 0x0000
	 */
	struct SimpleCollator_Context
	{
	public:
		int32_t                                                    Option;                                                  // 0x0000(0x0000)
		uint8_t*                                                   NeverMatchFlags;                                         // 0x0008(0x0000)
		uint8_t*                                                   AlwaysMatchFlags;                                        // 0x0010(0x0000)
		uint8_t*                                                   Buffer1;                                                 // 0x0018(0x0000)
		uint8_t*                                                   Buffer2;                                                 // 0x0020(0x0000)
		int32_t                                                    PrevCode;                                                // 0x0028(0x0000)
		uint8_t*                                                   PrevSortKey;                                             // 0x0030(0x0000)
	};

	/**
	 * Struct mscorlib.Mono.Globalization.Unicode.SimpleCollator+PreviousInfo
	 * Size -> 0x0000
	 */
	struct SimpleCollator_PreviousInfo
	{
	public:
		int32_t                                                    Code;                                                    // 0x0000(0x0000)
		uint8_t*                                                   SortKey;                                                 // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.Mono.Globalization.Unicode.SimpleCollator+Escape
	 * Size -> 0x0000
	 */
	struct SimpleCollator_Escape
	{
	public:
		class Il2CppString*                                        Source;                                                  // 0x0000(0x0000)
		int32_t                                                    Index;                                                   // 0x0008(0x0000)
		int32_t                                                    Start;                                                   // 0x000C(0x0000)
		int32_t                                                    End;                                                     // 0x0010(0x0000)
		int32_t                                                    Optional;                                                // 0x0014(0x0000)
	};

	/**
	 * Struct mscorlib.string+ProbabilisticMap
	 * Size -> 0x0000
	 */
	struct string_ProbabilisticMap
	{	};

	/**
	 * Struct mscorlib.System.TimeZoneInfo+DYNAMIC_TIME_ZONE_INFORMATION
	 * Size -> 0x0000
	 */
	struct TimeZoneInfo_DYNAMIC_TIME_ZONE_INFORMATION
	{
	public:
		struct Interop_Kernel32_TIME_ZONE_INFORMATION              TZI;                                                     // 0x0000(0x0000)
		class Il2CppString*                                        TimeZoneKeyName;                                         // 0x00B0(0x0000)
		uint8_t                                                    DynamicDaylightTimeDisabled;                             // 0x00B8(0x0000)
	};

	/**
	 * Struct mscorlib.System.TimeZoneInfo+TransitionTime
	 * Size -> 0x0000
	 */
	struct TimeZoneInfo_TransitionTime
	{
	public:
		struct DateTime                                            timeOfDay;                                               // 0x0000(0x0000)
		uint8_t                                                    month;                                                   // 0x0008(0x0000)
		uint8_t                                                    week;                                                    // 0x0009(0x0000)
		uint8_t                                                    day;                                                     // 0x000A(0x0000)
		int32_t                                                    dayOfWeek;                                               // 0x000C(0x0000)
		bool                                                       isFixedDateRule;                                         // 0x0010(0x0000)
	};

	/**
	 * Struct mscorlib.System.ArraySegment+Enumerator<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ArraySegment_Enumerator_T
	{
	public:
		class UObject_Array*                                       array;                                                   // 0x0000(0x0000)
		int32_t                                                    start;                                                   // 0x0000(0x0000)
		int32_t                                                    end;                                                     // 0x0000(0x0000)
		int32_t                                                    current;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Boolean
	 * Size -> 0x0000
	 */
	struct Boolean
	{
	public:
		bool                                                       m_value;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Byte
	 * Size -> 0x0000
	 */
	struct Byte
	{
	public:
		uint8_t                                                    m_value;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Char
	 * Size -> 0x0000
	 */
	struct Char
	{
	public:
		uint16_t                                                   m_value;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Double
	 * Size -> 0x0000
	 */
	struct Double
	{
	public:
		double                                                     m_value;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.DTSubString
	 * Size -> 0x0000
	 */
	struct DTSubString
	{
	public:
		struct ReadOnlySpan_char                                   s;                                                       // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0010(0x0000)
		int32_t                                                    length;                                                  // 0x0014(0x0000)
		int32_t                                                    type;                                                    // 0x0018(0x0000)
		int32_t                                                    value;                                                   // 0x001C(0x0000)
	};

	/**
	 * Struct mscorlib.System.__DTString
	 * Size -> 0x0000
	 */
	struct DTString
	{
	public:
		struct ReadOnlySpan_char                                   Value;                                                   // 0x0000(0x0000)
		int32_t                                                    Index;                                                   // 0x0010(0x0000)
		uint16_t                                                   m_current;                                               // 0x0014(0x0000)
		class CompareInfo*                                         m_info;                                                  // 0x0018(0x0000)
		bool                                                       m_checkDigitToken;                                       // 0x0020(0x0000)
	};

	/**
	 * Struct mscorlib.System.DateTimeToken
	 * Size -> 0x0000
	 */
	struct DateTimeToken
	{
	public:
		int32_t                                                    dtt;                                                     // 0x0000(0x0000)
		int32_t                                                    suffix;                                                  // 0x0004(0x0000)
		int32_t                                                    num;                                                     // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.DateTimeRawInfo
	 * Size -> 0x0000
	 */
	struct DateTimeRawInfo
	{
	public:
		int32_t*                                                   num;                                                     // 0x0000(0x0000)
		int32_t                                                    numCount;                                                // 0x0008(0x0000)
		int32_t                                                    month;                                                   // 0x000C(0x0000)
		int32_t                                                    year;                                                    // 0x0010(0x0000)
		int32_t                                                    dayOfWeek;                                               // 0x0014(0x0000)
		int32_t                                                    era;                                                     // 0x0018(0x0000)
		int32_t                                                    timeMark;                                                // 0x001C(0x0000)
		double                                                     fraction;                                                // 0x0020(0x0000)
		bool                                                       hasSameDateAndTimeSeparators;                            // 0x0028(0x0000)
	};

	/**
	 * Struct mscorlib.System.DateTimeResult
	 * Size -> 0x0000
	 */
	struct DateTimeResult
	{
	public:
		int32_t                                                    Year;                                                    // 0x0000(0x0000)
		int32_t                                                    Month;                                                   // 0x0004(0x0000)
		int32_t                                                    Day;                                                     // 0x0008(0x0000)
		int32_t                                                    Hour;                                                    // 0x000C(0x0000)
		int32_t                                                    Minute;                                                  // 0x0010(0x0000)
		int32_t                                                    Second;                                                  // 0x0014(0x0000)
		double                                                     fraction;                                                // 0x0018(0x0000)
		int32_t                                                    era;                                                     // 0x0020(0x0000)
		int32_t                                                    flags;                                                   // 0x0024(0x0000)
		struct TimeSpan                                            timeZoneOffset;                                          // 0x0028(0x0000)
		class Calendar*                                            calendar;                                                // 0x0030(0x0000)
		struct DateTime                                            parsedDate;                                              // 0x0038(0x0000)
		int32_t                                                    failure;                                                 // 0x0040(0x0000)
		class Il2CppString*                                        failureMessageID;                                        // 0x0048(0x0000)
		class Il2CppObject*                                        failureMessageFormatArgument;                            // 0x0050(0x0000)
		class Il2CppString*                                        failureArgumentName;                                     // 0x0058(0x0000)
		struct ReadOnlySpan_char                                   originalDateTimeString;                                  // 0x0060(0x0000)
		struct ReadOnlySpan_char                                   failedFormatSpecifier;                                   // 0x0070(0x0000)
	};

	/**
	 * Struct mscorlib.System.ParsingInfo
	 * Size -> 0x0000
	 */
	struct ParsingInfo
	{
	public:
		class Calendar*                                            calendar;                                                // 0x0000(0x0000)
		int32_t                                                    dayOfWeek;                                               // 0x0008(0x0000)
		int32_t                                                    timeMark;                                                // 0x000C(0x0000)
		bool                                                       fUseHour12;                                              // 0x0010(0x0000)
		bool                                                       fUseTwoDigitYear;                                        // 0x0011(0x0000)
		bool                                                       fAllowInnerWhite;                                        // 0x0012(0x0000)
		bool                                                       fAllowTrailingWhite;                                     // 0x0013(0x0000)
		bool                                                       fCustomNumberParser;                                     // 0x0014(0x0000)
		class DateTimeParse_MatchNumberDelegate*                   parseNumberDelegate;                                     // 0x0018(0x0000)
	};

	/**
	 * Struct mscorlib.System.Guid+GuidResult
	 * Size -> 0x0000
	 */
	struct Guid_GuidResult
	{
	public:
		struct Guid                                                parsedGuid;                                              // 0x0000(0x0000)
		int32_t                                                    throwStyle;                                              // 0x0010(0x0000)
		int32_t                                                    failure;                                                 // 0x0014(0x0000)
		class Il2CppString*                                        failureMessageID;                                        // 0x0018(0x0000)
		class Il2CppObject*                                        failureMessageFormatArgument;                            // 0x0020(0x0000)
		class Il2CppString*                                        failureArgumentName;                                     // 0x0028(0x0000)
		class Exception*                                           innerException;                                          // 0x0030(0x0000)
	};

	/**
	 * Struct mscorlib.System.Int16
	 * Size -> 0x0000
	 */
	struct Int16
	{
	public:
		int16_t                                                    m_value;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Int32
	 * Size -> 0x0000
	 */
	struct Int32
	{
	public:
		int32_t                                                    m_value;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Int64
	 * Size -> 0x0000
	 */
	struct Int64
	{
	public:
		int64_t                                                    m_value;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ReadOnlyMemory<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ReadOnlyMemory_T
	{
	public:
		class Il2CppObject*                                        object;                                                  // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    length;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.InteropServices.GCHandle
	 * Size -> 0x0000
	 */
	struct GCHandle
	{
	public:
		intptr_t                                                   handle;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Buffers.MemoryHandle
	 * Size -> 0x0000
	 */
	struct MemoryHandle
	{
	public:
		void*                                                      pointer;                                                 // 0x0000(0x0000)
		struct GCHandle                                            handle;                                                  // 0x0008(0x0000)
		class IPinnable*                                           pinnable;                                                // 0x0010(0x0000)
	};

	/**
	 * Struct mscorlib.System.Memory<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct Memory_T
	{
	public:
		class Il2CppObject*                                        object;                                                  // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    length;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Number.NumberBuffer+DigitsAndNullTerminator
	 * Size -> 0x0000
	 */
	struct Number_NumberBuffer_DigitsAndNullTerminator
	{	};

	/**
	 * Struct mscorlib.System.Number+NumberBuffer
	 * Size -> 0x0000
	 */
	struct Number_NumberBuffer
	{
	public:
		int32_t                                                    precision;                                               // 0x0000(0x0000)
		int32_t                                                    scale;                                                   // 0x0004(0x0000)
		int32_t                                                    sign;                                                    // 0x0008(0x0000)
		struct Number_NumberBuffer_DigitsAndNullTerminator         digits;                                                  // 0x000C(0x0000)
		uint16_t*                                                  allDigits;                                               // 0x0072(0x0000)
	};

	/**
	 * Struct mscorlib.System.ParamsArray
	 * Size -> 0x0000
	 */
	struct ParamsArray
	{
	public:
		class Il2CppObject*                                        arg0;                                                    // 0x0000(0x0000)
		class Il2CppObject*                                        arg1;                                                    // 0x0008(0x0000)
		class Il2CppObject*                                        arg2;                                                    // 0x0010(0x0000)
		class Object_Array*                                        args;                                                    // 0x0018(0x0000)
	};

	/**
	 * Struct mscorlib.System.SByte
	 * Size -> 0x0000
	 */
	struct SByte
	{
	public:
		int8_t                                                     m_value;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Single
	 * Size -> 0x0000
	 */
	struct Single
	{
	public:
		float                                                      m_value;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.UInt16
	 * Size -> 0x0000
	 */
	struct UInt16
	{
	public:
		uint16_t                                                   m_value;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.UInt32
	 * Size -> 0x0000
	 */
	struct UInt32
	{
	public:
		uint32_t                                                   m_value;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.UInt64
	 * Size -> 0x0000
	 */
	struct UInt64
	{
	public:
		uint64_t                                                   m_value;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple
	 * Size -> 0x0000
	 */
	struct ValueTuple_1
	{	};

	/**
	 * Struct mscorlib.System.ValueTuple<T1>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ValueTuple_T1_1
	{
	public:
		class Il2CppObject*                                        Item1;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple<T1, T2>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ValueTuple_T1__T2_1
	{
	public:
		class Il2CppObject*                                        Item1;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        Item2;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple<T1, T2, T3>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ValueTuple_T1__T2__T3_1
	{
	public:
		class Il2CppObject*                                        Item1;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        Item2;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        Item3;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple<T1, T2, T3, T4>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ValueTuple_T1__T2__T3__T4_1
	{
	public:
		class Il2CppObject*                                        Item1;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        Item2;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        Item3;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        Item4;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple<T1, T2, T3, T4, T5>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ValueTuple_T1__T2__T3__T4__T5_1
	{
	public:
		class Il2CppObject*                                        Item1;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        Item2;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        Item3;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        Item4;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        Item5;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple<T1, T2, T3, T4, T5, T6, T7, TRest>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ValueTuple_T1__T2__T3__T4__T5__T6__T7__TRest
	{
	public:
		class Il2CppObject*                                        Item1;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        Item2;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        Item3;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        Item4;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        Item5;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        Item6;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        Item7;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        Rest;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Void
	 * Size -> 0x0000
	 */
	struct Void
	{	};

	/**
	 * Struct mscorlib.System.ConsoleKeyInfo
	 * Size -> 0x0000
	 */
	struct ConsoleKeyInfo
	{
	public:
		uint16_t                                                   keyChar;                                                 // 0x0000(0x0000)
		int32_t                                                    key;                                                     // 0x0004(0x0000)
		int32_t                                                    mods;                                                    // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.Array+InternalEnumerator<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct Array_InternalEnumerator_T
	{
	public:
		class Array*                                               array;                                                   // 0x0000(0x0000)
		int32_t                                                    idx;                                                     // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Array+SorterObjectArray
	 * Size -> 0x0000
	 */
	struct Array_SorterObjectArray
	{
	public:
		class Object_Array*                                        keys;                                                    // 0x0000(0x0000)
		class Object_Array*                                        items;                                                   // 0x0008(0x0000)
		class IComparer*                                           comparer;                                                // 0x0010(0x0000)
	};

	/**
	 * Struct mscorlib.System.Array+SorterGenericArray
	 * Size -> 0x0000
	 */
	struct Array_SorterGenericArray
	{
	public:
		class Array*                                               keys;                                                    // 0x0000(0x0000)
		class Array*                                               items;                                                   // 0x0008(0x0000)
		class IComparer*                                           comparer;                                                // 0x0010(0x0000)
	};

	/**
	 * Struct mscorlib.System.Enum+EnumResult
	 * Size -> 0x0000
	 */
	struct Enum_EnumResult
	{
	public:
		class Il2CppObject*                                        parsedEnum;                                              // 0x0000(0x0000)
		bool                                                       canThrow;                                                // 0x0008(0x0000)
		int32_t                                                    m_failure;                                               // 0x000C(0x0000)
		class Il2CppString*                                        m_failureMessageID;                                      // 0x0010(0x0000)
		class Il2CppString*                                        m_failureParameter;                                      // 0x0018(0x0000)
		class Il2CppObject*                                        m_failureMessageFormatArgument;                          // 0x0020(0x0000)
		class Exception*                                           m_innerException;                                        // 0x0028(0x0000)
	};

	/**
	 * Struct mscorlib.System.RuntimeType+ListBuilder<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct RuntimeType_ListBuilder_T
	{
	public:
		class UObject_Array*                                       items;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        item;                                                    // 0x0000(0x0000)
		int32_t                                                    count;                                                   // 0x0000(0x0000)
		int32_t                                                    capacity;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.TypedReference
	 * Size -> 0x0000
	 */
	struct TypedReference
	{
	public:
		struct RuntimeTypeHandle                                   type;                                                    // 0x0000(0x0000)
		intptr_t                                                   Value;                                                   // 0x0008(0x0000)
		intptr_t                                                   Type;                                                    // 0x0010(0x0000)
	};

	/**
	 * Struct mscorlib.System.ArgIterator
	 * Size -> 0x0000
	 */
	struct ArgIterator
	{
	public:
		intptr_t                                                   sig;                                                     // 0x0000(0x0000)
		intptr_t                                                   args;                                                    // 0x0008(0x0000)
		int32_t                                                    next_arg;                                                // 0x0010(0x0000)
		int32_t                                                    num_args;                                                // 0x0014(0x0000)
	};

	/**
	 * Struct mscorlib.System.IntPtr
	 * Size -> 0x0000
	 */
	struct IntPtr
	{
	public:
		void*                                                      m_value;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.RuntimeArgumentHandle
	 * Size -> 0x0000
	 */
	struct RuntimeArgumentHandle
	{
	public:
		intptr_t                                                   args;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.RuntimeFieldHandle
	 * Size -> 0x0000
	 */
	struct RuntimeFieldHandle
	{
	public:
		intptr_t                                                   value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.RuntimeMethodHandle
	 * Size -> 0x0000
	 */
	struct RuntimeMethodHandle
	{
	public:
		intptr_t                                                   value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ParameterizedStrings+FormatParam
	 * Size -> 0x0000
	 */
	struct ParameterizedStrings_FormatParam
	{
	public:
		int32_t                                                    __int32_;                                                // 0x0000(0x0000)
		class Il2CppString*                                        string;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.UIntPtr
	 * Size -> 0x0000
	 */
	struct UIntPtr
	{
	public:
		void*                                                      pointer;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.BRECORD
	 * Size -> 0x0000
	 */
	struct BRECORD
	{
	public:
		intptr_t                                                   pvRecord;                                                // 0x0000(0x0000)
		intptr_t                                                   pRecInfo;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.Variant
	 * Size -> 0x0000
	 */
	struct Variant
	{
	public:
		int16_t                                                    vt;                                                      // 0x0000(0x0000)
		uint16_t                                                   wReserved1;                                              // 0x0002(0x0000)
		uint16_t                                                   wReserved2;                                              // 0x0004(0x0000)
		uint16_t                                                   wReserved3;                                              // 0x0006(0x0000)
		int64_t                                                    llVal;                                                   // 0x0008(0x0000)
		int32_t                                                    lVal;                                                    // 0x0008(0x0000)
		uint8_t                                                    bVal;                                                    // 0x0008(0x0000)
		int16_t                                                    iVal;                                                    // 0x0008(0x0000)
		float                                                      fltVal;                                                  // 0x0008(0x0000)
		double                                                     dblVal;                                                  // 0x0008(0x0000)
		int16_t                                                    boolVal;                                                 // 0x0008(0x0000)
		intptr_t                                                   bstrVal;                                                 // 0x0008(0x0000)
		int8_t                                                     cVal;                                                    // 0x0008(0x0000)
		uint16_t                                                   uiVal;                                                   // 0x0008(0x0000)
		uint32_t                                                   ulVal;                                                   // 0x0008(0x0000)
		uint64_t                                                   ullVal;                                                  // 0x0008(0x0000)
		int32_t                                                    intVal;                                                  // 0x0008(0x0000)
		uint32_t                                                   uintVal;                                                 // 0x0008(0x0000)
		intptr_t                                                   pdispVal;                                                // 0x0008(0x0000)
		struct BRECORD                                             bRecord;                                                 // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.InputRecord
	 * Size -> 0x0000
	 */
	struct InputRecord
	{
	public:
		int16_t                                                    EventType;                                               // 0x0000(0x0000)
		bool                                                       KeyDown;                                                 // 0x0002(0x0000)
		int16_t                                                    RepeatCount;                                             // 0x0004(0x0000)
		int16_t                                                    VirtualKeyCode;                                          // 0x0006(0x0000)
		int16_t                                                    VirtualScanCode;                                         // 0x0008(0x0000)
		uint16_t                                                   Character;                                               // 0x000A(0x0000)
		int32_t                                                    ControlKeyState;                                         // 0x000C(0x0000)
		int32_t                                                    pad1;                                                    // 0x0010(0x0000)
		bool                                                       pad2;                                                    // 0x0014(0x0000)
	};

	/**
	 * Struct mscorlib.System.Coord
	 * Size -> 0x0000
	 */
	struct Coord
	{
	public:
		int16_t                                                    X;                                                       // 0x0000(0x0000)
		int16_t                                                    Y;                                                       // 0x0002(0x0000)
	};

	/**
	 * Struct mscorlib.System.SmallRect
	 * Size -> 0x0000
	 */
	struct SmallRect
	{
	public:
		int16_t                                                    Left;                                                    // 0x0000(0x0000)
		int16_t                                                    Top;                                                     // 0x0002(0x0000)
		int16_t                                                    Right;                                                   // 0x0004(0x0000)
		int16_t                                                    Bottom;                                                  // 0x0006(0x0000)
	};

	/**
	 * Struct mscorlib.System.ConsoleScreenBufferInfo
	 * Size -> 0x0000
	 */
	struct ConsoleScreenBufferInfo
	{
	public:
		struct Coord                                               Size;                                                    // 0x0000(0x0000)
		struct Coord                                               CursorPosition;                                          // 0x0004(0x0000)
		int16_t                                                    Attribute;                                               // 0x0008(0x0000)
		struct SmallRect                                           Window;                                                  // 0x000A(0x0000)
		struct Coord                                               MaxWindowSize;                                           // 0x0012(0x0000)
	};

	/**
	 * Struct mscorlib.System.Decimal.DecCalc+PowerOvfl
	 * Size -> 0x0000
	 */
	struct Decimal_DecCalc_PowerOvfl
	{
	public:
		uint32_t                                                   Hi;                                                      // 0x0000(0x0000)
		uint64_t                                                   MidLo;                                                   // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.Decimal.DecCalc+Buf24
	 * Size -> 0x0000
	 */
	struct Decimal_DecCalc_Buf24
	{
	public:
		uint32_t                                                   U0;                                                      // 0x0000(0x0000)
		uint32_t                                                   U1;                                                      // 0x0004(0x0000)
		uint32_t                                                   U2;                                                      // 0x0008(0x0000)
		uint32_t                                                   U3;                                                      // 0x000C(0x0000)
		uint32_t                                                   U4;                                                      // 0x0010(0x0000)
		uint32_t                                                   U5;                                                      // 0x0014(0x0000)
		uint64_t                                                   ulo64LE;                                                 // 0x0000(0x0000)
		uint64_t                                                   umid64LE;                                                // 0x0008(0x0000)
		uint64_t                                                   uhigh64LE;                                               // 0x0010(0x0000)
	};

	/**
	 * Struct mscorlib.System.Threading.AsyncLocalValueChangedArgs<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct AsyncLocalValueChangedArgs_T
	{
	public:
		class Il2CppObject*                                        PreviousValue_k__BackingField;                           // 0x0000(0x0000)
		class Il2CppObject*                                        CurrentValue_k__BackingField;                            // 0x0000(0x0000)
		bool                                                       ThreadContextChanged_k__BackingField;                    // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Threading.SparselyPopulatedArrayAddInfo<CancellationCallbackInfo>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct SparselyPopulatedArrayAddInfo_CancellationCallbackInfo
	{
	public:
		class SparselyPopulatedArrayFragment_T*                    source;                                                  // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Threading.CancellationTokenRegistration
	 * Size -> 0x0000
	 */
	struct CancellationTokenRegistration
	{
	public:
		class CancellationCallbackInfo*                            m_callbackInfo;                                          // 0x0000(0x0000)
		struct SparselyPopulatedArrayAddInfo_CancellationCallbackInfo m_registrationInfo;                                      // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.Threading.CancellationToken
	 * Size -> 0x0000
	 */
	struct CancellationToken
	{
	public:
		class CancellationTokenSource*                             source;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Threading.NativeOverlapped
	 * Size -> 0x0000
	 */
	struct NativeOverlapped
	{
	public:
		intptr_t                                                   InternalLow;                                             // 0x0000(0x0000)
		intptr_t                                                   InternalHigh;                                            // 0x0008(0x0000)
		int32_t                                                    OffsetLow;                                               // 0x0010(0x0000)
		int32_t                                                    OffsetHigh;                                              // 0x0014(0x0000)
		intptr_t                                                   EventHandle;                                             // 0x0018(0x0000)
	};

	/**
	 * Struct mscorlib.System.Threading.SpinWait
	 * Size -> 0x0000
	 */
	struct SpinWait
	{
	public:
		int32_t                                                    count;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Threading.CancellationCallbackCoreWorkArguments
	 * Size -> 0x0000
	 */
	struct CancellationCallbackCoreWorkArguments
	{
	public:
		class SparselyPopulatedArrayFragment_CancellationCallbackInfo* currArrayFragment;                                       // 0x0000(0x0000)
		int32_t                                                    currArrayIndex;                                          // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.Threading.SparselyPopulatedArrayAddInfo<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct SparselyPopulatedArrayAddInfo_T
	{
	public:
		class SparselyPopulatedArrayFragment_T*                    source;                                                  // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Threading.LockHolder
	 * Size -> 0x0000
	 */
	struct LockHolder
	{
	public:
		class Lock*                                                lock;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<bool>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_bool
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter<Task>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_Task
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
		bool                                                       m_continueOnCapturedContext;                             // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter<bool>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
		bool                                                       m_continueOnCapturedContext;                             // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Threading.SemaphoreSlim+<WaitUntilCountOrTimeoutAsync>d__32
	 * Size -> 0x0000
	 */
	struct SemaphoreSlim__WaitUntilCountOrTimeoutAsync_d__32
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_bool                         t__builder;                                              // 0x0008(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0020(0x0000)
		class SemaphoreSlim_TaskNode*                              asyncWaiter;                                             // 0x0028(0x0000)
		int32_t                                                    millisecondsTimeout;                                     // 0x0030(0x0000)
		class SemaphoreSlim*                                       _4__this;                                                // 0x0038(0x0000)
		class CancellationTokenSource*                             cts_5__2;                                                // 0x0040(0x0000)
		class Il2CppObject*                                        _7__wrap2;                                               // 0x0048(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_Task  u__1;                                                    // 0x0050(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__2;                                                    // 0x0060(0x0000)
	};

	/**
	 * Struct mscorlib.System.Threading.SpinLock
	 * Size -> 0x0000
	 */
	struct SpinLock
	{
	public:
		int32_t                                                    m_owner;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.Remoting.Messaging.LogicalCallContext+Reader
	 * Size -> 0x0000
	 */
	struct LogicalCallContext_Reader
	{
	public:
		class LogicalCallContext*                                  m_ctx;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Threading.ExecutionContext+Reader
	 * Size -> 0x0000
	 */
	struct ExecutionContext_Reader
	{
	public:
		class ExecutionContext*                                    m_ec;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Threading.ExecutionContextSwitcher
	 * Size -> 0x0000
	 */
	struct ExecutionContextSwitcher
	{
	public:
		struct ExecutionContext_Reader                             outerEC;                                                 // 0x0000(0x0000)
		bool                                                       outerECBelongsToScope;                                   // 0x0008(0x0000)
		class Il2CppObject*                                        hecsw;                                                   // 0x0010(0x0000)
		class Thread*                                              thread;                                                  // 0x0018(0x0000)
	};

	/**
	 * Struct mscorlib.System.Threading.Timer+TimerComparer
	 * Size -> 0x0000
	 */
	struct Timer_TimerComparer
	{	};

	/**
	 * Struct mscorlib.System.Threading.Volatile+VolatileBoolean
	 * Size -> 0x0000
	 */
	struct Volatile_VolatileBoolean
	{
	public:
		bool                                                       Value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Threading.Volatile+VolatileInt32
	 * Size -> 0x0000
	 */
	struct Volatile_VolatileInt32
	{
	public:
		int32_t                                                    Value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Threading.Volatile+VolatileObject
	 * Size -> 0x0000
	 */
	struct Volatile_VolatileObject
	{
	public:
		class Il2CppObject*                                        Value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Threading.Tasks.ValueTask
	 * Size -> 0x0000
	 */
	struct ValueTask
	{
	public:
		class Il2CppObject*                                        obj;                                                     // 0x0000(0x0000)
		int16_t                                                    token;                                                   // 0x0008(0x0000)
		bool                                                       continueOnCapturedContext;                               // 0x000A(0x0000)
	};

	/**
	 * Struct mscorlib.System.Threading.Tasks.ValueTask<TResult>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ValueTask_TResult
	{
	public:
		class Il2CppObject*                                        obj;                                                     // 0x0000(0x0000)
		class Il2CppObject*                                        result;                                                  // 0x0000(0x0000)
		int16_t                                                    token;                                                   // 0x0000(0x0000)
		bool                                                       continueOnCapturedContext;                               // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Threading.Tasks.ForceAsyncAwaiter
	 * Size -> 0x0000
	 */
	struct ForceAsyncAwaiter
	{
	public:
		class Task*                                                task;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Threading.Tasks.VoidTaskResult
	 * Size -> 0x0000
	 */
	struct VoidTaskResult
	{	};

	/**
	 * Struct mscorlib.System.Text.ValueStringBuilder
	 * Size -> 0x0000
	 */
	struct ValueStringBuilder
	{
	public:
		class Char_Array*                                          arrayToReturnToPool;                                     // 0x0000(0x0000)
		struct Span_char                                           chars;                                                   // 0x0008(0x0000)
		int32_t                                                    pos;                                                     // 0x0018(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<int>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_int
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Security.Cryptography.CryptoStream+<ReadAsyncInternal>d__37
	 * Size -> 0x0000
	 */
	struct CryptoStream__ReadAsyncInternal_d__37
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_int                          t__builder;                                              // 0x0008(0x0000)
		class CryptoStream*                                        _4__this;                                                // 0x0020(0x0000)
		class Byte_Array*                                          buffer;                                                  // 0x0028(0x0000)
		int32_t                                                    offset;                                                  // 0x0030(0x0000)
		int32_t                                                    count;                                                   // 0x0034(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0038(0x0000)
		class SemaphoreSlim*                                       semaphore_5__2;                                          // 0x0040(0x0000)
		struct ForceAsyncAwaiter                                   u__1;                                                    // 0x0048(0x0000)
		struct TaskAwaiter_int                                     u__2;                                                    // 0x0050(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ValueTaskAwaiter<int>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ValueTaskAwaiter_int
	{
	public:
		struct ValueTask_TResult                                   value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Security.Cryptography.CryptoStream+<ReadAsyncCore>d__42
	 * Size -> 0x0000
	 */
	struct CryptoStream__ReadAsyncCore_d__42
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_int                          t__builder;                                              // 0x0008(0x0000)
		int32_t                                                    count;                                                   // 0x0020(0x0000)
		int32_t                                                    offset;                                                  // 0x0024(0x0000)
		class CryptoStream*                                        _4__this;                                                // 0x0028(0x0000)
		class Byte_Array*                                          buffer;                                                  // 0x0030(0x0000)
		bool                                                       useAsync;                                                // 0x0038(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0040(0x0000)
		int32_t                                                    bytesToDeliver_5__2;                                     // 0x0048(0x0000)
		int32_t                                                    currentOutputIndex_5__3;                                 // 0x004C(0x0000)
		int32_t                                                    numWholeBlocksInBytes_5__4;                              // 0x0050(0x0000)
		class Byte_Array*                                          tempInputBuffer_5__5;                                    // 0x0058(0x0000)
		class Byte_Array*                                          tempOutputBuffer_5__6;                                   // 0x0060(0x0000)
		struct ValueTaskAwaiter_int                                u__1;                                                    // 0x0068(0x0000)
	};

	/**
	 * Struct mscorlib.System.Security.Cryptography.CryptoStream+<WriteAsyncInternal>d__46
	 * Size -> 0x0000
	 */
	struct CryptoStream__WriteAsyncInternal_d__46
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class CryptoStream*                                        _4__this;                                                // 0x0020(0x0000)
		class Byte_Array*                                          buffer;                                                  // 0x0028(0x0000)
		int32_t                                                    offset;                                                  // 0x0030(0x0000)
		int32_t                                                    count;                                                   // 0x0034(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0038(0x0000)
		class SemaphoreSlim*                                       semaphore_5__2;                                          // 0x0040(0x0000)
		struct ForceAsyncAwaiter                                   u__1;                                                    // 0x0048(0x0000)
		struct TaskAwaiter                                         u__2;                                                    // 0x0050(0x0000)
	};

	/**
	 * Struct mscorlib.System.Security.Cryptography.CryptoStream+<WriteAsyncCore>d__49
	 * Size -> 0x0000
	 */
	struct CryptoStream__WriteAsyncCore_d__49
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		int32_t                                                    count;                                                   // 0x0020(0x0000)
		int32_t                                                    offset;                                                  // 0x0024(0x0000)
		class CryptoStream*                                        _4__this;                                                // 0x0028(0x0000)
		class Byte_Array*                                          buffer;                                                  // 0x0030(0x0000)
		bool                                                       useAsync;                                                // 0x0038(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0040(0x0000)
		int32_t                                                    bytesToWrite_5__2;                                       // 0x0048(0x0000)
		int32_t                                                    currentInputIndex_5__3;                                  // 0x004C(0x0000)
		int32_t                                                    numOutputBytes_5__4;                                     // 0x0050(0x0000)
		struct ValueTaskAwaiter                                    u__1;                                                    // 0x0058(0x0000)
		int32_t                                                    numWholeBlocksInBytes_5__5;                              // 0x0068(0x0000)
		class Byte_Array*                                          tempOutputBuffer_5__6;                                   // 0x0070(0x0000)
	};

	/**
	 * Struct mscorlib.System.Security.Cryptography.HashAlgorithmName
	 * Size -> 0x0000
	 */
	struct HashAlgorithmName
	{
	public:
		class Il2CppString*                                        name;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Security.Cryptography.DSAParameters
	 * Size -> 0x0000
	 */
	struct DSAParameters
	{
	public:
		class Byte_Array*                                          P;                                                       // 0x0000(0x0000)
		class Byte_Array*                                          Q;                                                       // 0x0008(0x0000)
		class Byte_Array*                                          G;                                                       // 0x0010(0x0000)
		class Byte_Array*                                          Y;                                                       // 0x0018(0x0000)
		class Byte_Array*                                          J;                                                       // 0x0020(0x0000)
		class Byte_Array*                                          X;                                                       // 0x0028(0x0000)
		class Byte_Array*                                          Seed;                                                    // 0x0030(0x0000)
		int32_t                                                    Counter;                                                 // 0x0038(0x0000)
	};

	/**
	 * Struct mscorlib.System.Security.Cryptography.RSAParameters
	 * Size -> 0x0000
	 */
	struct RSAParameters
	{
	public:
		class Byte_Array*                                          Exponent;                                                // 0x0000(0x0000)
		class Byte_Array*                                          Modulus;                                                 // 0x0008(0x0000)
		class Byte_Array*                                          P;                                                       // 0x0010(0x0000)
		class Byte_Array*                                          Q;                                                       // 0x0018(0x0000)
		class Byte_Array*                                          DP;                                                      // 0x0020(0x0000)
		class Byte_Array*                                          DQ;                                                      // 0x0028(0x0000)
		class Byte_Array*                                          InverseQ;                                                // 0x0030(0x0000)
		class Byte_Array*                                          D;                                                       // 0x0038(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.Remoting.Channels.CrossAppDomainSink+ProcessMessageRes
	 * Size -> 0x0000
	 */
	struct CrossAppDomainSink_ProcessMessageRes
	{
	public:
		class Byte_Array*                                          arrResponse;                                             // 0x0000(0x0000)
		class CADMethodReturnMessage*                              cadMrm;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.Serialization.SerializationEntry
	 * Size -> 0x0000
	 */
	struct SerializationEntry
	{
	public:
		class Il2CppString*                                        name;                                                    // 0x0000(0x0000)
		class Il2CppObject*                                        value;                                                   // 0x0008(0x0000)
		class Type*                                                type;                                                    // 0x0010(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.InteropServices.HandleRef
	 * Size -> 0x0000
	 */
	struct HandleRef
	{
	public:
		class Il2CppObject*                                        wrapper;                                                 // 0x0000(0x0000)
		intptr_t                                                   handle;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.InteropServices.OSPlatform
	 * Size -> 0x0000
	 */
	struct OSPlatform
	{
	public:
		class Il2CppString*                                        osPlatform;                                              // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder
	 * Size -> 0x0000
	 */
	struct AsyncValueTaskMethodBuilder
	{
	public:
		struct AsyncTaskMethodBuilder                              methodBuilder;                                           // 0x0000(0x0000)
		bool                                                       haveResult;                                              // 0x0018(0x0000)
		bool                                                       useBuilder;                                              // 0x0019(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder<TResult>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct AsyncValueTaskMethodBuilder_TResult
	{
	public:
		struct AsyncTaskMethodBuilder_TResult                      methodBuilder;                                           // 0x0000(0x0000)
		class Il2CppObject*                                        result;                                                  // 0x0000(0x0000)
		bool                                                       haveResult;                                              // 0x0000(0x0000)
		bool                                                       useBuilder;                                              // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable+ConfiguredValueTaskAwaiter
	 * Size -> 0x0000
	 */
	struct ConfiguredValueTaskAwaitable_ConfiguredValueTaskAwaiter
	{
	public:
		struct ValueTask                                           value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable+ConfiguredValueTaskAwaiter<TResult>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ConfiguredValueTaskAwaitable_ConfiguredValueTaskAwaiter_TResult
	{
	public:
		struct ValueTask_TResult                                   value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<TResult>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct TaskAwaiter_TResult
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ConfiguredTaskAwaitable+ConfiguredTaskAwaiter
	 * Size -> 0x0000
	 */
	struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter
	{
	public:
		class Task*                                                m_task;                                                  // 0x0000(0x0000)
		bool                                                       m_continueOnCapturedContext;                             // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ConfiguredTaskAwaitable
	 * Size -> 0x0000
	 */
	struct ConfiguredTaskAwaitable
	{
	public:
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       m_configuredTaskAwaiter;                                 // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ConfiguredTaskAwaitable+ConfiguredTaskAwaiter<TResult>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_TResult
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
		bool                                                       m_continueOnCapturedContext;                             // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ConfiguredTaskAwaitable<TResult>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ConfiguredTaskAwaitable_TResult
	{
	public:
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_TResult m_configuredTaskAwaiter;                                 // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.Ephemeron
	 * Size -> 0x0000
	 */
	struct Ephemeron
	{
	public:
		class Il2CppObject*                                        key;                                                     // 0x0000(0x0000)
		class Il2CppObject*                                        value;                                                   // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.Resources.ResourceLocator
	 * Size -> 0x0000
	 */
	struct ResourceLocator
	{
	public:
		class Il2CppObject*                                        value;                                                   // 0x0000(0x0000)
		int32_t                                                    dataPos;                                                 // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.Reflection.ParameterModifier
	 * Size -> 0x0000
	 */
	struct ParameterModifier
	{
	public:
		class Boolean_Array*                                       byRef;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Reflection.CustomAttributeTypedArgument
	 * Size -> 0x0000
	 */
	struct CustomAttributeTypedArgument
	{
	public:
		class Type*                                                ArgumentType_k__BackingField;                            // 0x0000(0x0000)
		class Il2CppObject*                                        Value_k__BackingField;                                   // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.Reflection.CustomAttributeNamedArgument
	 * Size -> 0x0000
	 */
	struct CustomAttributeNamedArgument
	{
	public:
		struct CustomAttributeTypedArgument                        TypedValue_k__BackingField;                              // 0x0000(0x0000)
		bool                                                       IsField_k__BackingField;                                 // 0x0010(0x0000)
		class Il2CppString*                                        MemberName_k__BackingField;                              // 0x0018(0x0000)
		class Type*                                                attributeType;                                           // 0x0020(0x0000)
		class MemberInfo*                                          lazyMemberInfo;                                          // 0x0028(0x0000)
	};

	/**
	 * Struct mscorlib.System.Reflection.MonoEventInfo
	 * Size -> 0x0000
	 */
	struct MonoEventInfo
	{
	public:
		class Type*                                                declaring_type;                                          // 0x0000(0x0000)
		class Type*                                                reflected_type;                                          // 0x0008(0x0000)
		class Il2CppString*                                        name;                                                    // 0x0010(0x0000)
		class MethodInfo*                                          add_method;                                              // 0x0018(0x0000)
		class MethodInfo*                                          remove_method;                                           // 0x0020(0x0000)
		class MethodInfo*                                          raise_method;                                            // 0x0028(0x0000)
		int32_t                                                    attrs;                                                   // 0x0030(0x0000)
		class MethodInfo_Array*                                    other_methods;                                           // 0x0038(0x0000)
	};

	/**
	 * Struct mscorlib.System.Reflection.MonoMethodInfo
	 * Size -> 0x0000
	 */
	struct MonoMethodInfo
	{
	public:
		class Type*                                                parent;                                                  // 0x0000(0x0000)
		class Type*                                                ret;                                                     // 0x0008(0x0000)
		int32_t                                                    attrs;                                                   // 0x0010(0x0000)
		int32_t                                                    iattrs;                                                  // 0x0014(0x0000)
		int32_t                                                    callconv;                                                // 0x0018(0x0000)
	};

	/**
	 * Struct mscorlib.System.Reflection.MonoPropertyInfo
	 * Size -> 0x0000
	 */
	struct MonoPropertyInfo
	{
	public:
		class Type*                                                parent;                                                  // 0x0000(0x0000)
		class Type*                                                declaring_type;                                          // 0x0008(0x0000)
		class Il2CppString*                                        name;                                                    // 0x0010(0x0000)
		class MethodInfo*                                          get_method;                                              // 0x0018(0x0000)
		class MethodInfo*                                          set_method;                                              // 0x0020(0x0000)
		int32_t                                                    attrs;                                                   // 0x0028(0x0000)
	};

	/**
	 * Struct mscorlib.System.Numerics.Register
	 * Size -> 0x0000
	 */
	struct Register
	{
	public:
		uint8_t                                                    byte_0;                                                  // 0x0000(0x0000)
		uint8_t                                                    byte_1;                                                  // 0x0001(0x0000)
		uint8_t                                                    byte_2;                                                  // 0x0002(0x0000)
		uint8_t                                                    byte_3;                                                  // 0x0003(0x0000)
		uint8_t                                                    byte_4;                                                  // 0x0004(0x0000)
		uint8_t                                                    byte_5;                                                  // 0x0005(0x0000)
		uint8_t                                                    byte_6;                                                  // 0x0006(0x0000)
		uint8_t                                                    byte_7;                                                  // 0x0007(0x0000)
		uint8_t                                                    byte_8;                                                  // 0x0008(0x0000)
		uint8_t                                                    byte_9;                                                  // 0x0009(0x0000)
		uint8_t                                                    byte_10;                                                 // 0x000A(0x0000)
		uint8_t                                                    byte_11;                                                 // 0x000B(0x0000)
		uint8_t                                                    byte_12;                                                 // 0x000C(0x0000)
		uint8_t                                                    byte_13;                                                 // 0x000D(0x0000)
		uint8_t                                                    byte_14;                                                 // 0x000E(0x0000)
		uint8_t                                                    byte_15;                                                 // 0x000F(0x0000)
		int8_t                                                     sbyte_0;                                                 // 0x0000(0x0000)
		int8_t                                                     sbyte_1;                                                 // 0x0001(0x0000)
		int8_t                                                     sbyte_2;                                                 // 0x0002(0x0000)
		int8_t                                                     sbyte_3;                                                 // 0x0003(0x0000)
		int8_t                                                     sbyte_4;                                                 // 0x0004(0x0000)
		int8_t                                                     sbyte_5;                                                 // 0x0005(0x0000)
		int8_t                                                     sbyte_6;                                                 // 0x0006(0x0000)
		int8_t                                                     sbyte_7;                                                 // 0x0007(0x0000)
		int8_t                                                     sbyte_8;                                                 // 0x0008(0x0000)
		int8_t                                                     sbyte_9;                                                 // 0x0009(0x0000)
		int8_t                                                     sbyte_10;                                                // 0x000A(0x0000)
		int8_t                                                     sbyte_11;                                                // 0x000B(0x0000)
		int8_t                                                     sbyte_12;                                                // 0x000C(0x0000)
		int8_t                                                     sbyte_13;                                                // 0x000D(0x0000)
		int8_t                                                     sbyte_14;                                                // 0x000E(0x0000)
		int8_t                                                     sbyte_15;                                                // 0x000F(0x0000)
		uint16_t                                                   uint16_0;                                                // 0x0000(0x0000)
		uint16_t                                                   uint16_1;                                                // 0x0002(0x0000)
		uint16_t                                                   uint16_2;                                                // 0x0004(0x0000)
		uint16_t                                                   uint16_3;                                                // 0x0006(0x0000)
		uint16_t                                                   uint16_4;                                                // 0x0008(0x0000)
		uint16_t                                                   uint16_5;                                                // 0x000A(0x0000)
		uint16_t                                                   uint16_6;                                                // 0x000C(0x0000)
		uint16_t                                                   uint16_7;                                                // 0x000E(0x0000)
		int16_t                                                    int16_0;                                                 // 0x0000(0x0000)
		int16_t                                                    int16_1;                                                 // 0x0002(0x0000)
		int16_t                                                    int16_2;                                                 // 0x0004(0x0000)
		int16_t                                                    int16_3;                                                 // 0x0006(0x0000)
		int16_t                                                    int16_4;                                                 // 0x0008(0x0000)
		int16_t                                                    int16_5;                                                 // 0x000A(0x0000)
		int16_t                                                    int16_6;                                                 // 0x000C(0x0000)
		int16_t                                                    int16_7;                                                 // 0x000E(0x0000)
		uint32_t                                                   uint32_0;                                                // 0x0000(0x0000)
		uint32_t                                                   uint32_1;                                                // 0x0004(0x0000)
		uint32_t                                                   uint32_2;                                                // 0x0008(0x0000)
		uint32_t                                                   uint32_3;                                                // 0x000C(0x0000)
		int32_t                                                    int32_0;                                                 // 0x0000(0x0000)
		int32_t                                                    int32_1;                                                 // 0x0004(0x0000)
		int32_t                                                    int32_2;                                                 // 0x0008(0x0000)
		int32_t                                                    int32_3;                                                 // 0x000C(0x0000)
		uint64_t                                                   uint64_0;                                                // 0x0000(0x0000)
		uint64_t                                                   uint64_1;                                                // 0x0008(0x0000)
		int64_t                                                    int64_0;                                                 // 0x0000(0x0000)
		int64_t                                                    int64_1;                                                 // 0x0008(0x0000)
		float                                                      single_0;                                                // 0x0000(0x0000)
		float                                                      single_1;                                                // 0x0004(0x0000)
		float                                                      single_2;                                                // 0x0008(0x0000)
		float                                                      single_3;                                                // 0x000C(0x0000)
		double                                                     double_0;                                                // 0x0000(0x0000)
		double                                                     double_1;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.Numerics.Vector<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct Vector_T
	{
	public:
		struct Register                                            _register;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Numerics.Vector+VectorSizeHelper<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct Vector_VectorSizeHelper_T
	{
	public:
		struct Vector_T                                            placeholder;                                             // 0x0000(0x0000)
		uint8_t                                                    byte;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Globalization.DaylightTimeStruct
	 * Size -> 0x0000
	 */
	struct DaylightTimeStruct
	{
	public:
		struct DateTime                                            Start;                                                   // 0x0000(0x0000)
		struct DateTime                                            End;                                                     // 0x0008(0x0000)
		struct TimeSpan                                            Delta;                                                   // 0x0010(0x0000)
	};

	/**
	 * Struct mscorlib.System.Globalization.HebrewNumberParsingContext
	 * Size -> 0x0000
	 */
	struct HebrewNumberParsingContext
	{
	public:
		int8_t                                                     state;                                                   // 0x0000(0x0000)
		int32_t                                                    result;                                                  // 0x0004(0x0000)
	};

	/**
	 * Struct mscorlib.System.Globalization.HebrewNumber+HebrewValue
	 * Size -> 0x0000
	 */
	struct HebrewNumber_HebrewValue
	{
	public:
		int16_t                                                    token;                                                   // 0x0000(0x0000)
		int16_t                                                    value;                                                   // 0x0002(0x0000)
	};

	/**
	 * Struct mscorlib.System.Globalization.TimeSpanFormat+FormatLiterals
	 * Size -> 0x0000
	 */
	struct TimeSpanFormat_FormatLiterals
	{
	public:
		class Il2CppString*                                        AppCompatLiteral;                                        // 0x0000(0x0000)
		int32_t                                                    dd;                                                      // 0x0008(0x0000)
		int32_t                                                    hh;                                                      // 0x000C(0x0000)
		int32_t                                                    mm;                                                      // 0x0010(0x0000)
		int32_t                                                    ss;                                                      // 0x0014(0x0000)
		int32_t                                                    ff;                                                      // 0x0018(0x0000)
		class String_Array*                                        literals;                                                // 0x0020(0x0000)
	};

	/**
	 * Struct mscorlib.System.Globalization.TimeSpanParse+TimeSpanToken
	 * Size -> 0x0000
	 */
	struct TimeSpanParse_TimeSpanToken
	{
	public:
		uint8_t                                                    ttt;                                                     // 0x0000(0x0000)
		int32_t                                                    num;                                                     // 0x0004(0x0000)
		int32_t                                                    zeroes;                                                  // 0x0008(0x0000)
		struct ReadOnlySpan_char                                   sep;                                                     // 0x0010(0x0000)
	};

	/**
	 * Struct mscorlib.System.Globalization.TimeSpanParse+TimeSpanTokenizer
	 * Size -> 0x0000
	 */
	struct TimeSpanParse_TimeSpanTokenizer
	{
	public:
		struct ReadOnlySpan_char                                   value;                                                   // 0x0000(0x0000)
		int32_t                                                    pos;                                                     // 0x0010(0x0000)
	};

	/**
	 * Struct mscorlib.System.Globalization.TimeSpanParse+TimeSpanResult
	 * Size -> 0x0000
	 */
	struct TimeSpanParse_TimeSpanResult
	{
	public:
		struct TimeSpan                                            parsedTimeSpan;                                          // 0x0000(0x0000)
		bool                                                       throwOnFailure;                                          // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.Globalization.TimeSpanParse+TimeSpanRawInfo
	 * Size -> 0x0000
	 */
	struct TimeSpanParse_TimeSpanRawInfo
	{
	public:
		uint8_t                                                    lastSeenTTT;                                             // 0x0000(0x0000)
		int32_t                                                    tokenCount;                                              // 0x0004(0x0000)
		int32_t                                                    sepCount;                                                // 0x0008(0x0000)
		int32_t                                                    numCount;                                                // 0x000C(0x0000)
		struct TimeSpanFormat_FormatLiterals                       posLoc;                                                  // 0x0010(0x0000)
		struct TimeSpanFormat_FormatLiterals                       negLoc;                                                  // 0x0038(0x0000)
		bool                                                       posLocInit;                                              // 0x0060(0x0000)
		bool                                                       negLocInit;                                              // 0x0061(0x0000)
		class Il2CppString*                                        fullPosPattern;                                          // 0x0068(0x0000)
		class Il2CppString*                                        fullNegPattern;                                          // 0x0070(0x0000)
		struct TimeSpanParse_TimeSpanToken                         numbers0;                                                // 0x0078(0x0000)
		struct TimeSpanParse_TimeSpanToken                         numbers1;                                                // 0x0098(0x0000)
		struct TimeSpanParse_TimeSpanToken                         numbers2;                                                // 0x00B8(0x0000)
		struct TimeSpanParse_TimeSpanToken                         numbers3;                                                // 0x00D8(0x0000)
		struct TimeSpanParse_TimeSpanToken                         numbers4;                                                // 0x00F8(0x0000)
		struct ReadOnlySpan_char                                   literals0;                                               // 0x0118(0x0000)
		struct ReadOnlySpan_char                                   literals1;                                               // 0x0128(0x0000)
		struct ReadOnlySpan_char                                   literals2;                                               // 0x0138(0x0000)
		struct ReadOnlySpan_char                                   literals3;                                               // 0x0148(0x0000)
		struct ReadOnlySpan_char                                   literals4;                                               // 0x0158(0x0000)
		struct ReadOnlySpan_char                                   literals5;                                               // 0x0168(0x0000)
	};

	/**
	 * Struct mscorlib.System.Globalization.CalendricalCalculationsHelper+EphemerisCorrectionAlgorithmMap
	 * Size -> 0x0000
	 */
	struct CalendricalCalculationsHelper_EphemerisCorrectionAlgorithmMap
	{
	public:
		int32_t                                                    lowestYear;                                              // 0x0000(0x0000)
		int32_t                                                    algorithm;                                               // 0x0004(0x0000)
	};

	/**
	 * Struct mscorlib.System.Globalization.UmAlQuraCalendar+DateMapping
	 * Size -> 0x0000
	 */
	struct UmAlQuraCalendar_DateMapping
	{
	public:
		int32_t                                                    HijriMonthsLengthFlags;                                  // 0x0000(0x0000)
		struct DateTime                                            GregorianDate;                                           // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.Globalization.CultureData+NumberFormatEntryManaged
	 * Size -> 0x0000
	 */
	struct CultureData_NumberFormatEntryManaged
	{
	public:
		int32_t                                                    currency_decimal_digits;                                 // 0x0000(0x0000)
		int32_t                                                    currency_decimal_separator;                              // 0x0004(0x0000)
		int32_t                                                    currency_group_separator;                                // 0x0008(0x0000)
		int32_t                                                    currency_group_sizes0;                                   // 0x000C(0x0000)
		int32_t                                                    currency_group_sizes1;                                   // 0x0010(0x0000)
		int32_t                                                    currency_negative_pattern;                               // 0x0014(0x0000)
		int32_t                                                    currency_positive_pattern;                               // 0x0018(0x0000)
		int32_t                                                    currency_symbol;                                         // 0x001C(0x0000)
		int32_t                                                    nan_symbol;                                              // 0x0020(0x0000)
		int32_t                                                    negative_infinity_symbol;                                // 0x0024(0x0000)
		int32_t                                                    negative_sign;                                           // 0x0028(0x0000)
		int32_t                                                    number_decimal_digits;                                   // 0x002C(0x0000)
		int32_t                                                    number_decimal_separator;                                // 0x0030(0x0000)
		int32_t                                                    number_group_separator;                                  // 0x0034(0x0000)
		int32_t                                                    number_group_sizes0;                                     // 0x0038(0x0000)
		int32_t                                                    number_group_sizes1;                                     // 0x003C(0x0000)
		int32_t                                                    number_negative_pattern;                                 // 0x0040(0x0000)
		int32_t                                                    per_mille_symbol;                                        // 0x0044(0x0000)
		int32_t                                                    percent_negative_pattern;                                // 0x0048(0x0000)
		int32_t                                                    percent_positive_pattern;                                // 0x004C(0x0000)
		int32_t                                                    percent_symbol;                                          // 0x0050(0x0000)
		int32_t                                                    positive_infinity_symbol;                                // 0x0054(0x0000)
		int32_t                                                    positive_sign;                                           // 0x0058(0x0000)
	};

	/**
	 * Struct mscorlib.System.Globalization.InternalEncodingDataItem
	 * Size -> 0x0000
	 */
	struct InternalEncodingDataItem
	{
	public:
		class Il2CppString*                                        webName;                                                 // 0x0000(0x0000)
		uint16_t                                                   codePage;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.Globalization.InternalCodePageDataItem
	 * Size -> 0x0000
	 */
	struct InternalCodePageDataItem
	{
	public:
		uint16_t                                                   codePage;                                                // 0x0000(0x0000)
		uint16_t                                                   uiFamilyCodePage;                                        // 0x0002(0x0000)
		uint32_t                                                   flags;                                                   // 0x0004(0x0000)
		class Il2CppString*                                        Names;                                                   // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.Globalization.CultureInfo+Data
	 * Size -> 0x0000
	 */
	struct CultureInfo_Data
	{
	public:
		int32_t                                                    ansi;                                                    // 0x0000(0x0000)
		int32_t                                                    ebcdic;                                                  // 0x0004(0x0000)
		int32_t                                                    mac;                                                     // 0x0008(0x0000)
		int32_t                                                    oem;                                                     // 0x000C(0x0000)
		bool                                                       right_to_left;                                           // 0x0010(0x0000)
		uint8_t                                                    list_sep;                                                // 0x0011(0x0000)
	};

	/**
	 * Struct mscorlib.System.Diagnostics.Tracing.EventSource+EventData
	 * Size -> 0x0000
	 */
	struct EventSource_EventData
	{
	public:
		intptr_t                                                   DataPointer_k__BackingField;                             // 0x0000(0x0000)
		int32_t                                                    Size_k__BackingField;                                    // 0x0008(0x0000)
		int32_t                                                    Reserved_k__BackingField;                                // 0x000C(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.DictionaryEntry
	 * Size -> 0x0000
	 */
	struct DictionaryEntry
	{
	public:
		class Il2CppObject*                                        key;                                                     // 0x0000(0x0000)
		class Il2CppObject*                                        value;                                                   // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Hashtable+bucket
	 * Size -> 0x0000
	 */
	struct Hashtable_bucket
	{
	public:
		class Il2CppObject*                                        key;                                                     // 0x0000(0x0000)
		class Il2CppObject*                                        val;                                                     // 0x0008(0x0000)
		int32_t                                                    hash_coll;                                               // 0x0010(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Concurrent.ConcurrentQueue.Segment+Slot<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ConcurrentQueue_Segment_Slot_T
	{
	public:
		class Il2CppObject*                                        Item;                                                    // 0x0000(0x0000)
		int32_t                                                    SequenceNumber;                                          // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Concurrent.PaddedHeadAndTail
	 * Size -> 0x0000
	 */
	struct PaddedHeadAndTail
	{
	public:
		int32_t                                                    Head;                                                    // 0x0080(0x0000)
		int32_t                                                    Tail;                                                    // 0x0100(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.ObjectModel.ReadOnlyDictionary+DictionaryEnumerator<TKey, TValue>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ReadOnlyDictionary_DictionaryEnumerator_TKey__TValue
	{
	public:
		class IDictionary_TKey__TValue*                            dictionary;                                              // 0x0000(0x0000)
		class IEnumerator_KeyValuePair_TKey__TValue*               enumerator;                                              // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.Dictionary+Entry<TKey, TValue>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct Dictionary_Entry_TKey__TValue
	{
	public:
		int32_t                                                    hashCode;                                                // 0x0000(0x0000)
		int32_t                                                    next;                                                    // 0x0000(0x0000)
		class Il2CppObject*                                        key;                                                     // 0x0000(0x0000)
		class Il2CppObject*                                        value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<TKey, TValue>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct KeyValuePair_TKey__TValue
	{
	public:
		class Il2CppObject*                                        key;                                                     // 0x0000(0x0000)
		class Il2CppObject*                                        value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.Dictionary+Enumerator<TKey, TValue>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct Dictionary_Enumerator_TKey__TValue
	{
	public:
		class Dictionary_TKey__TValue*                             dictionary;                                              // 0x0000(0x0000)
		int32_t                                                    version;                                                 // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		struct KeyValuePair_TKey__TValue                           current;                                                 // 0x0000(0x0000)
		int32_t                                                    getEnumeratorRetType;                                    // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.Dictionary.KeyCollection+Enumerator<TKey, TValue>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct Dictionary_KeyCollection_Enumerator_TKey__TValue
	{
	public:
		class Dictionary_TKey__TValue*                             dictionary;                                              // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    version;                                                 // 0x0000(0x0000)
		class Il2CppObject*                                        currentKey;                                              // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.Dictionary.ValueCollection+Enumerator<TKey, TValue>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct Dictionary_ValueCollection_Enumerator_TKey__TValue
	{
	public:
		class Dictionary_TKey__TValue*                             dictionary;                                              // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    version;                                                 // 0x0000(0x0000)
		class Il2CppObject*                                        currentValue;                                            // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.List+Enumerator<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct List_Enumerator_T
	{
	public:
		class List_T*                                              list;                                                    // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    version;                                                 // 0x0000(0x0000)
		class Il2CppObject*                                        current;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.ValueListBuilder<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ValueListBuilder_T
	{
	public:
		struct Span_T                                              span;                                                    // 0x0000(0x0000)
		class UObject_Array*                                       arrayFromPool;                                           // 0x0000(0x0000)
		int32_t                                                    pos;                                                     // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.ArrayBuilder<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ArrayBuilder_T
	{
	public:
		class UObject_Array*                                       array;                                                   // 0x0000(0x0000)
		int32_t                                                    count;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.LargeArrayBuilder<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct LargeArrayBuilder_T
	{
	public:
		int32_t                                                    maxCapacity;                                             // 0x0000(0x0000)
		class UObject_Array*                                       first;                                                   // 0x0000(0x0000)
		struct ArrayBuilder_T                                      buffers;                                                 // 0x0000(0x0000)
		class UObject_Array*                                       current;                                                 // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    count;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.Queue+Enumerator<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct Queue_Enumerator_T
	{
	public:
		class Queue_T*                                             q;                                                       // 0x0000(0x0000)
		int32_t                                                    version;                                                 // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        currentElement;                                          // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.Stack+Enumerator<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct Stack_Enumerator_T
	{
	public:
		class Stack_T*                                             stack;                                                   // 0x0000(0x0000)
		int32_t                                                    version;                                                 // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        currentElement;                                          // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.LowLevelListWithIList+Enumerator<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct LowLevelListWithIList_Enumerator_T
	{
	public:
		class LowLevelListWithIList_T*                             list;                                                    // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    version;                                                 // 0x0000(0x0000)
		class Il2CppObject*                                        current;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.IO.DisableMediaInsertionPrompt
	 * Size -> 0x0000
	 */
	struct DisableMediaInsertionPrompt
	{
	public:
		bool                                                       disableSuccess;                                          // 0x0000(0x0000)
		uint32_t                                                   oldMode;                                                 // 0x0004(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<string>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_string
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter<int>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_int
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
		bool                                                       m_continueOnCapturedContext;                             // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.IO.StreamReader+<ReadLineAsyncInternal>d__61
	 * Size -> 0x0000
	 */
	struct StreamReader__ReadLineAsyncInternal_d__61
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_string                       t__builder;                                              // 0x0008(0x0000)
		class StreamReader*                                        _4__this;                                                // 0x0020(0x0000)
		class StringBuilder*                                       sb_5__2;                                                 // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_int   u__1;                                                    // 0x0030(0x0000)
		class Il2CppString*                                        s_5__3;                                                  // 0x0040(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder<int>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncValueTaskMethodBuilder_int
	{
	public:
		struct AsyncTaskMethodBuilder_TResult                      methodBuilder;                                           // 0x0000(0x0000)
		int32_t                                                    result;                                                  // 0x0000(0x0000)
		bool                                                       haveResult;                                              // 0x0000(0x0000)
		bool                                                       useBuilder;                                              // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Memory<char>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Memory_char
	{
	public:
		class Il2CppObject*                                        object;                                                  // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    length;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable.ConfiguredValueTaskAwaiter<int>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ConfiguredValueTaskAwaitable_ConfiguredValueTaskAwaiter_int
	{
	public:
		struct ValueTask_TResult                                   value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.IO.StreamReader+<ReadAsyncInternal>d__66
	 * Size -> 0x0000
	 */
	struct StreamReader__ReadAsyncInternal_d__66
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncValueTaskMethodBuilder_int                     t__builder;                                              // 0x0008(0x0000)
		class StreamReader*                                        _4__this;                                                // 0x0028(0x0000)
		struct Memory_char                                         buffer;                                                  // 0x0030(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0040(0x0000)
		int32_t                                                    charsRead_5__2;                                          // 0x0048(0x0000)
		bool                                                       readToUserBuffer_5__3;                                   // 0x004C(0x0000)
		class Byte_Array*                                          tmpByteBuffer_5__4;                                      // 0x0050(0x0000)
		class Stream*                                              tmpStream_5__5;                                          // 0x0058(0x0000)
		int32_t                                                    count_5__6;                                              // 0x0060(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_int   u__1;                                                    // 0x0068(0x0000)
		int32_t                                                    n_5__7;                                                  // 0x0078(0x0000)
		struct ConfiguredValueTaskAwaitable_ConfiguredValueTaskAwaiter_int u__2;                                                    // 0x0080(0x0000)
	};

	/**
	 * Struct mscorlib.System.IO.StreamReader+<ReadBufferAsync>d__69
	 * Size -> 0x0000
	 */
	struct StreamReader__ReadBufferAsync_d__69
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_int                          t__builder;                                              // 0x0008(0x0000)
		class StreamReader*                                        _4__this;                                                // 0x0020(0x0000)
		class Byte_Array*                                          tmpByteBuffer_5__2;                                      // 0x0028(0x0000)
		class Stream*                                              tmpStream_5__3;                                          // 0x0030(0x0000)
		struct ConfiguredValueTaskAwaitable_ConfiguredValueTaskAwaiter_int u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct mscorlib.System.IO.StreamWriter+<WriteAsyncInternal>d__57
	 * Size -> 0x0000
	 */
	struct StreamWriter__WriteAsyncInternal_d__57
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		int32_t                                                    charPos;                                                 // 0x0020(0x0000)
		int32_t                                                    charLen;                                                 // 0x0024(0x0000)
		class StreamWriter*                                        _this;                                                   // 0x0028(0x0000)
		class Char_Array*                                          charBuffer;                                              // 0x0030(0x0000)
		uint16_t                                                   value;                                                   // 0x0038(0x0000)
		bool                                                       appendNewLine;                                           // 0x003A(0x0000)
		class Char_Array*                                          coreNewLine;                                             // 0x0040(0x0000)
		bool                                                       autoFlush;                                               // 0x0048(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0050(0x0000)
		int32_t                                                    i_5__2;                                                  // 0x0060(0x0000)
	};

	/**
	 * Struct mscorlib.System.IO.StreamWriter+<WriteAsyncInternal>d__59
	 * Size -> 0x0000
	 */
	struct StreamWriter__WriteAsyncInternal_d__59
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class Il2CppString*                                        value;                                                   // 0x0020(0x0000)
		int32_t                                                    charPos;                                                 // 0x0028(0x0000)
		int32_t                                                    charLen;                                                 // 0x002C(0x0000)
		class StreamWriter*                                        _this;                                                   // 0x0030(0x0000)
		class Char_Array*                                          charBuffer;                                              // 0x0038(0x0000)
		bool                                                       appendNewLine;                                           // 0x0040(0x0000)
		class Char_Array*                                          coreNewLine;                                             // 0x0048(0x0000)
		bool                                                       autoFlush;                                               // 0x0050(0x0000)
		int32_t                                                    count_5__2;                                              // 0x0054(0x0000)
		int32_t                                                    index_5__3;                                              // 0x0058(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0060(0x0000)
		int32_t                                                    i_5__4;                                                  // 0x0070(0x0000)
	};

	/**
	 * Struct mscorlib.System.ReadOnlyMemory<char>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ReadOnlyMemory_char
	{
	public:
		class Il2CppObject*                                        object;                                                  // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    length;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.IO.StreamWriter+<WriteAsyncInternal>d__62
	 * Size -> 0x0000
	 */
	struct StreamWriter__WriteAsyncInternal_d__62
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		int32_t                                                    charPos;                                                 // 0x0020(0x0000)
		int32_t                                                    charLen;                                                 // 0x0024(0x0000)
		class StreamWriter*                                        _this;                                                   // 0x0028(0x0000)
		class Char_Array*                                          charBuffer;                                              // 0x0030(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0038(0x0000)
		struct ReadOnlyMemory_char                                 source;                                                  // 0x0040(0x0000)
		bool                                                       appendNewLine;                                           // 0x0050(0x0000)
		class Char_Array*                                          coreNewLine;                                             // 0x0058(0x0000)
		bool                                                       autoFlush;                                               // 0x0060(0x0000)
		int32_t                                                    copied_5__2;                                             // 0x0064(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0068(0x0000)
		int32_t                                                    i_5__3;                                                  // 0x0078(0x0000)
	};

	/**
	 * Struct mscorlib.System.IO.StreamWriter+<FlushAsyncInternal>d__74
	 * Size -> 0x0000
	 */
	struct StreamWriter__FlushAsyncInternal_d__74
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		bool                                                       haveWrittenPreamble;                                     // 0x0020(0x0000)
		class StreamWriter*                                        _this;                                                   // 0x0028(0x0000)
		class Encoding*                                            encoding;                                                // 0x0030(0x0000)
		class Stream*                                              stream;                                                  // 0x0038(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0040(0x0000)
		class Encoder*                                             encoder;                                                 // 0x0048(0x0000)
		class Char_Array*                                          charBuffer;                                              // 0x0050(0x0000)
		int32_t                                                    charPos;                                                 // 0x0058(0x0000)
		class Byte_Array*                                          byteBuffer;                                              // 0x0060(0x0000)
		bool                                                       flushEncoder;                                            // 0x0068(0x0000)
		bool                                                       flushStream;                                             // 0x0069(0x0000)
		struct ConfiguredValueTaskAwaitable_ConfiguredValueTaskAwaiter u__1;                                                    // 0x0070(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__2;                                                    // 0x0080(0x0000)
	};

	/**
	 * Struct mscorlib.System.IO.BufferedStream+<FlushAsyncInternal>d__38
	 * Size -> 0x0000
	 */
	struct BufferedStream__FlushAsyncInternal_d__38
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class BufferedStream*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		class SemaphoreSlim*                                       sem_5__2;                                                // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct mscorlib.System.IO.BufferedStream+<FlushWriteAsync>d__42
	 * Size -> 0x0000
	 */
	struct BufferedStream__FlushWriteAsync_d__42
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class BufferedStream*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct ConfiguredValueTaskAwaitable_ConfiguredValueTaskAwaiter u__1;                                                    // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__2;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct mscorlib.System.Memory<byte>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Memory_byte
	{
	public:
		class Il2CppObject*                                        object;                                                  // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    length;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.IO.BufferedStream+<ReadFromUnderlyingStreamAsync>d__51
	 * Size -> 0x0000
	 */
	struct BufferedStream__ReadFromUnderlyingStreamAsync_d__51
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncValueTaskMethodBuilder_int                     t__builder;                                              // 0x0008(0x0000)
		class Task*                                                semaphoreLockTask;                                       // 0x0028(0x0000)
		class BufferedStream*                                      _4__this;                                                // 0x0030(0x0000)
		struct Memory_byte                                         buffer;                                                  // 0x0038(0x0000)
		int32_t                                                    bytesAlreadySatisfied;                                   // 0x0048(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0050(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0058(0x0000)
		int32_t                                                    _7__wrap1;                                               // 0x0068(0x0000)
		struct ConfiguredValueTaskAwaitable_ConfiguredValueTaskAwaiter_int u__2;                                                    // 0x0070(0x0000)
	};

	/**
	 * Struct mscorlib.System.ReadOnlyMemory<byte>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ReadOnlyMemory_byte
	{
	public:
		class Il2CppObject*                                        object;                                                  // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    length;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.IO.BufferedStream+<WriteToUnderlyingStreamAsync>d__63
	 * Size -> 0x0000
	 */
	struct BufferedStream__WriteToUnderlyingStreamAsync_d__63
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class Task*                                                semaphoreLockTask;                                       // 0x0020(0x0000)
		class BufferedStream*                                      _4__this;                                                // 0x0028(0x0000)
		struct ReadOnlyMemory_byte                                 buffer;                                                  // 0x0030(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0040(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0048(0x0000)
		struct ConfiguredValueTaskAwaitable_ConfiguredValueTaskAwaiter u__2;                                                    // 0x0058(0x0000)
	};

	/**
	 * Struct mscorlib.System.IO.BufferedStream+<CopyToAsyncCore>d__71
	 * Size -> 0x0000
	 */
	struct BufferedStream__CopyToAsyncCore_d__71
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class BufferedStream*                                      _4__this;                                                // 0x0020(0x0000)
		class Stream*                                              destination;                                             // 0x0028(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0030(0x0000)
		int32_t                                                    bufferSize;                                              // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0040(0x0000)
		struct ConfiguredValueTaskAwaitable_ConfiguredValueTaskAwaiter u__2;                                                    // 0x0050(0x0000)
	};

	/**
	 * Struct mscorlib.System.IO.Stream+ReadWriteParameters
	 * Size -> 0x0000
	 */
	struct Stream_ReadWriteParameters
	{
	public:
		class Byte_Array*                                          Buffer;                                                  // 0x0000(0x0000)
		int32_t                                                    Offset;                                                  // 0x0008(0x0000)
		int32_t                                                    Count;                                                   // 0x000C(0x0000)
	};

	/**
	 * Struct mscorlib.System.IO.Stream+<CopyToAsyncInternal>d__28
	 * Size -> 0x0000
	 */
	struct Stream__CopyToAsyncInternal_d__28
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		int32_t                                                    bufferSize;                                              // 0x0020(0x0000)
		class Stream*                                              _4__this;                                                // 0x0028(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0030(0x0000)
		class Stream*                                              destination;                                             // 0x0038(0x0000)
		class Byte_Array*                                          buffer_5__2;                                             // 0x0040(0x0000)
		struct ConfiguredValueTaskAwaitable_ConfiguredValueTaskAwaiter_int u__1;                                                    // 0x0048(0x0000)
		struct ConfiguredValueTaskAwaitable_ConfiguredValueTaskAwaiter u__2;                                                    // 0x0058(0x0000)
	};

	/**
	 * Struct mscorlib.System.IO.Stream+<FinishWriteAsync>d__57
	 * Size -> 0x0000
	 */
	struct Stream__FinishWriteAsync_d__57
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class Task*                                                writeTask;                                               // 0x0020(0x0000)
		class Byte_Array*                                          localBuffer;                                             // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct mscorlib.System.IO.Stream+<<ReadAsync>g__FinishReadAsync|44_0>d
	 * Size -> 0x0000
	 */
	struct Stream___ReadAsync_g__FinishReadAsync_44_0_d
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncValueTaskMethodBuilder_int                     t__builder;                                              // 0x0008(0x0000)
		class Task_int*                                            readTask;                                                // 0x0028(0x0000)
		class Byte_Array*                                          localBuffer;                                             // 0x0030(0x0000)
		struct Memory_byte                                         localDestination;                                        // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_int   u__1;                                                    // 0x0048(0x0000)
	};

	/**
	 * Struct mscorlib.System.IO.MonoIOStat
	 * Size -> 0x0000
	 */
	struct MonoIOStat
	{
	public:
		int32_t                                                    fileAttributes;                                          // 0x0000(0x0000)
		int64_t                                                    Length;                                                  // 0x0008(0x0000)
		int64_t                                                    CreationTime;                                            // 0x0010(0x0000)
		int64_t                                                    LastAccessTime;                                          // 0x0018(0x0000)
		int64_t                                                    LastWriteTime;                                           // 0x0020(0x0000)
	};

	/**
	 * Struct mscorlib.System.IO.Enumeration.FileSystemEntry
	 * Size -> 0x0000
	 */
	struct FileSystemEntry
	{
	public:
		struct Interop_NtDll_FILE_FULL_DIR_INFORMATION*            info;                                                    // 0x0000(0x0000)
		struct ReadOnlySpan_char                                   Directory_k__BackingField;                               // 0x0008(0x0000)
		struct ReadOnlySpan_char                                   RootDirectory_k__BackingField;                           // 0x0018(0x0000)
		struct ReadOnlySpan_char                                   OriginalRootDirectory_k__BackingField;                   // 0x0028(0x0000)
	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=3
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_3_1
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=6
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_6_2
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=10
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_10
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=12
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_12_2
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=15
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_15
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=16
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_16_2
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=20
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_20_2
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=24
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_24_2
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=32
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_32_2
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=36
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_36_2
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=38
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_38
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=40
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_40_1
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=42
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_42
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=44
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_44_1
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=48
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_48_1
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=52
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_52
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=56
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_56_1
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=64
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_64_2
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=72
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_72_1
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=76
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_76_1
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=84
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_84
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=88
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_88
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=94
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_94
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=120
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_120_1
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=128
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_128_1
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=130
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_130
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=152
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_152
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=170
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_170
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=172
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_172
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=174
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_174
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=212
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_212
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=240
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_240
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=256
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_256_1
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=262
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_262
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=288
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_288
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=336
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_336
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=360
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_360
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=640
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_640_1
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=648
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_648
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=761
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_761
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=998
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_998
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=1018
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_1018
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=1024
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_1024_1
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=1208
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_1208
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=1320
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_1320
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=1450
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_1450
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=1472
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_1472
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=1665
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_1665
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=1824
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_1824
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=2048
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_2048_1
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=2100
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_2100
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=2176
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_2176
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=2350
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_2350
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=2382
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_2382
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=3132
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_3132
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=4096
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_4096_1
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=5952
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_5952
	{	};

	/**
	 * Struct mscorlib.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=10800
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_10800
	{	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<string, Dictionary<string, UserAchievement>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_string__Dictionary_string__UserAchievement
	{
	public:
		class Il2CppString*                                        key;                                                     // 0x0000(0x0000)
		class Dictionary_string__UserAchievement*                  value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<string, UserAchievement>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_string__UserAchievement
	{
	public:
		class Il2CppString*                                        key;                                                     // 0x0000(0x0000)
		class UserAchievement*                                     value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputBinding
	 * Size -> 0x0000
	 */
	struct InputBinding
	{
	public:
		class Il2CppString*                                        m_Name;                                                  // 0x0000(0x0000)
		class Il2CppString*                                        m_Id;                                                    // 0x0008(0x0000)
		class Il2CppString*                                        m_Path;                                                  // 0x0010(0x0000)
		class Il2CppString*                                        m_Interactions;                                          // 0x0018(0x0000)
		class Il2CppString*                                        m_Processors;                                            // 0x0020(0x0000)
		class Il2CppString*                                        m_Groups;                                                // 0x0028(0x0000)
		class Il2CppString*                                        m_Action;                                                // 0x0030(0x0000)
		int32_t                                                    m_Flags;                                                 // 0x0038(0x0000)
		class Il2CppString*                                        m_OverridePath;                                          // 0x0040(0x0000)
		class Il2CppString*                                        m_OverrideInteractions;                                  // 0x0048(0x0000)
		class Il2CppString*                                        m_OverrideProcessors;                                    // 0x0050(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<InputBinding>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_InputBinding
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct InputBinding                                        value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.ReadOnlyArray+Enumerator<TValue>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ReadOnlyArray_Enumerator_TValue
	{
	public:
		class UObject_Array*                                       m_Array;                                                 // 0x0000(0x0000)
		int32_t                                                    m_IndexStart;                                            // 0x0000(0x0000)
		int32_t                                                    m_IndexEnd;                                              // 0x0000(0x0000)
		int32_t                                                    m_Index;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.ReadOnlyArray<TValue>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ReadOnlyArray_TValue
	{
	public:
		class UObject_Array*                                       m_Array;                                                 // 0x0000(0x0000)
		int32_t                                                    m_StartIndex;                                            // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.ReadOnlyArray<InputDevice>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ReadOnlyArray_InputDevice
	{
	public:
		class InputDevice_Array*                                   m_Array;                                                 // 0x0000(0x0000)
		int32_t                                                    m_StartIndex;                                            // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<ReadOnlyArray<InputDevice>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_ReadOnlyArray_InputDevice
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct ReadOnlyArray_InputDevice                           value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.ReadOnlyArray<InputControlScheme>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ReadOnlyArray_InputControlScheme
	{
	public:
		class InputControlScheme_Array*                            m_Array;                                                 // 0x0000(0x0000)
		int32_t                                                    m_StartIndex;                                            // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<Transform, int>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_Transform__int
	{
	public:
		class Transform*                                           key;                                                     // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<int>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_int
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<string, CardGamePlayerFrame>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_string__CardGamePlayerFrame
	{
	public:
		class Il2CppString*                                        key;                                                     // 0x0000(0x0000)
		class CardGamePlayerFrame*                                 value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<int, int>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_int__int
	{
	public:
		int32_t                                                    key;                                                     // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple<int, int>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ValueTuple_int__int_1
	{
	public:
		int32_t                                                    Item1;                                                   // 0x0000(0x0000)
		int32_t                                                    Item2;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Vector2
	 * Size -> 0x0000
	 */
	struct Vector2
	{
	public:
		float                                                      x;                                                       // 0x0000(0x0000)
		float                                                      y;                                                       // 0x0004(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<Vector2>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_Vector2
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct Vector2                                             value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<ChapelConversation.ConversationIOQuestion, string>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_ChapelConversation_ConversationIOQuestion__string
	{
	public:
		class ChapelConversation_ConversationIOQuestion*           key;                                                     // 0x0000(0x0000)
		class Il2CppString*                                        value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<string, UIButton>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_string__UIButton
	{
	public:
		class Il2CppString*                                        key;                                                     // 0x0000(0x0000)
		class UIButton*                                            value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple<int, int, string>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ValueTuple_int__int__string_1
	{
	public:
		int32_t                                                    Item1;                                                   // 0x0000(0x0000)
		int32_t                                                    Item2;                                                   // 0x0000(0x0000)
		class Il2CppString*                                        Item3;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<ValueTuple<int, int, string>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_ValueTuple_int__int__string
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct ValueTuple_int__int__string_1                       value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<string, Friend>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_string__Friend
	{
	public:
		class Il2CppString*                                        key;                                                     // 0x0000(0x0000)
		class Friend*                                              value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<string, string>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_string__string
	{
	public:
		class Il2CppString*                                        key;                                                     // 0x0000(0x0000)
		class Il2CppString*                                        value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<bool>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_bool
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		bool                                                       value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.EFCLKDBEFLK<EDDOOFJKAPN>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct EFCLKDBEFLK_EDDOOFJKAPN
	{
	public:
		bool                                                       AILCMMMDOIF;                                             // 0x0000(0x0000)
		struct EDDOOFJKAPN                                         MFIEOJECJHA;                                             // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<string, PhotonRegionLookup>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_string__PhotonRegionLookup
	{
	public:
		class Il2CppString*                                        key;                                                     // 0x0000(0x0000)
		class PhotonRegionLookup*                                  value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<string, PlayerController>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_string__PlayerController
	{
	public:
		class Il2CppString*                                        key;                                                     // 0x0000(0x0000)
		class PlayerController*                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<JDFFKLMDIBC, MaybeToggleSettingValueHandler.OMOCFJPFMLP>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_JDFFKLMDIBC__MaybeToggleSettingValueHandler_OMOCFJPFMLP
	{
	public:
		int16_t                                                    key;                                                     // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<string, UnlockableInfo>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_string__UnlockableInfo
	{
	public:
		class Il2CppString*                                        key;                                                     // 0x0000(0x0000)
		class UnlockableInfo*                                      value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<string, VotePrefabHandler>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_string__VotePrefabHandler
	{
	public:
		class Il2CppString*                                        key;                                                     // 0x0000(0x0000)
		class VotePrefabHandler*                                   value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<string, TutorialVotePrefabHandler>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_string__TutorialVotePrefabHandler
	{
	public:
		class Il2CppString*                                        key;                                                     // 0x0000(0x0000)
		class TutorialVotePrefabHandler*                           value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<string, float>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_string__float
	{
	public:
		class Il2CppString*                                        key;                                                     // 0x0000(0x0000)
		float                                                      value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<string, GlobalVolume>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_string__GlobalVolume
	{
	public:
		class Il2CppString*                                        key;                                                     // 0x0000(0x0000)
		class GlobalVolume*                                        value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<JDFFKLMDIBC, Type>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_JDFFKLMDIBC__Type
	{
	public:
		int16_t                                                    key;                                                     // 0x0000(0x0000)
		class Type*                                                value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<string, GameTask>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_string__GameTask
	{
	public:
		class Il2CppString*                                        key;                                                     // 0x0000(0x0000)
		class GameTask*                                            value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<string, List<string>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_string__List_string
	{
	public:
		class Il2CppString*                                        key;                                                     // 0x0000(0x0000)
		class List_string*                                         value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<string, UserWallet>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_string__UserWallet
	{
	public:
		class Il2CppString*                                        key;                                                     // 0x0000(0x0000)
		class UserWallet*                                          value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<string, Gift>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_string__Gift
	{
	public:
		class Il2CppString*                                        key;                                                     // 0x0000(0x0000)
		class Gift*                                                value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<string, INGLLABDFFK>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_string__INGLLABDFFK
	{
	public:
		class Il2CppString*                                        key;                                                     // 0x0000(0x0000)
		class INGLLABDFFK*                                         value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<string, Achievement>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_string__Achievement
	{
	public:
		class Il2CppString*                                        key;                                                     // 0x0000(0x0000)
		class Achievement*                                         value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<int, Player>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_int__Player
	{
	public:
		int32_t                                                    key;                                                     // 0x0000(0x0000)
		class Player*                                              value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple<string, object[]>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ValueTuple_string__object_1
	{
	public:
		class Il2CppString*                                        Item1;                                                   // 0x0000(0x0000)
		class Object_Array*                                        Item2;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<char>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_char
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		uint16_t                                                   value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<DateTime>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_DateTime
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct DateTime                                            value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<uint, uint>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_uint__uint
	{
	public:
		uint32_t                                                   key;                                                     // 0x0000(0x0000)
		uint32_t                                                   value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<TransportTypes>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_TransportTypes
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple<int, IntPtr>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ValueTuple_int__IntPtr_1
	{
	public:
		int32_t                                                    Item1;                                                   // 0x0000(0x0000)
		intptr_t                                                   Item2;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ReadOnlySpan<int>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ReadOnlySpan_int
	{
	public:
		struct ByReference_T                                       pointer;                                                 // 0x0000(0x0000)
		int32_t                                                    length;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.ValueListBuilder<int>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ValueListBuilder_int
	{
	public:
		struct Span_T                                              span;                                                    // 0x0000(0x0000)
		class Int32_Array*                                         arrayFromPool;                                           // 0x0000(0x0000)
		int32_t                                                    pos;                                                     // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple<byte[], int, int>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ValueTuple_byte____int__int_1
	{
	public:
		class Byte_Array*                                          Item1;                                                   // 0x0000(0x0000)
		int32_t                                                    Item2;                                                   // 0x0000(0x0000)
		int32_t                                                    Item3;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Span<byte>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Span_byte
	{
	public:
		struct ByReference_T                                       pointer;                                                 // 0x0000(0x0000)
		int32_t                                                    length;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ReadOnlySpan<byte>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ReadOnlySpan_byte
	{
	public:
		struct ByReference_T                                       pointer;                                                 // 0x0000(0x0000)
		int32_t                                                    length;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Numerics.Vector<ushort>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Vector_ushort
	{
	public:
		struct Register                                            _register;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.RuntimeType.ListBuilder<MethodInfo>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct RuntimeType_ListBuilder_MethodInfo
	{
	public:
		class MethodInfo_Array*                                    items;                                                   // 0x0000(0x0000)
		class MethodInfo*                                          item;                                                    // 0x0000(0x0000)
		int32_t                                                    count;                                                   // 0x0000(0x0000)
		int32_t                                                    capacity;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.RuntimeType.ListBuilder<ConstructorInfo>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct RuntimeType_ListBuilder_ConstructorInfo
	{
	public:
		class ConstructorInfo_Array*                               items;                                                   // 0x0000(0x0000)
		class ConstructorInfo*                                     item;                                                    // 0x0000(0x0000)
		int32_t                                                    count;                                                   // 0x0000(0x0000)
		int32_t                                                    capacity;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.RuntimeType.ListBuilder<PropertyInfo>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct RuntimeType_ListBuilder_PropertyInfo
	{
	public:
		class PropertyInfo_Array*                                  items;                                                   // 0x0000(0x0000)
		class PropertyInfo*                                        item;                                                    // 0x0000(0x0000)
		int32_t                                                    count;                                                   // 0x0000(0x0000)
		int32_t                                                    capacity;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.RuntimeType.ListBuilder<EventInfo>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct RuntimeType_ListBuilder_EventInfo
	{
	public:
		class EventInfo_Array*                                     items;                                                   // 0x0000(0x0000)
		class EventInfo*                                           item;                                                    // 0x0000(0x0000)
		int32_t                                                    count;                                                   // 0x0000(0x0000)
		int32_t                                                    capacity;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.RuntimeType.ListBuilder<FieldInfo>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct RuntimeType_ListBuilder_FieldInfo
	{
	public:
		class FieldInfo_Array*                                     items;                                                   // 0x0000(0x0000)
		class FieldInfo*                                           item;                                                    // 0x0000(0x0000)
		int32_t                                                    count;                                                   // 0x0000(0x0000)
		int32_t                                                    capacity;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.RuntimeType.ListBuilder<Type>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct RuntimeType_ListBuilder_Type
	{
	public:
		class Type_Array*                                          items;                                                   // 0x0000(0x0000)
		class Type*                                                item;                                                    // 0x0000(0x0000)
		int32_t                                                    count;                                                   // 0x0000(0x0000)
		int32_t                                                    capacity;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple<Type, string>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ValueTuple_Type__string_1
	{
	public:
		class Type*                                                Item1;                                                   // 0x0000(0x0000)
		class Il2CppString*                                        Item2;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Threading.Tasks.ValueTask<int>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ValueTask_int
	{
	public:
		class Il2CppObject*                                        obj;                                                     // 0x0000(0x0000)
		int32_t                                                    result;                                                  // 0x0000(0x0000)
		int16_t                                                    token;                                                   // 0x0000(0x0000)
		bool                                                       continueOnCapturedContext;                               // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple<IntPtr, int, IntPtr, int, bool>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ValueTuple_IntPtr__int__IntPtr__int__bool_1
	{
	public:
		intptr_t                                                   Item1;                                                   // 0x0000(0x0000)
		int32_t                                                    Item2;                                                   // 0x0000(0x0000)
		intptr_t                                                   Item3;                                                   // 0x0000(0x0000)
		int32_t                                                    Item4;                                                   // 0x0000(0x0000)
		bool                                                       Item5;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple<bool>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ValueTuple_bool_1
	{
	public:
		bool                                                       Item1;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple<IntPtr, int, IntPtr, int, IntPtr, int, bool, ValueTuple<bool>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ValueTuple_IntPtr__int__IntPtr__int__IntPtr__int__bool__ValueTuple_bool
	{
	public:
		intptr_t                                                   Item1;                                                   // 0x0000(0x0000)
		int32_t                                                    Item2;                                                   // 0x0000(0x0000)
		intptr_t                                                   Item3;                                                   // 0x0000(0x0000)
		int32_t                                                    Item4;                                                   // 0x0000(0x0000)
		intptr_t                                                   Item5;                                                   // 0x0000(0x0000)
		int32_t                                                    Item6;                                                   // 0x0000(0x0000)
		bool                                                       Item7;                                                   // 0x0000(0x0000)
		struct ValueTuple_bool_1                                   Rest;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple<int, bool>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ValueTuple_int__bool_1
	{
	public:
		int32_t                                                    Item1;                                                   // 0x0000(0x0000)
		bool                                                       Item2;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<AsyncProtocolResult>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_AsyncProtocolResult
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter<Nullable<int>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_Nullable_int
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
		bool                                                       m_continueOnCapturedContext;                             // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<Nullable<int>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_Nullable_int
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter<AsyncProtocolResult>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_AsyncProtocolResult
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
		bool                                                       m_continueOnCapturedContext;                             // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<TlsProtocolCode>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_TlsProtocolCode
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int16_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<Stream>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_Stream
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ReadOnlySpan<ushort>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ReadOnlySpan_ushort
	{
	public:
		struct ByReference_T                                       pointer;                                                 // 0x0000(0x0000)
		int32_t                                                    length;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct System.System.Text.RegularExpressions.RegexPrefix
	 * Size -> 0x0000
	 */
	struct RegexPrefix
	{
	public:
		bool                                                       CaseInsensitive_k__BackingField;                         // 0x0000(0x0000)
		class Il2CppString*                                        Prefix_k__BackingField;                                  // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<RegexPrefix>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_RegexPrefix
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct RegexPrefix                                         value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Span<int>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Span_int
	{
	public:
		struct ByReference_T                                       pointer;                                                 // 0x0000(0x0000)
		int32_t                                                    length;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct System.System.Collections.Generic.ValueListBuilder<int>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ValueListBuilder_int_1
	{
	public:
		struct Span_T                                              span;                                                    // 0x0000(0x0000)
		class Int32_Array*                                         arrayFromPool;                                           // 0x0000(0x0000)
		int32_t                                                    pos;                                                     // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<T>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_T
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<HttpWebResponse>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_HttpWebResponse
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter<WebRequestStream>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_WebRequestStream
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
		bool                                                       m_continueOnCapturedContext;                             // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<WebResponseStream>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_WebResponseStream
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter<ValueTuple<HttpWebResponse, bool, bool, BufferOffsetSize, WebOperation>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_ValueTuple_HttpWebResponse__bool__bool__BufferOffsetSize__WebOperation
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
		bool                                                       m_continueOnCapturedContext;                             // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<ValueTuple<HttpWebResponse, bool, bool, BufferOffsetSize, WebOperation>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_ValueTuple_HttpWebResponse__bool__bool__BufferOffsetSize__WebOperation
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter<BufferOffsetSize>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_BufferOffsetSize
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
		bool                                                       m_continueOnCapturedContext;                             // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<BufferOffsetSize>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_BufferOffsetSize
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple<WebOperation, bool>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ValueTuple_WebOperation__bool_1
	{
	public:
		class WebOperation*                                        Item1;                                                   // 0x0000(0x0000)
		bool                                                       Item2;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple<Task<BufferOffsetSize>, WebException>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ValueTuple_Task_BufferOffsetSize___WebException_1
	{
	public:
		class Task_BufferOffsetSize*                               Item1;                                                   // 0x0000(0x0000)
		class WebException*                                        Item2;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple<bool, bool, Task<BufferOffsetSize>, WebException>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ValueTuple_bool__bool__Task_BufferOffsetSize___WebException_1
	{
	public:
		bool                                                       Item1;                                                   // 0x0000(0x0000)
		bool                                                       Item2;                                                   // 0x0000(0x0000)
		class Task_BufferOffsetSize*                               Item3;                                                   // 0x0000(0x0000)
		class WebException*                                        Item4;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple<WebConnection, bool>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ValueTuple_WebConnection__bool_1
	{
	public:
		class WebConnection*                                       Item1;                                                   // 0x0000(0x0000)
		bool                                                       Item2;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple<ServicePointScheduler.ConnectionGroup, WebOperation>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ValueTuple_ServicePointScheduler_ConnectionGroup__WebOperation_1
	{
	public:
		class ServicePointScheduler_ConnectionGroup*               Item1;                                                   // 0x0000(0x0000)
		class WebOperation*                                        Item2;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple<ServicePointScheduler.ConnectionGroup, WebConnection, Task>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ValueTuple_ServicePointScheduler_ConnectionGroup__WebConnection__Task_1
	{
	public:
		class ServicePointScheduler_ConnectionGroup*               Item1;                                                   // 0x0000(0x0000)
		class WebConnection*                                       Item2;                                                   // 0x0000(0x0000)
		class Task*                                                Item3;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter<WebCompletionSource.Result<T>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_WebCompletionSource_Result_T
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
		bool                                                       m_continueOnCapturedContext;                             // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter<Stream>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_Stream
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
		bool                                                       m_continueOnCapturedContext;                             // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<WebRequestStream>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_WebRequestStream
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter<ValueTuple<WebHeaderCollection, byte[], int>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_ValueTuple_WebHeaderCollection__byte____int
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
		bool                                                       m_continueOnCapturedContext;                             // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<ValueTuple<WebHeaderCollection, byte[], int>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_ValueTuple_WebHeaderCollection__byte____int
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple<ExceptionDispatchInfo, bool>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ValueTuple_ExceptionDispatchInfo__bool_1
	{
	public:
		class ExceptionDispatchInfo*                               Item1;                                                   // 0x0000(0x0000)
		bool                                                       Item2;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter<object>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_object
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
		bool                                                       m_continueOnCapturedContext;                             // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<byte[]>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_byte
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<WebSocketCloseStatus>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_WebSocketCloseStatus
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder<TWebSocketReceiveResult>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncValueTaskMethodBuilder_TWebSocketReceiveResult
	{
	public:
		struct AsyncTaskMethodBuilder_TResult                      methodBuilder;                                           // 0x0000(0x0000)
		class Il2CppObject*                                        result;                                                  // 0x0000(0x0000)
		bool                                                       haveResult;                                              // 0x0000(0x0000)
		bool                                                       useBuilder;                                              // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ArraySegment<byte>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ArraySegment_byte
	{
	public:
		class Byte_Array*                                          array;                                                   // 0x0000(0x0000)
		int32_t                                                    offset;                                                  // 0x0000(0x0000)
		int32_t                                                    count;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Threading.Tasks.ValueTask<TWebSocketReceiveResult>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ValueTask_TWebSocketReceiveResult
	{
	public:
		class Il2CppObject*                                        obj;                                                     // 0x0000(0x0000)
		class Il2CppObject*                                        result;                                                  // 0x0000(0x0000)
		int16_t                                                    token;                                                   // 0x0000(0x0000)
		bool                                                       continueOnCapturedContext;                               // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<ArraySegment<byte>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_ArraySegment_byte
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct ArraySegment_byte                                   value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter<Socket>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_Socket
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
		bool                                                       m_continueOnCapturedContext;                             // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter<string>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_string
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
		bool                                                       m_continueOnCapturedContext;                             // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<Socket>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_Socket
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter<IPAddress[]>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_IPAddress
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
		bool                                                       m_continueOnCapturedContext;                             // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter<WebResponse>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_WebResponse
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
		bool                                                       m_continueOnCapturedContext;                             // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<object>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_object
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.ReadOnlyArray<InputBinding>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ReadOnlyArray_InputBinding
	{
	public:
		class InputBinding_Array*                                  m_Array;                                                 // 0x0000(0x0000)
		int32_t                                                    m_StartIndex;                                            // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.ReadOnlyArray<InputControl>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ReadOnlyArray_InputControl
	{
	public:
		class InputControl_Array*                                  m_Array;                                                 // 0x0000(0x0000)
		int32_t                                                    m_StartIndex;                                            // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.InlinedArray<TValue>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct InlinedArray_TValue
	{
	public:
		int32_t                                                    length;                                                  // 0x0000(0x0000)
		class Il2CppObject*                                        firstValue;                                              // 0x0000(0x0000)
		class UObject_Array*                                       additionalValues;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.InlinedArray<TDelegate>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct InlinedArray_TDelegate
	{
	public:
		int32_t                                                    length;                                                  // 0x0000(0x0000)
		class Il2CppObject*                                        firstValue;                                              // 0x0000(0x0000)
		class UObject_Array*                                       additionalValues;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.CallbackArray<Action<InputAction.CallbackContext>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct CallbackArray_Action_InputAction_CallbackContext
	{
	public:
		bool                                                       m_CannotMutateCallbacksArray;                            // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_Callbacks;                                             // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToAdd;                                        // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToRemove;                                     // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.ReadOnlyArray<InputAction>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ReadOnlyArray_InputAction
	{
	public:
		class InputAction_Array*                                   m_Array;                                                 // 0x0000(0x0000)
		int32_t                                                    m_StartIndex;                                            // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.ReadOnlyArray<InputActionMap>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ReadOnlyArray_InputActionMap
	{
	public:
		class InputActionMap_Array*                                m_Array;                                                 // 0x0000(0x0000)
		int32_t                                                    m_StartIndex;                                            // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<InputControlScheme>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_InputControlScheme
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct InputControlScheme                                  value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.PrimitiveValue
	 * Size -> 0x0000
	 */
	struct PrimitiveValue
	{
	public:
		int32_t                                                    m_Type;                                                  // 0x0000(0x0000)
		bool                                                       m_BoolValue;                                             // 0x0004(0x0000)
		uint16_t                                                   m_CharValue;                                             // 0x0004(0x0000)
		uint8_t                                                    m_ByteValue;                                             // 0x0004(0x0000)
		int8_t                                                     m_SByteValue;                                            // 0x0004(0x0000)
		int16_t                                                    m_ShortValue;                                            // 0x0004(0x0000)
		uint16_t                                                   m_UShortValue;                                           // 0x0004(0x0000)
		int32_t                                                    m_IntValue;                                              // 0x0004(0x0000)
		uint32_t                                                   m_UIntValue;                                             // 0x0004(0x0000)
		int64_t                                                    m_LongValue;                                             // 0x0004(0x0000)
		uint64_t                                                   m_ULongValue;                                            // 0x0004(0x0000)
		float                                                      m_FloatValue;                                            // 0x0004(0x0000)
		double                                                     m_DoubleValue;                                           // 0x0004(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<InputActionRebindingExtensions.ParameterOverride>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_InputActionRebindingExtensions_ParameterOverride
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct InputActionRebindingExtensions_ParameterOverride    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Jobs.JobHandle
	 * Size -> 0x0000
	 */
	struct JobHandle
	{
	public:
		intptr_t                                                   jobGroup;                                                // 0x0000(0x0000)
		int32_t                                                    version;                                                 // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct NativeArray_T
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<ulong>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_ulong
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputControlList<InputControl>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct InputControlList_InputControl
	{
	public:
		int32_t                                                    m_Count;                                                 // 0x0000(0x0000)
		struct NativeArray_ulong                                   m_Indices;                                               // 0x0000(0x0000)
		int32_t                                                    m_Allocator;                                             // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.ReadOnlyArray<float>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ReadOnlyArray_float
	{
	public:
		class Single_Array*                                        m_Array;                                                 // 0x0000(0x0000)
		int32_t                                                    m_StartIndex;                                            // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<PrimitiveValue>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_PrimitiveValue
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct PrimitiveValue                                      value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<TValue>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_TValue
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		class Il2CppObject*                                        value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.InlinedArray<GCHandle>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct InlinedArray_GCHandle
	{
	public:
		int32_t                                                    length;                                                  // 0x0000(0x0000)
		struct GCHandle                                            firstValue;                                              // 0x0000(0x0000)
		class GCHandle_Array*                                      additionalValues;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.CallbackArray<Action<object, InputActionChange>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct CallbackArray_Action_object__InputActionChange
	{
	public:
		bool                                                       m_CannotMutateCallbacksArray;                            // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_Callbacks;                                             // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToAdd;                                        // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToRemove;                                     // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.CallbackArray<Action<object>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct CallbackArray_Action_object
	{
	public:
		bool                                                       m_CannotMutateCallbacksArray;                            // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_Callbacks;                                             // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToAdd;                                        // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToRemove;                                     // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.ReadOnlyArray<NamedValue>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ReadOnlyArray_NamedValue
	{
	public:
		class NamedValue_Array*                                    m_Array;                                                 // 0x0000(0x0000)
		int32_t                                                    m_StartIndex;                                            // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputControlList<InputDevice>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct InputControlList_InputDevice
	{
	public:
		int32_t                                                    m_Count;                                                 // 0x0000(0x0000)
		struct NativeArray_ulong                                   m_Indices;                                               // 0x0000(0x0000)
		int32_t                                                    m_Allocator;                                             // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.ReadOnlyArray<InputControlScheme.DeviceRequirement>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ReadOnlyArray_InputControlScheme_DeviceRequirement
	{
	public:
		class InputControlScheme_DeviceRequirement_Array*          m_Array;                                                 // 0x0000(0x0000)
		int32_t                                                    m_StartIndex;                                            // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Layouts.InputDeviceDescription
	 * Size -> 0x0000
	 */
	struct InputDeviceDescription
	{
	public:
		class Il2CppString*                                        m_InterfaceName;                                         // 0x0000(0x0000)
		class Il2CppString*                                        m_DeviceClass;                                           // 0x0008(0x0000)
		class Il2CppString*                                        m_Manufacturer;                                          // 0x0010(0x0000)
		class Il2CppString*                                        m_Product;                                               // 0x0018(0x0000)
		class Il2CppString*                                        m_Serial;                                                // 0x0020(0x0000)
		class Il2CppString*                                        m_Version;                                               // 0x0028(0x0000)
		class Il2CppString*                                        m_Capabilities;                                          // 0x0030(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.InternedString
	 * Size -> 0x0000
	 */
	struct InternedString
	{
	public:
		class Il2CppString*                                        m_StringOriginalCase;                                    // 0x0000(0x0000)
		class Il2CppString*                                        m_StringLowerCase;                                       // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Layouts.InputDeviceMatcher
	 * Size -> 0x0000
	 */
	struct InputDeviceMatcher
	{
	public:
		class KeyValuePair_InternedString__object_Array*           m_Patterns;                                              // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<InputDeviceMatcher>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_InputDeviceMatcher
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct InputDeviceMatcher                                  value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.ReadOnlyArray<InternedString>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ReadOnlyArray_InternedString
	{
	public:
		class InternedString_Array*                                m_Array;                                                 // 0x0000(0x0000)
		int32_t                                                    m_StartIndex;                                            // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.InlinedArray<InputProcessor<TValue>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct InlinedArray_InputProcessor_TValue
	{
	public:
		int32_t                                                    length;                                                  // 0x0000(0x0000)
		class InputProcessor_TValue*                               firstValue;                                              // 0x0000(0x0000)
		class InputProcessor_TValue_Array*                         additionalValues;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.Substring
	 * Size -> 0x0000
	 */
	struct Substring
	{
	public:
		class Il2CppString*                                        m_String;                                                // 0x0000(0x0000)
		int32_t                                                    m_Index;                                                 // 0x0008(0x0000)
		int32_t                                                    m_Length;                                                // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.InlinedArray<Substring>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct InlinedArray_Substring
	{
	public:
		int32_t                                                    length;                                                  // 0x0000(0x0000)
		struct Substring                                           firstValue;                                              // 0x0000(0x0000)
		class Substring_Array*                                     additionalValues;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.ReadOnlyArray<Gamepad>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ReadOnlyArray_Gamepad
	{
	public:
		class Gamepad_Array*                                       m_Array;                                                 // 0x0000(0x0000)
		int32_t                                                    m_StartIndex;                                            // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.ReadOnlyArray<Joystick>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ReadOnlyArray_Joystick
	{
	public:
		class Joystick_2_Array*                                    m_Array;                                                 // 0x0000(0x0000)
		int32_t                                                    m_StartIndex;                                            // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.ReadOnlyArray<KeyControl>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ReadOnlyArray_KeyControl
	{
	public:
		class KeyControl_Array*                                    m_Array;                                                 // 0x0000(0x0000)
		int32_t                                                    m_StartIndex;                                            // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.InlinedArray<Action<char>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct InlinedArray_Action_char
	{
	public:
		int32_t                                                    length;                                                  // 0x0000(0x0000)
		class Action_char*                                         firstValue;                                              // 0x0000(0x0000)
		class Action_char_Array*                                   additionalValues;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.InlinedArray<Action<IMECompositionString>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct InlinedArray_Action_IMECompositionString
	{
	public:
		int32_t                                                    length;                                                  // 0x0000(0x0000)
		class Action_IMECompositionString*                         firstValue;                                              // 0x0000(0x0000)
		class Action_IMECompositionString_Array*                   additionalValues;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputRemoting+Message
	 * Size -> 0x0000
	 */
	struct InputRemoting_Message
	{
	public:
		int32_t                                                    participantId;                                           // 0x0000(0x0000)
		int32_t                                                    type;                                                    // 0x0004(0x0000)
		class Byte_Array*                                          data;                                                    // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<InputRemoting.Message>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_InputRemoting_Message
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct InputRemoting_Message                               value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.ReadOnlyArray<TouchControl>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ReadOnlyArray_TouchControl
	{
	public:
		class TouchControl_Array*                                  m_Array;                                                 // 0x0000(0x0000)
		int32_t                                                    m_StartIndex;                                            // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.Dictionary.Enumerator<InternedString, Type>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Dictionary_Enumerator_InternedString__Type
	{
	public:
		class Dictionary_TKey__TValue*                             dictionary;                                              // 0x0000(0x0000)
		int32_t                                                    version;                                                 // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		struct KeyValuePair_TKey__TValue                           current;                                                 // 0x0000(0x0000)
		int32_t                                                    getEnumeratorRetType;                                    // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.Dictionary.Enumerator<InternedString, string>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Dictionary_Enumerator_InternedString__string
	{
	public:
		class Dictionary_TKey__TValue*                             dictionary;                                              // 0x0000(0x0000)
		int32_t                                                    version;                                                 // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		struct KeyValuePair_TKey__TValue                           current;                                                 // 0x0000(0x0000)
		int32_t                                                    getEnumeratorRetType;                                    // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.Dictionary.Enumerator<InternedString, Func<InputControlLayout>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Dictionary_Enumerator_InternedString__Func_InputControlLayout
	{
	public:
		class Dictionary_TKey__TValue*                             dictionary;                                              // 0x0000(0x0000)
		int32_t                                                    version;                                                 // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		struct KeyValuePair_TKey__TValue                           current;                                                 // 0x0000(0x0000)
		int32_t                                                    getEnumeratorRetType;                                    // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.InlinedArray<InternedString>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct InlinedArray_InternedString
	{
	public:
		int32_t                                                    length;                                                  // 0x0000(0x0000)
		struct InternedString                                      firstValue;                                              // 0x0000(0x0000)
		class InternedString_Array*                                additionalValues;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.CallbackArray<Action<InputDevice, InputDeviceChange>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct CallbackArray_Action_InputDevice__InputDeviceChange
	{
	public:
		bool                                                       m_CannotMutateCallbacksArray;                            // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_Callbacks;                                             // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToAdd;                                        // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToRemove;                                     // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.CallbackArray<Action<InputDevice, InputEventPtr>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct CallbackArray_Action_InputDevice__InputEventPtr
	{
	public:
		bool                                                       m_CannotMutateCallbacksArray;                            // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_Callbacks;                                             // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToAdd;                                        // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToRemove;                                     // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.CallbackArray<InputDeviceFindControlLayoutDelegate>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct CallbackArray_InputDeviceFindControlLayoutDelegate
	{
	public:
		bool                                                       m_CannotMutateCallbacksArray;                            // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_Callbacks;                                             // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToAdd;                                        // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToRemove;                                     // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.CallbackArray<InputDeviceCommandDelegate>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct CallbackArray_InputDeviceCommandDelegate
	{
	public:
		bool                                                       m_CannotMutateCallbacksArray;                            // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_Callbacks;                                             // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToAdd;                                        // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToRemove;                                     // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.CallbackArray<Action<string, InputControlLayoutChange>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct CallbackArray_Action_string__InputControlLayoutChange
	{
	public:
		bool                                                       m_CannotMutateCallbacksArray;                            // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_Callbacks;                                             // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToAdd;                                        // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToRemove;                                     // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.CallbackArray<Action<InputEventPtr, InputDevice>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct CallbackArray_Action_InputEventPtr__InputDevice
	{
	public:
		bool                                                       m_CannotMutateCallbacksArray;                            // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_Callbacks;                                             // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToAdd;                                        // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToRemove;                                     // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.CallbackArray<Action>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct CallbackArray_Action
	{
	public:
		bool                                                       m_CannotMutateCallbacksArray;                            // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_Callbacks;                                             // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToAdd;                                        // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToRemove;                                     // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputManager+StateChangeMonitorTimeout
	 * Size -> 0x0000
	 */
	struct InputManager_StateChangeMonitorTimeout
	{
	public:
		class InputControl*                                        control;                                                 // 0x0000(0x0000)
		double                                                     time;                                                    // 0x0008(0x0000)
		class IInputStateChangeMonitor*                            _monitor;                                                // 0x0010(0x0000)
		int64_t                                                    monitorIndex;                                            // 0x0018(0x0000)
		int32_t                                                    timerIndex;                                              // 0x0020(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.InlinedArray<InputManager.StateChangeMonitorTimeout>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct InlinedArray_InputManager_StateChangeMonitorTimeout
	{
	public:
		int32_t                                                    length;                                                  // 0x0000(0x0000)
		struct InputManager_StateChangeMonitorTimeout              firstValue;                                              // 0x0000(0x0000)
		class InputManager_StateChangeMonitorTimeout_Array*        additionalValues;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.ReadOnlyArray<string>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ReadOnlyArray_string
	{
	public:
		class String_Array*                                        m_Array;                                                 // 0x0000(0x0000)
		int32_t                                                    m_StartIndex;                                            // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputAction+CallbackContext
	 * Size -> 0x0000
	 */
	struct InputAction_CallbackContext
	{
	public:
		class InputActionState*                                    m_State;                                                 // 0x0000(0x0000)
		int32_t                                                    m_ActionIndex;                                           // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<InputAction.CallbackContext>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_InputAction_CallbackContext
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct InputAction_CallbackContext                         value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.ReadOnlyArray<PlayerInput.ActionEvent>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ReadOnlyArray_PlayerInput_ActionEvent
	{
	public:
		class PlayerInput_ActionEvent_Array*                       m_Array;                                                 // 0x0000(0x0000)
		int32_t                                                    m_StartIndex;                                            // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.ReadOnlyArray<PlayerInput>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ReadOnlyArray_PlayerInput
	{
	public:
		class PlayerInput_Array*                                   m_Array;                                                 // 0x0000(0x0000)
		int32_t                                                    m_StartIndex;                                            // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.CallbackArray<Action<PlayerInput>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct CallbackArray_Action_PlayerInput
	{
	public:
		bool                                                       m_CannotMutateCallbacksArray;                            // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_Callbacks;                                             // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToAdd;                                        // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToRemove;                                     // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.InlinedArray<ulong>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct InlinedArray_ulong
	{
	public:
		int32_t                                                    length;                                                  // 0x0000(0x0000)
		uint64_t                                                   firstValue;                                              // 0x0000(0x0000)
		class UInt64_Array*                                        additionalValues;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Users.InputUserAccountHandle
	 * Size -> 0x0000
	 */
	struct InputUserAccountHandle
	{
	public:
		class Il2CppString*                                        m_ApiName;                                               // 0x0000(0x0000)
		uint64_t                                                   m_Handle;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<InputUserAccountHandle>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_InputUserAccountHandle
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct InputUserAccountHandle                              value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Users.InputUser+OngoingAccountSelection
	 * Size -> 0x0000
	 */
	struct InputUser_OngoingAccountSelection
	{
	public:
		class InputDevice*                                         device;                                                  // 0x0000(0x0000)
		uint32_t                                                   userId;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.InlinedArray<InputUser.OngoingAccountSelection>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct InlinedArray_InputUser_OngoingAccountSelection
	{
	public:
		int32_t                                                    length;                                                  // 0x0000(0x0000)
		struct InputUser_OngoingAccountSelection                   firstValue;                                              // 0x0000(0x0000)
		class InputUser_OngoingAccountSelection_Array*             additionalValues;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.CallbackArray<Action<InputUser, InputUserChange, InputDevice>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct CallbackArray_Action_InputUser__InputUserChange__InputDevice
	{
	public:
		bool                                                       m_CannotMutateCallbacksArray;                            // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_Callbacks;                                             // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToAdd;                                        // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToRemove;                                     // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.CallbackArray<Action<InputControl, InputEventPtr>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct CallbackArray_Action_InputControl__InputEventPtr
	{
	public:
		bool                                                       m_CannotMutateCallbacksArray;                            // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_Callbacks;                                             // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToAdd;                                        // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToRemove;                                     // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.CallbackArray<Func<InputDevice, InputEventPtr, bool>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct CallbackArray_Func_InputDevice__InputEventPtr__bool
	{
	public:
		bool                                                       m_CannotMutateCallbacksArray;                            // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_Callbacks;                                             // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToAdd;                                        // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToRemove;                                     // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.ReadOnlyArray<InputUser>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ReadOnlyArray_InputUser
	{
	public:
		class InputUser_Array*                                     m_Array;                                                 // 0x0000(0x0000)
		int32_t                                                    m_StartIndex;                                            // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<InputUser>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_InputUser
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct InputUser                                           value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<float>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_float
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		float                                                      value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.InlinedArray<int>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct InlinedArray_int
	{
	public:
		int32_t                                                    length;                                                  // 0x0000(0x0000)
		int32_t                                                    firstValue;                                              // 0x0000(0x0000)
		class Int32_Array*                                         additionalValues;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.InlinedArray<InputControl>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct InlinedArray_InputControl
	{
	public:
		int32_t                                                    length;                                                  // 0x0000(0x0000)
		class InputControl*                                        firstValue;                                              // 0x0000(0x0000)
		class InputControl_Array*                                  additionalValues;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UI.UnityEngine.EventSystems.RaycastResult
	 * Size -> 0x0000
	 */
	struct RaycastResult
	{
	public:
		class GameObject*                                          m_GameObject;                                            // 0x0000(0x0000)
		class BaseRaycaster*                                       module;                                                  // 0x0008(0x0000)
		float                                                      distance;                                                // 0x0010(0x0000)
		float                                                      index;                                                   // 0x0014(0x0000)
		int32_t                                                    depth;                                                   // 0x0018(0x0000)
		int32_t                                                    sortingLayer;                                            // 0x001C(0x0000)
		int32_t                                                    sortingOrder;                                            // 0x0020(0x0000)
		struct Vector3                                             worldPosition;                                           // 0x0024(0x0000)
		struct Vector3                                             worldNormal;                                             // 0x0030(0x0000)
		struct Vector2                                             screenPosition;                                          // 0x003C(0x0000)
		int32_t                                                    displayIndex;                                            // 0x0044(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.UI.PointerModel+ButtonState
	 * Size -> 0x0000
	 */
	struct PointerModel_ButtonState
	{
	public:
		bool                                                       m_IsPressed;                                             // 0x0000(0x0000)
		int32_t                                                    m_FramePressState;                                       // 0x0004(0x0000)
		float                                                      m_PressTime;                                             // 0x0008(0x0000)
		struct RaycastResult                                       m_PressRaycast;                                          // 0x0010(0x0000)
		class GameObject*                                          m_PressObject;                                           // 0x0058(0x0000)
		class GameObject*                                          m_RawPressObject;                                        // 0x0060(0x0000)
		class GameObject*                                          m_LastPressObject;                                       // 0x0068(0x0000)
		class GameObject*                                          m_DragObject;                                            // 0x0070(0x0000)
		struct Vector2                                             m_PressPosition;                                         // 0x0078(0x0000)
		float                                                      m_ClickTime;                                             // 0x0080(0x0000)
		int32_t                                                    m_ClickCount;                                            // 0x0084(0x0000)
		bool                                                       m_Dragging;                                              // 0x0088(0x0000)
		bool                                                       m_ClickedOnSameGameObject;                               // 0x0089(0x0000)
		bool                                                       m_IgnoreNextClick;                                       // 0x008A(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Quaternion
	 * Size -> 0x0000
	 */
	struct Quaternion
	{
	public:
		float                                                      x;                                                       // 0x0000(0x0000)
		float                                                      y;                                                       // 0x0004(0x0000)
		float                                                      z;                                                       // 0x0008(0x0000)
		float                                                      w;                                                       // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.UI.PointerModel
	 * Size -> 0x0000
	 */
	struct PointerModel
	{
	public:
		bool                                                       changedThisFrame;                                        // 0x0000(0x0000)
		struct PointerModel_ButtonState                            leftButton;                                              // 0x0008(0x0000)
		struct PointerModel_ButtonState                            rightButton;                                             // 0x0098(0x0000)
		struct PointerModel_ButtonState                            middleButton;                                            // 0x0128(0x0000)
		class ExtendedPointerEventData*                            eventData;                                               // 0x01B8(0x0000)
		struct Vector2                                             m_ScreenPosition;                                        // 0x01C0(0x0000)
		struct Vector2                                             m_ScrollDelta;                                           // 0x01C8(0x0000)
		struct Vector3                                             m_WorldPosition;                                         // 0x01D0(0x0000)
		struct Quaternion                                          m_WorldOrientation;                                      // 0x01DC(0x0000)
		float                                                      m_Pressure;                                              // 0x01EC(0x0000)
		float                                                      m_AzimuthAngle;                                          // 0x01F0(0x0000)
		float                                                      m_AltitudeAngle;                                         // 0x01F4(0x0000)
		float                                                      m_Twist;                                                 // 0x01F8(0x0000)
		struct Vector2                                             m_Radius;                                                // 0x01FC(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.InlinedArray<PointerModel>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct InlinedArray_PointerModel
	{
	public:
		int32_t                                                    length;                                                  // 0x0000(0x0000)
		struct PointerModel                                        firstValue;                                              // 0x0000(0x0000)
		class PointerModel_Array*                                  additionalValues;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.InlinedArray<TrackedDeviceRaycaster>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct InlinedArray_TrackedDeviceRaycaster
	{
	public:
		int32_t                                                    length;                                                  // 0x0000(0x0000)
		class TrackedDeviceRaycaster*                              firstValue;                                              // 0x0000(0x0000)
		class TrackedDeviceRaycaster_Array*                        additionalValues;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<byte>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_byte
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.FourCC
	 * Size -> 0x0000
	 */
	struct FourCC
	{
	public:
		int32_t                                                    m_Code;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.InputEventPtr
	 * Size -> 0x0000
	 */
	struct InputEventPtr
	{
	public:
		struct InputEvent*                                         m_EventPtr;                                              // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.OnScreen.OnScreenControl+OnScreenDeviceInfo
	 * Size -> 0x0000
	 */
	struct OnScreenControl_OnScreenDeviceInfo
	{
	public:
		struct InputEventPtr                                       eventPtr;                                                // 0x0000(0x0000)
		struct NativeArray_byte                                    buffer;                                                  // 0x0008(0x0000)
		class InputDevice*                                         device;                                                  // 0x0018(0x0000)
		class OnScreenControl*                                     firstControl;                                            // 0x0020(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.InlinedArray<OnScreenControl.OnScreenDeviceInfo>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct InlinedArray_OnScreenControl_OnScreenDeviceInfo
	{
	public:
		int32_t                                                    length;                                                  // 0x0000(0x0000)
		struct OnScreenControl_OnScreenDeviceInfo                  firstValue;                                              // 0x0000(0x0000)
		class OnScreenControl_OnScreenDeviceInfo_Array*            additionalValues;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.ReadOnlyArray<HIDSupport.HIDPageUsage>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ReadOnlyArray_HIDSupport_HIDPageUsage
	{
	public:
		class HIDSupport_HIDPageUsage_Array*                       m_Array;                                                 // 0x0000(0x0000)
		int32_t                                                    m_StartIndex;                                            // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.InlinedArray<Touchscreen>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct InlinedArray_Touchscreen
	{
	public:
		int32_t                                                    length;                                                  // 0x0000(0x0000)
		class Touchscreen*                                         firstValue;                                              // 0x0000(0x0000)
		class Touchscreen_Array*                                   additionalValues;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.CallbackArray<Action<Finger>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct CallbackArray_Action_Finger
	{
	public:
		bool                                                       m_CannotMutateCallbacksArray;                            // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_Callbacks;                                             // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToAdd;                                        // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToRemove;                                     // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.ReadOnlyArray<Touch>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ReadOnlyArray_Touch
	{
	public:
		class Touch_Array*                                         m_Array;                                                 // 0x0000(0x0000)
		int32_t                                                    m_StartIndex;                                            // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.ReadOnlyArray<Finger>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ReadOnlyArray_Finger
	{
	public:
		class Finger_Array*                                        m_Array;                                                 // 0x0000(0x0000)
		int32_t                                                    m_StartIndex;                                            // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.InputStateHistory+Record<TValue>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct InputStateHistory_Record_TValue
	{
	public:
		class InputStateHistory_TValue*                            m_Owner;                                                 // 0x0000(0x0000)
		int32_t                                                    m_IndexPlusOne;                                          // 0x0000(0x0000)
		uint32_t                                                   m_Version;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.InputStateHistory.Record<TouchState>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct InputStateHistory_Record_TouchState
	{
	public:
		class InputStateHistory_TValue*                            m_Owner;                                                 // 0x0000(0x0000)
		int32_t                                                    m_IndexPlusOne;                                          // 0x0000(0x0000)
		uint32_t                                                   m_Version;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Vector4
	 * Size -> 0x0000
	 */
	struct Vector4
	{
	public:
		float                                                      x;                                                       // 0x0000(0x0000)
		float                                                      y;                                                       // 0x0004(0x0000)
		float                                                      z;                                                       // 0x0008(0x0000)
		float                                                      w;                                                       // 0x000C(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Color
	 * Size -> 0x0000
	 */
	struct Color
	{
	public:
		float                                                      r;                                                       // 0x0000(0x0000)
		float                                                      g;                                                       // 0x0004(0x0000)
		float                                                      b;                                                       // 0x0008(0x0000)
		float                                                      a;                                                       // 0x000C(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<Color>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_Color
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct Color                                               value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<long>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_long
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int64_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.InlinedArray<IObserver<InputEventPtr>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct InlinedArray_IObserver_InputEventPtr
	{
	public:
		int32_t                                                    length;                                                  // 0x0000(0x0000)
		class IObserver_InputEventPtr*                             firstValue;                                              // 0x0000(0x0000)
		class IObserver_InputEventPtr_Array*                       additionalValues;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.InlinedArray<KeyValuePair<int, int>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct InlinedArray_KeyValuePair_int__int
	{
	public:
		int32_t                                                    length;                                                  // 0x0000(0x0000)
		struct KeyValuePair_int__int                               firstValue;                                              // 0x0000(0x0000)
		class KeyValuePair_int__int_Array*                         additionalValues;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.InlinedArray<InputDevice>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct InlinedArray_InputDevice
	{
	public:
		int32_t                                                    length;                                                  // 0x0000(0x0000)
		class InputDevice*                                         firstValue;                                              // 0x0000(0x0000)
		class InputDevice_Array*                                   additionalValues;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.ReadOnlyArray<InputEventTrace.DeviceInfo>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ReadOnlyArray_InputEventTrace_DeviceInfo
	{
	public:
		class InputEventTrace_DeviceInfo_Array*                    m_Array;                                                 // 0x0000(0x0000)
		int32_t                                                    m_StartIndex;                                            // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.CallbackArray<Action<InputEventPtr>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct CallbackArray_Action_InputEventPtr
	{
	public:
		bool                                                       m_CannotMutateCallbacksArray;                            // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_Callbacks;                                             // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToAdd;                                        // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToRemove;                                     // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<InputUpdateType>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_InputUpdateType
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.ReadOnlyArray<NameAndParameters>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ReadOnlyArray_NameAndParameters
	{
	public:
		class NameAndParameters_Array*                             m_Array;                                                 // 0x0000(0x0000)
		int32_t                                                    m_StartIndex;                                            // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.ReadOnlyArray<InputControlLayout.ControlItem>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ReadOnlyArray_InputControlLayout_ControlItem
	{
	public:
		class InputControlLayout_ControlItem_Array*                m_Array;                                                 // 0x0000(0x0000)
		int32_t                                                    m_StartIndex;                                            // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Layouts.InputControlLayout+ControlItem
	 * Size -> 0x0000
	 */
	struct InputControlLayout_ControlItem
	{
	public:
		struct InternedString                                      name_k__BackingField;                                    // 0x0000(0x0000)
		struct InternedString                                      layout_k__BackingField;                                  // 0x0010(0x0000)
		struct InternedString                                      variants_k__BackingField;                                // 0x0020(0x0000)
		class Il2CppString*                                        useStateFrom_k__BackingField;                            // 0x0030(0x0000)
		class Il2CppString*                                        displayName_k__BackingField;                             // 0x0038(0x0000)
		class Il2CppString*                                        shortDisplayName_k__BackingField;                        // 0x0040(0x0000)
		struct ReadOnlyArray_InternedString                        usages_k__BackingField;                                  // 0x0048(0x0000)
		struct ReadOnlyArray_InternedString                        aliases_k__BackingField;                                 // 0x0058(0x0000)
		struct ReadOnlyArray_NamedValue                            parameters_k__BackingField;                              // 0x0068(0x0000)
		struct ReadOnlyArray_NameAndParameters                     processors_k__BackingField;                              // 0x0078(0x0000)
		uint32_t                                                   offset_k__BackingField;                                  // 0x0088(0x0000)
		uint32_t                                                   bit_k__BackingField;                                     // 0x008C(0x0000)
		uint32_t                                                   sizeInBits_k__BackingField;                              // 0x0090(0x0000)
		struct FourCC                                              format_k__BackingField;                                  // 0x0094(0x0000)
		int32_t                                                    flags_k__BackingField;                                   // 0x0098(0x0000)
		int32_t                                                    arraySize_k__BackingField;                               // 0x009C(0x0000)
		struct PrimitiveValue                                      defaultState_k__BackingField;                            // 0x00A0(0x0000)
		struct PrimitiveValue                                      minValue_k__BackingField;                                // 0x00B0(0x0000)
		struct PrimitiveValue                                      maxValue_k__BackingField;                                // 0x00C0(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<InputControlLayout.ControlItem>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_InputControlLayout_ControlItem
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct InputControlLayout_ControlItem                      value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<string, object>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_string__object
	{
	public:
		class Il2CppString*                                        key;                                                     // 0x0000(0x0000)
		class Il2CppObject*                                        value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<InternedString, object>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_InternedString__object
	{
	public:
		struct InternedString                                      key;                                                     // 0x0000(0x0000)
		class Il2CppObject*                                        value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.InlinedArray<InputAction>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct InlinedArray_InputAction
	{
	public:
		int32_t                                                    length;                                                  // 0x0000(0x0000)
		class InputAction*                                         firstValue;                                              // 0x0000(0x0000)
		class InputAction_Array*                                   additionalValues;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.InlinedArray<InputActionMap>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct InlinedArray_InputActionMap
	{
	public:
		int32_t                                                    length;                                                  // 0x0000(0x0000)
		class InputActionMap*                                      firstValue;                                              // 0x0000(0x0000)
		class InputActionMap_Array*                                additionalValues;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.InlinedArray<InputActionState>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct InlinedArray_InputActionState
	{
	public:
		int32_t                                                    length;                                                  // 0x0000(0x0000)
		class InputActionState*                                    firstValue;                                              // 0x0000(0x0000)
		class InputActionState_Array*                              additionalValues;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<TValue>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_TValue
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.CallbackArray<Action<TValue>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct CallbackArray_Action_TValue
	{
	public:
		bool                                                       m_CannotMutateCallbacksArray;                            // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_Callbacks;                                             // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToAdd;                                        // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToRemove;                                     // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.CallbackArray<Action<TValue1, TValue2>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct CallbackArray_Action_TValue1__TValue2
	{
	public:
		bool                                                       m_CannotMutateCallbacksArray;                            // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_Callbacks;                                             // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToAdd;                                        // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToRemove;                                     // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.CallbackArray<Func<TValue1, TValue2, bool>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct CallbackArray_Func_TValue1__TValue2__bool
	{
	public:
		bool                                                       m_CannotMutateCallbacksArray;                            // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_Callbacks;                                             // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToAdd;                                        // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToRemove;                                     // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.JsonParser+JsonString
	 * Size -> 0x0000
	 */
	struct JsonParser_JsonString
	{
	public:
		struct Substring                                           text;                                                    // 0x0000(0x0000)
		bool                                                       hasEscapes;                                              // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.JsonParser+JsonValue
	 * Size -> 0x0000
	 */
	struct JsonParser_JsonValue
	{
	public:
		int32_t                                                    type;                                                    // 0x0000(0x0000)
		bool                                                       boolValue;                                               // 0x0004(0x0000)
		double                                                     realValue;                                               // 0x0008(0x0000)
		int64_t                                                    integerValue;                                            // 0x0010(0x0000)
		struct JsonParser_JsonString                               stringValue;                                             // 0x0018(0x0000)
		class List_JsonParser_JsonValue*                           arrayValue;                                              // 0x0030(0x0000)
		class Dictionary_string__JsonParser_JsonValue*             objectValue;                                             // 0x0038(0x0000)
		class Il2CppObject*                                        anyValue;                                                // 0x0040(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<string, JsonParser.JsonValue>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_string__JsonParser_JsonValue
	{
	public:
		class Il2CppString*                                        key;                                                     // 0x0000(0x0000)
		struct JsonParser_JsonValue                                value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.CustomStyleProperty<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct CustomStyleProperty_T
	{
	public:
		class Il2CppString*                                        name_k__BackingField;                                    // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.CustomStyleProperty<float>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct CustomStyleProperty_float
	{
	public:
		class Il2CppString*                                        name_k__BackingField;                                    // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.CustomStyleProperty<int>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct CustomStyleProperty_int
	{
	public:
		class Il2CppString*                                        name_k__BackingField;                                    // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.CustomStyleProperty<Color>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct CustomStyleProperty_Color
	{
	public:
		class Il2CppString*                                        name_k__BackingField;                                    // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.CustomStyleProperty<Texture2D>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct CustomStyleProperty_Texture2D
	{
	public:
		class Il2CppString*                                        name_k__BackingField;                                    // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.CustomStyleProperty<Sprite>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct CustomStyleProperty_Sprite
	{
	public:
		class Il2CppString*                                        name_k__BackingField;                                    // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.CustomStyleProperty<VectorImage>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct CustomStyleProperty_VectorImage
	{
	public:
		class Il2CppString*                                        name_k__BackingField;                                    // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.CustomStyleProperty<string>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct CustomStyleProperty_string
	{
	public:
		class Il2CppString*                                        name_k__BackingField;                                    // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StylePropertyAnimationSystem+AnimationDataSet<TTimingData, TStyleData>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct StylePropertyAnimationSystem_AnimationDataSet_TTimingData__TStyleData
	{
	public:
		class VisualElement_Array*                                 elements;                                                // 0x0000(0x0000)
		class StylePropertyId_Array*                               properties;                                              // 0x0000(0x0000)
		class UObject_Array*                                       timing;                                                  // 0x0000(0x0000)
		class UObject_Array*                                       style;                                                   // 0x0000(0x0000)
		int32_t                                                    count;                                                   // 0x0000(0x0000)
		class Dictionary_StylePropertyAnimationSystem_ElementPropertyPair__int* indices;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StylePropertyAnimationSystem.AnimationDataSet<StylePropertyAnimationSystem.Values.TimingData<T>, StylePropertyAnimationSystem.Values.StyleData<T>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct StylePropertyAnimationSystem_AnimationDataSet_StylePropertyAnimationSystem_Values_TimingData_T___StylePropertyAnimationSystem_Values_StyleData_T
	{
	public:
		class VisualElement_Array*                                 elements;                                                // 0x0000(0x0000)
		class StylePropertyId_Array*                               properties;                                              // 0x0000(0x0000)
		class StylePropertyAnimationSystem_Values_TimingData_T_Array* timing;                                                  // 0x0000(0x0000)
		class StylePropertyAnimationSystem_Values_StyleData_T_Array* style;                                                   // 0x0000(0x0000)
		int32_t                                                    count;                                                   // 0x0000(0x0000)
		class Dictionary_StylePropertyAnimationSystem_ElementPropertyPair__int* indices;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StylePropertyAnimationSystem.AnimationDataSet<StylePropertyAnimationSystem.Values.EmptyData<T>, T>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct StylePropertyAnimationSystem_AnimationDataSet_StylePropertyAnimationSystem_Values_EmptyData_T___T
	{
	public:
		class VisualElement_Array*                                 elements;                                                // 0x0000(0x0000)
		class StylePropertyId_Array*                               properties;                                              // 0x0000(0x0000)
		class StylePropertyAnimationSystem_Values_EmptyData_T_Array* timing;                                                  // 0x0000(0x0000)
		class UObject_Array*                                       style;                                                   // 0x0000(0x0000)
		int32_t                                                    count;                                                   // 0x0000(0x0000)
		class Dictionary_StylePropertyAnimationSystem_ElementPropertyPair__int* indices;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.Dictionary.Enumerator<int, Panel>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Dictionary_Enumerator_int__Panel
	{
	public:
		class Dictionary_TKey__TValue*                             dictionary;                                              // 0x0000(0x0000)
		int32_t                                                    version;                                                 // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		struct KeyValuePair_TKey__TValue                           current;                                                 // 0x0000(0x0000)
		int32_t                                                    getEnumeratorRetType;                                    // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UQueryState<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct UQueryState_T
	{
	public:
		class VisualElement*                                       m_Element;                                               // 0x0000(0x0000)
		class List_RuleMatcher*                                    m_Matchers;                                              // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UQueryBuilder<T2>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct UQueryBuilder_T2
	{
	public:
		class List_StyleSelector*                                  m_StyleSelectors;                                        // 0x0000(0x0000)
		class List_StyleSelectorPart*                              m_Parts;                                                 // 0x0000(0x0000)
		class VisualElement*                                       m_Element;                                               // 0x0000(0x0000)
		class List_RuleMatcher*                                    m_Matchers;                                              // 0x0000(0x0000)
		int32_t                                                    m_Relationship;                                          // 0x0000(0x0000)
		int32_t                                                    pseudoStatesMask;                                        // 0x0000(0x0000)
		int32_t                                                    negatedPseudoStatesMask;                                 // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UQueryState<VisualElement>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct UQueryState_VisualElement
	{
	public:
		class VisualElement*                                       m_Element;                                               // 0x0000(0x0000)
		class List_RuleMatcher*                                    m_Matchers;                                              // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StylePropertyName
	 * Size -> 0x0000
	 */
	struct StylePropertyName
	{
	public:
		int32_t                                                    id_k__BackingField;                                      // 0x0000(0x0000)
		class Il2CppString*                                        name_k__BackingField;                                    // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.List.Enumerator<StylePropertyName>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct List_Enumerator_StylePropertyName
	{
	public:
		class List_T*                                              list;                                                    // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    version;                                                 // 0x0000(0x0000)
		struct StylePropertyName                                   current;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeSlice<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct NativeSlice_T
	{
	public:
		uint8_t*                                                   m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Stride;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeSlice<Vertex>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeSlice_Vertex
	{
	public:
		uint8_t*                                                   m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Stride;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeSlice<ushort>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeSlice_ushort
	{
	public:
		uint8_t*                                                   m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Stride;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleDataRef<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct StyleDataRef_T
	{
	public:
		class StyleDataRef_RefCounted_T*                           m_Ref;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleDataRef<InheritedData>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct StyleDataRef_InheritedData
	{
	public:
		class StyleDataRef_RefCounted_T*                           m_Ref;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleDataRef<LayoutData>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct StyleDataRef_LayoutData
	{
	public:
		class StyleDataRef_RefCounted_T*                           m_Ref;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleDataRef<RareData>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct StyleDataRef_RareData
	{
	public:
		class StyleDataRef_RefCounted_T*                           m_Ref;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleDataRef<TransformData>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct StyleDataRef_TransformData
	{
	public:
		class StyleDataRef_RefCounted_T*                           m_Ref;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleDataRef<TransitionData>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct StyleDataRef_TransitionData
	{
	public:
		class StyleDataRef_RefCounted_T*                           m_Ref;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleDataRef<VisualData>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct StyleDataRef_VisualData
	{
	public:
		class StyleDataRef_RefCounted_T*                           m_Ref;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleEnum<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct StyleEnum_T
	{
	public:
		class Il2CppObject*                                        m_Value;                                                 // 0x0000(0x0000)
		int32_t                                                    m_Keyword;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleEnum<DisplayStyle>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct StyleEnum_DisplayStyle
	{
	public:
		int32_t                                                    m_Value;                                                 // 0x0000(0x0000)
		int32_t                                                    m_Keyword;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleEnum<FlexDirection>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct StyleEnum_FlexDirection
	{
	public:
		int32_t                                                    m_Value;                                                 // 0x0000(0x0000)
		int32_t                                                    m_Keyword;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleEnum<Position>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct StyleEnum_Position
	{
	public:
		int32_t                                                    m_Value;                                                 // 0x0000(0x0000)
		int32_t                                                    m_Keyword;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleEnum<Visibility>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct StyleEnum_Visibility
	{
	public:
		int32_t                                                    m_Value;                                                 // 0x0000(0x0000)
		int32_t                                                    m_Keyword;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<TextVertex>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_TextVertex
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.VisualTreeAsset+UsingEntry
	 * Size -> 0x0000
	 */
	struct VisualTreeAsset_UsingEntry
	{
	public:
		class Il2CppString*                                        alias;                                                   // 0x0000(0x0000)
		class Il2CppString*                                        path;                                                    // 0x0008(0x0000)
		class VisualTreeAsset*                                     asset;                                                   // 0x0010(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.List.Enumerator<VisualTreeAsset.UsingEntry>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct List_Enumerator_VisualTreeAsset_UsingEntry
	{
	public:
		class List_T*                                              list;                                                    // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    version;                                                 // 0x0000(0x0000)
		struct VisualTreeAsset_UsingEntry                          current;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.List.Enumerator<VisualElementAsset>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct List_Enumerator_VisualElementAsset
	{
	public:
		class List_T*                                              list;                                                    // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    version;                                                 // 0x0000(0x0000)
		class VisualElementAsset*                                  current;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.List.Enumerator<StyleSheet>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct List_Enumerator_StyleSheet
	{
	public:
		class List_T*                                              list;                                                    // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    version;                                                 // 0x0000(0x0000)
		class StyleSheet*                                          current;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.List.Enumerator<string>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct List_Enumerator_string
	{
	public:
		class List_T*                                              list;                                                    // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    version;                                                 // 0x0000(0x0000)
		class Il2CppString*                                        current;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeSlice<Transform3x4>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeSlice_Transform3x4
	{
	public:
		uint8_t*                                                   m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Stride;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeSlice<Vector4>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeSlice_Vector4
	{
	public:
		uint8_t*                                                   m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Stride;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<Transform3x4>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_Transform3x4
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<Vector4>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_Vector4
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeSlice<DrawBufferRange>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeSlice_DrawBufferRange
	{
	public:
		uint8_t*                                                   m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Stride;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<GfxUpdateBufferRange>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_GfxUpdateBufferRange
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.Implementation.UIRStylePainter.TempDataAlloc<Vertex>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct UIRStylePainter_TempDataAlloc_Vertex
	{
	public:
		int32_t                                                    maxPoolElemCount;                                        // 0x0000(0x0000)
		struct NativeArray_T                                       pool;                                                    // 0x0000(0x0000)
		class List_NativeArray_T*                                  excess;                                                  // 0x0000(0x0000)
		uint32_t                                                   takenFromPool;                                           // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.Implementation.UIRStylePainter.TempDataAlloc<ushort>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct UIRStylePainter_TempDataAlloc_ushort
	{
	public:
		int32_t                                                    maxPoolElemCount;                                        // 0x0000(0x0000)
		struct NativeArray_T                                       pool;                                                    // 0x0000(0x0000)
		class List_NativeArray_T*                                  excess;                                                  // 0x0000(0x0000)
		uint32_t                                                   takenFromPool;                                           // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<Vertex>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_Vertex
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<ushort>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_ushort
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<ReferenceLoopHandling>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_ReferenceLoopHandling
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<TypeNameHandling>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_TypeNameHandling
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<MissingMemberHandling>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_MissingMemberHandling
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<Required>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_Required
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<NullValueHandling>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_NullValueHandling
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<JsonPosition>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_JsonPosition
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct JsonPosition                                        value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<DefaultValueHandling>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_DefaultValueHandling
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<ObjectCreationHandling>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_ObjectCreationHandling
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<double>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_double
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		double                                                     value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<Decimal>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_Decimal
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct Decimal                                             value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<DateTimeOffset>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_DateTimeOffset
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct DateTimeOffset                                      value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<DateTimeZoneHandling>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_DateTimeZoneHandling
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<DateParseHandling>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_DateParseHandling
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<FloatParseHandling>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_FloatParseHandling
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<Formatting>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_Formatting
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<DateFormatHandling>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_DateFormatHandling
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<FloatFormatHandling>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_FloatFormatHandling
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<StringEscapeHandling>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_StringEscapeHandling
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<TypeNameAssemblyFormatHandling>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_TypeNameAssemblyFormatHandling
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<PreserveReferencesHandling>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_PreserveReferencesHandling
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<StreamingContext>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_StreamingContext
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct StreamingContext                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<ConstructorHandling>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_ConstructorHandling
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<MetadataPropertyHandling>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_MetadataPropertyHandling
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter<char>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_char
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
		bool                                                       m_continueOnCapturedContext;                             // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<char>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_char
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<Nullable<bool>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_Nullable_bool
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<Nullable<DateTime>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_Nullable_DateTime
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<Nullable<DateTimeOffset>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_Nullable_DateTimeOffset
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<Nullable<Decimal>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_Nullable_Decimal
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<Nullable<double>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_Nullable_double
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<Guid>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_Guid
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct Guid                                                value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<sbyte>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_sbyte
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int8_t                                                     value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<short>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_short
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int16_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<ulong>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_ulong
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		uint64_t                                                   value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<ushort>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_ushort
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		uint16_t                                                   value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<string, JsonSchemaModel>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_string__JsonSchemaModel
	{
	public:
		class Il2CppString*                                        key;                                                     // 0x0000(0x0000)
		class JsonSchemaModel*                                     value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<string, bool>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_string__bool
	{
	public:
		class Il2CppString*                                        key;                                                     // 0x0000(0x0000)
		bool                                                       value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<JsonSchemaType>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_JsonSchemaType
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.Utilities.StructMultiKey<T1, T2>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct StructMultiKey_T1__T2
	{
	public:
		class Il2CppObject*                                        Value1;                                                  // 0x0000(0x0000)
		class Il2CppObject*                                        Value2;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.Utilities.StructMultiKey<Type, Type>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct StructMultiKey_Type__Type
	{
	public:
		class Type*                                                Value1;                                                  // 0x0000(0x0000)
		class Type*                                                Value2;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.Utilities.StructMultiKey<Type, NamingStrategy>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct StructMultiKey_Type__NamingStrategy
	{
	public:
		class Type*                                                Value1;                                                  // 0x0000(0x0000)
		class NamingStrategy*                                      Value2;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.Utilities.StructMultiKey<string, string>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct StructMultiKey_string__string
	{
	public:
		class Il2CppString*                                        Value1;                                                  // 0x0000(0x0000)
		class Il2CppString*                                        Value2;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<object, object>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_object__object
	{
	public:
		class Il2CppObject*                                        key;                                                     // 0x0000(0x0000)
		class Il2CppObject*                                        value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<JsonSerializerInternalReader.PropertyPresence>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_JsonSerializerInternalReader_PropertyPresence
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<string, JsonSchemaType>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_string__JsonSchemaType
	{
	public:
		class Il2CppString*                                        key;                                                     // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<JArray>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_JArray
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<JConstructor>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_JConstructor
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.Linq.JEnumerable<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct JEnumerable_T
	{
	public:
		class IEnumerable_T*                                       enumerable;                                              // 0x0000(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.Linq.JEnumerable<JToken>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct JEnumerable_JToken
	{
	public:
		class IEnumerable_T*                                       enumerable;                                              // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<JObject>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_JObject
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<string, JToken>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_string__JToken
	{
	public:
		class Il2CppString*                                        key;                                                     // 0x0000(0x0000)
		class JToken*                                              value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<JProperty>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_JProperty
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<JRaw>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_JRaw
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<JToken>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_JToken
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter<JObject>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_JObject
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
		bool                                                       m_continueOnCapturedContext;                             // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter<JArray>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_JArray
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
		bool                                                       m_continueOnCapturedContext;                             // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter<JConstructor>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_JConstructor
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
		bool                                                       m_continueOnCapturedContext;                             // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter<JProperty>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_JProperty
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
		bool                                                       m_continueOnCapturedContext;                             // 0x0000(0x0000)
	};

	/**
	 * Struct System.Numerics.System.Numerics.BigInteger
	 * Size -> 0x0000
	 */
	struct BigInteger_4
	{
	public:
		int32_t                                                    sign;                                                    // 0x0000(0x0000)
		class UInt32_Array*                                        bits;                                                    // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<BigInteger>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_BigInteger
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct BigInteger_4                                        value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<JsonToken>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_JsonToken
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<JTokenType>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_JTokenType
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.List.Enumerator<int>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct List_Enumerator_int
	{
	public:
		class List_T*                                              list;                                                    // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    version;                                                 // 0x0000(0x0000)
		int32_t                                                    current;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct System.Data.System.Data.DataKey
	 * Size -> 0x0000
	 */
	struct DataKey
	{
	public:
		class DataColumn_Array*                                    columns;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<DataKey>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_DataKey
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct DataKey                                             value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct System.Data.System.Data.RBTree.RBTreeEnumerator<int>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct RBTree_RBTreeEnumerator_int
	{
	public:
		class RBTree_K*                                            tree;                                                    // 0x0000(0x0000)
		int32_t                                                    version;                                                 // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    mainTreeNodeId;                                          // 0x0000(0x0000)
		int32_t                                                    current;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<Type, XmlRootAttribute>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_Type__XmlRootAttribute
	{
	public:
		class Type*                                                key;                                                     // 0x0000(0x0000)
		class XmlRootAttribute*                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<LightUtility.LightMeshVertex>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_LightUtility_LightMeshVertex
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<float4x4>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_float4x4
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<DecalSubDrawCall>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_DecalSubDrawCall
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<int>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_int
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<float2>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_float2
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<float4>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_float4
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<float>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_float
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<BoundingSphere>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_BoundingSphere
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<DecalEntity>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_DecalEntity
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<DecalScaleMode>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_DecalScaleMode
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<float3>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_float3
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<quaternion>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_quaternion
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<bool>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_bool
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<PreTile>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_PreTile
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<RenderPassEvent>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_RenderPassEvent
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.LightCookieManager.WorkSlice<LightCookieManager.LightCookieMapping>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct LightCookieManager_WorkSlice_LightCookieManager_LightCookieMapping
	{
	public:
		class LightCookieManager_LightCookieMapping_Array*         m_Data;                                                  // 0x0000(0x0000)
		int32_t                                                    m_Start;                                                 // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.LightCookieManager.WorkSlice<Vector4>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct LightCookieManager_WorkSlice_Vector4
	{
	public:
		class Vector4_Array*                                       m_Data;                                                  // 0x0000(0x0000)
		int32_t                                                    m_Start;                                                 // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<VisibleLight>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_VisibleLight
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<LightType>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_LightType
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<LightMinMaxZ>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_LightMinMaxZ
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<uint>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_uint
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<ZBin>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_ZBin
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<LightDataGI>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_LightDataGI
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<DeferredTiler.PrePunctualLight>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_DeferredTiler_PrePunctualLight
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<uint4>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_uint4
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<byte[], Encoding>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_byte____Encoding
	{
	public:
		class Byte_Array*                                          key;                                                     // 0x0000(0x0000)
		class Encoding*                                            value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<Matrix4x4>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_Matrix4x4
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<IntPtr>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_IntPtr
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<Bounds>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_Bounds
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<Plane>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_Plane
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<BatchVisibility>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_BatchVisibility
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.RenderQueueRange
	 * Size -> 0x0000
	 */
	struct RenderQueueRange
	{
	public:
		int32_t                                                    m_LowerBound;                                            // 0x0000(0x0000)
		int32_t                                                    m_UpperBound;                                            // 0x0004(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<RenderQueueRange>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_RenderQueueRange
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct RenderQueueRange                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<AttachmentDescriptor>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_AttachmentDescriptor
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<ShaderTagId>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_ShaderTagId
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<RenderStateBlock>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_RenderStateBlock
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.RenderTargetBlendState
	 * Size -> 0x0000
	 */
	struct RenderTargetBlendState
	{
	public:
		uint8_t                                                    m_WriteMask;                                             // 0x0000(0x0000)
		uint8_t                                                    m_SourceColorBlendMode;                                  // 0x0001(0x0000)
		uint8_t                                                    m_DestinationColorBlendMode;                             // 0x0002(0x0000)
		uint8_t                                                    m_SourceAlphaBlendMode;                                  // 0x0003(0x0000)
		uint8_t                                                    m_DestinationAlphaBlendMode;                             // 0x0004(0x0000)
		uint8_t                                                    m_ColorBlendOperation;                                   // 0x0005(0x0000)
		uint8_t                                                    m_AlphaBlendOperation;                                   // 0x0006(0x0000)
		uint8_t                                                    m_Padding;                                               // 0x0007(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.BlendState
	 * Size -> 0x0000
	 */
	struct BlendState
	{
	public:
		struct RenderTargetBlendState                              m_BlendState0;                                           // 0x0000(0x0000)
		struct RenderTargetBlendState                              m_BlendState1;                                           // 0x0008(0x0000)
		struct RenderTargetBlendState                              m_BlendState2;                                           // 0x0010(0x0000)
		struct RenderTargetBlendState                              m_BlendState3;                                           // 0x0018(0x0000)
		struct RenderTargetBlendState                              m_BlendState4;                                           // 0x0020(0x0000)
		struct RenderTargetBlendState                              m_BlendState5;                                           // 0x0028(0x0000)
		struct RenderTargetBlendState                              m_BlendState6;                                           // 0x0030(0x0000)
		struct RenderTargetBlendState                              m_BlendState7;                                           // 0x0038(0x0000)
		uint8_t                                                    m_SeparateMRTBlendStates;                                // 0x0040(0x0000)
		uint8_t                                                    m_AlphaToMask;                                           // 0x0041(0x0000)
		int16_t                                                    m_Padding;                                               // 0x0042(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.RasterState
	 * Size -> 0x0000
	 */
	struct RasterState
	{
	public:
		int32_t                                                    m_CullingMode;                                           // 0x0000(0x0000)
		int32_t                                                    m_OffsetUnits;                                           // 0x0004(0x0000)
		float                                                      m_OffsetFactor;                                          // 0x0008(0x0000)
		uint8_t                                                    m_DepthClip;                                             // 0x000C(0x0000)
		uint8_t                                                    m_Conservative;                                          // 0x000D(0x0000)
		uint8_t                                                    m_Padding1;                                              // 0x000E(0x0000)
		uint8_t                                                    m_Padding2;                                              // 0x000F(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.DepthState
	 * Size -> 0x0000
	 */
	struct DepthState
	{
	public:
		uint8_t                                                    m_WriteEnabled;                                          // 0x0000(0x0000)
		int8_t                                                     m_CompareFunction;                                       // 0x0001(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.StencilState
	 * Size -> 0x0000
	 */
	struct StencilState
	{
	public:
		uint8_t                                                    m_Enabled;                                               // 0x0000(0x0000)
		uint8_t                                                    m_ReadMask;                                              // 0x0001(0x0000)
		uint8_t                                                    m_WriteMask;                                             // 0x0002(0x0000)
		uint8_t                                                    m_Padding;                                               // 0x0003(0x0000)
		uint8_t                                                    m_CompareFunctionFront;                                  // 0x0004(0x0000)
		uint8_t                                                    m_PassOperationFront;                                    // 0x0005(0x0000)
		uint8_t                                                    m_FailOperationFront;                                    // 0x0006(0x0000)
		uint8_t                                                    m_ZFailOperationFront;                                   // 0x0007(0x0000)
		uint8_t                                                    m_CompareFunctionBack;                                   // 0x0008(0x0000)
		uint8_t                                                    m_PassOperationBack;                                     // 0x0009(0x0000)
		uint8_t                                                    m_FailOperationBack;                                     // 0x000A(0x0000)
		uint8_t                                                    m_ZFailOperationBack;                                    // 0x000B(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.RenderStateBlock
	 * Size -> 0x0000
	 */
	struct RenderStateBlock
	{
	public:
		struct BlendState                                          m_BlendState;                                            // 0x0000(0x0000)
		struct RasterState                                         m_RasterState;                                           // 0x0044(0x0000)
		struct DepthState                                          m_DepthState;                                            // 0x0054(0x0000)
		struct StencilState                                        m_StencilState;                                          // 0x0056(0x0000)
		int32_t                                                    m_StencilReference;                                      // 0x0064(0x0000)
		int32_t                                                    m_Mask;                                                  // 0x0068(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<RenderStateBlock>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_RenderStateBlock
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct RenderStateBlock                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.List.Enumerator<TSource>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct List_Enumerator_TSource
	{
	public:
		class List_T*                                              list;                                                    // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    version;                                                 // 0x0000(0x0000)
		class Il2CppObject*                                        current;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct System.Core.System.Linq.Expressions.Interpreter.LocalDefinition
	 * Size -> 0x0000
	 */
	struct LocalDefinition
	{
	public:
		int32_t                                                    Index_k__BackingField;                                   // 0x0000(0x0000)
		class ParameterExpression*                                 Parameter_k__BackingField;                               // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<LocalDefinition>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_LocalDefinition
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct LocalDefinition                                     value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.TMP_TextProcessingStack<int>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TMP_TextProcessingStack_int
	{
	public:
		class Int32_Array*                                         itemStack;                                               // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    m_DefaultItem;                                           // 0x0000(0x0000)
		int32_t                                                    m_Capacity;                                              // 0x0000(0x0000)
		int32_t                                                    m_RolloverSize;                                          // 0x0000(0x0000)
		int32_t                                                    m_Count;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Color32
	 * Size -> 0x0000
	 */
	struct Color32
	{
	public:
		int32_t                                                    rgba;                                                    // 0x0000(0x0000)
		uint8_t                                                    r;                                                       // 0x0000(0x0000)
		uint8_t                                                    g;                                                       // 0x0001(0x0000)
		uint8_t                                                    b;                                                       // 0x0002(0x0000)
		uint8_t                                                    a;                                                       // 0x0003(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.TMP_TextProcessingStack<Color32>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TMP_TextProcessingStack_Color32
	{
	public:
		class Color32_Array*                                       itemStack;                                               // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		struct Color32                                             m_DefaultItem;                                           // 0x0000(0x0000)
		int32_t                                                    m_Capacity;                                              // 0x0000(0x0000)
		int32_t                                                    m_RolloverSize;                                          // 0x0000(0x0000)
		int32_t                                                    m_Count;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.TMP_Offset
	 * Size -> 0x0000
	 */
	struct TMP_Offset
	{
	public:
		float                                                      m_Left;                                                  // 0x0000(0x0000)
		float                                                      m_Right;                                                 // 0x0004(0x0000)
		float                                                      m_Top;                                                   // 0x0008(0x0000)
		float                                                      m_Bottom;                                                // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.HighlightState
	 * Size -> 0x0000
	 */
	struct HighlightState
	{
	public:
		struct Color32                                             color;                                                   // 0x0000(0x0000)
		struct TMP_Offset                                          padding;                                                 // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.TMP_TextProcessingStack<HighlightState>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TMP_TextProcessingStack_HighlightState
	{
	public:
		class HighlightState_Array*                                itemStack;                                               // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		struct HighlightState                                      m_DefaultItem;                                           // 0x0000(0x0000)
		int32_t                                                    m_Capacity;                                              // 0x0000(0x0000)
		int32_t                                                    m_RolloverSize;                                          // 0x0000(0x0000)
		int32_t                                                    m_Count;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.TMP_TextProcessingStack<TMP_ColorGradient>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TMP_TextProcessingStack_TMP_ColorGradient
	{
	public:
		class TMP_ColorGradient_Array*                             itemStack;                                               // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		class TMP_ColorGradient*                                   m_DefaultItem;                                           // 0x0000(0x0000)
		int32_t                                                    m_Capacity;                                              // 0x0000(0x0000)
		int32_t                                                    m_RolloverSize;                                          // 0x0000(0x0000)
		int32_t                                                    m_Count;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.TMP_TextProcessingStack<float>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TMP_TextProcessingStack_float
	{
	public:
		class Single_Array*                                        itemStack;                                               // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		float                                                      m_DefaultItem;                                           // 0x0000(0x0000)
		int32_t                                                    m_Capacity;                                              // 0x0000(0x0000)
		int32_t                                                    m_RolloverSize;                                          // 0x0000(0x0000)
		int32_t                                                    m_Count;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.TMP_TextProcessingStack<FontWeight>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TMP_TextProcessingStack_FontWeight
	{
	public:
		class FontWeight_Array*                                    itemStack;                                               // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    m_DefaultItem;                                           // 0x0000(0x0000)
		int32_t                                                    m_Capacity;                                              // 0x0000(0x0000)
		int32_t                                                    m_RolloverSize;                                          // 0x0000(0x0000)
		int32_t                                                    m_Count;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.MaterialReference
	 * Size -> 0x0000
	 */
	struct MaterialReference
	{
	public:
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		class TMP_FontAsset*                                       fontAsset;                                               // 0x0008(0x0000)
		class TMP_SpriteAsset*                                     spriteAsset;                                             // 0x0010(0x0000)
		class Material*                                            material;                                                // 0x0018(0x0000)
		bool                                                       isDefaultMaterial;                                       // 0x0020(0x0000)
		bool                                                       isFallbackMaterial;                                      // 0x0021(0x0000)
		class Material*                                            fallbackMaterial;                                        // 0x0028(0x0000)
		float                                                      padding;                                                 // 0x0030(0x0000)
		int32_t                                                    referenceCount;                                          // 0x0034(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.TMP_TextProcessingStack<MaterialReference>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TMP_TextProcessingStack_MaterialReference
	{
	public:
		class MaterialReference_Array*                             itemStack;                                               // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		struct MaterialReference                                   m_DefaultItem;                                           // 0x0000(0x0000)
		int32_t                                                    m_Capacity;                                              // 0x0000(0x0000)
		int32_t                                                    m_RolloverSize;                                          // 0x0000(0x0000)
		int32_t                                                    m_Count;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.TMP_TextProcessingStack<HorizontalAlignmentOptions>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TMP_TextProcessingStack_HorizontalAlignmentOptions
	{
	public:
		class HorizontalAlignmentOptions_Array*                    itemStack;                                               // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    m_DefaultItem;                                           // 0x0000(0x0000)
		int32_t                                                    m_Capacity;                                              // 0x0000(0x0000)
		int32_t                                                    m_RolloverSize;                                          // 0x0000(0x0000)
		int32_t                                                    m_Count;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.Extents
	 * Size -> 0x0000
	 */
	struct Extents
	{
	public:
		struct Vector2                                             min;                                                     // 0x0000(0x0000)
		struct Vector2                                             max;                                                     // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.TMP_LineInfo
	 * Size -> 0x0000
	 */
	struct TMP_LineInfo
	{
	public:
		int32_t                                                    controlCharacterCount;                                   // 0x0000(0x0000)
		int32_t                                                    characterCount;                                          // 0x0004(0x0000)
		int32_t                                                    visibleCharacterCount;                                   // 0x0008(0x0000)
		int32_t                                                    spaceCount;                                              // 0x000C(0x0000)
		int32_t                                                    wordCount;                                               // 0x0010(0x0000)
		int32_t                                                    firstCharacterIndex;                                     // 0x0014(0x0000)
		int32_t                                                    firstVisibleCharacterIndex;                              // 0x0018(0x0000)
		int32_t                                                    lastCharacterIndex;                                      // 0x001C(0x0000)
		int32_t                                                    lastVisibleCharacterIndex;                               // 0x0020(0x0000)
		float                                                      length;                                                  // 0x0024(0x0000)
		float                                                      lineHeight;                                              // 0x0028(0x0000)
		float                                                      ascender;                                                // 0x002C(0x0000)
		float                                                      baseline;                                                // 0x0030(0x0000)
		float                                                      descender;                                               // 0x0034(0x0000)
		float                                                      maxAdvance;                                              // 0x0038(0x0000)
		float                                                      width;                                                   // 0x003C(0x0000)
		float                                                      marginLeft;                                              // 0x0040(0x0000)
		float                                                      marginRight;                                             // 0x0044(0x0000)
		int32_t                                                    alignment;                                               // 0x0048(0x0000)
		struct Extents                                             lineExtents;                                             // 0x004C(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.TMP_FontStyleStack
	 * Size -> 0x0000
	 */
	struct TMP_FontStyleStack
	{
	public:
		uint8_t                                                    bold;                                                    // 0x0000(0x0000)
		uint8_t                                                    italic;                                                  // 0x0001(0x0000)
		uint8_t                                                    underline;                                               // 0x0002(0x0000)
		uint8_t                                                    strikethrough;                                           // 0x0003(0x0000)
		uint8_t                                                    highlight;                                               // 0x0004(0x0000)
		uint8_t                                                    superscript;                                             // 0x0005(0x0000)
		uint8_t                                                    subscript;                                               // 0x0006(0x0000)
		uint8_t                                                    uppercase;                                               // 0x0007(0x0000)
		uint8_t                                                    lowercase;                                               // 0x0008(0x0000)
		uint8_t                                                    smallcaps;                                               // 0x0009(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.WordWrapState
	 * Size -> 0x0000
	 */
	struct WordWrapState
	{
	public:
		int32_t                                                    previous_WordBreak;                                      // 0x0000(0x0000)
		int32_t                                                    total_CharacterCount;                                    // 0x0004(0x0000)
		int32_t                                                    visible_CharacterCount;                                  // 0x0008(0x0000)
		int32_t                                                    visible_SpriteCount;                                     // 0x000C(0x0000)
		int32_t                                                    visible_LinkCount;                                       // 0x0010(0x0000)
		int32_t                                                    firstCharacterIndex;                                     // 0x0014(0x0000)
		int32_t                                                    firstVisibleCharacterIndex;                              // 0x0018(0x0000)
		int32_t                                                    lastCharacterIndex;                                      // 0x001C(0x0000)
		int32_t                                                    lastVisibleCharIndex;                                    // 0x0020(0x0000)
		int32_t                                                    lineNumber;                                              // 0x0024(0x0000)
		float                                                      maxCapHeight;                                            // 0x0028(0x0000)
		float                                                      maxAscender;                                             // 0x002C(0x0000)
		float                                                      maxDescender;                                            // 0x0030(0x0000)
		float                                                      startOfLineAscender;                                     // 0x0034(0x0000)
		float                                                      maxLineAscender;                                         // 0x0038(0x0000)
		float                                                      maxLineDescender;                                        // 0x003C(0x0000)
		float                                                      pageAscender;                                            // 0x0040(0x0000)
		int32_t                                                    horizontalAlignment;                                     // 0x0044(0x0000)
		float                                                      marginLeft;                                              // 0x0048(0x0000)
		float                                                      marginRight;                                             // 0x004C(0x0000)
		float                                                      xAdvance;                                                // 0x0050(0x0000)
		float                                                      preferredWidth;                                          // 0x0054(0x0000)
		float                                                      preferredHeight;                                         // 0x0058(0x0000)
		float                                                      previousLineScale;                                       // 0x005C(0x0000)
		int32_t                                                    wordCount;                                               // 0x0060(0x0000)
		int32_t                                                    fontStyle;                                               // 0x0064(0x0000)
		int32_t                                                    italicAngle;                                             // 0x0068(0x0000)
		float                                                      fontScaleMultiplier;                                     // 0x006C(0x0000)
		float                                                      currentFontSize;                                         // 0x0070(0x0000)
		float                                                      baselineOffset;                                          // 0x0074(0x0000)
		float                                                      lineOffset;                                              // 0x0078(0x0000)
		bool                                                       isDrivenLineSpacing;                                     // 0x007C(0x0000)
		float                                                      glyphHorizontalAdvanceAdjustment;                        // 0x0080(0x0000)
		float                                                      cSpace;                                                  // 0x0084(0x0000)
		float                                                      mSpace;                                                  // 0x0088(0x0000)
		class TMP_TextInfo*                                        textInfo;                                                // 0x0090(0x0000)
		struct TMP_LineInfo                                        lineInfo;                                                // 0x0098(0x0000)
		struct Color32                                             vertexColor;                                             // 0x00F4(0x0000)
		struct Color32                                             underlineColor;                                          // 0x00F8(0x0000)
		struct Color32                                             strikethroughColor;                                      // 0x00FC(0x0000)
		struct Color32                                             highlightColor;                                          // 0x0100(0x0000)
		struct TMP_FontStyleStack                                  basicStyleStack;                                         // 0x0104(0x0000)
		struct TMP_TextProcessingStack_int                         italicAngleStack;                                        // 0x0110(0x0000)
		struct TMP_TextProcessingStack_Color32                     colorStack;                                              // 0x0130(0x0000)
		struct TMP_TextProcessingStack_Color32                     underlineColorStack;                                     // 0x0150(0x0000)
		struct TMP_TextProcessingStack_Color32                     strikethroughColorStack;                                 // 0x0170(0x0000)
		struct TMP_TextProcessingStack_Color32                     highlightColorStack;                                     // 0x0190(0x0000)
		struct TMP_TextProcessingStack_HighlightState              highlightStateStack;                                     // 0x01B0(0x0000)
		struct TMP_TextProcessingStack_TMP_ColorGradient           colorGradientStack;                                      // 0x01E0(0x0000)
		struct TMP_TextProcessingStack_float                       sizeStack;                                               // 0x0208(0x0000)
		struct TMP_TextProcessingStack_float                       indentStack;                                             // 0x0228(0x0000)
		struct TMP_TextProcessingStack_FontWeight                  fontWeightStack;                                         // 0x0248(0x0000)
		struct TMP_TextProcessingStack_int                         styleStack;                                              // 0x0268(0x0000)
		struct TMP_TextProcessingStack_float                       baselineStack;                                           // 0x0288(0x0000)
		struct TMP_TextProcessingStack_int                         actionStack;                                             // 0x02A8(0x0000)
		struct TMP_TextProcessingStack_MaterialReference           materialReferenceStack;                                  // 0x02C8(0x0000)
		struct TMP_TextProcessingStack_HorizontalAlignmentOptions  lineJustificationStack;                                  // 0x0320(0x0000)
		int32_t                                                    spriteAnimationID;                                       // 0x0340(0x0000)
		class TMP_FontAsset*                                       currentFontAsset;                                        // 0x0348(0x0000)
		class TMP_SpriteAsset*                                     currentSpriteAsset;                                      // 0x0350(0x0000)
		class Material*                                            currentMaterial;                                         // 0x0358(0x0000)
		int32_t                                                    currentMaterialIndex;                                    // 0x0360(0x0000)
		struct Extents                                             meshExtents;                                             // 0x0364(0x0000)
		bool                                                       tagNoParsing;                                            // 0x0374(0x0000)
		bool                                                       isNonBreakingSpace;                                      // 0x0375(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.TMP_TextProcessingStack<WordWrapState>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TMP_TextProcessingStack_WordWrapState
	{
	public:
		class WordWrapState_Array*                                 itemStack;                                               // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		struct WordWrapState                                       m_DefaultItem;                                           // 0x0000(0x0000)
		int32_t                                                    m_Capacity;                                              // 0x0000(0x0000)
		int32_t                                                    m_RolloverSize;                                          // 0x0000(0x0000)
		int32_t                                                    m_Count;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.GlobalDynamicResolutionSettings
	 * Size -> 0x0000
	 */
	struct GlobalDynamicResolutionSettings
	{
	public:
		bool                                                       enabled;                                                 // 0x0000(0x0000)
		bool                                                       useMipBias;                                              // 0x0001(0x0000)
		bool                                                       enableDLSS;                                              // 0x0002(0x0000)
		uint32_t                                                   DLSSPerfQualitySetting;                                  // 0x0004(0x0000)
		bool                                                       DLSSUseOptimalSettings;                                  // 0x0008(0x0000)
		float                                                      DLSSSharpness;                                           // 0x000C(0x0000)
		float                                                      maxPercentage;                                           // 0x0010(0x0000)
		float                                                      minPercentage;                                           // 0x0014(0x0000)
		uint8_t                                                    dynResType;                                              // 0x0018(0x0000)
		uint8_t                                                    upsampleFilter;                                          // 0x0019(0x0000)
		bool                                                       forceResolution;                                         // 0x001A(0x0000)
		float                                                      forcedPercentage;                                        // 0x001C(0x0000)
		float                                                      lowResTransparencyMinimumThreshold;                      // 0x0020(0x0000)
		float                                                      rayTracingHalfResThreshold;                              // 0x0024(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<GlobalDynamicResolutionSettings>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_GlobalDynamicResolutionSettings
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct GlobalDynamicResolutionSettings                     value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.ObjectPool.PooledObject<List<T>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ObjectPool_PooledObject_List_T
	{
	public:
		class List_T*                                              m_ToReturn;                                              // 0x0000(0x0000)
		class ObjectPool_T_2*                                      m_Pool;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.ObjectPool.PooledObject<HashSet<T>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ObjectPool_PooledObject_HashSet_T
	{
	public:
		class HashSet_T*                                           m_ToReturn;                                              // 0x0000(0x0000)
		class ObjectPool_T_2*                                      m_Pool;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.ObjectPool.PooledObject<Dictionary<TKey, TValue>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ObjectPool_PooledObject_Dictionary_TKey__TValue
	{
	public:
		class Dictionary_TKey__TValue*                             m_ToReturn;                                              // 0x0000(0x0000)
		class ObjectPool_T_2*                                      m_Pool;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Vector2Int
	 * Size -> 0x0000
	 */
	struct Vector2Int
	{
	public:
		int32_t                                                    m_X;                                                     // 0x0000(0x0000)
		int32_t                                                    m_Y;                                                     // 0x0004(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple<int, Vector2Int>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ValueTuple_int__Vector2Int_1
	{
	public:
		int32_t                                                    Item1;                                                   // 0x0000(0x0000)
		struct Vector2Int                                          Item2;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple<Vector4, Vector4, Vector4>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ValueTuple_Vector4__Vector4__Vector4_1
	{
	public:
		struct Vector4                                             Item1;                                                   // 0x0000(0x0000)
		struct Vector4                                             Item2;                                                   // 0x0000(0x0000)
		struct Vector4                                             Item3;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple<Vector4, Vector4>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ValueTuple_Vector4__Vector4_1
	{
	public:
		struct Vector4                                             Item1;                                                   // 0x0000(0x0000)
		struct Vector4                                             Item2;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.Dictionary.Enumerator<string, bool>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Dictionary_Enumerator_string__bool
	{
	public:
		class Dictionary_TKey__TValue*                             dictionary;                                              // 0x0000(0x0000)
		int32_t                                                    version;                                                 // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		struct KeyValuePair_TKey__TValue                           current;                                                 // 0x0000(0x0000)
		int32_t                                                    getEnumeratorRetType;                                    // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PropertyName
	 * Size -> 0x0000
	 */
	struct PropertyName
	{
	public:
		int32_t                                                    id;                                                      // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.ExposedReference<CinemachineVirtualCameraBase>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ExposedReference_CinemachineVirtualCameraBase
	{
	public:
		struct PropertyName                                        exposedName;                                             // 0x0000(0x0000)
		class Object_1*                                            defaultValue;                                            // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<K, V>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_K__V
	{
	public:
		class Il2CppObject*                                        key;                                                     // 0x0000(0x0000)
		class Il2CppObject*                                        value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.Dictionary.Enumerator<object, object>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Dictionary_Enumerator_object__object
	{
	public:
		class Dictionary_TKey__TValue*                             dictionary;                                              // 0x0000(0x0000)
		int32_t                                                    version;                                                 // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		struct KeyValuePair_TKey__TValue                           current;                                                 // 0x0000(0x0000)
		int32_t                                                    getEnumeratorRetType;                                    // 0x0000(0x0000)
	};

	/**
	 * Struct Photon3Unity3D.ExitGames.Client.Photon.NonAllocDictionary.PairIterator<byte, object>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NonAllocDictionary_PairIterator_byte__object
	{
	public:
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		class NonAllocDictionary_K__V*                             dict;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.MaterialReference
	 * Size -> 0x0000
	 */
	struct MaterialReference_1
	{
	public:
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		class FontAsset*                                           fontAsset;                                               // 0x0008(0x0000)
		class SpriteAsset*                                         spriteAsset;                                             // 0x0010(0x0000)
		class Material*                                            material;                                                // 0x0018(0x0000)
		bool                                                       isDefaultMaterial;                                       // 0x0020(0x0000)
		bool                                                       isFallbackMaterial;                                      // 0x0021(0x0000)
		class Material*                                            fallbackMaterial;                                        // 0x0028(0x0000)
		float                                                      padding;                                                 // 0x0030(0x0000)
		int32_t                                                    referenceCount;                                          // 0x0034(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.TextProcessingStack<MaterialReference>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TextProcessingStack_MaterialReference
	{
	public:
		class MaterialReference_1_Array*                           itemStack;                                               // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		struct MaterialReference_1                                 m_DefaultItem;                                           // 0x0000(0x0000)
		int32_t                                                    m_Capacity;                                              // 0x0000(0x0000)
		int32_t                                                    m_RolloverSize;                                          // 0x0000(0x0000)
		int32_t                                                    m_Count;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.TextProcessingStack<float>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TextProcessingStack_float
	{
	public:
		class Single_Array*                                        itemStack;                                               // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		float                                                      m_DefaultItem;                                           // 0x0000(0x0000)
		int32_t                                                    m_Capacity;                                              // 0x0000(0x0000)
		int32_t                                                    m_RolloverSize;                                          // 0x0000(0x0000)
		int32_t                                                    m_Count;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.TextProcessingStack<TextFontWeight>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TextProcessingStack_TextFontWeight
	{
	public:
		class TextFontWeight_Array*                                itemStack;                                               // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    m_DefaultItem;                                           // 0x0000(0x0000)
		int32_t                                                    m_Capacity;                                              // 0x0000(0x0000)
		int32_t                                                    m_RolloverSize;                                          // 0x0000(0x0000)
		int32_t                                                    m_Count;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.TextProcessingStack<TextAlignment>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TextProcessingStack_TextAlignment
	{
	public:
		class TextAlignment_Array*                                 itemStack;                                               // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    m_DefaultItem;                                           // 0x0000(0x0000)
		int32_t                                                    m_Capacity;                                              // 0x0000(0x0000)
		int32_t                                                    m_RolloverSize;                                          // 0x0000(0x0000)
		int32_t                                                    m_Count;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.TextProcessingStack<Color32>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TextProcessingStack_Color32
	{
	public:
		class Color32_Array*                                       itemStack;                                               // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		struct Color32                                             m_DefaultItem;                                           // 0x0000(0x0000)
		int32_t                                                    m_Capacity;                                              // 0x0000(0x0000)
		int32_t                                                    m_RolloverSize;                                          // 0x0000(0x0000)
		int32_t                                                    m_Count;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.TextProcessingStack<TextColorGradient>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TextProcessingStack_TextColorGradient
	{
	public:
		class TextColorGradient_Array*                             itemStack;                                               // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		class TextColorGradient*                                   m_DefaultItem;                                           // 0x0000(0x0000)
		int32_t                                                    m_Capacity;                                              // 0x0000(0x0000)
		int32_t                                                    m_RolloverSize;                                          // 0x0000(0x0000)
		int32_t                                                    m_Count;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.TextProcessingStack<int>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TextProcessingStack_int
	{
	public:
		class Int32_Array*                                         itemStack;                                               // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    m_DefaultItem;                                           // 0x0000(0x0000)
		int32_t                                                    m_Capacity;                                              // 0x0000(0x0000)
		int32_t                                                    m_RolloverSize;                                          // 0x0000(0x0000)
		int32_t                                                    m_Count;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<IGooglePurchase>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_IGooglePurchase
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<IGooglePurchase>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_IGooglePurchase
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<List<IGooglePurchase>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_List_IGooglePurchase
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<GooglePlayProrationMode>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_GooglePlayProrationMode
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<List<IGooglePurchase>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_List_IGooglePurchase
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<IEnumerable<IGooglePurchase>[]>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_IEnumerable_IGooglePurchase
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple<IGoogleBillingResult, IEnumerable<AndroidJavaObject>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ValueTuple_IGoogleBillingResult__IEnumerable_AndroidJavaObject_1
	{
	public:
		class IGoogleBillingResult*                                Item1;                                                   // 0x0000(0x0000)
		class IEnumerable_AndroidJavaObject*                       Item2;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.RenderBuffer
	 * Size -> 0x0000
	 */
	struct RenderBuffer
	{
	public:
		int32_t                                                    m_RenderTextureInstanceID;                               // 0x0000(0x0000)
		intptr_t                                                   m_BufferPtr;                                             // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.RenderTargetIdentifier
	 * Size -> 0x0000
	 */
	struct RenderTargetIdentifier
	{
	public:
		int32_t                                                    m_Type;                                                  // 0x0000(0x0000)
		int32_t                                                    m_NameID;                                                // 0x0004(0x0000)
		int32_t                                                    m_InstanceID;                                            // 0x0008(0x0000)
		intptr_t                                                   m_BufferPointer;                                         // 0x0010(0x0000)
		int32_t                                                    m_MipLevel;                                              // 0x0018(0x0000)
		int32_t                                                    m_CubeFace;                                              // 0x001C(0x0000)
		int32_t                                                    m_DepthSlice;                                            // 0x0020(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<RenderTargetIdentifier>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_RenderTargetIdentifier
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct RenderTargetIdentifier                              value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<Type, PostProcessBundle>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_Type__PostProcessBundle
	{
	public:
		class Type*                                                key;                                                     // 0x0000(0x0000)
		class PostProcessBundle*                                   value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rect
	 * Size -> 0x0000
	 */
	struct Rect
	{
	public:
		float                                                      m_XMin;                                                  // 0x0000(0x0000)
		float                                                      m_YMin;                                                  // 0x0004(0x0000)
		float                                                      m_Width;                                                 // 0x0008(0x0000)
		float                                                      m_Height;                                                // 0x000C(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<Rect>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_Rect
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct Rect                                                value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<Bandwidth>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_Bandwidth
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.Dictionary.Enumerator<int, Dictionary<byte, RemoteVoice>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Dictionary_Enumerator_int__Dictionary_byte__RemoteVoice
	{
	public:
		class Dictionary_TKey__TValue*                             dictionary;                                              // 0x0000(0x0000)
		int32_t                                                    version;                                                 // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		struct KeyValuePair_TKey__TValue                           current;                                                 // 0x0000(0x0000)
		int32_t                                                    getEnumeratorRetType;                                    // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<int, Dictionary<byte, RemoteVoice>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_int__Dictionary_byte__RemoteVoice
	{
	public:
		int32_t                                                    key;                                                     // 0x0000(0x0000)
		class Dictionary_byte__RemoteVoice*                        value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.Dictionary.Enumerator<byte, RemoteVoice>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Dictionary_Enumerator_byte__RemoteVoice
	{
	public:
		class Dictionary_TKey__TValue*                             dictionary;                                              // 0x0000(0x0000)
		int32_t                                                    version;                                                 // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		struct KeyValuePair_TKey__TValue                           current;                                                 // 0x0000(0x0000)
		int32_t                                                    getEnumeratorRetType;                                    // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<MonoSslPolicyErrors>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_MonoSslPolicyErrors
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<TlsProtocols>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_TlsProtocols
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<TimeCheatingDetector.OnlineTimeResult>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_TimeCheatingDetector_OnlineTimeResult
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<TimeCheatingDetector.OnlineTimeResult>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_TimeCheatingDetector_OnlineTimeResult
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<TimeCheatingDetector.CheckResult>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_TimeCheatingDetector_CheckResult
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.Dictionary.ValueCollection.Enumerator<int, GameObject>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Dictionary_ValueCollection_Enumerator_int__GameObject
	{
	public:
		class Dictionary_TKey__TValue*                             dictionary;                                              // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    version;                                                 // 0x0000(0x0000)
		class GameObject*                                          currentValue;                                            // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Playables.PlayableHandle
	 * Size -> 0x0000
	 */
	struct PlayableHandle
	{
	public:
		intptr_t                                                   m_Handle;                                                // 0x0000(0x0000)
		uint32_t                                                   m_Version;                                               // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Playables.ScriptPlayable<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ScriptPlayable_T
	{
	public:
		struct PlayableHandle                                      m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Playables.ScriptPlayable<ActivationMixerPlayable>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ScriptPlayable_ActivationMixerPlayable
	{
	public:
		struct PlayableHandle                                      m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.ExposedReference<GameObject>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ExposedReference_GameObject
	{
	public:
		struct PropertyName                                        exposedName;                                             // 0x0000(0x0000)
		class Object_1*                                            defaultValue;                                            // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Playables.ScriptPlayable<ActivationControlPlayable>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ScriptPlayable_ActivationControlPlayable
	{
	public:
		struct PlayableHandle                                      m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Playables.ScriptPlayable<DirectorControlPlayable>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ScriptPlayable_DirectorControlPlayable
	{
	public:
		struct PlayableHandle                                      m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Playables.ScriptPlayable<ParticleControlPlayable>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ScriptPlayable_ParticleControlPlayable
	{
	public:
		struct PlayableHandle                                      m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Playables.ScriptPlayable<PrefabControlPlayable>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ScriptPlayable_PrefabControlPlayable
	{
	public:
		struct PlayableHandle                                      m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Playables.ScriptPlayable<TimeControlPlayable>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ScriptPlayable_TimeControlPlayable
	{
	public:
		struct PlayableHandle                                      m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Playables.ScriptPlayable<TimeNotificationBehaviour>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ScriptPlayable_TimeNotificationBehaviour
	{
	public:
		struct PlayableHandle                                      m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Playables.ScriptPlayable<TimelinePlayable>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ScriptPlayable_TimelinePlayable
	{
	public:
		struct PlayableHandle                                      m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct Photon3Unity3D.ExitGames.Client.Photon.NonAllocDictionary+ValueIterator<K, V>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct NonAllocDictionary_ValueIterator_K__V
	{
	public:
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		class NonAllocDictionary_K__V*                             dict;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct Photon3Unity3D.ExitGames.Client.Photon.NonAllocDictionary.ValueIterator<int, PhotonView>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NonAllocDictionary_ValueIterator_int__PhotonView
	{
	public:
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		class NonAllocDictionary_K__V*                             dict;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<ConnectionProtocol>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_ConnectionProtocol
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		uint8_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<Variant, Variant>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_Variant__Variant
	{
	public:
		class Variant_1*                                           key;                                                     // 0x0000(0x0000)
		class Variant_1*                                           value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<HttpResponseMessage>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_HttpResponseMessage
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<HttpResponseMessage>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_HttpResponseMessage
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter<HttpResponseMessage>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_HttpResponseMessage
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
		bool                                                       m_continueOnCapturedContext;                             // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<string, IEnumerable<string>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_string__IEnumerable_string
	{
	public:
		class Il2CppString*                                        key;                                                     // 0x0000(0x0000)
		class IEnumerable_string*                                  value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.Dictionary.Enumerator<string, HttpHeaders.HeaderBucket>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Dictionary_Enumerator_string__HttpHeaders_HeaderBucket
	{
	public:
		class Dictionary_TKey__TValue*                             dictionary;                                              // 0x0000(0x0000)
		int32_t                                                    version;                                                 // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		struct KeyValuePair_TKey__TValue                           current;                                                 // 0x0000(0x0000)
		int32_t                                                    getEnumeratorRetType;                                    // 0x0000(0x0000)
	};

	/**
	 * Struct System.Net.Http.System.Net.Http.Headers.Token
	 * Size -> 0x0000
	 */
	struct Token
	{
	public:
		int32_t                                                    type;                                                    // 0x0000(0x0000)
		int32_t                                                    StartPosition_k__BackingField;                           // 0x0004(0x0000)
		int32_t                                                    EndPosition_k__BackingField;                             // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<Token>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_Token
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct Token                                               value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<List<string>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_List_string
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<GeoIPResponse>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_GeoIPResponse
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<AdPlacementType>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_AdPlacementType
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.Services.Analytics.Unity.Services.Analytics.RealCurrency
	 * Size -> 0x0000
	 */
	struct RealCurrency
	{
	public:
		class Il2CppString*                                        RealCurrencyType;                                        // 0x0000(0x0000)
		int64_t                                                    RealCurrencyAmount;                                      // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<RealCurrency>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_RealCurrency
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct RealCurrency                                        value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<TransactionServer>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_TransactionServer
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.Services.Analytics.Unity.Services.Analytics.Events+RealCurrency
	 * Size -> 0x0000
	 */
	struct Events_RealCurrency
	{
	public:
		class Il2CppString*                                        realCurrencyType;                                        // 0x0000(0x0000)
		int64_t                                                    realCurrencyAmount;                                      // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<Events.RealCurrency>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_Events_RealCurrency
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		struct Events_RealCurrency                                 value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Nullable<Events.TransactionServer>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Nullable_Events_TransactionServer
	{
	public:
		bool                                                       hasValue;                                                // 0x0000(0x0000)
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<GeoIPResponse>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_GeoIPResponse
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<UnityWebRequestAsyncOperation>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_UnityWebRequestAsyncOperation
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<byte[]>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_byte
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.List.Enumerator<VFXBinderBase>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct List_Enumerator_VFXBinderBase
	{
	public:
		class List_T*                                              list;                                                    // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    version;                                                 // 0x0000(0x0000)
		class VFXBinderBase*                                       current;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<IDiagnostics>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_IDiagnostics
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<IDiagnosticsFactory>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_IDiagnosticsFactory
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<IDiagnostics>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_IDiagnostics
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeSlice<S>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeSlice_S
	{
	public:
		uint8_t*                                                   m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Stride;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeSlice<byte>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeSlice_byte
	{
	public:
		uint8_t*                                                   m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Stride;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeSlice<PositionVertex>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeSlice_PositionVertex
	{
	public:
		uint8_t*                                                   m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Stride;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeSlice<PositionTangentVertex>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeSlice_PositionTangentVertex
	{
	public:
		uint8_t*                                                   m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Stride;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeSlice<Vector3>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeSlice_Vector3
	{
	public:
		uint8_t*                                                   m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Stride;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeSlice<BoneWeight>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeSlice_BoneWeight
	{
	public:
		uint8_t*                                                   m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Stride;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeSlice<Matrix4x4>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeSlice_Matrix4x4
	{
	public:
		uint8_t*                                                   m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Stride;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeSlice<float3>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeSlice_float3
	{
	public:
		uint8_t*                                                   m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Stride;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeSlice<float4x4>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeSlice_float4x4
	{
	public:
		uint8_t*                                                   m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Stride;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeSlice<float4>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeSlice_float4
	{
	public:
		uint8_t*                                                   m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Stride;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeSlice<GfxUpdateBufferRange>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeSlice_GfxUpdateBufferRange
	{
	public:
		uint8_t*                                                   m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Stride;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<Vector3Int>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_Vector3Int
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<ProjectConfiguration>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_ProjectConfiguration
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<ProjectConfiguration>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_ProjectConfiguration
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.TaskAwaiter<SerializableProjectConfiguration>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct TaskAwaiter_SerializableProjectConfiguration
	{
	public:
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<SerializableProjectConfiguration>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_SerializableProjectConfiguration
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder<IDiagnosticsFactory>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct AsyncTaskMethodBuilder_IDiagnosticsFactory
	{
	public:
		struct AsyncMethodBuilderCore                              m_coreState;                                             // 0x0000(0x0000)
		class Task_TResult*                                        m_task;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<string, ConfigurationEntry>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_string__ConfigurationEntry
	{
	public:
		class Il2CppString*                                        key;                                                     // 0x0000(0x0000)
		class ConfigurationEntry*                                  value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<HTTP2Settings, uint>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_HTTP2Settings__uint
	{
	public:
		uint16_t                                                   key;                                                     // 0x0000(0x0000)
		uint32_t                                                   value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple<IntPtr, string>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ValueTuple_IntPtr__string_1
	{
	public:
		intptr_t                                                   Item1;                                                   // 0x0000(0x0000)
		class Il2CppString*                                        Item2;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple<HttpWebResponse, bool, bool, BufferOffsetSize, WebOperation>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ValueTuple_HttpWebResponse__bool__bool__BufferOffsetSize__WebOperation_1
	{
	public:
		class HttpWebResponse*                                     Item1;                                                   // 0x0000(0x0000)
		bool                                                       Item2;                                                   // 0x0000(0x0000)
		bool                                                       Item3;                                                   // 0x0000(0x0000)
		class BufferOffsetSize_1*                                  Item4;                                                   // 0x0000(0x0000)
		class WebOperation*                                        Item5;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple<WebHeaderCollection, byte[], int>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ValueTuple_WebHeaderCollection__byte____int_1
	{
	public:
		class WebHeaderCollection*                                 Item1;                                                   // 0x0000(0x0000)
		class Byte_Array*                                          Item2;                                                   // 0x0000(0x0000)
		int32_t                                                    Item3;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<PropertyName, object>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_PropertyName__object
	{
	public:
		struct PropertyName                                        key;                                                     // 0x0000(0x0000)
		class Il2CppObject*                                        value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Collections.Generic.KeyValuePair<int, object>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct KeyValuePair_int__object
	{
	public:
		int32_t                                                    key;                                                     // 0x0000(0x0000)
		class Il2CppObject*                                        value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple<Type, int>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ValueTuple_Type__int_1
	{
	public:
		class Type*                                                Item1;                                                   // 0x0000(0x0000)
		int32_t                                                    Item2;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple<object, ValueTuple<Type, int>>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ValueTuple_object__ValueTuple_Type__int_1
	{
	public:
		class Il2CppObject*                                        Item1;                                                   // 0x0000(0x0000)
		struct ValueTuple_Type__int_1                              Item2;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.ValueTuple<int, Type>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct ValueTuple_int__Type_1
	{
	public:
		int32_t                                                    Item1;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        Item2;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct System.Mono.Unity.UnityTls+unitytls_errorstate
	 * Size -> 0x0000
	 */
	struct UnityTls_unitytls_errorstate
	{
	public:
		uint32_t                                                   magic;                                                   // 0x0000(0x0000)
		uint32_t                                                   code;                                                    // 0x0004(0x0000)
		uint64_t                                                   reserved;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct System.Mono.Unity.UnityTls+unitytls_key
	 * Size -> 0x0000
	 */
	struct UnityTls_unitytls_key
	{	};

	/**
	 * Struct System.Mono.Unity.UnityTls+unitytls_key_ref
	 * Size -> 0x0000
	 */
	struct UnityTls_unitytls_key_ref
	{
	public:
		uint64_t                                                   handle;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct System.Mono.Unity.UnityTls+unitytls_x509_ref
	 * Size -> 0x0000
	 */
	struct UnityTls_unitytls_x509_ref
	{
	public:
		uint64_t                                                   handle;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct System.Mono.Unity.UnityTls+unitytls_x509list
	 * Size -> 0x0000
	 */
	struct UnityTls_unitytls_x509list
	{	};

	/**
	 * Struct System.Mono.Unity.UnityTls+unitytls_x509list_ref
	 * Size -> 0x0000
	 */
	struct UnityTls_unitytls_x509list_ref
	{
	public:
		uint64_t                                                   handle;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct System.Mono.Unity.UnityTls+unitytls_tlsctx
	 * Size -> 0x0000
	 */
	struct UnityTls_unitytls_tlsctx
	{	};

	/**
	 * Struct System.Mono.Unity.UnityTls+unitytls_x509name
	 * Size -> 0x0000
	 */
	struct UnityTls_unitytls_x509name
	{	};

	/**
	 * Struct System.Mono.Unity.UnityTls+unitytls_tlsctx_protocolrange
	 * Size -> 0x0000
	 */
	struct UnityTls_unitytls_tlsctx_protocolrange
	{
	public:
		uint32_t                                                   min;                                                     // 0x0000(0x0000)
		uint32_t                                                   max;                                                     // 0x0004(0x0000)
	};

	/**
	 * Struct System.Mono.Unity.UnityTls+unitytls_tlsctx_callbacks
	 * Size -> 0x0000
	 */
	struct UnityTls_unitytls_tlsctx_callbacks
	{
	public:
		class UnityTls_unitytls_tlsctx_read_callback*              read;                                                    // 0x0000(0x0000)
		class UnityTls_unitytls_tlsctx_write_callback*             write;                                                   // 0x0008(0x0000)
		void*                                                      data;                                                    // 0x0010(0x0000)
	};

	/**
	 * Struct System.Mono.Net.Security.AsyncProtocolRequest+<StartOperation>d__23
	 * Size -> 0x0000
	 */
	struct AsyncProtocolRequest__StartOperation_d__23
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_AsyncProtocolResult          t__builder;                                              // 0x0008(0x0000)
		class AsyncProtocolRequest*                                _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct System.Mono.Net.Security.AsyncProtocolRequest+<ProcessOperation>d__24
	 * Size -> 0x0000
	 */
	struct AsyncProtocolRequest__ProcessOperation_d__24
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0020(0x0000)
		class AsyncProtocolRequest*                                _4__this;                                                // 0x0028(0x0000)
		int32_t                                                    status_5__2;                                             // 0x0030(0x0000)
		int32_t                                                    newStatus_5__3;                                          // 0x0034(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_Nullable_int u__1;                                                    // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__2;                                                    // 0x0048(0x0000)
	};

	/**
	 * Struct System.Mono.Net.Security.AsyncProtocolRequest+<InnerRead>d__25
	 * Size -> 0x0000
	 */
	struct AsyncProtocolRequest__InnerRead_d__25
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_Nullable_int                 t__builder;                                              // 0x0008(0x0000)
		class AsyncProtocolRequest*                                _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct Nullable_int                                        totalRead_5__2;                                          // 0x0030(0x0000)
		int32_t                                                    requestedSize_5__3;                                      // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_int   u__1;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct System.Mono.Net.Security.MobileAuthenticatedStream+<ProcessAuthentication>d__48
	 * Size -> 0x0000
	 */
	struct MobileAuthenticatedStream__ProcessAuthentication_d__48
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class MonoSslAuthenticationOptions*                        options;                                                 // 0x0020(0x0000)
		class MobileAuthenticatedStream*                           _4__this;                                                // 0x0028(0x0000)
		bool                                                       runSynchronously;                                        // 0x0030(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_AsyncProtocolResult u__1;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct System.Mono.Net.Security.MobileAuthenticatedStream+<StartOperation>d__57
	 * Size -> 0x0000
	 */
	struct MobileAuthenticatedStream__StartOperation_d__57
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_int                          t__builder;                                              // 0x0008(0x0000)
		class MobileAuthenticatedStream*                           _4__this;                                                // 0x0020(0x0000)
		int32_t                                                    type;                                                    // 0x0028(0x0000)
		class AsyncProtocolRequest*                                asyncRequest;                                            // 0x0030(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_AsyncProtocolResult u__1;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct System.Mono.Net.Security.MobileAuthenticatedStream+<InnerRead>d__66
	 * Size -> 0x0000
	 */
	struct MobileAuthenticatedStream__InnerRead_d__66
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_int                          t__builder;                                              // 0x0008(0x0000)
		class MobileAuthenticatedStream*                           _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		int32_t                                                    requestedSize;                                           // 0x0030(0x0000)
		bool                                                       sync;                                                    // 0x0034(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_int   u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct System.Mono.Net.Security.MobileAuthenticatedStream+<InnerWrite>d__67
	 * Size -> 0x0000
	 */
	struct MobileAuthenticatedStream__InnerWrite_d__67
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0020(0x0000)
		class MobileAuthenticatedStream*                           _4__this;                                                // 0x0028(0x0000)
		bool                                                       sync;                                                    // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct System.Mono.Net.Security.MonoTlsStream+<CreateStream>d__18
	 * Size -> 0x0000
	 */
	struct MonoTlsStream__CreateStream_d__18
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_Stream                       t__builder;                                              // 0x0008(0x0000)
		class MonoTlsStream*                                       _4__this;                                                // 0x0020(0x0000)
		class WebConnectionTunnel*                                 tunnel;                                                  // 0x0028(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0030(0x0000)
		class Socket_2*                                            socket_5__2;                                             // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct System.Internal.Cryptography.Pal.CertificateData+AlgorithmIdentifier
	 * Size -> 0x0000
	 */
	struct CertificateData_AlgorithmIdentifier
	{
	public:
		class Il2CppString*                                        AlgorithmId;                                             // 0x0000(0x0000)
		class Byte_Array*                                          Parameters;                                              // 0x0008(0x0000)
	};

	/**
	 * Struct System.Internal.Cryptography.Pal.CertificateData
	 * Size -> 0x0000
	 */
	struct CertificateData
	{
	public:
		class Byte_Array*                                          RawData;                                                 // 0x0000(0x0000)
		class Byte_Array*                                          SubjectPublicKeyInfo;                                    // 0x0008(0x0000)
		int32_t                                                    Version;                                                 // 0x0010(0x0000)
		class Byte_Array*                                          SerialNumber;                                            // 0x0018(0x0000)
		struct CertificateData_AlgorithmIdentifier                 TbsSignature;                                            // 0x0020(0x0000)
		class X500DistinguishedName*                               Issuer;                                                  // 0x0030(0x0000)
		struct DateTime                                            NotBefore;                                               // 0x0038(0x0000)
		struct DateTime                                            NotAfter;                                                // 0x0040(0x0000)
		class X500DistinguishedName*                               Subject;                                                 // 0x0048(0x0000)
		struct CertificateData_AlgorithmIdentifier                 PublicKeyAlgorithm;                                      // 0x0050(0x0000)
		class Byte_Array*                                          PublicKey;                                               // 0x0060(0x0000)
		class Byte_Array*                                          IssuerUniqueId;                                          // 0x0068(0x0000)
		class Byte_Array*                                          SubjectUniqueId;                                         // 0x0070(0x0000)
		class List_X509Extension*                                  Extensions;                                              // 0x0078(0x0000)
		struct CertificateData_AlgorithmIdentifier                 SignatureAlgorithm;                                      // 0x0080(0x0000)
		class Byte_Array*                                          SignatureValue;                                          // 0x0090(0x0000)
	};

	/**
	 * Struct System.System.Uri+Offset
	 * Size -> 0x0000
	 */
	struct Uri_Offset
	{
	public:
		uint16_t                                                   Scheme;                                                  // 0x0000(0x0000)
		uint16_t                                                   User;                                                    // 0x0002(0x0000)
		uint16_t                                                   Host;                                                    // 0x0004(0x0000)
		uint16_t                                                   PortValue;                                               // 0x0006(0x0000)
		uint16_t                                                   Path;                                                    // 0x0008(0x0000)
		uint16_t                                                   Query;                                                   // 0x000A(0x0000)
		uint16_t                                                   Fragment;                                                // 0x000C(0x0000)
		uint16_t                                                   End;                                                     // 0x000E(0x0000)
	};

	/**
	 * Struct System.System.Text.RegularExpressions.Regex+CachedCodeEntryKey
	 * Size -> 0x0000
	 */
	struct Regex_CachedCodeEntryKey
	{
	public:
		int32_t                                                    options;                                                 // 0x0000(0x0000)
		class Il2CppString*                                        cultureKey;                                              // 0x0008(0x0000)
		class Il2CppString*                                        pattern;                                                 // 0x0010(0x0000)
	};

	/**
	 * Struct System.System.Text.RegularExpressions.RegexCharClass+LowerCaseMapping
	 * Size -> 0x0000
	 */
	struct RegexCharClass_LowerCaseMapping
	{
	public:
		uint16_t                                                   ChMin;                                                   // 0x0000(0x0000)
		uint16_t                                                   ChMax;                                                   // 0x0002(0x0000)
		int32_t                                                    LcOp;                                                    // 0x0004(0x0000)
		int32_t                                                    Data;                                                    // 0x0008(0x0000)
	};

	/**
	 * Struct System.System.Text.RegularExpressions.RegexCharClass+SingleRange
	 * Size -> 0x0000
	 */
	struct RegexCharClass_SingleRange
	{
	public:
		uint16_t                                                   First;                                                   // 0x0000(0x0000)
		uint16_t                                                   Last;                                                    // 0x0002(0x0000)
	};

	/**
	 * Struct System.System.Text.RegularExpressions.RegexFCD
	 * Size -> 0x0000
	 */
	struct RegexFCD
	{
	public:
		class List_RegexFC*                                        fcStack;                                                 // 0x0000(0x0000)
		struct ValueListBuilder_int_1                              intStack;                                                // 0x0008(0x0000)
		bool                                                       skipAllChildren;                                         // 0x0028(0x0000)
		bool                                                       skipchild;                                               // 0x0029(0x0000)
		bool                                                       failed;                                                  // 0x002A(0x0000)
	};

	/**
	 * Struct System.System.Text.RegularExpressions.RegexWriter
	 * Size -> 0x0000
	 */
	struct RegexWriter
	{
	public:
		struct ValueListBuilder_int_1                              emitted;                                                 // 0x0000(0x0000)
		struct ValueListBuilder_int_1                              intStack;                                                // 0x0020(0x0000)
		class Dictionary_string__int*                              stringHash;                                              // 0x0040(0x0000)
		class List_string*                                         stringTable;                                             // 0x0048(0x0000)
		class Hashtable*                                           caps;                                                    // 0x0050(0x0000)
		int32_t                                                    trackCount;                                              // 0x0058(0x0000)
	};

	/**
	 * Struct System.System.Diagnostics.Process+ProcInfo
	 * Size -> 0x0000
	 */
	struct Process_ProcInfo
	{
	public:
		intptr_t                                                   process_handle;                                          // 0x0000(0x0000)
		int32_t                                                    pid;                                                     // 0x0008(0x0000)
		class String_Array*                                        envVariables;                                            // 0x0010(0x0000)
		class Il2CppString*                                        UserName;                                                // 0x0018(0x0000)
		class Il2CppString*                                        Domain;                                                  // 0x0020(0x0000)
		intptr_t                                                   Password;                                                // 0x0028(0x0000)
		bool                                                       LoadUserProfile;                                         // 0x0030(0x0000)
	};

	/**
	 * Struct System.System.Security.Cryptography.X509Certificates.X509ChainStatus
	 * Size -> 0x0000
	 */
	struct X509ChainStatus
	{
	public:
		int32_t                                                    status;                                                  // 0x0000(0x0000)
		class Il2CppString*                                        info;                                                    // 0x0008(0x0000)
	};

	/**
	 * Struct System.System.Net.FtpWebRequest+<CreateConnectionAsync>d__86
	 * Size -> 0x0000
	 */
	struct FtpWebRequest__CreateConnectionAsync_d__86
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncVoidMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class FtpWebRequest*                                       _4__this;                                                // 0x0028(0x0000)
		class TcpClient_1*                                         client_5__2;                                             // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct System.System.Net.CookieTokenizer+RecognizedAttribute
	 * Size -> 0x0000
	 */
	struct CookieTokenizer_RecognizedAttribute
	{
	public:
		class Il2CppString*                                        m_name;                                                  // 0x0000(0x0000)
		int32_t                                                    m_token;                                                 // 0x0008(0x0000)
	};

	/**
	 * Struct System.System.Net.HeaderVariantInfo
	 * Size -> 0x0000
	 */
	struct HeaderVariantInfo
	{
	public:
		class Il2CppString*                                        m_name;                                                  // 0x0000(0x0000)
		int32_t                                                    m_variant;                                               // 0x0008(0x0000)
	};

	/**
	 * Struct System.System.Net.BufferedReadStream+<ProcessReadAsync>d__2
	 * Size -> 0x0000
	 */
	struct BufferedReadStream__ProcessReadAsync_d__2
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_int                          t__builder;                                              // 0x0008(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0020(0x0000)
		class BufferedReadStream*                                  _4__this;                                                // 0x0028(0x0000)
		int32_t                                                    size;                                                    // 0x0030(0x0000)
		class Byte_Array*                                          buffer;                                                  // 0x0038(0x0000)
		int32_t                                                    offset;                                                  // 0x0040(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_int   u__1;                                                    // 0x0048(0x0000)
	};

	/**
	 * Struct System.System.Net.FixedSizeReadStream+<ProcessReadAsync>d__5
	 * Size -> 0x0000
	 */
	struct FixedSizeReadStream__ProcessReadAsync_d__5
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_int                          t__builder;                                              // 0x0008(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0020(0x0000)
		class FixedSizeReadStream*                                 _4__this;                                                // 0x0028(0x0000)
		int32_t                                                    size;                                                    // 0x0030(0x0000)
		class Byte_Array*                                          buffer;                                                  // 0x0038(0x0000)
		int32_t                                                    offset;                                                  // 0x0040(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_int   u__1;                                                    // 0x0048(0x0000)
	};

	/**
	 * Struct System.System.Net.HttpWebRequest+AuthorizationState
	 * Size -> 0x0000
	 */
	struct HttpWebRequest_AuthorizationState
	{
	public:
		class HttpWebRequest*                                      request;                                                 // 0x0000(0x0000)
		bool                                                       isProxy;                                                 // 0x0008(0x0000)
		bool                                                       isCompleted;                                             // 0x0009(0x0000)
		int32_t                                                    ntlm_auth_state;                                         // 0x000C(0x0000)
	};

	/**
	 * Struct System.System.Net.HttpWebRequest+<RunWithTimeoutWorker>d__241<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct HttpWebRequest__RunWithTimeoutWorker_d__241_T
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_T                            t__builder;                                              // 0x0000(0x0000)
		class Task_T*                                              workerTask;                                              // 0x0000(0x0000)
		int32_t                                                    timeout;                                                 // 0x0000(0x0000)
		class CancellationTokenSource*                             cts;                                                     // 0x0000(0x0000)
		class Action*                                              abort;                                                   // 0x0000(0x0000)
		class Func_bool*                                           aborted;                                                 // 0x0000(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__1;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct System.System.Net.HttpWebRequest+<MyGetResponseAsync>d__243
	 * Size -> 0x0000
	 */
	struct HttpWebRequest__MyGetResponseAsync_d__243
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_HttpWebResponse              t__builder;                                              // 0x0008(0x0000)
		class HttpWebRequest*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		class WebCompletionSource*                                 completion_5__2;                                         // 0x0030(0x0000)
		class WebOperation*                                        operation_5__3;                                          // 0x0038(0x0000)
		class WebException*                                        throwMe_5__4;                                            // 0x0040(0x0000)
		class HttpWebResponse*                                     response_5__5;                                           // 0x0048(0x0000)
		class WebResponseStream*                                   stream_5__6;                                             // 0x0050(0x0000)
		bool                                                       redirect_5__7;                                           // 0x0058(0x0000)
		bool                                                       mustReadAll_5__8;                                        // 0x0059(0x0000)
		class WebOperation*                                        ntlm_5__9;                                               // 0x0060(0x0000)
		class BufferOffsetSize_1*                                  writeBuffer_5__10;                                       // 0x0068(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_WebRequestStream u__1;                                                    // 0x0070(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__2;                                                    // 0x0080(0x0000)
		struct TaskAwaiter_WebResponseStream                       u__3;                                                    // 0x0090(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_ValueTuple_HttpWebResponse__bool__bool__BufferOffsetSize__WebOperation u__4;                                                    // 0x0098(0x0000)
	};

	/**
	 * Struct System.System.Net.HttpWebRequest+<GetResponseFromData>d__244
	 * Size -> 0x0000
	 */
	struct HttpWebRequest__GetResponseFromData_d__244
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_ValueTuple_HttpWebResponse__bool__bool__BufferOffsetSize__WebOperation t__builder;                                              // 0x0008(0x0000)
		class HttpWebRequest*                                      _4__this;                                                // 0x0020(0x0000)
		class WebResponseStream*                                   stream;                                                  // 0x0028(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0030(0x0000)
		class HttpWebResponse*                                     response_5__2;                                           // 0x0038(0x0000)
		class WebException*                                        throwMe_5__3;                                            // 0x0040(0x0000)
		bool                                                       redirect_5__4;                                           // 0x0048(0x0000)
		bool                                                       mustReadAll_5__5;                                        // 0x0049(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0050(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_BufferOffsetSize u__2;                                                    // 0x0060(0x0000)
	};

	/**
	 * Struct System.System.Net.HttpWebRequest+<<GetRewriteHandler>b__271_0>d
	 * Size -> 0x0000
	 */
	struct HttpWebRequest___GetRewriteHandler_b__271_0_d
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_BufferOffsetSize             t__builder;                                              // 0x0008(0x0000)
		class HttpWebRequest*                                      _4__this;                                                // 0x0020(0x0000)
		class MemoryStream*                                        ms_5__2;                                                 // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct System.System.Net.MonoChunkStream+<ProcessReadAsync>d__7
	 * Size -> 0x0000
	 */
	struct MonoChunkStream__ProcessReadAsync_d__7
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_int                          t__builder;                                              // 0x0008(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0020(0x0000)
		class MonoChunkStream*                                     _4__this;                                                // 0x0028(0x0000)
		class Byte_Array*                                          buffer;                                                  // 0x0030(0x0000)
		int32_t                                                    offset;                                                  // 0x0038(0x0000)
		int32_t                                                    size;                                                    // 0x003C(0x0000)
		class Byte_Array*                                          moreBytes_5__2;                                          // 0x0040(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_int   u__1;                                                    // 0x0048(0x0000)
	};

	/**
	 * Struct System.System.Net.MonoChunkStream+<FinishReading>d__8
	 * Size -> 0x0000
	 */
	struct MonoChunkStream__FinishReading_d__8
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class MonoChunkStream*                                     _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0030(0x0000)
		class Byte_Array*                                          buffer_5__2;                                             // 0x0040(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_int   u__2;                                                    // 0x0048(0x0000)
	};

	/**
	 * Struct System.System.Net.ServicePointScheduler+<RunScheduler>d__32
	 * Size -> 0x0000
	 */
	struct ServicePointScheduler__RunScheduler_d__32
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class ServicePointScheduler*                               _4__this;                                                // 0x0020(0x0000)
		class ValueTuple_ServicePointScheduler_ConnectionGroup__WebOperation_1_Array* operationArray_5__2;                                     // 0x0028(0x0000)
		class ValueTuple_ServicePointScheduler_ConnectionGroup__WebConnection__Task_1_Array* idleArray_5__3;                                          // 0x0030(0x0000)
		class List_Task*                                           taskList_5__4;                                           // 0x0038(0x0000)
		class Task_bool*                                           schedulerTask_5__5;                                      // 0x0040(0x0000)
		bool                                                       finalCleanup_5__6;                                       // 0x0048(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_Task  u__1;                                                    // 0x0050(0x0000)
	};

	/**
	 * Struct System.System.Net.ServicePointScheduler+<WaitAsync>d__46
	 * Size -> 0x0000
	 */
	struct ServicePointScheduler__WaitAsync_d__46
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_bool                         t__builder;                                              // 0x0008(0x0000)
		int32_t                                                    millisecondTimeout;                                      // 0x0020(0x0000)
		class Task*                                                workerTask;                                              // 0x0028(0x0000)
		class CancellationTokenSource*                             cts_5__2;                                                // 0x0030(0x0000)
		class Task*                                                timeoutTask_5__3;                                        // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_Task  u__1;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct System.System.Net.WebCompletionSource+<WaitForCompletion>d__15<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct WebCompletionSource__WaitForCompletion_d__15_T
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_T                            t__builder;                                              // 0x0000(0x0000)
		class WebCompletionSource_T*                               _4__this;                                                // 0x0000(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_WebCompletionSource_Result_T u__1;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct System.System.Net.WebConnection+<Connect>d__16
	 * Size -> 0x0000
	 */
	struct WebConnection__Connect_d__16
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class WebConnection*                                       _4__this;                                                // 0x0020(0x0000)
		class WebOperation*                                        operation;                                               // 0x0028(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0030(0x0000)
		class Exception*                                           connectException_5__2;                                   // 0x0038(0x0000)
		class IPAddress_1_Array*                                   _7__wrap2;                                               // 0x0040(0x0000)
		int32_t                                                    _7__wrap3;                                               // 0x0048(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0050(0x0000)
	};

	/**
	 * Struct System.System.Net.WebConnection+<CreateStream>d__18
	 * Size -> 0x0000
	 */
	struct WebConnection__CreateStream_d__18
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_bool                         t__builder;                                              // 0x0008(0x0000)
		class WebConnection*                                       _4__this;                                                // 0x0020(0x0000)
		class WebOperation*                                        operation;                                               // 0x0028(0x0000)
		bool                                                       reused;                                                  // 0x0030(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0038(0x0000)
		class NetworkStream*                                       stream_5__2;                                             // 0x0040(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0048(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_Stream u__2;                                                    // 0x0058(0x0000)
	};

	/**
	 * Struct System.System.Net.WebConnection+<InitConnection>d__19
	 * Size -> 0x0000
	 */
	struct WebConnection__InitConnection_d__19
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_WebRequestStream             t__builder;                                              // 0x0008(0x0000)
		class WebOperation*                                        operation;                                               // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		class WebConnection*                                       _4__this;                                                // 0x0030(0x0000)
		bool                                                       reused_5__2;                                             // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0040(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__2;                                                    // 0x0050(0x0000)
	};

	/**
	 * Struct System.System.Net.WebConnectionTunnel+<Initialize>d__42
	 * Size -> 0x0000
	 */
	struct WebConnectionTunnel__Initialize_d__42
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class WebConnectionTunnel*                                 _4__this;                                                // 0x0020(0x0000)
		class Stream*                                              stream;                                                  // 0x0028(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0030(0x0000)
		bool                                                       have_auth_5__2;                                          // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0040(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_ValueTuple_WebHeaderCollection__byte____int u__2;                                                    // 0x0050(0x0000)
	};

	/**
	 * Struct System.System.Net.WebConnectionTunnel+<ReadHeaders>d__43
	 * Size -> 0x0000
	 */
	struct WebConnectionTunnel__ReadHeaders_d__43
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_ValueTuple_WebHeaderCollection__byte____int t__builder;                                              // 0x0008(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0020(0x0000)
		class Stream*                                              stream;                                                  // 0x0028(0x0000)
		class WebConnectionTunnel*                                 _4__this;                                                // 0x0030(0x0000)
		class Byte_Array*                                          retBuffer_5__2;                                          // 0x0038(0x0000)
		int32_t                                                    status_5__3;                                             // 0x0040(0x0000)
		class Byte_Array*                                          buffer_5__4;                                             // 0x0048(0x0000)
		class MemoryStream*                                        ms_5__5;                                                 // 0x0050(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_int   u__1;                                                    // 0x0058(0x0000)
	};

	/**
	 * Struct System.System.Net.WebOperation+<GetRequestStream>d__50
	 * Size -> 0x0000
	 */
	struct WebOperation__GetRequestStream_d__50
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_Stream                       t__builder;                                              // 0x0008(0x0000)
		class WebOperation*                                        _4__this;                                                // 0x0020(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_WebRequestStream u__1;                                                    // 0x0028(0x0000)
	};

	/**
	 * Struct System.System.Net.WebOperation+<Run>d__58
	 * Size -> 0x0000
	 */
	struct WebOperation__Run_d__58
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncVoidMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class WebOperation*                                        _4__this;                                                // 0x0028(0x0000)
		class WebRequestStream*                                    requestStream_5__2;                                      // 0x0030(0x0000)
		class WebResponseStream*                                   stream_5__3;                                             // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_WebRequestStream u__1;                                                    // 0x0040(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__2;                                                    // 0x0050(0x0000)
	};

	/**
	 * Struct System.System.Net.WebReadStream+<ReadAsync>d__28
	 * Size -> 0x0000
	 */
	struct WebReadStream__ReadAsync_d__28
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_int                          t__builder;                                              // 0x0008(0x0000)
		class WebReadStream*                                       _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		class Byte_Array*                                          buffer;                                                  // 0x0030(0x0000)
		int32_t                                                    offset;                                                  // 0x0038(0x0000)
		int32_t                                                    size;                                                    // 0x003C(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_int   u__1;                                                    // 0x0040(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__2;                                                    // 0x0050(0x0000)
	};

	/**
	 * Struct System.System.Net.WebRequestStream+<FinishWriting>d__31
	 * Size -> 0x0000
	 */
	struct WebRequestStream__FinishWriting_d__31
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class WebRequestStream*                                    _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct System.System.Net.WebRequestStream+<WriteAsyncInner>d__33
	 * Size -> 0x0000
	 */
	struct WebRequestStream__WriteAsyncInner_d__33
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class WebRequestStream*                                    _4__this;                                                // 0x0020(0x0000)
		class Byte_Array*                                          buffer;                                                  // 0x0028(0x0000)
		int32_t                                                    offset;                                                  // 0x0030(0x0000)
		int32_t                                                    size;                                                    // 0x0034(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0038(0x0000)
		class WebCompletionSource*                                 completion;                                              // 0x0040(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0048(0x0000)
		struct TaskAwaiter                                         u__2;                                                    // 0x0058(0x0000)
	};

	/**
	 * Struct System.System.Net.WebRequestStream+<ProcessWrite>d__34
	 * Size -> 0x0000
	 */
	struct WebRequestStream__ProcessWrite_d__34
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class WebRequestStream*                                    _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		int32_t                                                    size;                                                    // 0x0030(0x0000)
		class Byte_Array*                                          buffer;                                                  // 0x0038(0x0000)
		int32_t                                                    offset;                                                  // 0x0040(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0048(0x0000)
	};

	/**
	 * Struct System.System.Net.WebRequestStream+<Initialize>d__36
	 * Size -> 0x0000
	 */
	struct WebRequestStream__Initialize_d__36
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class WebRequestStream*                                    _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0030(0x0000)
		struct TaskAwaiter                                         u__2;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct System.System.Net.WebRequestStream+<SetHeadersAsync>d__37
	 * Size -> 0x0000
	 */
	struct WebRequestStream__SetHeadersAsync_d__37
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class WebRequestStream*                                    _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		bool                                                       setInternalLength;                                       // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct System.System.Net.WebRequestStream+<WriteRequestAsync>d__38
	 * Size -> 0x0000
	 */
	struct WebRequestStream__WriteRequestAsync_d__38
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class WebRequestStream*                                    _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		class BufferOffsetSize_1*                                  buffer_5__2;                                             // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0038(0x0000)
		struct TaskAwaiter                                         u__2;                                                    // 0x0048(0x0000)
	};

	/**
	 * Struct System.System.Net.WebRequestStream+<WriteChunkTrailer_inner>d__39
	 * Size -> 0x0000
	 */
	struct WebRequestStream__WriteChunkTrailer_inner_d__39
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class WebRequestStream*                                    _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct System.System.Net.WebRequestStream+<WriteChunkTrailer>d__40
	 * Size -> 0x0000
	 */
	struct WebRequestStream__WriteChunkTrailer_d__40
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class WebRequestStream*                                    _4__this;                                                // 0x0020(0x0000)
		class CancellationTokenSource*                             cts_5__2;                                                // 0x0028(0x0000)
		class Task*                                                timeoutTask_5__3;                                        // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_Task  u__1;                                                    // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__2;                                                    // 0x0048(0x0000)
	};

	/**
	 * Struct System.System.Net.WebResponseStream+<ReadAsync>d__40
	 * Size -> 0x0000
	 */
	struct WebResponseStream__ReadAsync_d__40
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_int                          t__builder;                                              // 0x0008(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0020(0x0000)
		class Byte_Array*                                          buffer;                                                  // 0x0028(0x0000)
		int32_t                                                    offset;                                                  // 0x0030(0x0000)
		int32_t                                                    count;                                                   // 0x0034(0x0000)
		class WebResponseStream*                                   _4__this;                                                // 0x0038(0x0000)
		class WebCompletionSource*                                 completion_5__2;                                         // 0x0040(0x0000)
		int32_t                                                    nbytes_5__3;                                             // 0x0048(0x0000)
		class Exception*                                           throwMe_5__4;                                            // 0x0050(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_object u__1;                                                    // 0x0058(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_int   u__2;                                                    // 0x0068(0x0000)
	};

	/**
	 * Struct System.System.Net.WebResponseStream+<ReadAllAsyncInner>d__47
	 * Size -> 0x0000
	 */
	struct WebResponseStream__ReadAllAsyncInner_d__47
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_byte                         t__builder;                                              // 0x0008(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0020(0x0000)
		class WebResponseStream*                                   _4__this;                                                // 0x0028(0x0000)
		int64_t                                                    maximumSize_5__2;                                        // 0x0030(0x0000)
		class MemoryStream*                                        ms_5__3;                                                 // 0x0038(0x0000)
		class Byte_Array*                                          buffer_5__4;                                             // 0x0040(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_int   u__1;                                                    // 0x0048(0x0000)
	};

	/**
	 * Struct System.System.Net.WebResponseStream+<ReadAllAsync>d__48
	 * Size -> 0x0000
	 */
	struct WebResponseStream__ReadAllAsync_d__48
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class WebResponseStream*                                   _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		bool                                                       resending;                                               // 0x0030(0x0000)
		class WebCompletionSource*                                 completion_5__2;                                         // 0x0038(0x0000)
		class CancellationTokenSource*                             timeoutCts_5__3;                                         // 0x0040(0x0000)
		class Task*                                                timeoutTask_5__4;                                        // 0x0048(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_Task  u__1;                                                    // 0x0050(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_byte  u__2;                                                    // 0x0060(0x0000)
	};

	/**
	 * Struct System.System.Net.WebResponseStream+<InitReadAsync>d__52
	 * Size -> 0x0000
	 */
	struct WebResponseStream__InitReadAsync_d__52
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class WebResponseStream*                                   _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		class BufferOffsetSize_1*                                  buffer_5__2;                                             // 0x0030(0x0000)
		int32_t                                                    state_5__3;                                              // 0x0038(0x0000)
		int32_t                                                    position_5__4;                                           // 0x003C(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_int   u__1;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct System.System.Net.NetworkInformation.Win32_IP_ADDR_STRING
	 * Size -> 0x0000
	 */
	struct Win32_IP_ADDR_STRING
	{
	public:
		intptr_t                                                   Next;                                                    // 0x0000(0x0000)
		class Il2CppString*                                        IpAddress;                                               // 0x0008(0x0000)
		class Il2CppString*                                        IpMask;                                                  // 0x0010(0x0000)
		uint32_t                                                   Context;                                                 // 0x0018(0x0000)
	};

	/**
	 * Struct System.System.Net.NetworkInformation.Win32_FIXED_INFO
	 * Size -> 0x0000
	 */
	struct Win32_FIXED_INFO
	{
	public:
		class Il2CppString*                                        HostName;                                                // 0x0000(0x0000)
		class Il2CppString*                                        DomainName;                                              // 0x0008(0x0000)
		intptr_t                                                   CurrentDnsServer;                                        // 0x0010(0x0000)
		struct Win32_IP_ADDR_STRING                                DnsServerList;                                           // 0x0018(0x0000)
		int32_t                                                    NodeType;                                                // 0x0038(0x0000)
		class Il2CppString*                                        ScopeId;                                                 // 0x0040(0x0000)
		uint32_t                                                   EnableRouting;                                           // 0x0048(0x0000)
		uint32_t                                                   EnableProxy;                                             // 0x004C(0x0000)
		uint32_t                                                   EnableDns;                                               // 0x0050(0x0000)
	};

	/**
	 * Struct System.System.Net.Sockets.Socket+WSABUF
	 * Size -> 0x0000
	 */
	struct Socket_WSABUF
	{
	public:
		int32_t                                                    len;                                                     // 0x0000(0x0000)
		intptr_t                                                   buf;                                                     // 0x0008(0x0000)
	};

	/**
	 * Struct System.System.Net.WebSockets.ManagedWebSocket+MessageHeader
	 * Size -> 0x0000
	 */
	struct ManagedWebSocket_MessageHeader
	{
	public:
		uint8_t                                                    Opcode;                                                  // 0x0000(0x0000)
		bool                                                       Fin;                                                     // 0x0001(0x0000)
		int64_t                                                    PayloadLength;                                           // 0x0008(0x0000)
		int32_t                                                    Mask;                                                    // 0x0010(0x0000)
	};

	/**
	 * Struct System.System.Net.WebSockets.ManagedWebSocket+WebSocketReceiveResultGetter
	 * Size -> 0x0000
	 */
	struct ManagedWebSocket_WebSocketReceiveResultGetter
	{	};

	/**
	 * Struct System.System.Net.WebSockets.ManagedWebSocket+<WaitForWriteTaskAsync>d__55
	 * Size -> 0x0000
	 */
	struct ManagedWebSocket__WaitForWriteTaskAsync_d__55
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		struct ValueTask                                           writeTask;                                               // 0x0020(0x0000)
		class ManagedWebSocket*                                    _4__this;                                                // 0x0030(0x0000)
		struct ConfiguredValueTaskAwaitable_ConfiguredValueTaskAwaiter u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct System.System.Net.WebSockets.ManagedWebSocket+<SendFrameFallbackAsync>d__56
	 * Size -> 0x0000
	 */
	struct ManagedWebSocket__SendFrameFallbackAsync_d__56
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class ManagedWebSocket*                                    _4__this;                                                // 0x0020(0x0000)
		uint8_t                                                    opcode;                                                  // 0x0028(0x0000)
		bool                                                       endOfMessage;                                            // 0x0029(0x0000)
		struct ReadOnlyMemory_byte                                 payloadBuffer;                                           // 0x0030(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0040(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0048(0x0000)
		struct CancellationTokenRegistration                       _7__wrap1;                                               // 0x0058(0x0000)
		struct ConfiguredValueTaskAwaitable_ConfiguredValueTaskAwaiter u__2;                                                    // 0x0070(0x0000)
	};

	/**
	 * Struct System.System.Net.WebSockets.ManagedWebSocket+<ReceiveAsyncPrivate>d__61<TWebSocketReceiveResultGetter, TWebSocketReceiveResult>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ManagedWebSocket__ReceiveAsyncPrivate_d__61_TWebSocketReceiveResultGetter__TWebSocketReceiveResult
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncValueTaskMethodBuilder_TWebSocketReceiveResult t__builder;                                              // 0x0000(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0000(0x0000)
		class ManagedWebSocket*                                    _4__this;                                                // 0x0000(0x0000)
		class Il2CppObject*                                        resultGetter;                                            // 0x0000(0x0000)
		struct Memory_byte                                         payloadBuffer;                                           // 0x0000(0x0000)
		struct CancellationTokenRegistration                       registration_5__2;                                       // 0x0000(0x0000)
		struct ManagedWebSocket_MessageHeader                      header_5__3;                                             // 0x0000(0x0000)
		int32_t                                                    totalBytesReceived_5__4;                                 // 0x0000(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0000(0x0000)
		struct ConfiguredValueTaskAwaitable_ConfiguredValueTaskAwaiter_int u__2;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct System.System.Net.WebSockets.ManagedWebSocket+<HandleReceivedCloseAsync>d__62
	 * Size -> 0x0000
	 */
	struct ManagedWebSocket__HandleReceivedCloseAsync_d__62
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class ManagedWebSocket*                                    _4__this;                                                // 0x0020(0x0000)
		struct ManagedWebSocket_MessageHeader                      header;                                                  // 0x0028(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0040(0x0000)
		int32_t                                                    closeStatus_5__2;                                        // 0x0048(0x0000)
		class Il2CppString*                                        closeStatusDescription_5__3;                             // 0x0050(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0058(0x0000)
	};

	/**
	 * Struct System.System.Net.WebSockets.ManagedWebSocket+<WaitForServerToCloseConnectionAsync>d__63
	 * Size -> 0x0000
	 */
	struct ManagedWebSocket__WaitForServerToCloseConnectionAsync_d__63
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class ManagedWebSocket*                                    _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		class CancellationTokenSource*                             finalCts_5__2;                                           // 0x0030(0x0000)
		struct CancellationTokenRegistration                       _7__wrap2;                                               // 0x0038(0x0000)
		struct ConfiguredValueTaskAwaitable_ConfiguredValueTaskAwaiter_int u__1;                                                    // 0x0050(0x0000)
	};

	/**
	 * Struct System.System.Net.WebSockets.ManagedWebSocket+<HandleReceivedPingPongAsync>d__64
	 * Size -> 0x0000
	 */
	struct ManagedWebSocket__HandleReceivedPingPongAsync_d__64
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		struct ManagedWebSocket_MessageHeader                      header;                                                  // 0x0020(0x0000)
		class ManagedWebSocket*                                    _4__this;                                                // 0x0038(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0040(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0048(0x0000)
		struct ConfiguredValueTaskAwaitable_ConfiguredValueTaskAwaiter u__2;                                                    // 0x0058(0x0000)
	};

	/**
	 * Struct System.System.Net.WebSockets.ManagedWebSocket+<CloseWithReceiveErrorAndThrowAsync>d__66
	 * Size -> 0x0000
	 */
	struct ManagedWebSocket__CloseWithReceiveErrorAndThrowAsync_d__66
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class ManagedWebSocket*                                    _4__this;                                                // 0x0020(0x0000)
		int32_t                                                    closeStatus;                                             // 0x0028(0x0000)
		int32_t                                                    error;                                                   // 0x002C(0x0000)
		class Exception*                                           innerException;                                          // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct System.System.Net.WebSockets.ManagedWebSocket+<SendCloseFrameAsync>d__69
	 * Size -> 0x0000
	 */
	struct ManagedWebSocket__SendCloseFrameAsync_d__69
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class Il2CppString*                                        closeStatusDescription;                                  // 0x0020(0x0000)
		int32_t                                                    closeStatus;                                             // 0x0028(0x0000)
		class ManagedWebSocket*                                    _4__this;                                                // 0x0030(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0038(0x0000)
		class Byte_Array*                                          buffer_5__2;                                             // 0x0040(0x0000)
		struct ConfiguredValueTaskAwaitable_ConfiguredValueTaskAwaiter u__1;                                                    // 0x0048(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__2;                                                    // 0x0058(0x0000)
	};

	/**
	 * Struct System.System.Net.WebSockets.ManagedWebSocket+<EnsureBufferContainsAsync>d__71
	 * Size -> 0x0000
	 */
	struct ManagedWebSocket__EnsureBufferContainsAsync_d__71
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class ManagedWebSocket*                                    _4__this;                                                // 0x0020(0x0000)
		int32_t                                                    minimumRequiredBytes;                                    // 0x0028(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0030(0x0000)
		bool                                                       throwOnPrematureClosure;                                 // 0x0038(0x0000)
		struct ConfiguredValueTaskAwaitable_ConfiguredValueTaskAwaiter_int u__1;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct System.System.Net.WebSockets.ClientWebSocket+<ConnectAsyncCore>d__16
	 * Size -> 0x0000
	 */
	struct ClientWebSocket__ConnectAsyncCore_d__16
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class ClientWebSocket*                                     _4__this;                                                // 0x0020(0x0000)
		class Uri*                                                 uri;                                                     // 0x0028(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct System.System.Net.WebSockets.WebSocketHandle+<ConnectAsyncCore>d__26
	 * Size -> 0x0000
	 */
	struct WebSocketHandle__ConnectAsyncCore_d__26
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0020(0x0000)
		class WebSocketHandle*                                     _4__this;                                                // 0x0028(0x0000)
		class Uri*                                                 uri;                                                     // 0x0030(0x0000)
		class ClientWebSocketOptions*                              options;                                                 // 0x0038(0x0000)
		struct CancellationTokenRegistration                       registration_5__2;                                       // 0x0040(0x0000)
		class Stream*                                              stream_5__3;                                             // 0x0058(0x0000)
		struct KeyValuePair_string__string                         secKeyAndSecWebSocketAccept_5__4;                        // 0x0060(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_Socket u__1;                                                    // 0x0070(0x0000)
		class SslStream*                                           sslStream_5__5;                                          // 0x0080(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__2;                                                    // 0x0088(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_string u__3;                                                    // 0x0098(0x0000)
	};

	/**
	 * Struct System.System.Net.WebSockets.WebSocketHandle+<ConnectSocketAsync>d__27
	 * Size -> 0x0000
	 */
	struct WebSocketHandle__ConnectSocketAsync_d__27
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_Socket                       t__builder;                                              // 0x0008(0x0000)
		class Il2CppString*                                        host;                                                    // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		class WebSocketHandle*                                     _4__this;                                                // 0x0030(0x0000)
		int32_t                                                    port;                                                    // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_IPAddress u__1;                                                    // 0x0040(0x0000)
		class IPAddress_1_Array*                                   _7__wrap1;                                               // 0x0050(0x0000)
		int32_t                                                    _7__wrap2;                                               // 0x0058(0x0000)
		class Socket_2*                                            socket_5__4;                                             // 0x0060(0x0000)
		struct CancellationTokenRegistration                       _7__wrap4;                                               // 0x0068(0x0000)
		struct CancellationTokenRegistration                       _7__wrap5;                                               // 0x0080(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__2;                                                    // 0x0098(0x0000)
	};

	/**
	 * Struct System.System.Net.WebSockets.WebSocketHandle+<ParseAndValidateConnectResponseAsync>d__30
	 * Size -> 0x0000
	 */
	struct WebSocketHandle__ParseAndValidateConnectResponseAsync_d__30
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_string                       t__builder;                                              // 0x0008(0x0000)
		class Stream*                                              stream;                                                  // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		class Il2CppString*                                        expectedSecWebSocketAccept;                              // 0x0030(0x0000)
		class ClientWebSocketOptions*                              options;                                                 // 0x0038(0x0000)
		bool                                                       foundUpgrade_5__2;                                       // 0x0040(0x0000)
		bool                                                       foundConnection_5__3;                                    // 0x0041(0x0000)
		bool                                                       foundSecWebSocketAccept_5__4;                            // 0x0042(0x0000)
		class Il2CppString*                                        subprotocol_5__5;                                        // 0x0048(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_string u__1;                                                    // 0x0050(0x0000)
	};

	/**
	 * Struct System.System.Net.WebSockets.WebSocketHandle+<ReadResponseHeaderLineAsync>d__32
	 * Size -> 0x0000
	 */
	struct WebSocketHandle__ReadResponseHeaderLineAsync_d__32
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_string                       t__builder;                                              // 0x0008(0x0000)
		class Stream*                                              stream;                                                  // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		class StringBuilder*                                       sb_5__2;                                                 // 0x0030(0x0000)
		class Byte_Array*                                          arr_5__3;                                                // 0x0038(0x0000)
		uint16_t                                                   prevChar_5__4;                                           // 0x0040(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_int   u__1;                                                    // 0x0048(0x0000)
	};

	/**
	 * Struct System.System.ComponentModel.AttributeCollection+AttributeEntry
	 * Size -> 0x0000
	 */
	struct AttributeCollection_AttributeEntry
	{
	public:
		class Type*                                                type;                                                    // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0008(0x0000)
	};

	/**
	 * Struct System.System.ComponentModel.TypeDescriptor.TypeDescriptionNode+DefaultExtendedTypeDescriptor
	 * Size -> 0x0000
	 */
	struct TypeDescriptor_TypeDescriptionNode_DefaultExtendedTypeDescriptor
	{
	public:
		class TypeDescriptor_TypeDescriptionNode*                  node;                                                    // 0x0000(0x0000)
		class Il2CppObject*                                        instance;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct System.System.ComponentModel.TypeDescriptor.TypeDescriptionNode+DefaultTypeDescriptor
	 * Size -> 0x0000
	 */
	struct TypeDescriptor_TypeDescriptionNode_DefaultTypeDescriptor
	{
	public:
		class TypeDescriptor_TypeDescriptionNode*                  node;                                                    // 0x0000(0x0000)
		class Type*                                                objectType;                                              // 0x0008(0x0000)
		class Il2CppObject*                                        instance;                                                // 0x0010(0x0000)
	};

	/**
	 * Struct System.System.Collections.Specialized.BitVector32
	 * Size -> 0x0000
	 */
	struct BitVector32
	{
	public:
		uint32_t                                                   data;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct System.System.Collections.Generic.ValueListBuilder<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ValueListBuilder_T_1
	{
	public:
		struct Span_T                                              span;                                                    // 0x0000(0x0000)
		class UObject_Array*                                       arrayFromPool;                                           // 0x0000(0x0000)
		int32_t                                                    pos;                                                     // 0x0000(0x0000)
	};

	/**
	 * Struct System.System.Collections.Generic.LinkedList+Enumerator<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct LinkedList_Enumerator_T
	{
	public:
		class LinkedList_T*                                        list;                                                    // 0x0000(0x0000)
		class LinkedListNode_T*                                    node;                                                    // 0x0000(0x0000)
		int32_t                                                    version;                                                 // 0x0000(0x0000)
		class Il2CppObject*                                        current;                                                 // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct System.System.Collections.Generic.SortedList+Enumerator<TKey, TValue>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct SortedList_Enumerator_TKey__TValue
	{
	public:
		class SortedList_TKey__TValue*                             sortedList;                                              // 0x0000(0x0000)
		class Il2CppObject*                                        key;                                                     // 0x0000(0x0000)
		class Il2CppObject*                                        value;                                                   // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    version;                                                 // 0x0000(0x0000)
		int32_t                                                    getEnumeratorRetType;                                    // 0x0000(0x0000)
	};

	/**
	 * Struct System.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=6
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_6_3
	{	};

	/**
	 * Struct System.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=9
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_9
	{	};

	/**
	 * Struct System.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=10
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_10_1
	{	};

	/**
	 * Struct System.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=12
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_12_3
	{	};

	/**
	 * Struct System.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=14
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_14
	{	};

	/**
	 * Struct System.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=32
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_32_3
	{	};

	/**
	 * Struct System.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=44
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_44_2
	{	};

	/**
	 * Struct System.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=128
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_128_2
	{	};

	/**
	 * Struct System.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=256
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_256_2
	{	};

	/**
	 * Struct System.System.Diagnostics.CounterSample
	 * Size -> 0x0000
	 */
	struct CounterSample
	{	};

	/**
	 * Struct System.Xml.System.Xml.BinXmlSqlDecimal
	 * Size -> 0x0000
	 */
	struct BinXmlSqlDecimal
	{
	public:
		uint8_t                                                    m_bLen;                                                  // 0x0000(0x0000)
		uint8_t                                                    m_bPrec;                                                 // 0x0001(0x0000)
		uint8_t                                                    m_bScale;                                                // 0x0002(0x0000)
		uint8_t                                                    m_bSign;                                                 // 0x0003(0x0000)
		uint32_t                                                   m_data1;                                                 // 0x0004(0x0000)
		uint32_t                                                   m_data2;                                                 // 0x0008(0x0000)
		uint32_t                                                   m_data3;                                                 // 0x000C(0x0000)
		uint32_t                                                   m_data4;                                                 // 0x0010(0x0000)
	};

	/**
	 * Struct System.Xml.System.Xml.BinXmlSqlMoney
	 * Size -> 0x0000
	 */
	struct BinXmlSqlMoney
	{
	public:
		int64_t                                                    data;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct System.Xml.System.Xml.XmlSqlBinaryReader+QName
	 * Size -> 0x0000
	 */
	struct XmlSqlBinaryReader_QName
	{
	public:
		class Il2CppString*                                        prefix;                                                  // 0x0000(0x0000)
		class Il2CppString*                                        localname;                                               // 0x0008(0x0000)
		class Il2CppString*                                        namespaceUri;                                            // 0x0010(0x0000)
	};

	/**
	 * Struct System.Xml.System.Xml.XmlSqlBinaryReader+ElemInfo
	 * Size -> 0x0000
	 */
	struct XmlSqlBinaryReader_ElemInfo
	{
	public:
		struct XmlSqlBinaryReader_QName                            name;                                                    // 0x0000(0x0000)
		class Il2CppString*                                        xmlLang;                                                 // 0x0018(0x0000)
		int32_t                                                    xmlSpace;                                                // 0x0020(0x0000)
		bool                                                       xmlspacePreserve;                                        // 0x0024(0x0000)
		class XmlSqlBinaryReader_NamespaceDecl*                    nsdecls;                                                 // 0x0028(0x0000)
	};

	/**
	 * Struct System.Xml.System.Xml.XmlSqlBinaryReader+AttrInfo
	 * Size -> 0x0000
	 */
	struct XmlSqlBinaryReader_AttrInfo
	{
	public:
		struct XmlSqlBinaryReader_QName                            name;                                                    // 0x0000(0x0000)
		class Il2CppString*                                        val;                                                     // 0x0018(0x0000)
		int32_t                                                    contentPos;                                              // 0x0020(0x0000)
		int32_t                                                    hashCode;                                                // 0x0024(0x0000)
		int32_t                                                    prevHash;                                                // 0x0028(0x0000)
	};

	/**
	 * Struct System.Xml.System.Xml.XmlSqlBinaryReader+SymbolTables
	 * Size -> 0x0000
	 */
	struct XmlSqlBinaryReader_SymbolTables
	{
	public:
		class String_Array*                                        symtable;                                                // 0x0000(0x0000)
		int32_t                                                    symCount;                                                // 0x0008(0x0000)
		class XmlSqlBinaryReader_QName_Array*                      qnametable;                                              // 0x0010(0x0000)
		int32_t                                                    qnameCount;                                              // 0x0018(0x0000)
	};

	/**
	 * Struct System.Xml.System.Xml.XmlEventCache+XmlEvent
	 * Size -> 0x0000
	 */
	struct XmlEventCache_XmlEvent
	{
	public:
		int32_t                                                    eventType;                                               // 0x0000(0x0000)
		class Il2CppString*                                        s1;                                                      // 0x0008(0x0000)
		class Il2CppString*                                        s2;                                                      // 0x0010(0x0000)
		class Il2CppString*                                        s3;                                                      // 0x0018(0x0000)
		class Il2CppObject*                                        o;                                                       // 0x0020(0x0000)
	};

	/**
	 * Struct System.Xml.System.Xml.XmlTextReaderImpl+ParsingState
	 * Size -> 0x0000
	 */
	struct XmlTextReaderImpl_ParsingState
	{
	public:
		class Char_Array*                                          chars;                                                   // 0x0000(0x0000)
		int32_t                                                    charPos;                                                 // 0x0008(0x0000)
		int32_t                                                    charsUsed;                                               // 0x000C(0x0000)
		class Encoding*                                            encoding;                                                // 0x0010(0x0000)
		bool                                                       appendMode;                                              // 0x0018(0x0000)
		class Stream*                                              stream;                                                  // 0x0020(0x0000)
		class Decoder*                                             decoder;                                                 // 0x0028(0x0000)
		class Byte_Array*                                          bytes;                                                   // 0x0030(0x0000)
		int32_t                                                    bytePos;                                                 // 0x0038(0x0000)
		int32_t                                                    bytesUsed;                                               // 0x003C(0x0000)
		class TextReader*                                          textReader;                                              // 0x0040(0x0000)
		int32_t                                                    lineNo;                                                  // 0x0048(0x0000)
		int32_t                                                    lineStartPos;                                            // 0x004C(0x0000)
		class Il2CppString*                                        baseUriStr;                                              // 0x0050(0x0000)
		class Uri*                                                 baseUri;                                                 // 0x0058(0x0000)
		bool                                                       isEof;                                                   // 0x0060(0x0000)
		bool                                                       isStreamEof;                                             // 0x0061(0x0000)
		class IDtdEntityInfo*                                      entity;                                                  // 0x0068(0x0000)
		int32_t                                                    entityId;                                                // 0x0070(0x0000)
		bool                                                       eolNormalized;                                           // 0x0074(0x0000)
		bool                                                       entityResolvedManually;                                  // 0x0075(0x0000)
	};

	/**
	 * Struct System.Xml.System.Xml.XmlTextWriter+TagInfo
	 * Size -> 0x0000
	 */
	struct XmlTextWriter_TagInfo
	{
	public:
		class Il2CppString*                                        name;                                                    // 0x0000(0x0000)
		class Il2CppString*                                        prefix;                                                  // 0x0008(0x0000)
		class Il2CppString*                                        defaultNs;                                               // 0x0010(0x0000)
		int32_t                                                    defaultNsState;                                          // 0x0018(0x0000)
		int32_t                                                    xmlSpace;                                                // 0x001C(0x0000)
		class Il2CppString*                                        xmlLang;                                                 // 0x0020(0x0000)
		int32_t                                                    prevNsTop;                                               // 0x0028(0x0000)
		int32_t                                                    prefixCount;                                             // 0x002C(0x0000)
		bool                                                       mixed;                                                   // 0x0030(0x0000)
	};

	/**
	 * Struct System.Xml.System.Xml.XmlTextWriter+Namespace
	 * Size -> 0x0000
	 */
	struct XmlTextWriter_Namespace
	{
	public:
		class Il2CppString*                                        prefix;                                                  // 0x0000(0x0000)
		class Il2CppString*                                        ns;                                                      // 0x0008(0x0000)
		bool                                                       declared;                                                // 0x0010(0x0000)
		int32_t                                                    prevNsIndex;                                             // 0x0014(0x0000)
	};

	/**
	 * Struct System.Xml.System.Xml.XmlWellFormedWriter+ElementScope
	 * Size -> 0x0000
	 */
	struct XmlWellFormedWriter_ElementScope
	{
	public:
		int32_t                                                    prevNSTop;                                               // 0x0000(0x0000)
		class Il2CppString*                                        prefix;                                                  // 0x0008(0x0000)
		class Il2CppString*                                        localName;                                               // 0x0010(0x0000)
		class Il2CppString*                                        namespaceUri;                                            // 0x0018(0x0000)
		int32_t                                                    xmlSpace;                                                // 0x0020(0x0000)
		class Il2CppString*                                        xmlLang;                                                 // 0x0028(0x0000)
	};

	/**
	 * Struct System.Xml.System.Xml.XmlWellFormedWriter+Namespace
	 * Size -> 0x0000
	 */
	struct XmlWellFormedWriter_Namespace
	{
	public:
		class Il2CppString*                                        prefix;                                                  // 0x0000(0x0000)
		class Il2CppString*                                        namespaceUri;                                            // 0x0008(0x0000)
		int32_t                                                    kind;                                                    // 0x0010(0x0000)
		int32_t                                                    prevNsIndex;                                             // 0x0014(0x0000)
	};

	/**
	 * Struct System.Xml.System.Xml.XmlWellFormedWriter+AttrName
	 * Size -> 0x0000
	 */
	struct XmlWellFormedWriter_AttrName
	{
	public:
		class Il2CppString*                                        prefix;                                                  // 0x0000(0x0000)
		class Il2CppString*                                        namespaceUri;                                            // 0x0008(0x0000)
		class Il2CppString*                                        localName;                                               // 0x0010(0x0000)
		int32_t                                                    prev;                                                    // 0x0018(0x0000)
	};

	/**
	 * Struct System.Xml.System.Xml.XmlNamedNodeMap+SmallXmlNodeList
	 * Size -> 0x0000
	 */
	struct XmlNamedNodeMap_SmallXmlNodeList
	{
	public:
		class Il2CppObject*                                        field;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct System.Xml.System.Xml.XmlNodeReaderNavigator+VirtualAttribute
	 * Size -> 0x0000
	 */
	struct XmlNodeReaderNavigator_VirtualAttribute
	{
	public:
		class Il2CppString*                                        name;                                                    // 0x0000(0x0000)
		class Il2CppString*                                        value;                                                   // 0x0008(0x0000)
	};

	/**
	 * Struct System.Xml.System.Xml.LineInfo
	 * Size -> 0x0000
	 */
	struct LineInfo
	{
	public:
		int32_t                                                    lineNo;                                                  // 0x0000(0x0000)
		int32_t                                                    linePos;                                                 // 0x0004(0x0000)
	};

	/**
	 * Struct System.Xml.System.Xml.XmlCharType
	 * Size -> 0x0000
	 */
	struct XmlCharType
	{
	public:
		class Byte_Array*                                          charProperties;                                          // 0x0000(0x0000)
	};

	/**
	 * Struct System.Xml.System.Xml.XmlDownloadManager+<GetNonFileStreamAsync>d__5
	 * Size -> 0x0000
	 */
	struct XmlDownloadManager__GetNonFileStreamAsync_d__5
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_Stream                       t__builder;                                              // 0x0008(0x0000)
		class Uri*                                                 uri;                                                     // 0x0020(0x0000)
		class ICredentials*                                        credentials;                                             // 0x0028(0x0000)
		class IWebProxy*                                           proxy;                                                   // 0x0030(0x0000)
		class RequestCachePolicy*                                  cachePolicy;                                             // 0x0038(0x0000)
		class XmlDownloadManager*                                  _4__this;                                                // 0x0040(0x0000)
		class WebRequest*                                          req_5__2;                                                // 0x0048(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_WebResponse u__1;                                                    // 0x0050(0x0000)
	};

	/**
	 * Struct System.Xml.System.Xml.XmlNamespaceManager+NamespaceDeclaration
	 * Size -> 0x0000
	 */
	struct XmlNamespaceManager_NamespaceDeclaration
	{
	public:
		class Il2CppString*                                        prefix;                                                  // 0x0000(0x0000)
		class Il2CppString*                                        uri;                                                     // 0x0008(0x0000)
		int32_t                                                    scopeId;                                                 // 0x0010(0x0000)
		int32_t                                                    previousNsIndex;                                         // 0x0014(0x0000)
	};

	/**
	 * Struct System.Xml.System.Xml.XmlUrlResolver+<GetEntityAsync>d__15
	 * Size -> 0x0000
	 */
	struct XmlUrlResolver__GetEntityAsync_d__15
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_object                       t__builder;                                              // 0x0008(0x0000)
		class Type*                                                ofObjectToReturn;                                        // 0x0020(0x0000)
		class Uri*                                                 absoluteUri;                                             // 0x0028(0x0000)
		class XmlUrlResolver*                                      _4__this;                                                // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_Stream u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct System.Xml.System.Xml.Xsl.Runtime.StringConcat
	 * Size -> 0x0000
	 */
	struct StringConcat
	{
	public:
		class Il2CppString*                                        s1;                                                      // 0x0000(0x0000)
		class Il2CppString*                                        s2;                                                      // 0x0008(0x0000)
		class Il2CppString*                                        s3;                                                      // 0x0010(0x0000)
		class Il2CppString*                                        s4;                                                      // 0x0018(0x0000)
		class Il2CppString*                                        delimiter;                                               // 0x0020(0x0000)
		class List_string*                                         strList;                                                 // 0x0028(0x0000)
		int32_t                                                    idxStr;                                                  // 0x0030(0x0000)
	};

	/**
	 * Struct System.Xml.System.Xml.Schema.Position
	 * Size -> 0x0000
	 */
	struct Position
	{
	public:
		int32_t                                                    symbol;                                                  // 0x0000(0x0000)
		class Il2CppObject*                                        particle;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct System.Xml.System.Xml.Schema.SequenceNode+SequenceConstructPosContext
	 * Size -> 0x0000
	 */
	struct SequenceNode_SequenceConstructPosContext
	{
	public:
		class SequenceNode*                                        _this;                                                   // 0x0000(0x0000)
		class BitSet*                                              firstpos;                                                // 0x0008(0x0000)
		class BitSet*                                              lastpos;                                                 // 0x0010(0x0000)
		class BitSet*                                              lastposLeft;                                             // 0x0018(0x0000)
		class BitSet*                                              firstposRight;                                           // 0x0020(0x0000)
	};

	/**
	 * Struct System.Xml.System.Xml.Schema.RangePositionInfo
	 * Size -> 0x0000
	 */
	struct RangePositionInfo
	{
	public:
		class BitSet*                                              curpos;                                                  // 0x0000(0x0000)
		class Decimal_Array*                                       rangeCounters;                                           // 0x0008(0x0000)
	};

	/**
	 * Struct System.Xml.System.Xml.Schema.FacetsChecker.FacetsCompiler+Map
	 * Size -> 0x0000
	 */
	struct FacetsChecker_FacetsCompiler_Map
	{
	public:
		uint16_t                                                   match;                                                   // 0x0000(0x0000)
		class Il2CppString*                                        replacement;                                             // 0x0008(0x0000)
	};

	/**
	 * Struct System.Xml.System.Xml.Schema.FacetsChecker+FacetsCompiler
	 * Size -> 0x0000
	 */
	struct FacetsChecker_FacetsCompiler
	{
	public:
		class DatatypeImplementation*                              datatype;                                                // 0x0000(0x0000)
		class RestrictionFacets*                                   derivedRestriction;                                      // 0x0008(0x0000)
		int32_t                                                    baseFlags;                                               // 0x0010(0x0000)
		int32_t                                                    baseFixedFlags;                                          // 0x0014(0x0000)
		int32_t                                                    validRestrictionFlags;                                   // 0x0018(0x0000)
		class XmlSchemaDatatype*                                   nonNegativeInt;                                          // 0x0020(0x0000)
		class XmlSchemaDatatype*                                   builtInType;                                             // 0x0028(0x0000)
		int32_t                                                    builtInEnum;                                             // 0x0030(0x0000)
		bool                                                       firstPattern;                                            // 0x0034(0x0000)
		class StringBuilder*                                       regStr;                                                  // 0x0038(0x0000)
		class XmlSchemaPatternFacet*                               pattern_facet;                                           // 0x0040(0x0000)
	};

	/**
	 * Struct System.Xml.System.Xml.Schema.StateUnion
	 * Size -> 0x0000
	 */
	struct StateUnion
	{
	public:
		int32_t                                                    State;                                                   // 0x0000(0x0000)
		int32_t                                                    AllElementsRequired;                                     // 0x0000(0x0000)
		int32_t                                                    CurPosIndex;                                             // 0x0000(0x0000)
		int32_t                                                    NumberOfRunningPos;                                      // 0x0000(0x0000)
	};

	/**
	 * Struct System.Xml.System.Xml.Schema.XmlAtomicValue+Union
	 * Size -> 0x0000
	 */
	struct XmlAtomicValue_Union
	{
	public:
		bool                                                       boolVal;                                                 // 0x0000(0x0000)
		double                                                     dblVal;                                                  // 0x0000(0x0000)
		int64_t                                                    i64Val;                                                  // 0x0000(0x0000)
		int32_t                                                    i32Val;                                                  // 0x0000(0x0000)
		struct DateTime                                            dtVal;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct System.Xml.System.Xml.Schema.XmlSchemaObjectTable+XmlSchemaObjectEntry
	 * Size -> 0x0000
	 */
	struct XmlSchemaObjectTable_XmlSchemaObjectEntry
	{
	public:
		class XmlQualifiedName*                                    qname;                                                   // 0x0000(0x0000)
		class XmlSchemaObject*                                     xso;                                                     // 0x0008(0x0000)
	};

	/**
	 * Struct System.Xml.System.Xml.Schema.XsdDateTime+Parser
	 * Size -> 0x0000
	 */
	struct XsdDateTime_Parser
	{
	public:
		int32_t                                                    typeCode;                                                // 0x0000(0x0000)
		int32_t                                                    year;                                                    // 0x0004(0x0000)
		int32_t                                                    month;                                                   // 0x0008(0x0000)
		int32_t                                                    day;                                                     // 0x000C(0x0000)
		int32_t                                                    hour;                                                    // 0x0010(0x0000)
		int32_t                                                    minute;                                                  // 0x0014(0x0000)
		int32_t                                                    second;                                                  // 0x0018(0x0000)
		int32_t                                                    fraction;                                                // 0x001C(0x0000)
		int32_t                                                    kind;                                                    // 0x0020(0x0000)
		int32_t                                                    zoneHour;                                                // 0x0024(0x0000)
		int32_t                                                    zoneMinute;                                              // 0x0028(0x0000)
		class Il2CppString*                                        text;                                                    // 0x0030(0x0000)
		int32_t                                                    length;                                                  // 0x0038(0x0000)
	};

	/**
	 * Struct System.Xml.System.Xml.Schema.XsdDateTime
	 * Size -> 0x0000
	 */
	struct XsdDateTime
	{
	public:
		struct DateTime                                            dt;                                                      // 0x0000(0x0000)
		uint32_t                                                   extra;                                                   // 0x0008(0x0000)
	};

	/**
	 * Struct System.Xml.System.Xml.Schema.XsdDuration
	 * Size -> 0x0000
	 */
	struct XsdDuration
	{
	public:
		int32_t                                                    years;                                                   // 0x0000(0x0000)
		int32_t                                                    months;                                                  // 0x0004(0x0000)
		int32_t                                                    days;                                                    // 0x0008(0x0000)
		int32_t                                                    hours;                                                   // 0x000C(0x0000)
		int32_t                                                    minutes;                                                 // 0x0010(0x0000)
		int32_t                                                    seconds;                                                 // 0x0014(0x0000)
		uint32_t                                                   nanoseconds;                                             // 0x0018(0x0000)
	};

	/**
	 * Struct System.Xml.MS.Internal.Xml.Cache.XPathNode
	 * Size -> 0x0000
	 */
	struct XPathNode
	{
	public:
		class XPathNodeInfoAtom*                                   info;                                                    // 0x0000(0x0000)
		uint16_t                                                   idxSibling;                                              // 0x0008(0x0000)
		uint16_t                                                   idxParent;                                               // 0x000A(0x0000)
		uint16_t                                                   idxSimilar;                                              // 0x000C(0x0000)
		uint16_t                                                   posOffset;                                               // 0x000E(0x0000)
		uint32_t                                                   props;                                                   // 0x0010(0x0000)
		class Il2CppString*                                        value;                                                   // 0x0018(0x0000)
	};

	/**
	 * Struct System.Xml.MS.Internal.Xml.Cache.XPathNodeRef
	 * Size -> 0x0000
	 */
	struct XPathNodeRef
	{
	public:
		class XPathNode_Array*                                     page;                                                    // 0x0000(0x0000)
		int32_t                                                    idx;                                                     // 0x0008(0x0000)
	};

	/**
	 * Struct System.Xml.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=6
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_6_4
	{	};

	/**
	 * Struct System.Xml.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=12
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_12_4
	{	};

	/**
	 * Struct System.Xml.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=16
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_16_3
	{	};

	/**
	 * Struct System.Xml.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=20
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_20_3
	{	};

	/**
	 * Struct System.Xml.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=24
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_24_3
	{	};

	/**
	 * Struct System.Xml.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=28
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_28_2
	{	};

	/**
	 * Struct System.Xml.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=32
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_32_4
	{	};

	/**
	 * Struct System.Xml.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=36
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_36_3
	{	};

	/**
	 * Struct System.Xml.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=38
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_38_1
	{	};

	/**
	 * Struct System.Xml.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=40
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_40_2
	{	};

	/**
	 * Struct System.Xml.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=44
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_44_3
	{	};

	/**
	 * Struct System.Xml.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=56
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_56_2
	{	};

	/**
	 * Struct System.Xml.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=64
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_64_3
	{	};

	/**
	 * Struct System.Xml.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=68
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_68_1
	{	};

	/**
	 * Struct System.Xml.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=112
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_112_1
	{	};

	/**
	 * Struct System.Xml.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=144
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_144
	{	};

	/**
	 * Struct System.Xml.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=416
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_416
	{	};

	/**
	 * Struct System.Xml.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=664
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_664
	{	};

	/**
	 * Struct System.Xml.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=960
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_960
	{	};

	/**
	 * Struct System.Xml.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=1212
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_1212
	{	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputActionAsset+WriteFileJson
	 * Size -> 0x0000
	 */
	struct InputActionAsset_WriteFileJson
	{
	public:
		class Il2CppString*                                        name;                                                    // 0x0000(0x0000)
		class InputActionMap_WriteMapJson_Array*                   maps;                                                    // 0x0008(0x0000)
		class InputControlScheme_SchemeJson_Array*                 controlSchemes;                                          // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputActionAsset+ReadFileJson
	 * Size -> 0x0000
	 */
	struct InputActionAsset_ReadFileJson
	{
	public:
		class Il2CppString*                                        name;                                                    // 0x0000(0x0000)
		class InputActionMap_ReadMapJson_Array*                    maps;                                                    // 0x0008(0x0000)
		class InputControlScheme_SchemeJson_Array*                 controlSchemes;                                          // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputActionMap+DeviceArray
	 * Size -> 0x0000
	 */
	struct InputActionMap_DeviceArray
	{
	public:
		bool                                                       m_HaveValue;                                             // 0x0000(0x0000)
		int32_t                                                    m_DeviceCount;                                           // 0x0004(0x0000)
		class InputDevice_Array*                                   m_DeviceArray;                                           // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputActionMap+BindingOverrideListJson
	 * Size -> 0x0000
	 */
	struct InputActionMap_BindingOverrideListJson
	{
	public:
		class List_InputActionMap_BindingOverrideJson*             bindings;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputActionMap+BindingOverrideJson
	 * Size -> 0x0000
	 */
	struct InputActionMap_BindingOverrideJson
	{
	public:
		class Il2CppString*                                        action;                                                  // 0x0000(0x0000)
		class Il2CppString*                                        id;                                                      // 0x0008(0x0000)
		class Il2CppString*                                        path;                                                    // 0x0010(0x0000)
		class Il2CppString*                                        interactions;                                            // 0x0018(0x0000)
		class Il2CppString*                                        processors;                                              // 0x0020(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputActionMap+BindingJson
	 * Size -> 0x0000
	 */
	struct InputActionMap_BindingJson
	{
	public:
		class Il2CppString*                                        name;                                                    // 0x0000(0x0000)
		class Il2CppString*                                        id;                                                      // 0x0008(0x0000)
		class Il2CppString*                                        path;                                                    // 0x0010(0x0000)
		class Il2CppString*                                        interactions;                                            // 0x0018(0x0000)
		class Il2CppString*                                        processors;                                              // 0x0020(0x0000)
		class Il2CppString*                                        groups;                                                  // 0x0028(0x0000)
		class Il2CppString*                                        action;                                                  // 0x0030(0x0000)
		bool                                                       isComposite;                                             // 0x0038(0x0000)
		bool                                                       isPartOfComposite;                                       // 0x0039(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputActionMap+ReadActionJson
	 * Size -> 0x0000
	 */
	struct InputActionMap_ReadActionJson
	{
	public:
		class Il2CppString*                                        name;                                                    // 0x0000(0x0000)
		class Il2CppString*                                        type;                                                    // 0x0008(0x0000)
		class Il2CppString*                                        id;                                                      // 0x0010(0x0000)
		class Il2CppString*                                        expectedControlType;                                     // 0x0018(0x0000)
		class Il2CppString*                                        expectedControlLayout;                                   // 0x0020(0x0000)
		class Il2CppString*                                        processors;                                              // 0x0028(0x0000)
		class Il2CppString*                                        interactions;                                            // 0x0030(0x0000)
		bool                                                       passThrough;                                             // 0x0038(0x0000)
		bool                                                       initialStateCheck;                                       // 0x0039(0x0000)
		class InputActionMap_BindingJson_Array*                    bindings;                                                // 0x0040(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputActionMap+WriteActionJson
	 * Size -> 0x0000
	 */
	struct InputActionMap_WriteActionJson
	{
	public:
		class Il2CppString*                                        name;                                                    // 0x0000(0x0000)
		class Il2CppString*                                        type;                                                    // 0x0008(0x0000)
		class Il2CppString*                                        id;                                                      // 0x0010(0x0000)
		class Il2CppString*                                        expectedControlType;                                     // 0x0018(0x0000)
		class Il2CppString*                                        processors;                                              // 0x0020(0x0000)
		class Il2CppString*                                        interactions;                                            // 0x0028(0x0000)
		bool                                                       initialStateCheck;                                       // 0x0030(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputActionMap+ReadMapJson
	 * Size -> 0x0000
	 */
	struct InputActionMap_ReadMapJson
	{
	public:
		class Il2CppString*                                        name;                                                    // 0x0000(0x0000)
		class Il2CppString*                                        id;                                                      // 0x0008(0x0000)
		class InputActionMap_ReadActionJson_Array*                 actions;                                                 // 0x0010(0x0000)
		class InputActionMap_BindingJson_Array*                    bindings;                                                // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputActionMap+WriteMapJson
	 * Size -> 0x0000
	 */
	struct InputActionMap_WriteMapJson
	{
	public:
		class Il2CppString*                                        name;                                                    // 0x0000(0x0000)
		class Il2CppString*                                        id;                                                      // 0x0008(0x0000)
		class InputActionMap_WriteActionJson_Array*                actions;                                                 // 0x0010(0x0000)
		class InputActionMap_BindingJson_Array*                    bindings;                                                // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputActionMap+WriteFileJson
	 * Size -> 0x0000
	 */
	struct InputActionMap_WriteFileJson
	{
	public:
		class InputActionMap_WriteMapJson_Array*                   maps;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputActionMap+ReadFileJson
	 * Size -> 0x0000
	 */
	struct InputActionMap_ReadFileJson
	{
	public:
		class InputActionMap_ReadActionJson_Array*                 actions;                                                 // 0x0000(0x0000)
		class InputActionMap_ReadMapJson_Array*                    maps;                                                    // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputActionRebindingExtensions+Parameter
	 * Size -> 0x0000
	 */
	struct InputActionRebindingExtensions_Parameter
	{
	public:
		class Il2CppObject*                                        instance;                                                // 0x0000(0x0000)
		class FieldInfo*                                           field;                                                   // 0x0008(0x0000)
		int32_t                                                    bindingIndex;                                            // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputActionRebindingExtensions+ParameterEnumerator
	 * Size -> 0x0000
	 */
	struct InputActionRebindingExtensions_ParameterEnumerator
	{
	public:
		class InputActionState*                                    m_State;                                                 // 0x0000(0x0000)
		int32_t                                                    m_MapIndex;                                              // 0x0008(0x0000)
		int32_t                                                    m_BindingCurrentIndex;                                   // 0x000C(0x0000)
		int32_t                                                    m_BindingEndIndex;                                       // 0x0010(0x0000)
		int32_t                                                    m_InteractionCurrentIndex;                               // 0x0014(0x0000)
		int32_t                                                    m_InteractionEndIndex;                                   // 0x0018(0x0000)
		int32_t                                                    m_ProcessorCurrentIndex;                                 // 0x001C(0x0000)
		int32_t                                                    m_ProcessorEndIndex;                                     // 0x0020(0x0000)
		struct InputBinding                                        m_BindingMask;                                           // 0x0028(0x0000)
		class Type*                                                m_ObjectType;                                            // 0x0080(0x0000)
		class Il2CppString*                                        m_ParameterName;                                         // 0x0088(0x0000)
		bool                                                       m_MayBeInteraction;                                      // 0x0090(0x0000)
		bool                                                       m_MayBeProcessor;                                        // 0x0091(0x0000)
		bool                                                       m_MayBeComposite;                                        // 0x0092(0x0000)
		bool                                                       m_CurrentBindingIsComposite;                             // 0x0093(0x0000)
		class Il2CppObject*                                        m_CurrentObject;                                         // 0x0098(0x0000)
		class FieldInfo*                                           m_CurrentParameter;                                      // 0x00A0(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputActionRebindingExtensions+ParameterEnumerable
	 * Size -> 0x0000
	 */
	struct InputActionRebindingExtensions_ParameterEnumerable
	{
	public:
		class InputActionState*                                    m_State;                                                 // 0x0000(0x0000)
		struct InputActionRebindingExtensions_ParameterOverride    m_Parameter;                                             // 0x0008(0x0000)
		int32_t                                                    m_MapIndex;                                              // 0x0080(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputActionProperty
	 * Size -> 0x0000
	 */
	struct InputActionProperty
	{
	public:
		bool                                                       m_UseReference;                                          // 0x0000(0x0000)
		class InputAction*                                         m_Action;                                                // 0x0008(0x0000)
		class InputActionReference*                                m_Reference;                                             // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputActionSetupExtensions+BindingSyntax
	 * Size -> 0x0000
	 */
	struct InputActionSetupExtensions_BindingSyntax
	{
	public:
		class InputActionMap*                                      m_ActionMap;                                             // 0x0000(0x0000)
		class InputAction*                                         m_Action;                                                // 0x0008(0x0000)
		int32_t                                                    m_BindingIndexInMap;                                     // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputActionSetupExtensions+CompositeSyntax
	 * Size -> 0x0000
	 */
	struct InputActionSetupExtensions_CompositeSyntax
	{
	public:
		class InputAction*                                         m_Action;                                                // 0x0000(0x0000)
		class InputActionMap*                                      m_ActionMap;                                             // 0x0008(0x0000)
		int32_t                                                    m_BindingIndexInMap;                                     // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputActionSetupExtensions+ControlSchemeSyntax
	 * Size -> 0x0000
	 */
	struct InputActionSetupExtensions_ControlSchemeSyntax
	{
	public:
		class InputActionAsset*                                    m_Asset;                                                 // 0x0000(0x0000)
		int32_t                                                    m_ControlSchemeIndex;                                    // 0x0008(0x0000)
		struct InputControlScheme                                  m_ControlScheme;                                         // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputActionState+InteractionState
	 * Size -> 0x0000
	 */
	struct InputActionState_InteractionState
	{
	public:
		uint16_t                                                   m_TriggerControlIndex;                                   // 0x0000(0x0000)
		uint8_t                                                    m_Phase;                                                 // 0x0002(0x0000)
		uint8_t                                                    m_Flags;                                                 // 0x0003(0x0000)
		float                                                      m_TimerDuration;                                         // 0x0004(0x0000)
		double                                                     m_StartTime;                                             // 0x0008(0x0000)
		double                                                     m_TimerStartTime;                                        // 0x0010(0x0000)
		double                                                     m_PerformedTime;                                         // 0x0018(0x0000)
		float                                                      m_TotalTimeoutCompletionTimeDone;                        // 0x0020(0x0000)
		float                                                      m_TotalTimeoutCompletionTimeRemaining;                   // 0x0024(0x0000)
		int64_t                                                    m_TimerMonitorIndex;                                     // 0x0028(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputActionState+BindingState
	 * Size -> 0x0000
	 */
	struct InputActionState_BindingState
	{
	public:
		uint8_t                                                    m_ControlCount;                                          // 0x0000(0x0000)
		uint8_t                                                    m_InteractionCount;                                      // 0x0001(0x0000)
		uint8_t                                                    m_ProcessorCount;                                        // 0x0002(0x0000)
		uint8_t                                                    m_MapIndex;                                              // 0x0003(0x0000)
		uint8_t                                                    m_Flags;                                                 // 0x0004(0x0000)
		uint8_t                                                    m_PartIndex;                                             // 0x0005(0x0000)
		uint16_t                                                   m_ActionIndex;                                           // 0x0006(0x0000)
		uint16_t                                                   m_CompositeOrCompositeBindingIndex;                      // 0x0008(0x0000)
		uint16_t                                                   m_ProcessorStartIndex;                                   // 0x000A(0x0000)
		uint16_t                                                   m_InteractionStartIndex;                                 // 0x000C(0x0000)
		uint16_t                                                   m_ControlStartIndex;                                     // 0x000E(0x0000)
		double                                                     m_PressTime;                                             // 0x0010(0x0000)
		int32_t                                                    m_TriggerEventIdForComposite;                            // 0x0018(0x0000)
		int32_t                                                    padding;                                                 // 0x001C(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputActionState+TriggerState
	 * Size -> 0x0000
	 */
	struct InputActionState_TriggerState
	{
	public:
		uint8_t                                                    m_Phase;                                                 // 0x0000(0x0000)
		uint8_t                                                    m_Flags;                                                 // 0x0001(0x0000)
		uint8_t                                                    m_MapIndex;                                              // 0x0002(0x0000)
		uint16_t                                                   m_ControlIndex;                                          // 0x0004(0x0000)
		double                                                     m_Time;                                                  // 0x0008(0x0000)
		double                                                     m_StartTime;                                             // 0x0010(0x0000)
		uint16_t                                                   m_BindingIndex;                                          // 0x0018(0x0000)
		uint16_t                                                   m_InteractionIndex;                                      // 0x001A(0x0000)
		float                                                      m_Magnitude;                                             // 0x001C(0x0000)
		uint32_t                                                   m_LastPerformedInUpdate;                                 // 0x0020(0x0000)
		uint32_t                                                   m_LastCanceledInUpdate;                                  // 0x0024(0x0000)
		uint32_t                                                   m_PressedInUpdate;                                       // 0x0028(0x0000)
		uint32_t                                                   m_ReleasedInUpdate;                                      // 0x002C(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputActionState+ActionMapIndices
	 * Size -> 0x0000
	 */
	struct InputActionState_ActionMapIndices
	{
	public:
		int32_t                                                    actionStartIndex;                                        // 0x0000(0x0000)
		int32_t                                                    actionCount;                                             // 0x0004(0x0000)
		int32_t                                                    controlStartIndex;                                       // 0x0008(0x0000)
		int32_t                                                    controlCount;                                            // 0x000C(0x0000)
		int32_t                                                    bindingStartIndex;                                       // 0x0010(0x0000)
		int32_t                                                    bindingCount;                                            // 0x0014(0x0000)
		int32_t                                                    interactionStartIndex;                                   // 0x0018(0x0000)
		int32_t                                                    interactionCount;                                        // 0x001C(0x0000)
		int32_t                                                    processorStartIndex;                                     // 0x0020(0x0000)
		int32_t                                                    processorCount;                                          // 0x0024(0x0000)
		int32_t                                                    compositeStartIndex;                                     // 0x0028(0x0000)
		int32_t                                                    compositeCount;                                          // 0x002C(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputActionState+UnmanagedMemory
	 * Size -> 0x0000
	 */
	struct InputActionState_UnmanagedMemory
	{
	public:
		void*                                                      basePtr;                                                 // 0x0000(0x0000)
		int32_t                                                    mapCount;                                                // 0x0008(0x0000)
		int32_t                                                    actionCount;                                             // 0x000C(0x0000)
		int32_t                                                    interactionCount;                                        // 0x0010(0x0000)
		int32_t                                                    bindingCount;                                            // 0x0014(0x0000)
		int32_t                                                    controlCount;                                            // 0x0018(0x0000)
		int32_t                                                    compositeCount;                                          // 0x001C(0x0000)
		struct InputActionState_TriggerState*                      actionStates;                                            // 0x0020(0x0000)
		struct InputActionState_BindingState*                      bindingStates;                                           // 0x0028(0x0000)
		struct InputActionState_InteractionState*                  interactionStates;                                       // 0x0030(0x0000)
		float*                                                     controlMagnitudes;                                       // 0x0038(0x0000)
		float*                                                     compositeMagnitudes;                                     // 0x0040(0x0000)
		int32_t*                                                   enabledControls;                                         // 0x0048(0x0000)
		uint16_t*                                                  actionBindingIndicesAndCounts;                           // 0x0050(0x0000)
		uint16_t*                                                  actionBindingIndices;                                    // 0x0058(0x0000)
		int32_t*                                                   controlIndexToBindingIndex;                              // 0x0060(0x0000)
		uint16_t*                                                  controlGroupingAndComplexity;                            // 0x0068(0x0000)
		bool                                                       controlGroupingInitialized;                              // 0x0070(0x0000)
		struct InputActionState_ActionMapIndices*                  mapIndices;                                              // 0x0078(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputActionState+GlobalState
	 * Size -> 0x0000
	 */
	struct InputActionState_GlobalState
	{
	public:
		struct InlinedArray_GCHandle                               globalList;                                              // 0x0000(0x0000)
		struct CallbackArray_Action_object__InputActionChange      onActionChange;                                          // 0x0018(0x0000)
		struct CallbackArray_Action_object                         onActionControlsChanged;                                 // 0x0068(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputBindingCompositeContext+PartBinding
	 * Size -> 0x0000
	 */
	struct InputBindingCompositeContext_PartBinding
	{
	public:
		int32_t                                                    part_k__BackingField;                                    // 0x0000(0x0000)
		class InputControl*                                        control_k__BackingField;                                 // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputBindingCompositeContext+DefaultComparer<TValue>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct InputBindingCompositeContext_DefaultComparer_TValue
	{	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputBindingCompositeContext
	 * Size -> 0x0000
	 */
	struct InputBindingCompositeContext
	{
	public:
		class InputActionState*                                    m_State;                                                 // 0x0000(0x0000)
		int32_t                                                    m_BindingIndex;                                          // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.TypeTable
	 * Size -> 0x0000
	 */
	struct TypeTable
	{
	public:
		class Dictionary_InternedString__Type*                     table;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputBindingResolver
	 * Size -> 0x0000
	 */
	struct InputBindingResolver
	{
	public:
		int32_t                                                    totalProcessorCount;                                     // 0x0000(0x0000)
		int32_t                                                    totalCompositeCount;                                     // 0x0004(0x0000)
		int32_t                                                    totalInteractionCount;                                   // 0x0008(0x0000)
		class InputActionMap_Array*                                maps;                                                    // 0x0010(0x0000)
		class InputControl_Array*                                  controls;                                                // 0x0018(0x0000)
		struct InputActionState_UnmanagedMemory                    memory;                                                  // 0x0020(0x0000)
		class IInputInteraction_Array*                             interactions;                                            // 0x00A0(0x0000)
		class InputProcessor_Array*                                processors;                                              // 0x00A8(0x0000)
		class InputBindingComposite_Array*                         composites;                                              // 0x00B0(0x0000)
		struct Nullable_InputBinding                               bindingMask;                                             // 0x00B8(0x0000)
		bool                                                       m_IsControlOnlyResolve;                                  // 0x0118(0x0000)
		class List_NameAndParameters*                              m_Parameters;                                            // 0x0120(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputControlScheme+DeviceRequirement
	 * Size -> 0x0000
	 */
	struct InputControlScheme_DeviceRequirement
	{
	public:
		class Il2CppString*                                        m_ControlPath;                                           // 0x0000(0x0000)
		int32_t                                                    m_Flags;                                                 // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputControlScheme.MatchResult+Match
	 * Size -> 0x0000
	 */
	struct InputControlScheme_MatchResult_Match
	{
	public:
		int32_t                                                    m_RequirementIndex;                                      // 0x0000(0x0000)
		class InputControlScheme_DeviceRequirement_Array*          m_Requirements;                                          // 0x0008(0x0000)
		struct InputControlList_InputControl                       m_Controls;                                              // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputControlScheme.MatchResult+Enumerator
	 * Size -> 0x0000
	 */
	struct InputControlScheme_MatchResult_Enumerator
	{
	public:
		int32_t                                                    m_Index;                                                 // 0x0000(0x0000)
		class InputControlScheme_DeviceRequirement_Array*          m_Requirements;                                          // 0x0008(0x0000)
		struct InputControlList_InputControl                       m_Controls;                                              // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputControlScheme+MatchResult
	 * Size -> 0x0000
	 */
	struct InputControlScheme_MatchResult
	{
	public:
		int32_t                                                    m_Result;                                                // 0x0000(0x0000)
		float                                                      m_Score;                                                 // 0x0004(0x0000)
		struct InputControlList_InputDevice                        m_Devices;                                               // 0x0008(0x0000)
		struct InputControlList_InputControl                       m_Controls;                                              // 0x0028(0x0000)
		class InputControlScheme_DeviceRequirement_Array*          m_Requirements;                                          // 0x0048(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputControlScheme.SchemeJson+DeviceJson
	 * Size -> 0x0000
	 */
	struct InputControlScheme_SchemeJson_DeviceJson
	{
	public:
		class Il2CppString*                                        devicePath;                                              // 0x0000(0x0000)
		bool                                                       isOptional;                                              // 0x0008(0x0000)
		bool                                                       isOR;                                                    // 0x0009(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputControlScheme+SchemeJson
	 * Size -> 0x0000
	 */
	struct InputControlScheme_SchemeJson
	{
	public:
		class Il2CppString*                                        name;                                                    // 0x0000(0x0000)
		class Il2CppString*                                        bindingGroup;                                            // 0x0008(0x0000)
		class InputControlScheme_SchemeJson_DeviceJson_Array*      devices;                                                 // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputInteractionContext
	 * Size -> 0x0000
	 */
	struct InputInteractionContext
	{
	public:
		class InputActionState*                                    m_State;                                                 // 0x0000(0x0000)
		int32_t                                                    m_Flags;                                                 // 0x0008(0x0000)
		struct InputActionState_TriggerState                       m_TriggerState;                                          // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputSystem.StateEventBuffer+<data>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct InputSystem_StateEventBuffer__data_e__FixedBuffer
	{
	public:
		uint8_t                                                    FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.InputModule.UnityEngineInternal.Input.NativeInputEvent
	 * Size -> 0x0000
	 */
	struct NativeInputEvent
	{
	public:
		int32_t                                                    type;                                                    // 0x0000(0x0000)
		uint16_t                                                   sizeInBytes;                                             // 0x0004(0x0000)
		uint16_t                                                   deviceId;                                                // 0x0006(0x0000)
		double                                                     time;                                                    // 0x0008(0x0000)
		int32_t                                                    eventId;                                                 // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.InputEventBuffer
	 * Size -> 0x0000
	 */
	struct InputEventBuffer
	{
	public:
		struct NativeArray_byte                                    m_Buffer;                                                // 0x0000(0x0000)
		int64_t                                                    m_SizeInBytes;                                           // 0x0010(0x0000)
		int32_t                                                    m_EventCount;                                            // 0x0018(0x0000)
		bool                                                       m_WeOwnTheBuffer;                                        // 0x001C(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.InputEvent
	 * Size -> 0x0000
	 */
	struct InputEvent
	{
	public:
		struct NativeInputEvent                                    m_Event;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.StateEvent+<stateData>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct StateEvent__stateData_e__FixedBuffer
	{
	public:
		uint8_t                                                    FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.StateEvent
	 * Size -> 0x0000
	 */
	struct StateEvent
	{
	public:
		struct InputEvent                                          baseEvent;                                               // 0x0000(0x0000)
		struct FourCC                                              stateFormat;                                             // 0x0014(0x0000)
		struct StateEvent__stateData_e__FixedBuffer                stateData;                                               // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputSystem+StateEventBuffer
	 * Size -> 0x0000
	 */
	struct InputSystem_StateEventBuffer
	{
	public:
		struct StateEvent                                          stateEvent;                                              // 0x0000(0x0000)
		struct InputSystem_StateEventBuffer__data_e__FixedBuffer   data;                                                    // 0x0019(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputSystem.DeltaStateEventBuffer+<data>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct InputSystem_DeltaStateEventBuffer__data_e__FixedBuffer
	{
	public:
		uint8_t                                                    FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.DeltaStateEvent+<stateData>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct DeltaStateEvent__stateData_e__FixedBuffer
	{
	public:
		uint8_t                                                    FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.DeltaStateEvent
	 * Size -> 0x0000
	 */
	struct DeltaStateEvent
	{
	public:
		struct InputEvent                                          baseEvent;                                               // 0x0000(0x0000)
		struct FourCC                                              stateFormat;                                             // 0x0014(0x0000)
		uint32_t                                                   stateOffset;                                             // 0x0018(0x0000)
		struct DeltaStateEvent__stateData_e__FixedBuffer           stateData;                                               // 0x001C(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputSystem+DeltaStateEventBuffer
	 * Size -> 0x0000
	 */
	struct InputSystem_DeltaStateEventBuffer
	{
	public:
		struct DeltaStateEvent                                     stateEvent;                                              // 0x0000(0x0000)
		struct InputSystem_DeltaStateEventBuffer__data_e__FixedBuffer data;                                                    // 0x001D(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputControlExtensions+InputEventControlEnumerator
	 * Size -> 0x0000
	 */
	struct InputControlExtensions_InputEventControlEnumerator
	{
	public:
		int32_t                                                    m_Flags;                                                 // 0x0000(0x0000)
		class InputDevice*                                         m_Device;                                                // 0x0008(0x0000)
		class UInt32_Array*                                        m_StateOffsetToControlIndex;                             // 0x0010(0x0000)
		int32_t                                                    m_StateOffsetToControlIndexLength;                       // 0x0018(0x0000)
		class InputControl_Array*                                  m_AllControls;                                           // 0x0020(0x0000)
		uint8_t*                                                   m_DefaultState;                                          // 0x0028(0x0000)
		uint8_t*                                                   m_CurrentState;                                          // 0x0030(0x0000)
		uint8_t*                                                   m_NoiseMask;                                             // 0x0038(0x0000)
		struct InputEventPtr                                       m_EventPtr;                                              // 0x0040(0x0000)
		class InputControl*                                        m_CurrentControl;                                        // 0x0048(0x0000)
		int32_t                                                    m_CurrentIndexInStateOffsetToControlIndexMap;            // 0x0050(0x0000)
		uint32_t                                                   m_CurrentControlStateBitOffset;                          // 0x0054(0x0000)
		uint8_t*                                                   m_EventState;                                            // 0x0058(0x0000)
		uint32_t                                                   m_CurrentBitOffset;                                      // 0x0060(0x0000)
		uint32_t                                                   m_EndBitOffset;                                          // 0x0064(0x0000)
		float                                                      m_MagnitudeThreshold;                                    // 0x0068(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputControlExtensions+InputEventControlCollection
	 * Size -> 0x0000
	 */
	struct InputControlExtensions_InputEventControlCollection
	{
	public:
		class InputDevice*                                         m_Device;                                                // 0x0000(0x0000)
		struct InputEventPtr                                       m_EventPtr;                                              // 0x0008(0x0000)
		int32_t                                                    m_Flags;                                                 // 0x0010(0x0000)
		float                                                      m_MagnitudeThreshold;                                    // 0x0014(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.InputStateBlock
	 * Size -> 0x0000
	 */
	struct InputStateBlock
	{
	public:
		struct FourCC                                              format_k__BackingField;                                  // 0x0000(0x0000)
		uint32_t                                                   byteOffset_k__BackingField;                              // 0x0004(0x0000)
		uint32_t                                                   bitOffset_k__BackingField;                               // 0x0008(0x0000)
		uint32_t                                                   sizeInBits_k__BackingField;                              // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputControlExtensions+ControlBuilder
	 * Size -> 0x0000
	 */
	struct InputControlExtensions_ControlBuilder
	{
	public:
		class InputControl*                                        control_k__BackingField;                                 // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputControlExtensions+DeviceBuilder
	 * Size -> 0x0000
	 */
	struct InputControlExtensions_DeviceBuilder
	{
	public:
		class InputDevice*                                         device_k__BackingField;                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputControlList<TControl>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct InputControlList_TControl
	{
	public:
		int32_t                                                    m_Count;                                                 // 0x0000(0x0000)
		struct NativeArray_ulong                                   m_Indices;                                               // 0x0000(0x0000)
		int32_t                                                    m_Allocator;                                             // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputControlList+Enumerator<TControl>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct InputControlList_Enumerator_TControl
	{
	public:
		uint64_t*                                                  m_Indices;                                               // 0x0000(0x0000)
		int32_t                                                    m_Count;                                                 // 0x0000(0x0000)
		int32_t                                                    m_Current;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputControlPath+ParsedPathComponent
	 * Size -> 0x0000
	 */
	struct InputControlPath_ParsedPathComponent
	{
	public:
		struct Substring                                           m_Layout;                                                // 0x0000(0x0000)
		struct InlinedArray_Substring                              m_Usages;                                                // 0x0010(0x0000)
		struct Substring                                           m_Name;                                                  // 0x0030(0x0000)
		struct Substring                                           m_DisplayName;                                           // 0x0040(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputControlPath+PathParser
	 * Size -> 0x0000
	 */
	struct InputControlPath_PathParser
	{
	public:
		class Il2CppString*                                        path;                                                    // 0x0000(0x0000)
		int32_t                                                    length;                                                  // 0x0008(0x0000)
		int32_t                                                    leftIndexInPath;                                         // 0x000C(0x0000)
		int32_t                                                    rightIndexInPath;                                        // 0x0010(0x0000)
		struct InputControlPath_ParsedPathComponent                current;                                                 // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputRemoting+RemoteSender
	 * Size -> 0x0000
	 */
	struct InputRemoting_RemoteSender
	{
	public:
		int32_t                                                    senderId;                                                // 0x0000(0x0000)
		class InternedString_Array*                                layouts;                                                 // 0x0008(0x0000)
		class InputRemoting_RemoteInputDevice_Array*               devices;                                                 // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputRemoting+RemoteInputDevice
	 * Size -> 0x0000
	 */
	struct InputRemoting_RemoteInputDevice
	{
	public:
		int32_t                                                    remoteId;                                                // 0x0000(0x0000)
		int32_t                                                    localId;                                                 // 0x0004(0x0000)
		struct InputDeviceDescription                              description;                                             // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputRemoting.NewLayoutMsg+Data
	 * Size -> 0x0000
	 */
	struct InputRemoting_NewLayoutMsg_Data
	{
	public:
		class Il2CppString*                                        name;                                                    // 0x0000(0x0000)
		class Il2CppString*                                        layoutJson;                                              // 0x0008(0x0000)
		bool                                                       isOverride;                                              // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputRemoting.NewDeviceMsg+Data
	 * Size -> 0x0000
	 */
	struct InputRemoting_NewDeviceMsg_Data
	{
	public:
		class Il2CppString*                                        name;                                                    // 0x0000(0x0000)
		class Il2CppString*                                        layout;                                                  // 0x0008(0x0000)
		int32_t                                                    deviceId;                                                // 0x0010(0x0000)
		class String_Array*                                        usages;                                                  // 0x0018(0x0000)
		struct InputDeviceDescription                              description;                                             // 0x0020(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputRemoting.ChangeUsageMsg+Data
	 * Size -> 0x0000
	 */
	struct InputRemoting_ChangeUsageMsg_Data
	{
	public:
		int32_t                                                    deviceId;                                                // 0x0000(0x0000)
		class String_Array*                                        usages;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputManager+AvailableDevice
	 * Size -> 0x0000
	 */
	struct InputManager_AvailableDevice
	{
	public:
		struct InputDeviceDescription                              description;                                             // 0x0000(0x0000)
		int32_t                                                    deviceId;                                                // 0x0038(0x0000)
		bool                                                       isNative;                                                // 0x003C(0x0000)
		bool                                                       isRemoved;                                               // 0x003D(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputManager+StateChangeMonitorListener
	 * Size -> 0x0000
	 */
	struct InputManager_StateChangeMonitorListener
	{
	public:
		class InputControl*                                        control;                                                 // 0x0000(0x0000)
		class IInputStateChangeMonitor*                            _monitor;                                                // 0x0008(0x0000)
		int64_t                                                    monitorIndex;                                            // 0x0010(0x0000)
		uint32_t                                                   groupIndex;                                              // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.DynamicBitfield
	 * Size -> 0x0000
	 */
	struct DynamicBitfield
	{
	public:
		struct InlinedArray_ulong                                  array;                                                   // 0x0000(0x0000)
		int32_t                                                    length;                                                  // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputManager+StateChangeMonitorsForDevice
	 * Size -> 0x0000
	 */
	struct InputManager_StateChangeMonitorsForDevice
	{
	public:
		class MemoryHelpers_BitRegion_Array*                       memoryRegions;                                           // 0x0000(0x0000)
		class InputManager_StateChangeMonitorListener_Array*       listeners;                                               // 0x0008(0x0000)
		struct DynamicBitfield                                     signalled;                                               // 0x0010(0x0000)
		bool                                                       needToUpdateOrderingOfMonitors;                          // 0x0030(0x0000)
		bool                                                       needToCompactArrays;                                     // 0x0031(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.DefaultInputActions+PlayerActions
	 * Size -> 0x0000
	 */
	struct DefaultInputActions_PlayerActions
	{
	public:
		class DefaultInputActions*                                 m_Wrapper;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.DefaultInputActions+UIActions
	 * Size -> 0x0000
	 */
	struct DefaultInputActions_UIActions
	{
	public:
		class DefaultInputActions*                                 m_Wrapper;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.XR.PoseState
	 * Size -> 0x0000
	 */
	struct PoseState
	{
	public:
		bool                                                       isTracked;                                               // 0x0000(0x0000)
		uint32_t                                                   trackingState;                                           // 0x0004(0x0000)
		struct Vector3                                             position;                                                // 0x0008(0x0000)
		struct Quaternion                                          rotation;                                                // 0x0014(0x0000)
		struct Vector3                                             velocity;                                                // 0x0024(0x0000)
		struct Vector3                                             angularVelocity;                                         // 0x0030(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.XR.UsageHint
	 * Size -> 0x0000
	 */
	struct UsageHint
	{
	public:
		class Il2CppString*                                        content;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.XR.XRFeatureDescriptor
	 * Size -> 0x0000
	 */
	struct XRFeatureDescriptor
	{
	public:
		class Il2CppString*                                        name;                                                    // 0x0000(0x0000)
		class List_UsageHint*                                      usageHints;                                              // 0x0008(0x0000)
		int32_t                                                    featureType;                                             // 0x0010(0x0000)
		uint32_t                                                   customSize;                                              // 0x0014(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.XR.Bone
	 * Size -> 0x0000
	 */
	struct Bone
	{
	public:
		uint32_t                                                   parentBoneIndex_k__BackingField;                         // 0x0000(0x0000)
		struct Vector3                                             position_k__BackingField;                                // 0x0004(0x0000)
		struct Quaternion                                          rotation_k__BackingField;                                // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.XR.Eyes
	 * Size -> 0x0000
	 */
	struct Eyes
	{
	public:
		struct Vector3                                             leftEyePosition_k__BackingField;                         // 0x0000(0x0000)
		struct Quaternion                                          leftEyeRotation_k__BackingField;                         // 0x000C(0x0000)
		struct Vector3                                             rightEyePosition_k__BackingField;                        // 0x001C(0x0000)
		struct Quaternion                                          rightEyeRotation_k__BackingField;                        // 0x0028(0x0000)
		struct Vector3                                             fixationPoint_k__BackingField;                           // 0x0038(0x0000)
		float                                                      leftEyeOpenAmount_k__BackingField;                       // 0x0044(0x0000)
		float                                                      rightEyeOpenAmount_k__BackingField;                      // 0x0048(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.XR.Haptics.HapticCapabilities
	 * Size -> 0x0000
	 */
	struct HapticCapabilities
	{
	public:
		uint32_t                                                   numChannels_k__BackingField;                             // 0x0000(0x0000)
		uint32_t                                                   frequencyHz_k__BackingField;                             // 0x0004(0x0000)
		uint32_t                                                   maxBufferSize_k__BackingField;                           // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.XR.Haptics.BufferedRumble
	 * Size -> 0x0000
	 */
	struct BufferedRumble
	{
	public:
		struct HapticCapabilities                                  capabilities_k__BackingField;                            // 0x0000(0x0000)
		class InputDevice*                                         device_k__BackingField;                                  // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.XR.Haptics.HapticState
	 * Size -> 0x0000
	 */
	struct HapticState
	{
	public:
		uint32_t                                                   samplesQueued_k__BackingField;                           // 0x0000(0x0000)
		uint32_t                                                   samplesAvailable_k__BackingField;                        // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.InputDeviceCommand
	 * Size -> 0x0000
	 */
	struct InputDeviceCommand
	{
	public:
		struct FourCC                                              type;                                                    // 0x0000(0x0000)
		int32_t                                                    sizeInBytes;                                             // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.XR.Haptics.GetCurrentHapticStateCommand
	 * Size -> 0x0000
	 */
	struct GetCurrentHapticStateCommand
	{
	public:
		struct InputDeviceCommand                                  baseCommand;                                             // 0x0000(0x0000)
		uint32_t                                                   samplesQueued;                                           // 0x0008(0x0000)
		uint32_t                                                   samplesAvailable;                                        // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.XR.Haptics.GetHapticCapabilitiesCommand
	 * Size -> 0x0000
	 */
	struct GetHapticCapabilitiesCommand
	{
	public:
		struct InputDeviceCommand                                  baseCommand;                                             // 0x0000(0x0000)
		uint32_t                                                   numChannels;                                             // 0x0008(0x0000)
		uint32_t                                                   frequencyHz;                                             // 0x000C(0x0000)
		uint32_t                                                   maxBufferSize;                                           // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.XR.Haptics.SendBufferedHapticCommand+<buffer>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct SendBufferedHapticCommand__buffer_e__FixedBuffer
	{
	public:
		uint8_t                                                    FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.XR.Haptics.SendBufferedHapticCommand
	 * Size -> 0x0000
	 */
	struct SendBufferedHapticCommand
	{
	public:
		struct InputDeviceCommand                                  baseCommand;                                             // 0x0000(0x0000)
		int32_t                                                    channel;                                                 // 0x0008(0x0000)
		int32_t                                                    bufferSize;                                              // 0x000C(0x0000)
		struct SendBufferedHapticCommand__buffer_e__FixedBuffer    buffer;                                                  // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.XR.Haptics.SendHapticImpulseCommand
	 * Size -> 0x0000
	 */
	struct SendHapticImpulseCommand
	{
	public:
		struct InputDeviceCommand                                  baseCommand;                                             // 0x0000(0x0000)
		int32_t                                                    channel;                                                 // 0x0008(0x0000)
		float                                                      amplitude;                                               // 0x000C(0x0000)
		float                                                      duration;                                                // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.XInput.XInputController+Capabilities
	 * Size -> 0x0000
	 */
	struct XInputController_Capabilities
	{
	public:
		int32_t                                                    type;                                                    // 0x0000(0x0000)
		int32_t                                                    subType;                                                 // 0x0004(0x0000)
		int32_t                                                    flags;                                                   // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.XInput.LowLevel.XInputControllerWindowsState
	 * Size -> 0x0000
	 */
	struct XInputControllerWindowsState
	{
	public:
		uint16_t                                                   buttons;                                                 // 0x0000(0x0000)
		uint8_t                                                    leftTrigger;                                             // 0x0002(0x0000)
		uint8_t                                                    rightTrigger;                                            // 0x0003(0x0000)
		int16_t                                                    leftStickX;                                              // 0x0004(0x0000)
		int16_t                                                    leftStickY;                                              // 0x0006(0x0000)
		int16_t                                                    rightStickX;                                             // 0x0008(0x0000)
		int16_t                                                    rightStickY;                                             // 0x000A(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Users.InputUser+ControlSchemeChangeSyntax
	 * Size -> 0x0000
	 */
	struct InputUser_ControlSchemeChangeSyntax
	{
	public:
		int32_t                                                    m_UserIndex;                                             // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Users.InputUser+UserData
	 * Size -> 0x0000
	 */
	struct InputUser_UserData
	{
	public:
		struct Nullable_InputUserAccountHandle                     platformUserAccountHandle;                               // 0x0000(0x0000)
		class Il2CppString*                                        platformUserAccountName;                                 // 0x0018(0x0000)
		class Il2CppString*                                        platformUserAccountId;                                   // 0x0020(0x0000)
		int32_t                                                    deviceCount;                                             // 0x0028(0x0000)
		int32_t                                                    deviceStartIndex;                                        // 0x002C(0x0000)
		class IInputActionCollection*                              actions;                                                 // 0x0030(0x0000)
		struct Nullable_InputControlScheme                         controlScheme;                                           // 0x0038(0x0000)
		struct InputControlScheme_MatchResult                      controlSchemeMatch;                                      // 0x0058(0x0000)
		int32_t                                                    lostDeviceCount;                                         // 0x00A8(0x0000)
		int32_t                                                    lostDeviceStartIndex;                                    // 0x00AC(0x0000)
		int32_t                                                    flags;                                                   // 0x00B0(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Users.InputUser+CompareDevicesByUserAccount
	 * Size -> 0x0000
	 */
	struct InputUser_CompareDevicesByUserAccount
	{
	public:
		struct InputUserAccountHandle                              platformUserAccountHandle;                               // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Users.InputUser+GlobalState
	 * Size -> 0x0000
	 */
	struct InputUser_GlobalState
	{
	public:
		int32_t                                                    pairingStateVersion;                                     // 0x0000(0x0000)
		uint32_t                                                   lastUserId;                                              // 0x0004(0x0000)
		int32_t                                                    allUserCount;                                            // 0x0008(0x0000)
		int32_t                                                    allPairedDeviceCount;                                    // 0x000C(0x0000)
		int32_t                                                    allLostDeviceCount;                                      // 0x0010(0x0000)
		class InputUser_Array*                                     allUsers;                                                // 0x0018(0x0000)
		class InputUser_UserData_Array*                            allUserData;                                             // 0x0020(0x0000)
		class InputDevice_Array*                                   allPairedDevices;                                        // 0x0028(0x0000)
		class InputDevice_Array*                                   allLostDevices;                                          // 0x0030(0x0000)
		struct InlinedArray_InputUser_OngoingAccountSelection      ongoingAccountSelections;                                // 0x0038(0x0000)
		struct CallbackArray_Action_InputUser__InputUserChange__InputDevice onChange;                                                // 0x0058(0x0000)
		struct CallbackArray_Action_InputControl__InputEventPtr    onUnpairedDeviceUsed;                                    // 0x00A8(0x0000)
		struct CallbackArray_Func_InputDevice__InputEventPtr__bool onPreFilterUnpairedDeviceUsed;                           // 0x00F8(0x0000)
		class Action_object__InputActionChange*                    actionChangeDelegate;                                    // 0x0148(0x0000)
		class Action_InputDevice__InputDeviceChange*               onDeviceChangeDelegate;                                  // 0x0150(0x0000)
		class Action_InputEventPtr__InputDevice*                   onEventDelegate;                                         // 0x0158(0x0000)
		bool                                                       onActionChangeHooked;                                    // 0x0160(0x0000)
		bool                                                       onDeviceChangeHooked;                                    // 0x0161(0x0000)
		bool                                                       onEventHooked;                                           // 0x0162(0x0000)
		int32_t                                                    listenForUnpairedDeviceActivity;                         // 0x0164(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.UI.InputSystemUIInputModule+InputActionReferenceState
	 * Size -> 0x0000
	 */
	struct InputSystemUIInputModule_InputActionReferenceState
	{
	public:
		int32_t                                                    refCount;                                                // 0x0000(0x0000)
		bool                                                       enabledByInputModule;                                    // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.UI.NavigationModel
	 * Size -> 0x0000
	 */
	struct NavigationModel
	{
	public:
		struct Vector2                                             move;                                                    // 0x0000(0x0000)
		int32_t                                                    consecutiveMoveCount;                                    // 0x0008(0x0000)
		int32_t                                                    lastMoveDirection;                                       // 0x000C(0x0000)
		float                                                      lastMoveTime;                                            // 0x0010(0x0000)
		class AxisEventData*                                       eventData;                                               // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.UI.TrackedDeviceRaycaster+RaycastHitData
	 * Size -> 0x0000
	 */
	struct TrackedDeviceRaycaster_RaycastHitData
	{
	public:
		class Graphic*                                             graphic_k__BackingField;                                 // 0x0000(0x0000)
		struct Vector3                                             worldHitPosition_k__BackingField;                        // 0x0008(0x0000)
		struct Vector2                                             screenPosition_k__BackingField;                          // 0x0014(0x0000)
		float                                                      distance_k__BackingField;                                // 0x001C(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Switch.LowLevel.SwitchProControllerHIDInputState
	 * Size -> 0x0000
	 */
	struct SwitchProControllerHIDInputState
	{
	public:
		uint8_t                                                    leftStickX;                                              // 0x0000(0x0000)
		uint8_t                                                    leftStickY;                                              // 0x0001(0x0000)
		uint8_t                                                    rightStickX;                                             // 0x0002(0x0000)
		uint8_t                                                    rightStickY;                                             // 0x0003(0x0000)
		uint16_t                                                   buttons1;                                                // 0x0004(0x0000)
		uint8_t                                                    buttons2;                                                // 0x0006(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Switch.SwitchProControllerHID+SwitchInputOnlyReport
	 * Size -> 0x0000
	 */
	struct SwitchProControllerHID_SwitchInputOnlyReport
	{
	public:
		uint8_t                                                    buttons0;                                                // 0x0000(0x0000)
		uint8_t                                                    buttons1;                                                // 0x0001(0x0000)
		uint8_t                                                    hat;                                                     // 0x0002(0x0000)
		uint8_t                                                    leftX;                                                   // 0x0003(0x0000)
		uint8_t                                                    leftY;                                                   // 0x0004(0x0000)
		uint8_t                                                    rightX;                                                  // 0x0005(0x0000)
		uint8_t                                                    rightY;                                                  // 0x0006(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Switch.SwitchProControllerHID+SwitchSimpleInputReport
	 * Size -> 0x0000
	 */
	struct SwitchProControllerHID_SwitchSimpleInputReport
	{
	public:
		uint8_t                                                    reportId;                                                // 0x0000(0x0000)
		uint8_t                                                    buttons0;                                                // 0x0001(0x0000)
		uint8_t                                                    buttons1;                                                // 0x0002(0x0000)
		uint8_t                                                    hat;                                                     // 0x0003(0x0000)
		uint16_t                                                   leftX;                                                   // 0x0004(0x0000)
		uint16_t                                                   leftY;                                                   // 0x0006(0x0000)
		uint16_t                                                   rightX;                                                  // 0x0008(0x0000)
		uint16_t                                                   rightY;                                                  // 0x000A(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Switch.SwitchProControllerHID+SwitchFullInputReport
	 * Size -> 0x0000
	 */
	struct SwitchProControllerHID_SwitchFullInputReport
	{
	public:
		uint8_t                                                    reportId;                                                // 0x0000(0x0000)
		uint8_t                                                    buttons0;                                                // 0x0003(0x0000)
		uint8_t                                                    buttons1;                                                // 0x0004(0x0000)
		uint8_t                                                    buttons2;                                                // 0x0005(0x0000)
		uint8_t                                                    left0;                                                   // 0x0006(0x0000)
		uint8_t                                                    left1;                                                   // 0x0007(0x0000)
		uint8_t                                                    left2;                                                   // 0x0008(0x0000)
		uint8_t                                                    right0;                                                  // 0x0009(0x0000)
		uint8_t                                                    right1;                                                  // 0x000A(0x0000)
		uint8_t                                                    right2;                                                  // 0x000B(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Switch.SwitchProControllerHID+SwitchHIDGenericInputReport
	 * Size -> 0x0000
	 */
	struct SwitchProControllerHID_SwitchHIDGenericInputReport
	{
	public:
		uint8_t                                                    reportId;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Switch.SwitchProControllerHID+SwitchMagicOutputReport
	 * Size -> 0x0000
	 */
	struct SwitchProControllerHID_SwitchMagicOutputReport
	{
	public:
		uint8_t                                                    reportType;                                              // 0x0000(0x0000)
		uint8_t                                                    commandId;                                               // 0x0001(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Switch.SwitchProControllerHID+SwitchMagicOutputHIDBluetooth
	 * Size -> 0x0000
	 */
	struct SwitchProControllerHID_SwitchMagicOutputHIDBluetooth
	{
	public:
		struct InputDeviceCommand                                  baseCommand;                                             // 0x0000(0x0000)
		struct SwitchProControllerHID_SwitchMagicOutputReport      report;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Switch.SwitchProControllerHID+SwitchMagicOutputHIDUSB
	 * Size -> 0x0000
	 */
	struct SwitchProControllerHID_SwitchMagicOutputHIDUSB
	{
	public:
		struct InputDeviceCommand                                  baseCommand;                                             // 0x0000(0x0000)
		struct SwitchProControllerHID_SwitchMagicOutputReport      report;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.HID.HID+HIDElementDescriptor
	 * Size -> 0x0000
	 */
	struct HID_HIDElementDescriptor
	{
	public:
		int32_t                                                    usage;                                                   // 0x0000(0x0000)
		int32_t                                                    usagePage;                                               // 0x0004(0x0000)
		int32_t                                                    unit;                                                    // 0x0008(0x0000)
		int32_t                                                    unitExponent;                                            // 0x000C(0x0000)
		int32_t                                                    logicalMin;                                              // 0x0010(0x0000)
		int32_t                                                    logicalMax;                                              // 0x0014(0x0000)
		int32_t                                                    physicalMin;                                             // 0x0018(0x0000)
		int32_t                                                    physicalMax;                                             // 0x001C(0x0000)
		int32_t                                                    reportType;                                              // 0x0020(0x0000)
		int32_t                                                    collectionIndex;                                         // 0x0024(0x0000)
		int32_t                                                    reportId;                                                // 0x0028(0x0000)
		int32_t                                                    reportSizeInBits;                                        // 0x002C(0x0000)
		int32_t                                                    reportOffsetInBits;                                      // 0x0030(0x0000)
		int32_t                                                    flags;                                                   // 0x0034(0x0000)
		struct Nullable_int                                        usageMin;                                                // 0x0038(0x0000)
		struct Nullable_int                                        usageMax;                                                // 0x0040(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.HID.HID+HIDCollectionDescriptor
	 * Size -> 0x0000
	 */
	struct HID_HIDCollectionDescriptor
	{
	public:
		int32_t                                                    type;                                                    // 0x0000(0x0000)
		int32_t                                                    usage;                                                   // 0x0004(0x0000)
		int32_t                                                    usagePage;                                               // 0x0008(0x0000)
		int32_t                                                    parent;                                                  // 0x000C(0x0000)
		int32_t                                                    childCount;                                              // 0x0010(0x0000)
		int32_t                                                    firstChild;                                              // 0x0014(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.HID.HID+HIDDeviceDescriptor
	 * Size -> 0x0000
	 */
	struct HID_HIDDeviceDescriptor
	{
	public:
		int32_t                                                    vendorId;                                                // 0x0000(0x0000)
		int32_t                                                    productId;                                               // 0x0004(0x0000)
		int32_t                                                    usage;                                                   // 0x0008(0x0000)
		int32_t                                                    usagePage;                                               // 0x000C(0x0000)
		int32_t                                                    inputReportSize;                                         // 0x0010(0x0000)
		int32_t                                                    outputReportSize;                                        // 0x0014(0x0000)
		int32_t                                                    featureReportSize;                                       // 0x0018(0x0000)
		class HID_HIDElementDescriptor_Array*                      elements;                                                // 0x0020(0x0000)
		class HID_HIDCollectionDescriptor_Array*                   collections;                                             // 0x0028(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.HID.HID+HIDDeviceDescriptorBuilder
	 * Size -> 0x0000
	 */
	struct HID_HIDDeviceDescriptorBuilder
	{
	public:
		int32_t                                                    usagePage;                                               // 0x0000(0x0000)
		int32_t                                                    usage;                                                   // 0x0004(0x0000)
		int32_t                                                    m_CurrentReportId;                                       // 0x0008(0x0000)
		int32_t                                                    m_CurrentReportType;                                     // 0x000C(0x0000)
		int32_t                                                    m_CurrentReportOffsetInBits;                             // 0x0010(0x0000)
		class List_HID_HIDElementDescriptor*                       m_Elements;                                              // 0x0018(0x0000)
		class List_HID_HIDCollectionDescriptor*                    m_Collections;                                           // 0x0020(0x0000)
		int32_t                                                    m_InputReportSize;                                       // 0x0028(0x0000)
		int32_t                                                    m_OutputReportSize;                                      // 0x002C(0x0000)
		int32_t                                                    m_FeatureReportSize;                                     // 0x0030(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.HID.HIDParser+HIDReportData
	 * Size -> 0x0000
	 */
	struct HIDParser_HIDReportData
	{
	public:
		int32_t                                                    reportId;                                                // 0x0000(0x0000)
		int32_t                                                    reportType;                                              // 0x0004(0x0000)
		int32_t                                                    currentBitOffset;                                        // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.HID.HIDParser+HIDItemStateLocal
	 * Size -> 0x0000
	 */
	struct HIDParser_HIDItemStateLocal
	{
	public:
		struct Nullable_int                                        usage;                                                   // 0x0000(0x0000)
		struct Nullable_int                                        usageMinimum;                                            // 0x0008(0x0000)
		struct Nullable_int                                        usageMaximum;                                            // 0x0010(0x0000)
		struct Nullable_int                                        designatorIndex;                                         // 0x0018(0x0000)
		struct Nullable_int                                        designatorMinimum;                                       // 0x0020(0x0000)
		struct Nullable_int                                        designatorMaximum;                                       // 0x0028(0x0000)
		struct Nullable_int                                        stringIndex;                                             // 0x0030(0x0000)
		struct Nullable_int                                        stringMinimum;                                           // 0x0038(0x0000)
		struct Nullable_int                                        stringMaximum;                                           // 0x0040(0x0000)
		class List_int*                                            usageList;                                               // 0x0048(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.HID.HIDParser+HIDItemStateGlobal
	 * Size -> 0x0000
	 */
	struct HIDParser_HIDItemStateGlobal
	{
	public:
		struct Nullable_int                                        usagePage;                                               // 0x0000(0x0000)
		struct Nullable_int                                        logicalMinimum;                                          // 0x0008(0x0000)
		struct Nullable_int                                        logicalMaximum;                                          // 0x0010(0x0000)
		struct Nullable_int                                        physicalMinimum;                                         // 0x0018(0x0000)
		struct Nullable_int                                        physicalMaximum;                                         // 0x0020(0x0000)
		struct Nullable_int                                        unitExponent;                                            // 0x0028(0x0000)
		struct Nullable_int                                        unit;                                                    // 0x0030(0x0000)
		struct Nullable_int                                        reportSize;                                              // 0x0038(0x0000)
		struct Nullable_int                                        reportCount;                                             // 0x0040(0x0000)
		struct Nullable_int                                        reportId;                                                // 0x0048(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.HID.HIDSupport+HIDPageUsage
	 * Size -> 0x0000
	 */
	struct HIDSupport_HIDPageUsage
	{
	public:
		int32_t                                                    page;                                                    // 0x0000(0x0000)
		int32_t                                                    usage;                                                   // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.EnhancedTouch.Touch+FingerAndTouchState
	 * Size -> 0x0000
	 */
	struct Touch_FingerAndTouchState
	{
	public:
		int32_t                                                    updateMask;                                              // 0x0000(0x0000)
		class Finger_Array*                                        fingers;                                                 // 0x0008(0x0000)
		class Finger_Array*                                        activeFingers;                                           // 0x0010(0x0000)
		class Touch_Array*                                         activeTouches;                                           // 0x0018(0x0000)
		int32_t                                                    activeFingerCount;                                       // 0x0020(0x0000)
		int32_t                                                    activeTouchCount;                                        // 0x0024(0x0000)
		int32_t                                                    totalFingerCount;                                        // 0x0028(0x0000)
		uint32_t                                                   lastId;                                                  // 0x002C(0x0000)
		bool                                                       haveBuiltActiveTouches;                                  // 0x0030(0x0000)
		bool                                                       haveActiveTouchesNeedingRefreshNextUpdate;               // 0x0031(0x0000)
		class InputStateHistory_TouchState*                        activeTouchState;                                        // 0x0038(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.EnhancedTouch.Touch+GlobalState
	 * Size -> 0x0000
	 */
	struct Touch_GlobalState
	{
	public:
		struct InlinedArray_Touchscreen                            touchscreens;                                            // 0x0000(0x0000)
		int32_t                                                    historyLengthPerFinger;                                  // 0x0018(0x0000)
		struct CallbackArray_Action_Finger                         onFingerDown;                                            // 0x0020(0x0000)
		struct CallbackArray_Action_Finger                         onFingerMove;                                            // 0x0070(0x0000)
		struct CallbackArray_Action_Finger                         onFingerUp;                                              // 0x00C0(0x0000)
		struct Touch_FingerAndTouchState                           playerState;                                             // 0x0110(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.EnhancedTouch.Touch+ExtraDataPerTouchState
	 * Size -> 0x0000
	 */
	struct Touch_ExtraDataPerTouchState
	{
	public:
		struct Vector2                                             accumulatedDelta;                                        // 0x0000(0x0000)
		uint32_t                                                   uniqueId;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.TouchState
	 * Size -> 0x0000
	 */
	struct TouchState
	{
	public:
		int32_t                                                    touchId;                                                 // 0x0000(0x0000)
		struct Vector2                                             position;                                                // 0x0004(0x0000)
		struct Vector2                                             delta;                                                   // 0x000C(0x0000)
		float                                                      pressure;                                                // 0x0014(0x0000)
		struct Vector2                                             radius;                                                  // 0x0018(0x0000)
		uint8_t                                                    phaseId;                                                 // 0x0020(0x0000)
		uint8_t                                                    tapCount;                                                // 0x0021(0x0000)
		uint8_t                                                    displayIndex;                                            // 0x0022(0x0000)
		uint8_t                                                    flags;                                                   // 0x0023(0x0000)
		uint32_t                                                   updateStepCount;                                         // 0x0024(0x0000)
		double                                                     startTime;                                               // 0x0028(0x0000)
		struct Vector2                                             startPosition;                                           // 0x0030(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.EnhancedTouch.Touch
	 * Size -> 0x0000
	 */
	struct Touch
	{
	public:
		class Finger*                                              m_Finger;                                                // 0x0000(0x0000)
		struct InputStateHistory_Record_TouchState                 m_TouchRecord;                                           // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.DualShock.DualSenseGamepadHID+DualSenseHIDGenericInputReport
	 * Size -> 0x0000
	 */
	struct DualSenseGamepadHID_DualSenseHIDGenericInputReport
	{
	public:
		uint8_t                                                    reportId;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.DualShock.LowLevel.DualSenseHIDInputReport
	 * Size -> 0x0000
	 */
	struct DualSenseHIDInputReport
	{
	public:
		uint8_t                                                    leftStickX;                                              // 0x0000(0x0000)
		uint8_t                                                    leftStickY;                                              // 0x0001(0x0000)
		uint8_t                                                    rightStickX;                                             // 0x0002(0x0000)
		uint8_t                                                    rightStickY;                                             // 0x0003(0x0000)
		uint8_t                                                    leftTrigger;                                             // 0x0004(0x0000)
		uint8_t                                                    rightTrigger;                                            // 0x0005(0x0000)
		uint8_t                                                    buttons0;                                                // 0x0006(0x0000)
		uint8_t                                                    buttons1;                                                // 0x0007(0x0000)
		uint8_t                                                    buttons2;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.DualShock.DualSenseGamepadHID+DualSenseHIDUSBInputReport
	 * Size -> 0x0000
	 */
	struct DualSenseGamepadHID_DualSenseHIDUSBInputReport
	{
	public:
		uint8_t                                                    reportId;                                                // 0x0000(0x0000)
		uint8_t                                                    leftStickX;                                              // 0x0001(0x0000)
		uint8_t                                                    leftStickY;                                              // 0x0002(0x0000)
		uint8_t                                                    rightStickX;                                             // 0x0003(0x0000)
		uint8_t                                                    rightStickY;                                             // 0x0004(0x0000)
		uint8_t                                                    leftTrigger;                                             // 0x0005(0x0000)
		uint8_t                                                    rightTrigger;                                            // 0x0006(0x0000)
		uint8_t                                                    buttons0;                                                // 0x0008(0x0000)
		uint8_t                                                    buttons1;                                                // 0x0009(0x0000)
		uint8_t                                                    buttons2;                                                // 0x000A(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.DualShock.DualSenseGamepadHID+DualSenseHIDBluetoothInputReport
	 * Size -> 0x0000
	 */
	struct DualSenseGamepadHID_DualSenseHIDBluetoothInputReport
	{
	public:
		uint8_t                                                    reportId;                                                // 0x0000(0x0000)
		uint8_t                                                    leftStickX;                                              // 0x0002(0x0000)
		uint8_t                                                    leftStickY;                                              // 0x0003(0x0000)
		uint8_t                                                    rightStickX;                                             // 0x0004(0x0000)
		uint8_t                                                    rightStickY;                                             // 0x0005(0x0000)
		uint8_t                                                    leftTrigger;                                             // 0x0006(0x0000)
		uint8_t                                                    rightTrigger;                                            // 0x0007(0x0000)
		uint8_t                                                    buttons0;                                                // 0x0009(0x0000)
		uint8_t                                                    buttons1;                                                // 0x000A(0x0000)
		uint8_t                                                    buttons2;                                                // 0x000B(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.DualShock.DualSenseGamepadHID+DualSenseHIDMinimalInputReport
	 * Size -> 0x0000
	 */
	struct DualSenseGamepadHID_DualSenseHIDMinimalInputReport
	{
	public:
		uint8_t                                                    reportId;                                                // 0x0000(0x0000)
		uint8_t                                                    leftStickX;                                              // 0x0001(0x0000)
		uint8_t                                                    leftStickY;                                              // 0x0002(0x0000)
		uint8_t                                                    rightStickX;                                             // 0x0003(0x0000)
		uint8_t                                                    rightStickY;                                             // 0x0004(0x0000)
		uint8_t                                                    buttons0;                                                // 0x0005(0x0000)
		uint8_t                                                    buttons1;                                                // 0x0006(0x0000)
		uint8_t                                                    buttons2;                                                // 0x0007(0x0000)
		uint8_t                                                    leftTrigger;                                             // 0x0008(0x0000)
		uint8_t                                                    rightTrigger;                                            // 0x0009(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.DualShock.LowLevel.DualShock4HIDInputReport
	 * Size -> 0x0000
	 */
	struct DualShock4HIDInputReport
	{
	public:
		uint8_t                                                    leftStickX;                                              // 0x0000(0x0000)
		uint8_t                                                    leftStickY;                                              // 0x0001(0x0000)
		uint8_t                                                    rightStickX;                                             // 0x0002(0x0000)
		uint8_t                                                    rightStickY;                                             // 0x0003(0x0000)
		uint8_t                                                    buttons1;                                                // 0x0004(0x0000)
		uint8_t                                                    buttons2;                                                // 0x0005(0x0000)
		uint8_t                                                    buttons3;                                                // 0x0006(0x0000)
		uint8_t                                                    leftTrigger;                                             // 0x0007(0x0000)
		uint8_t                                                    rightTrigger;                                            // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.DualShock.DualShock4GamepadHID+DualShock4HIDGenericInputReport
	 * Size -> 0x0000
	 */
	struct DualShock4GamepadHID_DualShock4HIDGenericInputReport
	{
	public:
		uint8_t                                                    leftStickX;                                              // 0x0000(0x0000)
		uint8_t                                                    leftStickY;                                              // 0x0001(0x0000)
		uint8_t                                                    rightStickX;                                             // 0x0002(0x0000)
		uint8_t                                                    rightStickY;                                             // 0x0003(0x0000)
		uint8_t                                                    buttons0;                                                // 0x0004(0x0000)
		uint8_t                                                    buttons1;                                                // 0x0005(0x0000)
		uint8_t                                                    buttons2;                                                // 0x0006(0x0000)
		uint8_t                                                    leftTrigger;                                             // 0x0007(0x0000)
		uint8_t                                                    rightTrigger;                                            // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.DualShock.LowLevel.DualSenseHIDOutputReportPayload
	 * Size -> 0x0000
	 */
	struct DualSenseHIDOutputReportPayload
	{
	public:
		uint8_t                                                    enableFlags1;                                            // 0x0000(0x0000)
		uint8_t                                                    enableFlags2;                                            // 0x0001(0x0000)
		uint8_t                                                    highFrequencyMotorSpeed;                                 // 0x0002(0x0000)
		uint8_t                                                    lowFrequencyMotorSpeed;                                  // 0x0003(0x0000)
		uint8_t                                                    redColor;                                                // 0x002C(0x0000)
		uint8_t                                                    greenColor;                                              // 0x002D(0x0000)
		uint8_t                                                    blueColor;                                               // 0x002E(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.DualShock.LowLevel.DualSenseHIDUSBOutputReport
	 * Size -> 0x0000
	 */
	struct DualSenseHIDUSBOutputReport
	{
	public:
		struct InputDeviceCommand                                  baseCommand;                                             // 0x0000(0x0000)
		uint8_t                                                    reportId;                                                // 0x0008(0x0000)
		struct DualSenseHIDOutputReportPayload                     payload;                                                 // 0x0009(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.DualShock.LowLevel.DualSenseHIDBluetoothOutputReport+<rawData>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct DualSenseHIDBluetoothOutputReport__rawData_e__FixedBuffer
	{
	public:
		uint8_t                                                    FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.DualShock.LowLevel.DualSenseHIDBluetoothOutputReport
	 * Size -> 0x0000
	 */
	struct DualSenseHIDBluetoothOutputReport
	{
	public:
		struct InputDeviceCommand                                  baseCommand;                                             // 0x0000(0x0000)
		uint8_t                                                    reportId;                                                // 0x0008(0x0000)
		uint8_t                                                    tag1;                                                    // 0x0009(0x0000)
		uint8_t                                                    tag2;                                                    // 0x000A(0x0000)
		struct DualSenseHIDOutputReportPayload                     payload;                                                 // 0x000B(0x0000)
		uint32_t                                                   crc32;                                                   // 0x0052(0x0000)
		struct DualSenseHIDBluetoothOutputReport__rawData_e__FixedBuffer rawData;                                                 // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.DualShock.LowLevel.DualShock3HIDInputReport+<padding3>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct DualShock3HIDInputReport__padding3_e__FixedBuffer
	{
	public:
		uint8_t                                                    FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.DualShock.LowLevel.DualShock3HIDInputReport
	 * Size -> 0x0000
	 */
	struct DualShock3HIDInputReport
	{
	public:
		uint16_t                                                   padding1;                                                // 0x0000(0x0000)
		uint8_t                                                    buttons1;                                                // 0x0002(0x0000)
		uint8_t                                                    buttons2;                                                // 0x0003(0x0000)
		uint8_t                                                    buttons3;                                                // 0x0004(0x0000)
		uint8_t                                                    padding2;                                                // 0x0005(0x0000)
		uint8_t                                                    leftStickX;                                              // 0x0006(0x0000)
		uint8_t                                                    leftStickY;                                              // 0x0007(0x0000)
		uint8_t                                                    rightStickX;                                             // 0x0008(0x0000)
		uint8_t                                                    rightStickY;                                             // 0x0009(0x0000)
		struct DualShock3HIDInputReport__padding3_e__FixedBuffer   padding3;                                                // 0x000A(0x0000)
		uint8_t                                                    leftTrigger;                                             // 0x0012(0x0000)
		uint8_t                                                    rightTrigger;                                            // 0x0013(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.DualShock.LowLevel.DualShockHIDOutputReport+<unknown1>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct DualShockHIDOutputReport__unknown1_e__FixedBuffer
	{
	public:
		uint8_t                                                    FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.DualShock.LowLevel.DualShockHIDOutputReport+<unknown2>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct DualShockHIDOutputReport__unknown2_e__FixedBuffer
	{
	public:
		uint8_t                                                    FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.DualShock.LowLevel.DualShockHIDOutputReport
	 * Size -> 0x0000
	 */
	struct DualShockHIDOutputReport
	{
	public:
		struct InputDeviceCommand                                  baseCommand;                                             // 0x0000(0x0000)
		uint8_t                                                    reportId;                                                // 0x0008(0x0000)
		uint8_t                                                    flags;                                                   // 0x0009(0x0000)
		struct DualShockHIDOutputReport__unknown1_e__FixedBuffer   unknown1;                                                // 0x000A(0x0000)
		uint8_t                                                    highFrequencyMotorSpeed;                                 // 0x000C(0x0000)
		uint8_t                                                    lowFrequencyMotorSpeed;                                  // 0x000D(0x0000)
		uint8_t                                                    redColor;                                                // 0x000E(0x0000)
		uint8_t                                                    greenColor;                                              // 0x000F(0x0000)
		uint8_t                                                    blueColor;                                               // 0x0010(0x0000)
		struct DualShockHIDOutputReport__unknown2_e__FixedBuffer   unknown2;                                                // 0x0011(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Haptics.DualMotorRumble
	 * Size -> 0x0000
	 */
	struct DualMotorRumble
	{
	public:
		float                                                      lowFrequencyMotorSpeed_k__BackingField;                  // 0x0000(0x0000)
		float                                                      highFrequencyMotorSpeed_k__BackingField;                 // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.DisableDeviceCommand
	 * Size -> 0x0000
	 */
	struct DisableDeviceCommand
	{
	public:
		struct InputDeviceCommand                                  baseCommand;                                             // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.EnableDeviceCommand
	 * Size -> 0x0000
	 */
	struct EnableDeviceCommand
	{
	public:
		struct InputDeviceCommand                                  baseCommand;                                             // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.EnableIMECompositionCommand
	 * Size -> 0x0000
	 */
	struct EnableIMECompositionCommand
	{
	public:
		struct InputDeviceCommand                                  baseCommand;                                             // 0x0000(0x0000)
		uint8_t                                                    m_ImeEnabled;                                            // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.InitiateUserAccountPairingCommand
	 * Size -> 0x0000
	 */
	struct InitiateUserAccountPairingCommand
	{
	public:
		struct InputDeviceCommand                                  baseCommand;                                             // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.QueryCanRunInBackground
	 * Size -> 0x0000
	 */
	struct QueryCanRunInBackground
	{
	public:
		struct InputDeviceCommand                                  baseCommand;                                             // 0x0000(0x0000)
		bool                                                       canRunInBackground;                                      // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.QueryDimensionsCommand
	 * Size -> 0x0000
	 */
	struct QueryDimensionsCommand
	{
	public:
		struct InputDeviceCommand                                  baseCommand;                                             // 0x0000(0x0000)
		struct Vector2                                             outDimensions;                                           // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.QueryEnabledStateCommand
	 * Size -> 0x0000
	 */
	struct QueryEnabledStateCommand
	{
	public:
		struct InputDeviceCommand                                  baseCommand;                                             // 0x0000(0x0000)
		bool                                                       isEnabled;                                               // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.QueryKeyboardLayoutCommand+<nameBuffer>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct QueryKeyboardLayoutCommand__nameBuffer_e__FixedBuffer
	{
	public:
		uint8_t                                                    FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.QueryKeyboardLayoutCommand
	 * Size -> 0x0000
	 */
	struct QueryKeyboardLayoutCommand
	{
	public:
		struct InputDeviceCommand                                  baseCommand;                                             // 0x0000(0x0000)
		struct QueryKeyboardLayoutCommand__nameBuffer_e__FixedBuffer nameBuffer;                                              // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.QueryKeyNameCommand+<nameBuffer>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct QueryKeyNameCommand__nameBuffer_e__FixedBuffer
	{
	public:
		uint8_t                                                    FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.QueryKeyNameCommand
	 * Size -> 0x0000
	 */
	struct QueryKeyNameCommand
	{
	public:
		struct InputDeviceCommand                                  baseCommand;                                             // 0x0000(0x0000)
		int32_t                                                    scanOrKeyCode;                                           // 0x0008(0x0000)
		struct QueryKeyNameCommand__nameBuffer_e__FixedBuffer      nameBuffer;                                              // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.QueryPairedUserAccountCommand+<nameBuffer>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct QueryPairedUserAccountCommand__nameBuffer_e__FixedBuffer
	{
	public:
		uint8_t                                                    FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.QueryPairedUserAccountCommand+<idBuffer>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct QueryPairedUserAccountCommand__idBuffer_e__FixedBuffer
	{
	public:
		uint8_t                                                    FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.QueryPairedUserAccountCommand
	 * Size -> 0x0000
	 */
	struct QueryPairedUserAccountCommand
	{
	public:
		struct InputDeviceCommand                                  baseCommand;                                             // 0x0000(0x0000)
		uint64_t                                                   handle;                                                  // 0x0008(0x0000)
		struct QueryPairedUserAccountCommand__nameBuffer_e__FixedBuffer nameBuffer;                                              // 0x0010(0x0000)
		struct QueryPairedUserAccountCommand__idBuffer_e__FixedBuffer idBuffer;                                                // 0x0210(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.QuerySamplingFrequencyCommand
	 * Size -> 0x0000
	 */
	struct QuerySamplingFrequencyCommand
	{
	public:
		struct InputDeviceCommand                                  baseCommand;                                             // 0x0000(0x0000)
		float                                                      frequency;                                               // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.QueryUserIdCommand+<idBuffer>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct QueryUserIdCommand__idBuffer_e__FixedBuffer
	{
	public:
		uint8_t                                                    FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.QueryUserIdCommand
	 * Size -> 0x0000
	 */
	struct QueryUserIdCommand
	{
	public:
		struct InputDeviceCommand                                  baseCommand;                                             // 0x0000(0x0000)
		struct QueryUserIdCommand__idBuffer_e__FixedBuffer         idBuffer;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.RequestResetCommand
	 * Size -> 0x0000
	 */
	struct RequestResetCommand
	{
	public:
		struct InputDeviceCommand                                  baseCommand;                                             // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.RequestSyncCommand
	 * Size -> 0x0000
	 */
	struct RequestSyncCommand
	{
	public:
		struct InputDeviceCommand                                  baseCommand;                                             // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.SetIMECursorPositionCommand
	 * Size -> 0x0000
	 */
	struct SetIMECursorPositionCommand
	{
	public:
		struct InputDeviceCommand                                  baseCommand;                                             // 0x0000(0x0000)
		struct Vector2                                             m_Position;                                              // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.SetSamplingFrequencyCommand
	 * Size -> 0x0000
	 */
	struct SetSamplingFrequencyCommand
	{
	public:
		struct InputDeviceCommand                                  baseCommand;                                             // 0x0000(0x0000)
		float                                                      frequency;                                               // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.UseWindowsGamingInputCommand
	 * Size -> 0x0000
	 */
	struct UseWindowsGamingInputCommand
	{
	public:
		struct InputDeviceCommand                                  baseCommand;                                             // 0x0000(0x0000)
		uint8_t                                                    enable;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.WarpMousePositionCommand
	 * Size -> 0x0000
	 */
	struct WarpMousePositionCommand
	{
	public:
		struct InputDeviceCommand                                  baseCommand;                                             // 0x0000(0x0000)
		struct Vector2                                             warpPositionInPlayerDisplaySpace;                        // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.GamepadState
	 * Size -> 0x0000
	 */
	struct GamepadState
	{
	public:
		uint32_t                                                   buttons;                                                 // 0x0000(0x0000)
		struct Vector2                                             leftStick;                                               // 0x0004(0x0000)
		struct Vector2                                             rightStick;                                              // 0x000C(0x0000)
		float                                                      leftTrigger;                                             // 0x0014(0x0000)
		float                                                      rightTrigger;                                            // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.DualMotorRumbleCommand
	 * Size -> 0x0000
	 */
	struct DualMotorRumbleCommand
	{
	public:
		struct InputDeviceCommand                                  baseCommand;                                             // 0x0000(0x0000)
		float                                                      lowFrequencyMotorSpeed;                                  // 0x0008(0x0000)
		float                                                      highFrequencyMotorSpeed;                                 // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.JoystickState
	 * Size -> 0x0000
	 */
	struct JoystickState
	{
	public:
		int32_t                                                    buttons;                                                 // 0x0000(0x0000)
		struct Vector2                                             stick;                                                   // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.KeyboardState+<keys>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct KeyboardState__keys_e__FixedBuffer
	{
	public:
		uint8_t                                                    FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.KeyboardState
	 * Size -> 0x0000
	 */
	struct KeyboardState
	{
	public:
		struct KeyboardState__keys_e__FixedBuffer                  keys;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.MouseState
	 * Size -> 0x0000
	 */
	struct MouseState
	{
	public:
		struct Vector2                                             position;                                                // 0x0000(0x0000)
		struct Vector2                                             delta;                                                   // 0x0008(0x0000)
		struct Vector2                                             scroll;                                                  // 0x0010(0x0000)
		uint16_t                                                   buttons;                                                 // 0x0018(0x0000)
		uint16_t                                                   displayIndex;                                            // 0x001A(0x0000)
		uint16_t                                                   clickCount;                                              // 0x001C(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.PenState
	 * Size -> 0x0000
	 */
	struct PenState
	{
	public:
		struct Vector2                                             position;                                                // 0x0000(0x0000)
		struct Vector2                                             delta;                                                   // 0x0008(0x0000)
		struct Vector2                                             tilt;                                                    // 0x0010(0x0000)
		float                                                      pressure;                                                // 0x0018(0x0000)
		float                                                      twist;                                                   // 0x001C(0x0000)
		uint16_t                                                   buttons;                                                 // 0x0020(0x0000)
		uint16_t                                                   displayIndex;                                            // 0x0022(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.PointerState
	 * Size -> 0x0000
	 */
	struct PointerState
	{
	public:
		uint32_t                                                   pointerId;                                               // 0x0000(0x0000)
		struct Vector2                                             position;                                                // 0x0004(0x0000)
		struct Vector2                                             delta;                                                   // 0x000C(0x0000)
		float                                                      pressure;                                                // 0x0014(0x0000)
		struct Vector2                                             radius;                                                  // 0x0018(0x0000)
		uint16_t                                                   buttons;                                                 // 0x0020(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.AccelerometerState
	 * Size -> 0x0000
	 */
	struct AccelerometerState
	{
	public:
		struct Vector3                                             acceleration;                                            // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.GyroscopeState
	 * Size -> 0x0000
	 */
	struct GyroscopeState
	{
	public:
		struct Vector3                                             angularVelocity;                                         // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.GravityState
	 * Size -> 0x0000
	 */
	struct GravityState
	{
	public:
		struct Vector3                                             gravity;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.AttitudeState
	 * Size -> 0x0000
	 */
	struct AttitudeState
	{
	public:
		struct Quaternion                                          attitude;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.LinearAccelerationState
	 * Size -> 0x0000
	 */
	struct LinearAccelerationState
	{
	public:
		struct Vector3                                             acceleration;                                            // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.TouchscreenState+<primaryTouchData>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct TouchscreenState__primaryTouchData_e__FixedBuffer
	{
	public:
		uint8_t                                                    FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.TouchscreenState+<touchData>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct TouchscreenState__touchData_e__FixedBuffer
	{
	public:
		uint8_t                                                    FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.TouchscreenState
	 * Size -> 0x0000
	 */
	struct TouchscreenState
	{
	public:
		struct TouchscreenState__primaryTouchData_e__FixedBuffer   primaryTouchData;                                        // 0x0000(0x0000)
		struct TouchscreenState__touchData_e__FixedBuffer          touchData;                                               // 0x0038(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.ActionEvent+<m_ValueData>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct ActionEvent__m_ValueData_e__FixedBuffer
	{
	public:
		uint8_t                                                    FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.ActionEvent
	 * Size -> 0x0000
	 */
	struct ActionEvent
	{
	public:
		struct InputEvent                                          baseEvent;                                               // 0x0000(0x0000)
		uint16_t                                                   m_ControlIndex;                                          // 0x0014(0x0000)
		uint16_t                                                   m_BindingIndex;                                          // 0x0016(0x0000)
		uint16_t                                                   m_InteractionIndex;                                      // 0x0018(0x0000)
		uint8_t                                                    m_StateIndex;                                            // 0x001A(0x0000)
		uint8_t                                                    m_Phase;                                                 // 0x001B(0x0000)
		double                                                     m_StartTime;                                             // 0x001C(0x0000)
		struct ActionEvent__m_ValueData_e__FixedBuffer             m_ValueData;                                             // 0x0024(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.DeviceConfigurationEvent
	 * Size -> 0x0000
	 */
	struct DeviceConfigurationEvent
	{
	public:
		struct InputEvent                                          baseEvent;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.DeviceRemoveEvent
	 * Size -> 0x0000
	 */
	struct DeviceRemoveEvent
	{
	public:
		struct InputEvent                                          baseEvent;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.DeviceResetEvent
	 * Size -> 0x0000
	 */
	struct DeviceResetEvent
	{
	public:
		struct InputEvent                                          baseEvent;                                               // 0x0000(0x0000)
		bool                                                       hardReset;                                               // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.IMECompositionString+<buffer>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct IMECompositionString__buffer_e__FixedBuffer
	{
	public:
		uint16_t                                                   FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.IMECompositionString
	 * Size -> 0x0000
	 */
	struct IMECompositionString
	{
	public:
		int32_t                                                    size;                                                    // 0x0000(0x0000)
		struct IMECompositionString__buffer_e__FixedBuffer         buffer;                                                  // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.IMECompositionEvent
	 * Size -> 0x0000
	 */
	struct IMECompositionEvent
	{
	public:
		struct InputEvent                                          baseEvent;                                               // 0x0000(0x0000)
		struct IMECompositionString                                compositionString;                                       // 0x0014(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.IMECompositionString+Enumerator
	 * Size -> 0x0000
	 */
	struct IMECompositionString_Enumerator
	{
	public:
		struct IMECompositionString                                m_CompositionString;                                     // 0x0000(0x0000)
		uint16_t                                                   m_CurrentCharacter;                                      // 0x0084(0x0000)
		int32_t                                                    m_CurrentIndex;                                          // 0x0088(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.InputEventBuffer+Enumerator
	 * Size -> 0x0000
	 */
	struct InputEventBuffer_Enumerator
	{
	public:
		struct InputEvent*                                         m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_EventCount;                                            // 0x0008(0x0000)
		struct InputEvent*                                         m_CurrentEvent;                                          // 0x0010(0x0000)
		int32_t                                                    m_CurrentIndex;                                          // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.InputEventListener
	 * Size -> 0x0000
	 */
	struct InputEventListener
	{	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.InputEventStream
	 * Size -> 0x0000
	 */
	struct InputEventStream
	{
	public:
		struct InputEventBuffer                                    m_NativeBuffer;                                          // 0x0000(0x0000)
		struct InputEvent*                                         m_CurrentNativeEventReadPtr;                             // 0x0020(0x0000)
		struct InputEvent*                                         m_CurrentNativeEventWritePtr;                            // 0x0028(0x0000)
		int32_t                                                    m_RemainingNativeEventCount;                             // 0x0030(0x0000)
		int32_t                                                    m_MaxAppendedEvents;                                     // 0x0034(0x0000)
		struct InputEventBuffer                                    m_AppendBuffer;                                          // 0x0038(0x0000)
		struct InputEvent*                                         m_CurrentAppendEventReadPtr;                             // 0x0058(0x0000)
		struct InputEvent*                                         m_CurrentAppendEventWritePtr;                            // 0x0060(0x0000)
		int32_t                                                    m_RemainingAppendEventCount;                             // 0x0068(0x0000)
		int32_t                                                    m_NumEventsRetainedInBuffer;                             // 0x006C(0x0000)
		bool                                                       m_IsOpen;                                                // 0x0070(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.InputEventTrace+DeviceInfo
	 * Size -> 0x0000
	 */
	struct InputEventTrace_DeviceInfo
	{
	public:
		int32_t                                                    m_DeviceId;                                              // 0x0000(0x0000)
		class Il2CppString*                                        m_Layout;                                                // 0x0008(0x0000)
		struct FourCC                                              m_StateFormat;                                           // 0x0010(0x0000)
		int32_t                                                    m_StateSizeInBytes;                                      // 0x0014(0x0000)
		class Il2CppString*                                        m_FullLayoutJson;                                        // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.TextEvent
	 * Size -> 0x0000
	 */
	struct TextEvent
	{
	public:
		struct InputEvent                                          baseEvent;                                               // 0x0000(0x0000)
		int32_t                                                    character;                                               // 0x0014(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.InputMetrics
	 * Size -> 0x0000
	 */
	struct InputMetrics
	{
	public:
		int32_t                                                    maxNumDevices_k__BackingField;                           // 0x0000(0x0000)
		int32_t                                                    currentNumDevices_k__BackingField;                       // 0x0004(0x0000)
		int32_t                                                    maxStateSizeInBytes_k__BackingField;                     // 0x0008(0x0000)
		int32_t                                                    currentStateSizeInBytes_k__BackingField;                 // 0x000C(0x0000)
		int32_t                                                    currentControlCount_k__BackingField;                     // 0x0010(0x0000)
		int32_t                                                    currentLayoutCount_k__BackingField;                      // 0x0014(0x0000)
		int32_t                                                    totalEventBytes_k__BackingField;                         // 0x0018(0x0000)
		int32_t                                                    totalEventCount_k__BackingField;                         // 0x001C(0x0000)
		int32_t                                                    totalUpdateCount_k__BackingField;                        // 0x0020(0x0000)
		double                                                     totalEventProcessingTime_k__BackingField;                // 0x0028(0x0000)
		double                                                     totalEventLagTime_k__BackingField;                       // 0x0030(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.InputUpdate+UpdateStepCount
	 * Size -> 0x0000
	 */
	struct InputUpdate_UpdateStepCount
	{
	public:
		bool                                                       m_WasUpdated;                                            // 0x0000(0x0000)
		uint32_t                                                   value_k__BackingField;                                   // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.InputUpdate+SerializedState
	 * Size -> 0x0000
	 */
	struct InputUpdate_SerializedState
	{
	public:
		int32_t                                                    lastUpdateType;                                          // 0x0000(0x0000)
		struct InputUpdate_UpdateStepCount                         playerUpdateStepCount;                                   // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.InputStateBuffers+DoubleBuffers
	 * Size -> 0x0000
	 */
	struct InputStateBuffers_DoubleBuffers
	{
	public:
		void**                                                     deviceToBufferMapping;                                   // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.InputStateBuffers
	 * Size -> 0x0000
	 */
	struct InputStateBuffers
	{
	public:
		uint32_t                                                   sizePerBuffer;                                           // 0x0000(0x0000)
		uint32_t                                                   totalSize;                                               // 0x0004(0x0000)
		void*                                                      defaultStateBuffer;                                      // 0x0008(0x0000)
		void*                                                      noiseMaskBuffer;                                         // 0x0010(0x0000)
		void*                                                      resetMaskBuffer;                                         // 0x0018(0x0000)
		void*                                                      m_AllBuffers;                                            // 0x0020(0x0000)
		struct InputStateBuffers_DoubleBuffers                     m_PlayerStateBuffers;                                    // 0x0028(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.InputStateHistory+Record
	 * Size -> 0x0000
	 */
	struct InputStateHistory_Record
	{
	public:
		class InputStateHistory*                                   m_Owner;                                                 // 0x0000(0x0000)
		int32_t                                                    m_IndexPlusOne;                                          // 0x0008(0x0000)
		uint32_t                                                   m_Version;                                               // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.InputStateHistory+Enumerator
	 * Size -> 0x0000
	 */
	struct InputStateHistory_Enumerator
	{
	public:
		class InputStateHistory*                                   m_History;                                               // 0x0000(0x0000)
		int32_t                                                    m_Index;                                                 // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.InputStateHistory.RecordHeader+<m_StateWithoutControlIndex>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct InputStateHistory_RecordHeader__m_StateWithoutControlIndex_e__FixedBuffer
	{
	public:
		uint8_t                                                    FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.InputStateHistory.RecordHeader+<m_StateWithControlIndex>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct InputStateHistory_RecordHeader__m_StateWithControlIndex_e__FixedBuffer
	{
	public:
		uint8_t                                                    FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.InputStateHistory+RecordHeader
	 * Size -> 0x0000
	 */
	struct InputStateHistory_RecordHeader
	{
	public:
		double                                                     time;                                                    // 0x0000(0x0000)
		uint32_t                                                   version;                                                 // 0x0008(0x0000)
		int32_t                                                    controlIndex;                                            // 0x000C(0x0000)
		struct InputStateHistory_RecordHeader__m_StateWithoutControlIndex_e__FixedBuffer m_StateWithoutControlIndex;                              // 0x000C(0x0000)
		struct InputStateHistory_RecordHeader__m_StateWithControlIndex_e__FixedBuffer m_StateWithControlIndex;                                 // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.LowLevel.InputStateHistory+Enumerator<TValue>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct InputStateHistory_Enumerator_TValue
	{
	public:
		class InputStateHistory_TValue*                            m_History;                                               // 0x0000(0x0000)
		int32_t                                                    m_Index;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Layouts.InputControlLayout.Builder+ControlBuilder
	 * Size -> 0x0000
	 */
	struct InputControlLayout_Builder_ControlBuilder
	{
	public:
		class InputControlLayout_Builder*                          builder;                                                 // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Layouts.InputDeviceMatcher+MatcherJson
	 * Size -> 0x0000
	 */
	struct InputDeviceMatcher_MatcherJson
	{
	public:
		class Il2CppString*                                        interface;                                               // 0x0000(0x0000)
		class String_Array*                                        interfaces;                                              // 0x0008(0x0000)
		class Il2CppString*                                        deviceClass;                                             // 0x0010(0x0000)
		class String_Array*                                        deviceClasses;                                           // 0x0018(0x0000)
		class Il2CppString*                                        manufacturer;                                            // 0x0020(0x0000)
		class String_Array*                                        manufacturers;                                           // 0x0028(0x0000)
		class Il2CppString*                                        product;                                                 // 0x0030(0x0000)
		class String_Array*                                        products;                                                // 0x0038(0x0000)
		class Il2CppString*                                        version;                                                 // 0x0040(0x0000)
		class String_Array*                                        versions;                                                // 0x0048(0x0000)
		class InputDeviceMatcher_MatcherJson_Capability_Array*     capabilities;                                            // 0x0050(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Layouts.InputControlLayout+LayoutJsonNameAndDescriptorOnly
	 * Size -> 0x0000
	 */
	struct InputControlLayout_LayoutJsonNameAndDescriptorOnly
	{
	public:
		class Il2CppString*                                        name;                                                    // 0x0000(0x0000)
		class Il2CppString*                                        extend;                                                  // 0x0008(0x0000)
		class String_Array*                                        extendMultiple;                                          // 0x0010(0x0000)
		struct InputDeviceMatcher_MatcherJson                      device;                                                  // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Layouts.InputControlLayout+LayoutJson
	 * Size -> 0x0000
	 */
	struct InputControlLayout_LayoutJson
	{
	public:
		class Il2CppString*                                        name;                                                    // 0x0000(0x0000)
		class Il2CppString*                                        extend;                                                  // 0x0008(0x0000)
		class String_Array*                                        extendMultiple;                                          // 0x0010(0x0000)
		class Il2CppString*                                        format;                                                  // 0x0018(0x0000)
		class Il2CppString*                                        beforeRender;                                            // 0x0020(0x0000)
		class Il2CppString*                                        runInBackground;                                         // 0x0028(0x0000)
		class String_Array*                                        commonUsages;                                            // 0x0030(0x0000)
		class Il2CppString*                                        displayName;                                             // 0x0038(0x0000)
		class Il2CppString*                                        description;                                             // 0x0040(0x0000)
		class Il2CppString*                                        type;                                                    // 0x0048(0x0000)
		class Il2CppString*                                        variant;                                                 // 0x0050(0x0000)
		bool                                                       isGenericTypeOfDevice;                                   // 0x0058(0x0000)
		bool                                                       hideInUI;                                                // 0x0059(0x0000)
		class InputControlLayout_ControlItemJson_Array*            controls;                                                // 0x0060(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Layouts.InputControlLayout.Collection+LayoutMatcher
	 * Size -> 0x0000
	 */
	struct InputControlLayout_Collection_LayoutMatcher
	{
	public:
		struct InternedString                                      layoutName;                                              // 0x0000(0x0000)
		struct InputDeviceMatcher                                  deviceMatcher;                                           // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Layouts.InputControlLayout.Collection+PrecompiledLayout
	 * Size -> 0x0000
	 */
	struct InputControlLayout_Collection_PrecompiledLayout
	{
	public:
		class Func_InputDevice*                                    factoryMethod;                                           // 0x0000(0x0000)
		class Il2CppString*                                        metadata;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Layouts.InputControlLayout+Cache
	 * Size -> 0x0000
	 */
	struct InputControlLayout_Cache
	{
	public:
		class Dictionary_InternedString__InputControlLayout*       table;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Layouts.InputControlLayout+Collection
	 * Size -> 0x0000
	 */
	struct InputControlLayout_Collection
	{
	public:
		class Dictionary_InternedString__Type*                     layoutTypes;                                             // 0x0000(0x0000)
		class Dictionary_InternedString__string*                   layoutStrings;                                           // 0x0008(0x0000)
		class Dictionary_InternedString__Func_InputControlLayout*  layoutBuilders;                                          // 0x0010(0x0000)
		class Dictionary_InternedString__InternedString*           baseLayoutTable;                                         // 0x0018(0x0000)
		class Dictionary_InternedString__InternedString*           layoutOverrides;                                         // 0x0020(0x0000)
		class HashSet_InternedString*                              layoutOverrideNames;                                     // 0x0028(0x0000)
		class Dictionary_InternedString__InputControlLayout_Collection_PrecompiledLayout* precompiledLayouts;                                      // 0x0030(0x0000)
		class List_InputControlLayout_Collection_LayoutMatcher*    layoutMatchers;                                          // 0x0038(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Layouts.InputControlLayout+CacheRefInstance
	 * Size -> 0x0000
	 */
	struct InputControlLayout_CacheRefInstance
	{
	public:
		bool                                                       valid;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Layouts.InputDeviceBuilder+RefInstance
	 * Size -> 0x0000
	 */
	struct InputDeviceBuilder_RefInstance
	{	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Layouts.InputDeviceBuilder
	 * Size -> 0x0000
	 */
	struct InputDeviceBuilder
	{
	public:
		class InputDevice*                                         m_Device;                                                // 0x0000(0x0000)
		struct InputControlLayout_CacheRefInstance                 m_LayoutCacheRef;                                        // 0x0008(0x0000)
		class Dictionary_string__InputControlLayout_ControlItem*   m_ChildControlOverrides;                                 // 0x0010(0x0000)
		class List_uint*                                           m_StateOffsetToControlMap;                               // 0x0018(0x0000)
		class StringBuilder*                                       m_StringBuilder;                                         // 0x0020(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Layouts.InputDeviceDescription+DeviceDescriptionJson
	 * Size -> 0x0000
	 */
	struct InputDeviceDescription_DeviceDescriptionJson
	{
	public:
		class Il2CppString*                                        interface;                                               // 0x0000(0x0000)
		class Il2CppString*                                        type;                                                    // 0x0008(0x0000)
		class Il2CppString*                                        product;                                                 // 0x0010(0x0000)
		class Il2CppString*                                        serial;                                                  // 0x0018(0x0000)
		class Il2CppString*                                        version;                                                 // 0x0020(0x0000)
		class Il2CppString*                                        manufacturer;                                            // 0x0028(0x0000)
		class Il2CppString*                                        capabilities;                                            // 0x0030(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Layouts.InputDeviceMatcher.MatcherJson+Capability
	 * Size -> 0x0000
	 */
	struct InputDeviceMatcher_MatcherJson_Capability
	{
	public:
		class Il2CppString*                                        path;                                                    // 0x0000(0x0000)
		class Il2CppString*                                        value;                                                   // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.InputActionTrace+ActionEventPtr
	 * Size -> 0x0000
	 */
	struct InputActionTrace_ActionEventPtr
	{
	public:
		class InputActionState*                                    m_State;                                                 // 0x0000(0x0000)
		struct ActionEvent*                                        m_Ptr;                                                   // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.InputActionTrace+Enumerator
	 * Size -> 0x0000
	 */
	struct InputActionTrace_Enumerator
	{
	public:
		class InputActionTrace*                                    m_Trace;                                                 // 0x0000(0x0000)
		struct ActionEvent*                                        m_Buffer;                                                // 0x0008(0x0000)
		int32_t                                                    m_EventCount;                                            // 0x0010(0x0000)
		struct ActionEvent*                                        m_CurrentEvent;                                          // 0x0018(0x0000)
		int32_t                                                    m_CurrentIndex;                                          // 0x0020(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.CallbackArray<TDelegate>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct CallbackArray_TDelegate
	{
	public:
		bool                                                       m_CannotMutateCallbacksArray;                            // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_Callbacks;                                             // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToAdd;                                        // 0x0000(0x0000)
		struct InlinedArray_TDelegate                              m_CallbacksToRemove;                                     // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.Vector2MagnitudeComparer
	 * Size -> 0x0000
	 */
	struct Vector2MagnitudeComparer
	{	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.Vector3MagnitudeComparer
	 * Size -> 0x0000
	 */
	struct Vector3MagnitudeComparer
	{	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.InlinedArray+Enumerator<TValue>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct InlinedArray_Enumerator_TValue
	{
	public:
		struct InlinedArray_TValue                                 array;                                                   // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.JsonParser
	 * Size -> 0x0000
	 */
	struct JsonParser
	{
	public:
		class Il2CppString*                                        m_Text;                                                  // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0008(0x0000)
		int32_t                                                    m_Position;                                              // 0x000C(0x0000)
		bool                                                       m_MatchAnyElementInArray;                                // 0x0010(0x0000)
		bool                                                       m_DryRun;                                                // 0x0011(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.MemoryHelpers+BitRegion
	 * Size -> 0x0000
	 */
	struct MemoryHelpers_BitRegion
	{
	public:
		uint32_t                                                   bitOffset;                                               // 0x0000(0x0000)
		uint32_t                                                   sizeInBits;                                              // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.NameAndParameters
	 * Size -> 0x0000
	 */
	struct NameAndParameters
	{
	public:
		class Il2CppString*                                        name_k__BackingField;                                    // 0x0000(0x0000)
		struct ReadOnlyArray_NamedValue                            parameters_k__BackingField;                              // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.NamedValue
	 * Size -> 0x0000
	 */
	struct NamedValue
	{
	public:
		class Il2CppString*                                        name_k__BackingField;                                    // 0x0000(0x0000)
		struct PrimitiveValue                                      value_k__BackingField;                                   // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Utilities.OneOrMore<TValue, TList>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct OneOrMore_TValue__TList
	{
	public:
		bool                                                       m_IsSingle;                                              // 0x0000(0x0000)
		class Il2CppObject*                                        m_Single;                                                // 0x0000(0x0000)
		class Il2CppObject*                                        m_Multiple;                                              // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=20
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_20_4
	{	};

	/**
	 * Struct Unity.InputSystem.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=24
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_24_4
	{	};

	/**
	 * Struct Unity.InputSystem.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=100
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_100
	{	};

	/**
	 * Struct Unity.InputSystem.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=460
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_460
	{	};

	/**
	 * Struct Unity.InputSystem.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=928
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_928
	{	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.Cursor
	 * Size -> 0x0000
	 */
	struct Cursor
	{
	public:
		class Texture2D*                                           texture_k__BackingField;                                 // 0x0000(0x0000)
		struct Vector2                                             hotspot_k__BackingField;                                 // 0x0008(0x0000)
		int32_t                                                    defaultCursorId_k__BackingField;                         // 0x0010(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.EventDispatcherGate
	 * Size -> 0x0000
	 */
	struct EventDispatcherGate
	{
	public:
		class EventDispatcher*                                     m_Dispatcher;                                            // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.EventDispatcher+EventRecord
	 * Size -> 0x0000
	 */
	struct EventDispatcher_EventRecord
	{
	public:
		class EventBase*                                           m_Event;                                                 // 0x0000(0x0000)
		class IPanel*                                              m_Panel;                                                 // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.EventDispatcher+DispatchContext
	 * Size -> 0x0000
	 */
	struct EventDispatcher_DispatchContext
	{
	public:
		uint32_t                                                   m_GateCount;                                             // 0x0000(0x0000)
		class Queue_EventDispatcher_EventRecord*                   m_Queue;                                                 // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.FocusController+FocusedElement
	 * Size -> 0x0000
	 */
	struct FocusController_FocusedElement
	{
	public:
		class VisualElement*                                       m_SubTreeRoot;                                           // 0x0000(0x0000)
		class Focusable*                                           m_FocusedElement;                                        // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.FrustumPlanes
	 * Size -> 0x0000
	 */
	struct FrustumPlanes
	{
	public:
		float                                                      left;                                                    // 0x0000(0x0000)
		float                                                      right;                                                   // 0x0004(0x0000)
		float                                                      bottom;                                                  // 0x0008(0x0000)
		float                                                      top;                                                     // 0x000C(0x0000)
		float                                                      zNear;                                                   // 0x0010(0x0000)
		float                                                      zFar;                                                    // 0x0014(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Matrix4x4
	 * Size -> 0x0000
	 */
	struct Matrix4x4
	{
	public:
		float                                                      m00;                                                     // 0x0000(0x0000)
		float                                                      m10;                                                     // 0x0004(0x0000)
		float                                                      m20;                                                     // 0x0008(0x0000)
		float                                                      m30;                                                     // 0x000C(0x0000)
		float                                                      m01;                                                     // 0x0010(0x0000)
		float                                                      m11;                                                     // 0x0014(0x0000)
		float                                                      m21;                                                     // 0x0018(0x0000)
		float                                                      m31;                                                     // 0x001C(0x0000)
		float                                                      m02;                                                     // 0x0020(0x0000)
		float                                                      m12;                                                     // 0x0024(0x0000)
		float                                                      m22;                                                     // 0x0028(0x0000)
		float                                                      m32;                                                     // 0x002C(0x0000)
		float                                                      m03;                                                     // 0x0030(0x0000)
		float                                                      m13;                                                     // 0x0034(0x0000)
		float                                                      m23;                                                     // 0x0038(0x0000)
		float                                                      m33;                                                     // 0x003C(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.IMGUIContainer+GUIGlobals
	 * Size -> 0x0000
	 */
	struct IMGUIContainer_GUIGlobals
	{
	public:
		struct Matrix4x4                                           matrix;                                                  // 0x0000(0x0000)
		struct Color                                               color;                                                   // 0x0040(0x0000)
		struct Color                                               contentColor;                                            // 0x0050(0x0000)
		struct Color                                               backgroundColor;                                         // 0x0060(0x0000)
		bool                                                       enabled;                                                 // 0x0070(0x0000)
		bool                                                       changed;                                                 // 0x0071(0x0000)
		int32_t                                                    displayIndex;                                            // 0x0074(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.KeyboardNavigationManipulator+<>c__DisplayClass5_0
	 * Size -> 0x0000
	 */
	struct KeyboardNavigationManipulator___c__DisplayClass5_0
	{
	public:
		class KeyDownEvent*                                        evt;                                                     // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.KeyboardNavigationManipulator+<>c__DisplayClass6_0
	 * Size -> 0x0000
	 */
	struct KeyboardNavigationManipulator___c__DisplayClass6_0
	{
	public:
		class KeyDownEvent*                                        evt;                                                     // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.ManipulatorActivationFilter
	 * Size -> 0x0000
	 */
	struct ManipulatorActivationFilter
	{
	public:
		int32_t                                                    button_k__BackingField;                                  // 0x0000(0x0000)
		int32_t                                                    modifiers_k__BackingField;                               // 0x0004(0x0000)
		int32_t                                                    clickCount_k__BackingField;                              // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.PanelClearSettings
	 * Size -> 0x0000
	 */
	struct PanelClearSettings
	{
	public:
		bool                                                       clearDepthStencil;                                       // 0x0000(0x0000)
		bool                                                       clearColor;                                              // 0x0001(0x0000)
		struct Color                                               color;                                                   // 0x0004(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.TimerState
	 * Size -> 0x0000
	 */
	struct TimerState
	{
	public:
		int64_t                                                    start_k__BackingField;                                   // 0x0000(0x0000)
		int64_t                                                    now_k__BackingField;                                     // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.Spacing
	 * Size -> 0x0000
	 */
	struct Spacing
	{
	public:
		float                                                      left;                                                    // 0x0000(0x0000)
		float                                                      top;                                                     // 0x0004(0x0000)
		float                                                      right;                                                   // 0x0008(0x0000)
		float                                                      bottom;                                                  // 0x000C(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsNativeModule.UnityEngine.UIElements.TextNativeSettings
	 * Size -> 0x0000
	 */
	struct TextNativeSettings
	{
	public:
		class Il2CppString*                                        text;                                                    // 0x0000(0x0000)
		class Font*                                                font;                                                    // 0x0008(0x0000)
		int32_t                                                    size;                                                    // 0x0010(0x0000)
		float                                                      scaling;                                                 // 0x0014(0x0000)
		int32_t                                                    style;                                                   // 0x0018(0x0000)
		struct Color                                               color;                                                   // 0x001C(0x0000)
		int32_t                                                    anchor;                                                  // 0x002C(0x0000)
		bool                                                       wordWrap;                                                // 0x0030(0x0000)
		float                                                      wordWrapWidth;                                           // 0x0034(0x0000)
		bool                                                       richText;                                                // 0x0038(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.CursorPositionStylePainterParameters
	 * Size -> 0x0000
	 */
	struct CursorPositionStylePainterParameters
	{
	public:
		struct Rect                                                rect;                                                    // 0x0000(0x0000)
		class Il2CppString*                                        text;                                                    // 0x0010(0x0000)
		class Font*                                                font;                                                    // 0x0018(0x0000)
		int32_t                                                    fontSize;                                                // 0x0020(0x0000)
		int32_t                                                    fontStyle;                                               // 0x0024(0x0000)
		int32_t                                                    anchor;                                                  // 0x0028(0x0000)
		float                                                      wordWrapWidth;                                           // 0x002C(0x0000)
		bool                                                       richText;                                                // 0x0030(0x0000)
		int32_t                                                    cursorIndex;                                             // 0x0034(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.VisualElement+Hierarchy
	 * Size -> 0x0000
	 */
	struct VisualElement_Hierarchy
	{
	public:
		class VisualElement*                                       m_Owner;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StylePropertyAnimationSystem+ElementPropertyPair
	 * Size -> 0x0000
	 */
	struct StylePropertyAnimationSystem_ElementPropertyPair
	{
	public:
		class VisualElement*                                       element;                                                 // 0x0000(0x0000)
		int32_t                                                    property;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StylePropertyAnimationSystem.Values+TimingData<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct StylePropertyAnimationSystem_Values_TimingData_T
	{
	public:
		int64_t                                                    startTimeMs;                                             // 0x0000(0x0000)
		int32_t                                                    durationMs;                                              // 0x0000(0x0000)
		class Func_float__float*                                   easingCurve;                                             // 0x0000(0x0000)
		float                                                      easedProgress;                                           // 0x0000(0x0000)
		float                                                      reversingShorteningFactor;                               // 0x0000(0x0000)
		bool                                                       isStarted;                                               // 0x0000(0x0000)
		int32_t                                                    delayMs;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StylePropertyAnimationSystem.Values+StyleData<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct StylePropertyAnimationSystem_Values_StyleData_T
	{
	public:
		class Il2CppObject*                                        startValue;                                              // 0x0000(0x0000)
		class Il2CppObject*                                        endValue;                                                // 0x0000(0x0000)
		class Il2CppObject*                                        reversingAdjustedStartValue;                             // 0x0000(0x0000)
		class Il2CppObject*                                        currentValue;                                            // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StylePropertyAnimationSystem.Values+EmptyData<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct StylePropertyAnimationSystem_Values_EmptyData_T
	{	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.TextShadow
	 * Size -> 0x0000
	 */
	struct TextShadow
	{
	public:
		struct Vector2                                             offset;                                                  // 0x0000(0x0000)
		float                                                      blurRadius;                                              // 0x0008(0x0000)
		struct Color                                               color;                                                   // 0x000C(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.RuleMatcher
	 * Size -> 0x0000
	 */
	struct RuleMatcher
	{
	public:
		class StyleSheet*                                          sheet;                                                   // 0x0000(0x0000)
		class StyleComplexSelector*                                complexSelector;                                         // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.VectorImageVertex
	 * Size -> 0x0000
	 */
	struct VectorImageVertex
	{
	public:
		struct Vector3                                             position;                                                // 0x0000(0x0000)
		struct Color32                                             tint;                                                    // 0x000C(0x0000)
		struct Vector2                                             uv;                                                      // 0x0010(0x0000)
		uint32_t                                                   settingIndex;                                            // 0x0018(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.RectInt
	 * Size -> 0x0000
	 */
	struct RectInt
	{
	public:
		int32_t                                                    m_XMin;                                                  // 0x0000(0x0000)
		int32_t                                                    m_YMin;                                                  // 0x0004(0x0000)
		int32_t                                                    m_Width;                                                 // 0x0008(0x0000)
		int32_t                                                    m_Height;                                                // 0x000C(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.GradientSettings
	 * Size -> 0x0000
	 */
	struct GradientSettings
	{
	public:
		int32_t                                                    gradientType;                                            // 0x0000(0x0000)
		int32_t                                                    addressMode;                                             // 0x0004(0x0000)
		struct Vector2                                             radialFocus;                                             // 0x0008(0x0000)
		struct RectInt                                             location;                                                // 0x0010(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.VisualElementStyleSheetSet
	 * Size -> 0x0000
	 */
	struct VisualElementStyleSheetSet
	{
	public:
		class VisualElement*                                       m_Element;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.BaseVerticalCollectionView+<>c__DisplayClass164_0
	 * Size -> 0x0000
	 */
	struct BaseVerticalCollectionView___c__DisplayClass164_0
	{
	public:
		class BaseVerticalCollectionView*                          _4__this;                                                // 0x0000(0x0000)
		bool                                                       shiftKey;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.GenericDropdownMenu+<>c__DisplayClass25_0
	 * Size -> 0x0000
	 */
	struct GenericDropdownMenu___c__DisplayClass25_0
	{
	public:
		class GenericDropdownMenu*                                 _4__this;                                                // 0x0000(0x0000)
		int32_t                                                    selectedIndex;                                           // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.TreeView+TreeViewItemWrapper
	 * Size -> 0x0000
	 */
	struct TreeView_TreeViewItemWrapper
	{
	public:
		int32_t                                                    depth;                                                   // 0x0000(0x0000)
		class ITreeViewItem*                                       item;                                                    // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.InternalTreeView+TreeViewItemWrapper
	 * Size -> 0x0000
	 */
	struct InternalTreeView_TreeViewItemWrapper
	{
	public:
		int32_t                                                    depth;                                                   // 0x0000(0x0000)
		class ITreeViewItem*                                       item;                                                    // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.ListDragAndDropArgs
	 * Size -> 0x0000
	 */
	struct ListDragAndDropArgs
	{
	public:
		class Il2CppObject*                                        target_k__BackingField;                                  // 0x0000(0x0000)
		int32_t                                                    insertAtIndex_k__BackingField;                           // 0x0008(0x0000)
		int32_t                                                    dragAndDropPosition_k__BackingField;                     // 0x000C(0x0000)
		class IDragAndDropData*                                    dragAndDropData_k__BackingField;                         // 0x0010(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.ListViewDragger+DragPosition
	 * Size -> 0x0000
	 */
	struct ListViewDragger_DragPosition
	{
	public:
		int32_t                                                    insertAtIndex;                                           // 0x0000(0x0000)
		class ReusableCollectionItem*                              recycledItem;                                            // 0x0008(0x0000)
		int32_t                                                    dragAndDropPosition;                                     // 0x0010(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.PointerDeviceState+PointerLocation
	 * Size -> 0x0000
	 */
	struct PointerDeviceState_PointerLocation
	{
	public:
		struct Vector2                                             Position_k__BackingField;                                // 0x0000(0x0000)
		class IPanel*                                              Panel_k__BackingField;                                   // 0x0008(0x0000)
		int32_t                                                    Flags_k__BackingField;                                   // 0x0010(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StylePropertyNameCollection+Enumerator
	 * Size -> 0x0000
	 */
	struct StylePropertyNameCollection_Enumerator
	{
	public:
		struct List_Enumerator_StylePropertyName                   m_Enumerator;                                            // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StylePropertyNameCollection
	 * Size -> 0x0000
	 */
	struct StylePropertyNameCollection
	{
	public:
		class List_StylePropertyName*                              propertiesList;                                          // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.EventDebuggerLogCall
	 * Size -> 0x0000
	 */
	struct EventDebuggerLogCall
	{	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.EventDebuggerLogIMGUICall
	 * Size -> 0x0000
	 */
	struct EventDebuggerLogIMGUICall
	{	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.EventDebuggerLogExecuteDefaultAction
	 * Size -> 0x0000
	 */
	struct EventDebuggerLogExecuteDefaultAction
	{	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.NavigateFocusRing+FocusableHierarchyTraversal
	 * Size -> 0x0000
	 */
	struct NavigateFocusRing_FocusableHierarchyTraversal
	{
	public:
		class VisualElement*                                       currentFocusable;                                        // 0x0000(0x0000)
		struct Rect                                                validRect;                                               // 0x0008(0x0000)
		bool                                                       firstPass;                                               // 0x0018(0x0000)
		class NavigateFocusRing_ChangeDirection*                   direction;                                               // 0x0020(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.Vertex
	 * Size -> 0x0000
	 */
	struct Vertex
	{
	public:
		struct Vector3                                             position;                                                // 0x0000(0x0000)
		struct Color32                                             tint;                                                    // 0x000C(0x0000)
		struct Vector2                                             uv;                                                      // 0x0010(0x0000)
		struct Color32                                             xformClipPages;                                          // 0x0018(0x0000)
		struct Color32                                             ids;                                                     // 0x001C(0x0000)
		struct Color32                                             flags;                                                   // 0x0020(0x0000)
		struct Color32                                             opacityColorPages;                                       // 0x0024(0x0000)
		struct Vector4                                             circle;                                                  // 0x0028(0x0000)
		float                                                      textureId;                                               // 0x0038(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.BMPAlloc
	 * Size -> 0x0000
	 */
	struct BMPAlloc
	{
	public:
		int32_t                                                    page;                                                    // 0x0000(0x0000)
		uint16_t                                                   pageLine;                                                // 0x0004(0x0000)
		uint8_t                                                    bitIndex;                                                // 0x0006(0x0000)
		uint8_t                                                    ownedState;                                              // 0x0007(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.ColorPage
	 * Size -> 0x0000
	 */
	struct ColorPage
	{
	public:
		bool                                                       isValid;                                                 // 0x0000(0x0000)
		struct Color32                                             pageAndID;                                               // 0x0004(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.MeshGenerationContextUtils+BorderParams
	 * Size -> 0x0000
	 */
	struct MeshGenerationContextUtils_BorderParams
	{
	public:
		struct Rect                                                rect;                                                    // 0x0000(0x0000)
		struct Color                                               playmodeTintColor;                                       // 0x0010(0x0000)
		struct Color                                               leftColor;                                               // 0x0020(0x0000)
		struct Color                                               topColor;                                                // 0x0030(0x0000)
		struct Color                                               rightColor;                                              // 0x0040(0x0000)
		struct Color                                               bottomColor;                                             // 0x0050(0x0000)
		float                                                      leftWidth;                                               // 0x0060(0x0000)
		float                                                      topWidth;                                                // 0x0064(0x0000)
		float                                                      rightWidth;                                              // 0x0068(0x0000)
		float                                                      bottomWidth;                                             // 0x006C(0x0000)
		struct Vector2                                             topLeftRadius;                                           // 0x0070(0x0000)
		struct Vector2                                             topRightRadius;                                          // 0x0078(0x0000)
		struct Vector2                                             bottomRightRadius;                                       // 0x0080(0x0000)
		struct Vector2                                             bottomLeftRadius;                                        // 0x0088(0x0000)
		class Material*                                            material;                                                // 0x0090(0x0000)
		struct ColorPage                                           leftColorPage;                                           // 0x0098(0x0000)
		struct ColorPage                                           topColorPage;                                            // 0x00A0(0x0000)
		struct ColorPage                                           rightColorPage;                                          // 0x00A8(0x0000)
		struct ColorPage                                           bottomColorPage;                                         // 0x00B0(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.MeshGenerationContextUtils+RectangleParams
	 * Size -> 0x0000
	 */
	struct MeshGenerationContextUtils_RectangleParams
	{
	public:
		struct Rect                                                rect;                                                    // 0x0000(0x0000)
		struct Rect                                                uv;                                                      // 0x0010(0x0000)
		struct Color                                               color;                                                   // 0x0020(0x0000)
		class Texture*                                             texture;                                                 // 0x0030(0x0000)
		class Sprite*                                              sprite;                                                  // 0x0038(0x0000)
		class VectorImage*                                         vectorImage;                                             // 0x0040(0x0000)
		class Material*                                            material;                                                // 0x0048(0x0000)
		int32_t                                                    scaleMode;                                               // 0x0050(0x0000)
		struct Color                                               playmodeTintColor;                                       // 0x0054(0x0000)
		struct Vector2                                             topLeftRadius;                                           // 0x0064(0x0000)
		struct Vector2                                             topRightRadius;                                          // 0x006C(0x0000)
		struct Vector2                                             bottomRightRadius;                                       // 0x0074(0x0000)
		struct Vector2                                             bottomLeftRadius;                                        // 0x007C(0x0000)
		int32_t                                                    leftSlice;                                               // 0x0084(0x0000)
		int32_t                                                    topSlice;                                                // 0x0088(0x0000)
		int32_t                                                    rightSlice;                                              // 0x008C(0x0000)
		int32_t                                                    bottomSlice;                                             // 0x0090(0x0000)
		float                                                      sliceScale;                                              // 0x0094(0x0000)
		struct Rect                                                spriteGeomRect;                                          // 0x0098(0x0000)
		struct ColorPage                                           colorPage;                                               // 0x00A8(0x0000)
		int32_t                                                    meshFlags;                                               // 0x00B0(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.FontDefinition
	 * Size -> 0x0000
	 */
	struct FontDefinition
	{
	public:
		class Font*                                                m_Font;                                                  // 0x0000(0x0000)
		class FontAsset*                                           m_FontAsset;                                             // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.Length
	 * Size -> 0x0000
	 */
	struct Length
	{
	public:
		float                                                      m_Value;                                                 // 0x0000(0x0000)
		int32_t                                                    m_Unit;                                                  // 0x0004(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.MeshGenerationContextUtils+TextParams
	 * Size -> 0x0000
	 */
	struct MeshGenerationContextUtils_TextParams
	{
	public:
		struct Rect                                                rect;                                                    // 0x0000(0x0000)
		class Il2CppString*                                        text;                                                    // 0x0010(0x0000)
		class Font*                                                font;                                                    // 0x0018(0x0000)
		struct FontDefinition                                      fontDefinition;                                          // 0x0020(0x0000)
		int32_t                                                    fontSize;                                                // 0x0030(0x0000)
		struct Length                                              letterSpacing;                                           // 0x0034(0x0000)
		struct Length                                              wordSpacing;                                             // 0x003C(0x0000)
		struct Length                                              paragraphSpacing;                                        // 0x0044(0x0000)
		int32_t                                                    fontStyle;                                               // 0x004C(0x0000)
		struct Color                                               fontColor;                                               // 0x0050(0x0000)
		int32_t                                                    anchor;                                                  // 0x0060(0x0000)
		bool                                                       wordWrap;                                                // 0x0064(0x0000)
		float                                                      wordWrapWidth;                                           // 0x0068(0x0000)
		bool                                                       richText;                                                // 0x006C(0x0000)
		struct Color                                               playmodeTintColor;                                       // 0x0070(0x0000)
		int32_t                                                    textOverflow;                                            // 0x0080(0x0000)
		int32_t                                                    textOverflowPosition;                                    // 0x0084(0x0000)
		int32_t                                                    overflow;                                                // 0x0088(0x0000)
		class IPanel*                                              panel;                                                   // 0x0090(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.TextureId
	 * Size -> 0x0000
	 */
	struct TextureId
	{
	public:
		int32_t                                                    m_Index;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.TextureRegistry+TextureInfo
	 * Size -> 0x0000
	 */
	struct TextureRegistry_TextureInfo
	{
	public:
		class Texture*                                             texture;                                                 // 0x0000(0x0000)
		bool                                                       dynamic;                                                 // 0x0008(0x0000)
		int32_t                                                    refCount;                                                // 0x000C(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.Angle
	 * Size -> 0x0000
	 */
	struct Angle
	{
	public:
		float                                                      m_Value;                                                 // 0x0000(0x0000)
		int32_t                                                    m_Unit;                                                  // 0x0004(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.Background
	 * Size -> 0x0000
	 */
	struct Background
	{
	public:
		class Texture2D*                                           m_Texture;                                               // 0x0000(0x0000)
		class Sprite*                                              m_Sprite;                                                // 0x0008(0x0000)
		class RenderTexture*                                       m_RenderTexture;                                         // 0x0010(0x0000)
		class VectorImage*                                         m_VectorImage;                                           // 0x0018(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.Translate
	 * Size -> 0x0000
	 */
	struct Translate
	{
	public:
		struct Length                                              m_X;                                                     // 0x0000(0x0000)
		struct Length                                              m_Y;                                                     // 0x0008(0x0000)
		float                                                      m_Z;                                                     // 0x0010(0x0000)
		bool                                                       m_isNone;                                                // 0x0014(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleTranslate
	 * Size -> 0x0000
	 */
	struct StyleTranslate
	{
	public:
		struct Translate                                           m_Value;                                                 // 0x0000(0x0000)
		int32_t                                                    m_Keyword;                                               // 0x0018(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleSheets.StyleValue
	 * Size -> 0x0000
	 */
	struct StyleValue
	{
	public:
		int32_t                                                    id;                                                      // 0x0000(0x0000)
		int32_t                                                    keyword;                                                 // 0x0004(0x0000)
		float                                                      number;                                                  // 0x0008(0x0000)
		struct Length                                              length;                                                  // 0x0008(0x0000)
		struct Color                                               color;                                                   // 0x0008(0x0000)
		struct GCHandle                                            resource;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.Rotate
	 * Size -> 0x0000
	 */
	struct Rotate
	{
	public:
		struct Angle                                               m_Angle;                                                 // 0x0000(0x0000)
		struct Vector3                                             m_Axis;                                                  // 0x0008(0x0000)
		bool                                                       m_IsNone;                                                // 0x0014(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.Scale
	 * Size -> 0x0000
	 */
	struct Scale
	{
	public:
		struct Vector3                                             m_Scale;                                                 // 0x0000(0x0000)
		bool                                                       m_IsNone;                                                // 0x000C(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.TransformOrigin
	 * Size -> 0x0000
	 */
	struct TransformOrigin
	{
	public:
		struct Length                                              m_X;                                                     // 0x0000(0x0000)
		struct Length                                              m_Y;                                                     // 0x0008(0x0000)
		float                                                      m_Z;                                                     // 0x0010(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleSheets.StyleValueManaged
	 * Size -> 0x0000
	 */
	struct StyleValueManaged
	{
	public:
		int32_t                                                    id;                                                      // 0x0000(0x0000)
		int32_t                                                    keyword;                                                 // 0x0004(0x0000)
		class Il2CppObject*                                        value;                                                   // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.ComputedStyle
	 * Size -> 0x0000
	 */
	struct ComputedStyle
	{
	public:
		struct StyleDataRef_InheritedData                          inheritedData;                                           // 0x0000(0x0000)
		struct StyleDataRef_LayoutData                             layoutData;                                              // 0x0008(0x0000)
		struct StyleDataRef_RareData                               rareData;                                                // 0x0010(0x0000)
		struct StyleDataRef_TransformData                          transformData;                                           // 0x0018(0x0000)
		struct StyleDataRef_TransitionData                         transitionData;                                          // 0x0020(0x0000)
		struct StyleDataRef_VisualData                             visualData;                                              // 0x0028(0x0000)
		class YogaNode*                                            yogaNode;                                                // 0x0030(0x0000)
		class Dictionary_string__StylePropertyValue*               customProperties;                                        // 0x0038(0x0000)
		int64_t                                                    matchingRulesHash;                                       // 0x0040(0x0000)
		float                                                      dpiScaling;                                              // 0x0048(0x0000)
		class ComputedTransitionProperty_Array*                    computedTransitions;                                     // 0x0050(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.ComputedTransitionProperty
	 * Size -> 0x0000
	 */
	struct ComputedTransitionProperty
	{
	public:
		int32_t                                                    id;                                                      // 0x0000(0x0000)
		int32_t                                                    durationMs;                                              // 0x0004(0x0000)
		int32_t                                                    delayMs;                                                 // 0x0008(0x0000)
		class Func_float__float*                                   easingCurve;                                             // 0x0010(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.EasingFunction
	 * Size -> 0x0000
	 */
	struct EasingFunction
	{
	public:
		int32_t                                                    m_Mode;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.InlineStyleAccess+InlineRule
	 * Size -> 0x0000
	 */
	struct InlineStyleAccess_InlineRule
	{
	public:
		class StyleSheet*                                          sheet;                                                   // 0x0000(0x0000)
		class StyleProperty_Array*                                 properties;                                              // 0x0008(0x0000)
		class StylePropertyId_Array*                               propertyIds;                                             // 0x0010(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleColor
	 * Size -> 0x0000
	 */
	struct StyleColor
	{
	public:
		struct Color                                               m_Value;                                                 // 0x0000(0x0000)
		int32_t                                                    m_Keyword;                                               // 0x0010(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleCursor
	 * Size -> 0x0000
	 */
	struct StyleCursor
	{
	public:
		struct Cursor                                              m_Value;                                                 // 0x0000(0x0000)
		int32_t                                                    m_Keyword;                                               // 0x0018(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleFloat
	 * Size -> 0x0000
	 */
	struct StyleFloat
	{
	public:
		float                                                      m_Value;                                                 // 0x0000(0x0000)
		int32_t                                                    m_Keyword;                                               // 0x0004(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleInt
	 * Size -> 0x0000
	 */
	struct StyleInt
	{
	public:
		int32_t                                                    m_Value;                                                 // 0x0000(0x0000)
		int32_t                                                    m_Keyword;                                               // 0x0004(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleLength
	 * Size -> 0x0000
	 */
	struct StyleLength
	{
	public:
		struct Length                                              m_Value;                                                 // 0x0000(0x0000)
		int32_t                                                    m_Keyword;                                               // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleRotate
	 * Size -> 0x0000
	 */
	struct StyleRotate
	{
	public:
		struct Rotate                                              m_Value;                                                 // 0x0000(0x0000)
		int32_t                                                    m_Keyword;                                               // 0x0018(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleScale
	 * Size -> 0x0000
	 */
	struct StyleScale
	{
	public:
		struct Scale                                               m_Value;                                                 // 0x0000(0x0000)
		int32_t                                                    m_Keyword;                                               // 0x0010(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleTextShadow
	 * Size -> 0x0000
	 */
	struct StyleTextShadow
	{
	public:
		int32_t                                                    m_Keyword;                                               // 0x0000(0x0000)
		struct TextShadow                                          m_Value;                                                 // 0x0004(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleTransformOrigin
	 * Size -> 0x0000
	 */
	struct StyleTransformOrigin
	{
	public:
		struct TransformOrigin                                     m_Value;                                                 // 0x0000(0x0000)
		int32_t                                                    m_Keyword;                                               // 0x0014(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.TimeValue
	 * Size -> 0x0000
	 */
	struct TimeValue
	{
	public:
		float                                                      m_Value;                                                 // 0x0000(0x0000)
		int32_t                                                    m_Unit;                                                  // 0x0004(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.InheritedData
	 * Size -> 0x0000
	 */
	struct InheritedData
	{
	public:
		struct Color                                               color;                                                   // 0x0000(0x0000)
		struct Length                                              fontSize;                                                // 0x0010(0x0000)
		struct Length                                              letterSpacing;                                           // 0x0018(0x0000)
		struct TextShadow                                          textShadow;                                              // 0x0020(0x0000)
		class Font*                                                unityFont;                                               // 0x0040(0x0000)
		struct FontDefinition                                      unityFontDefinition;                                     // 0x0048(0x0000)
		int32_t                                                    unityFontStyleAndWeight;                                 // 0x0058(0x0000)
		struct Length                                              unityParagraphSpacing;                                   // 0x005C(0x0000)
		int32_t                                                    unityTextAlign;                                          // 0x0064(0x0000)
		struct Color                                               unityTextOutlineColor;                                   // 0x0068(0x0000)
		float                                                      unityTextOutlineWidth;                                   // 0x0078(0x0000)
		int32_t                                                    visibility;                                              // 0x007C(0x0000)
		int32_t                                                    whiteSpace;                                              // 0x0080(0x0000)
		struct Length                                              wordSpacing;                                             // 0x0084(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.LayoutData
	 * Size -> 0x0000
	 */
	struct LayoutData
	{
	public:
		int32_t                                                    alignContent;                                            // 0x0000(0x0000)
		int32_t                                                    alignItems;                                              // 0x0004(0x0000)
		int32_t                                                    alignSelf;                                               // 0x0008(0x0000)
		float                                                      borderBottomWidth;                                       // 0x000C(0x0000)
		float                                                      borderLeftWidth;                                         // 0x0010(0x0000)
		float                                                      borderRightWidth;                                        // 0x0014(0x0000)
		float                                                      borderTopWidth;                                          // 0x0018(0x0000)
		struct Length                                              bottom;                                                  // 0x001C(0x0000)
		int32_t                                                    display;                                                 // 0x0024(0x0000)
		struct Length                                              flexBasis;                                               // 0x0028(0x0000)
		int32_t                                                    flexDirection;                                           // 0x0030(0x0000)
		float                                                      flexGrow;                                                // 0x0034(0x0000)
		float                                                      flexShrink;                                              // 0x0038(0x0000)
		int32_t                                                    flexWrap;                                                // 0x003C(0x0000)
		struct Length                                              height;                                                  // 0x0040(0x0000)
		int32_t                                                    justifyContent;                                          // 0x0048(0x0000)
		struct Length                                              left;                                                    // 0x004C(0x0000)
		struct Length                                              marginBottom;                                            // 0x0054(0x0000)
		struct Length                                              marginLeft;                                              // 0x005C(0x0000)
		struct Length                                              marginRight;                                             // 0x0064(0x0000)
		struct Length                                              marginTop;                                               // 0x006C(0x0000)
		struct Length                                              maxHeight;                                               // 0x0074(0x0000)
		struct Length                                              maxWidth;                                                // 0x007C(0x0000)
		struct Length                                              minHeight;                                               // 0x0084(0x0000)
		struct Length                                              minWidth;                                                // 0x008C(0x0000)
		struct Length                                              paddingBottom;                                           // 0x0094(0x0000)
		struct Length                                              paddingLeft;                                             // 0x009C(0x0000)
		struct Length                                              paddingRight;                                            // 0x00A4(0x0000)
		struct Length                                              paddingTop;                                              // 0x00AC(0x0000)
		int32_t                                                    position;                                                // 0x00B4(0x0000)
		struct Length                                              right;                                                   // 0x00B8(0x0000)
		struct Length                                              top;                                                     // 0x00C0(0x0000)
		struct Length                                              width;                                                   // 0x00C8(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.RareData
	 * Size -> 0x0000
	 */
	struct RareData
	{
	public:
		struct Cursor                                              cursor;                                                  // 0x0000(0x0000)
		int32_t                                                    textOverflow;                                            // 0x0018(0x0000)
		struct Color                                               unityBackgroundImageTintColor;                           // 0x001C(0x0000)
		int32_t                                                    unityBackgroundScaleMode;                                // 0x002C(0x0000)
		int32_t                                                    unityOverflowClipBox;                                    // 0x0030(0x0000)
		int32_t                                                    unitySliceBottom;                                        // 0x0034(0x0000)
		int32_t                                                    unitySliceLeft;                                          // 0x0038(0x0000)
		int32_t                                                    unitySliceRight;                                         // 0x003C(0x0000)
		int32_t                                                    unitySliceTop;                                           // 0x0040(0x0000)
		int32_t                                                    unityTextOverflowPosition;                               // 0x0044(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.TransformData
	 * Size -> 0x0000
	 */
	struct TransformData
	{
	public:
		struct Rotate                                              rotate;                                                  // 0x0000(0x0000)
		struct Scale                                               scale;                                                   // 0x0018(0x0000)
		struct TransformOrigin                                     transformOrigin;                                         // 0x0028(0x0000)
		struct Translate                                           translate;                                               // 0x003C(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.TransitionData
	 * Size -> 0x0000
	 */
	struct TransitionData
	{
	public:
		class List_TimeValue*                                      transitionDelay;                                         // 0x0000(0x0000)
		class List_TimeValue*                                      transitionDuration;                                      // 0x0008(0x0000)
		class List_StylePropertyName*                              transitionProperty;                                      // 0x0010(0x0000)
		class List_EasingFunction*                                 transitionTimingFunction;                                // 0x0018(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.VisualData
	 * Size -> 0x0000
	 */
	struct VisualData
	{
	public:
		struct Color                                               backgroundColor;                                         // 0x0000(0x0000)
		struct Background                                          backgroundImage;                                         // 0x0010(0x0000)
		struct Color                                               borderBottomColor;                                       // 0x0030(0x0000)
		struct Length                                              borderBottomLeftRadius;                                  // 0x0040(0x0000)
		struct Length                                              borderBottomRightRadius;                                 // 0x0048(0x0000)
		struct Color                                               borderLeftColor;                                         // 0x0050(0x0000)
		struct Color                                               borderRightColor;                                        // 0x0060(0x0000)
		struct Color                                               borderTopColor;                                          // 0x0070(0x0000)
		struct Length                                              borderTopLeftRadius;                                     // 0x0080(0x0000)
		struct Length                                              borderTopRightRadius;                                    // 0x0088(0x0000)
		float                                                      opacity;                                                 // 0x0090(0x0000)
		int32_t                                                    overflow;                                                // 0x0094(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleComplexSelector+PseudoStateData
	 * Size -> 0x0000
	 */
	struct StyleComplexSelector_PseudoStateData
	{
	public:
		int32_t                                                    state;                                                   // 0x0000(0x0000)
		bool                                                       negate;                                                  // 0x0004(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleSelectorPart
	 * Size -> 0x0000
	 */
	struct StyleSelectorPart
	{
	public:
		class Il2CppString*                                        m_Value;                                                 // 0x0000(0x0000)
		int32_t                                                    m_Type;                                                  // 0x0008(0x0000)
		class Il2CppObject*                                        tempData;                                                // 0x0010(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleSheet+ImportStruct
	 * Size -> 0x0000
	 */
	struct StyleSheet_ImportStruct
	{
	public:
		class StyleSheet*                                          styleSheet;                                              // 0x0000(0x0000)
		class String_Array*                                        mediaQueries;                                            // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleValueHandle
	 * Size -> 0x0000
	 */
	struct StyleValueHandle
	{
	public:
		int32_t                                                    m_ValueType;                                             // 0x0000(0x0000)
		int32_t                                                    valueIndex;                                              // 0x0004(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleVariable
	 * Size -> 0x0000
	 */
	struct StyleVariable
	{
	public:
		class Il2CppString*                                        name;                                                    // 0x0000(0x0000)
		class StyleSheet*                                          sheet;                                                   // 0x0008(0x0000)
		class StyleValueHandle_Array*                              handles;                                                 // 0x0010(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleVariableResolver+ResolveContext
	 * Size -> 0x0000
	 */
	struct StyleVariableResolver_ResolveContext
	{
	public:
		class StyleSheet*                                          sheet;                                                   // 0x0000(0x0000)
		class StyleValueHandle_Array*                              handles;                                                 // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.TextCoreHandle
	 * Size -> 0x0000
	 */
	struct TextCoreHandle
	{
	public:
		struct Vector2                                             MeasuredSizes_k__BackingField;                           // 0x0000(0x0000)
		struct Vector2                                             RoundedSizes_k__BackingField;                            // 0x0008(0x0000)
		struct Vector2                                             m_PreferredSize;                                         // 0x0010(0x0000)
		int32_t                                                    m_PreviousGenerationSettingsHash;                        // 0x0018(0x0000)
		class TextGenerationSettings*                              m_CurrentGenerationSettings;                             // 0x0020(0x0000)
		class TextInfo_1*                                          m_TextInfoMesh;                                          // 0x0028(0x0000)
		bool                                                       isDirty;                                                 // 0x0030(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.TextNativeHandle
	 * Size -> 0x0000
	 */
	struct TextNativeHandle
	{
	public:
		struct Vector2                                             MeasuredSizes_k__BackingField;                           // 0x0000(0x0000)
		struct Vector2                                             RoundedSizes_k__BackingField;                            // 0x0008(0x0000)
		struct NativeArray_TextVertex                              textVertices;                                            // 0x0010(0x0000)
		int32_t                                                    m_PreviousTextParamsHash;                                // 0x0020(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.TemplateAsset+AttributeOverride
	 * Size -> 0x0000
	 */
	struct TemplateAsset_AttributeOverride
	{
	public:
		class Il2CppString*                                        m_ElementName;                                           // 0x0000(0x0000)
		class Il2CppString*                                        m_AttributeName;                                         // 0x0008(0x0000)
		class Il2CppString*                                        m_Value;                                                 // 0x0010(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.VisualTreeAsset+SlotDefinition
	 * Size -> 0x0000
	 */
	struct VisualTreeAsset_SlotDefinition
	{
	public:
		class Il2CppString*                                        name;                                                    // 0x0000(0x0000)
		int32_t                                                    insertionPointId;                                        // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.VisualTreeAsset+SlotUsageEntry
	 * Size -> 0x0000
	 */
	struct VisualTreeAsset_SlotUsageEntry
	{
	public:
		class Il2CppString*                                        slotName;                                                // 0x0000(0x0000)
		int32_t                                                    assetId;                                                 // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.VisualTreeAsset+<>c__DisplayClass49_0
	 * Size -> 0x0000
	 */
	struct VisualTreeAsset___c__DisplayClass49_0
	{
	public:
		class VisualElementAsset*                                  asset;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.CreationContext
	 * Size -> 0x0000
	 */
	struct CreationContext
	{
	public:
		class VisualElement*                                       target_k__BackingField;                                  // 0x0000(0x0000)
		class VisualTreeAsset*                                     visualTreeAsset_k__BackingField;                         // 0x0008(0x0000)
		class Dictionary_string__VisualElement*                    slotInsertionPoints_k__BackingField;                     // 0x0010(0x0000)
		class List_TemplateAsset_AttributeOverride*                attributeOverrides_k__BackingField;                      // 0x0018(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.Alloc
	 * Size -> 0x0000
	 */
	struct Alloc
	{
	public:
		uint32_t                                                   start;                                                   // 0x0000(0x0000)
		uint32_t                                                   size;                                                    // 0x0004(0x0000)
		class Il2CppObject*                                        handle;                                                  // 0x0008(0x0000)
		bool                                                       shortLived;                                              // 0x0010(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.Allocator2D+Alloc2D
	 * Size -> 0x0000
	 */
	struct Allocator2D_Alloc2D
	{
	public:
		struct RectInt                                             rect;                                                    // 0x0000(0x0000)
		class Allocator2D_Row*                                     row;                                                     // 0x0010(0x0000)
		struct Alloc                                               alloc;                                                   // 0x0018(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.GradientSettingsAtlas+RawTexture
	 * Size -> 0x0000
	 */
	struct GradientSettingsAtlas_RawTexture
	{
	public:
		class Color32_Array*                                       rgba;                                                    // 0x0000(0x0000)
		int32_t                                                    width;                                                   // 0x0008(0x0000)
		int32_t                                                    height;                                                  // 0x000C(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.MeshBuilder+AllocMeshData
	 * Size -> 0x0000
	 */
	struct MeshBuilder_AllocMeshData
	{
	public:
		class MeshBuilder_AllocMeshData_Allocator*                 alloc;                                                   // 0x0000(0x0000)
		class Texture*                                             texture;                                                 // 0x0008(0x0000)
		struct TextureId                                           svgTexture;                                              // 0x0010(0x0000)
		class Material*                                            material;                                                // 0x0018(0x0000)
		int32_t                                                    flags;                                                   // 0x0020(0x0000)
		struct BMPAlloc                                            colorAlloc;                                              // 0x0024(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.MeshBuilder+ClipCounts
	 * Size -> 0x0000
	 */
	struct MeshBuilder_ClipCounts
	{
	public:
		int32_t                                                    firstClippedIndex;                                       // 0x0000(0x0000)
		int32_t                                                    firstDegenerateIndex;                                    // 0x0004(0x0000)
		int32_t                                                    lastClippedIndex;                                        // 0x0008(0x0000)
		int32_t                                                    clippedTriangles;                                        // 0x000C(0x0000)
		int32_t                                                    addedTriangles;                                          // 0x0010(0x0000)
		int32_t                                                    degenerateTriangles;                                     // 0x0014(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.ChainBuilderStats
	 * Size -> 0x0000
	 */
	struct ChainBuilderStats
	{
	public:
		uint32_t                                                   elementsAdded;                                           // 0x0000(0x0000)
		uint32_t                                                   elementsRemoved;                                         // 0x0004(0x0000)
		uint32_t                                                   recursiveClipUpdates;                                    // 0x0008(0x0000)
		uint32_t                                                   recursiveClipUpdatesExpanded;                            // 0x000C(0x0000)
		uint32_t                                                   nonRecursiveClipUpdates;                                 // 0x0010(0x0000)
		uint32_t                                                   recursiveTransformUpdates;                               // 0x0014(0x0000)
		uint32_t                                                   recursiveTransformUpdatesExpanded;                       // 0x0018(0x0000)
		uint32_t                                                   recursiveOpacityUpdates;                                 // 0x001C(0x0000)
		uint32_t                                                   recursiveOpacityUpdatesExpanded;                         // 0x0020(0x0000)
		uint32_t                                                   colorUpdates;                                            // 0x0024(0x0000)
		uint32_t                                                   colorUpdatesExpanded;                                    // 0x0028(0x0000)
		uint32_t                                                   recursiveVisualUpdates;                                  // 0x002C(0x0000)
		uint32_t                                                   recursiveVisualUpdatesExpanded;                          // 0x0030(0x0000)
		uint32_t                                                   nonRecursiveVisualUpdates;                               // 0x0034(0x0000)
		uint32_t                                                   dirtyProcessed;                                          // 0x0038(0x0000)
		uint32_t                                                   nudgeTransformed;                                        // 0x003C(0x0000)
		uint32_t                                                   boneTransformed;                                         // 0x0040(0x0000)
		uint32_t                                                   skipTransformed;                                         // 0x0044(0x0000)
		uint32_t                                                   visualUpdateTransformed;                                 // 0x0048(0x0000)
		uint32_t                                                   updatedMeshAllocations;                                  // 0x004C(0x0000)
		uint32_t                                                   newMeshAllocations;                                      // 0x0050(0x0000)
		uint32_t                                                   groupTransformElementsChanged;                           // 0x0054(0x0000)
		uint32_t                                                   immedateRenderersActive;                                 // 0x0058(0x0000)
		uint32_t                                                   textUpdates;                                             // 0x005C(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.RenderChain+DepthOrderedDirtyTracking
	 * Size -> 0x0000
	 */
	struct RenderChain_DepthOrderedDirtyTracking
	{
	public:
		class List_VisualElement*                                  heads;                                                   // 0x0000(0x0000)
		class List_VisualElement*                                  tails;                                                   // 0x0008(0x0000)
		class Int32_Array*                                         minDepths;                                               // 0x0010(0x0000)
		class Int32_Array*                                         maxDepths;                                               // 0x0018(0x0000)
		uint32_t                                                   dirtyID;                                                 // 0x0020(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.RenderChain+RenderChainStaticIndexAllocator
	 * Size -> 0x0000
	 */
	struct RenderChain_RenderChainStaticIndexAllocator
	{	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.RenderChain+RenderNodeData
	 * Size -> 0x0000
	 */
	struct RenderChain_RenderNodeData
	{
	public:
		class Material*                                            standardMaterial;                                        // 0x0000(0x0000)
		class Material*                                            initialMaterial;                                         // 0x0008(0x0000)
		class MaterialPropertyBlock*                               matPropBlock;                                            // 0x0010(0x0000)
		class RenderChainCommand*                                  firstCommand;                                            // 0x0018(0x0000)
		class UIRenderDevice*                                      device;                                                  // 0x0020(0x0000)
		class Texture*                                             vectorAtlas;                                             // 0x0028(0x0000)
		class Texture*                                             shaderInfoAtlas;                                         // 0x0030(0x0000)
		float                                                      dpiScale;                                                // 0x0038(0x0000)
		struct NativeSlice_Transform3x4                            transformConstants;                                      // 0x0040(0x0000)
		struct NativeSlice_Vector4                                 clipRectConstants;                                       // 0x0050(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.RenderChainVEData
	 * Size -> 0x0000
	 */
	struct RenderChainVEData
	{
	public:
		class VisualElement*                                       prev;                                                    // 0x0000(0x0000)
		class VisualElement*                                       next;                                                    // 0x0008(0x0000)
		class VisualElement*                                       groupTransformAncestor;                                  // 0x0010(0x0000)
		class VisualElement*                                       boneTransformAncestor;                                   // 0x0018(0x0000)
		class VisualElement*                                       prevDirty;                                               // 0x0020(0x0000)
		class VisualElement*                                       nextDirty;                                               // 0x0028(0x0000)
		int32_t                                                    hierarchyDepth;                                          // 0x0030(0x0000)
		int32_t                                                    dirtiedValues;                                           // 0x0034(0x0000)
		uint32_t                                                   dirtyID;                                                 // 0x0038(0x0000)
		class RenderChainCommand*                                  firstCommand;                                            // 0x0040(0x0000)
		class RenderChainCommand*                                  lastCommand;                                             // 0x0048(0x0000)
		class RenderChainCommand*                                  firstClosingCommand;                                     // 0x0050(0x0000)
		class RenderChainCommand*                                  lastClosingCommand;                                      // 0x0058(0x0000)
		bool                                                       isInChain;                                               // 0x0060(0x0000)
		bool                                                       isHierarchyHidden;                                       // 0x0061(0x0000)
		bool                                                       localFlipsWinding;                                       // 0x0062(0x0000)
		bool                                                       worldFlipsWinding;                                       // 0x0063(0x0000)
		int32_t                                                    clipMethod;                                              // 0x0064(0x0000)
		int32_t                                                    childrenStencilRef;                                      // 0x0068(0x0000)
		int32_t                                                    childrenMaskDepth;                                       // 0x006C(0x0000)
		bool                                                       disableNudging;                                          // 0x0070(0x0000)
		bool                                                       usesLegacyText;                                          // 0x0071(0x0000)
		class MeshHandle*                                          data;                                                    // 0x0078(0x0000)
		class MeshHandle*                                          closingData;                                             // 0x0080(0x0000)
		struct Matrix4x4                                           verticesSpace;                                           // 0x0088(0x0000)
		int32_t                                                    displacementUVStart;                                     // 0x00C8(0x0000)
		int32_t                                                    displacementUVEnd;                                       // 0x00CC(0x0000)
		struct BMPAlloc                                            transformID;                                             // 0x00D0(0x0000)
		struct BMPAlloc                                            clipRectID;                                              // 0x00D8(0x0000)
		struct BMPAlloc                                            opacityID;                                               // 0x00E0(0x0000)
		struct BMPAlloc                                            textCoreSettingsID;                                      // 0x00E8(0x0000)
		struct BMPAlloc                                            backgroundColorID;                                       // 0x00F0(0x0000)
		struct BMPAlloc                                            borderLeftColorID;                                       // 0x00F8(0x0000)
		struct BMPAlloc                                            borderTopColorID;                                        // 0x0100(0x0000)
		struct BMPAlloc                                            borderRightColorID;                                      // 0x0108(0x0000)
		struct BMPAlloc                                            borderBottomColorID;                                     // 0x0110(0x0000)
		struct BMPAlloc                                            tintColorID;                                             // 0x0118(0x0000)
		float                                                      compositeOpacity;                                        // 0x0120(0x0000)
		struct Color                                               backgroundColor;                                         // 0x0124(0x0000)
		class VisualElement*                                       prevText;                                                // 0x0138(0x0000)
		class VisualElement*                                       nextText;                                                // 0x0140(0x0000)
		class List_RenderChainTextEntry*                           textEntries;                                             // 0x0148(0x0000)
		class BasicNode_TextureEntry*                              textures;                                                // 0x0150(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.RenderChainTextEntry
	 * Size -> 0x0000
	 */
	struct RenderChainTextEntry
	{
	public:
		class RenderChainCommand*                                  command;                                                 // 0x0000(0x0000)
		int32_t                                                    firstVertex;                                             // 0x0008(0x0000)
		int32_t                                                    vertexCount;                                             // 0x000C(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.TextureEntry
	 * Size -> 0x0000
	 */
	struct TextureEntry
	{
	public:
		class Texture*                                             source;                                                  // 0x0000(0x0000)
		struct TextureId                                           actual;                                                  // 0x0008(0x0000)
		bool                                                       replaced;                                                // 0x000C(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.TextCoreSettings
	 * Size -> 0x0000
	 */
	struct TextCoreSettings
	{
	public:
		struct Color                                               faceColor;                                               // 0x0000(0x0000)
		struct Color                                               outlineColor;                                            // 0x0010(0x0000)
		float                                                      outlineWidth;                                            // 0x0020(0x0000)
		struct Color                                               underlayColor;                                           // 0x0024(0x0000)
		struct Vector2                                             underlayOffset;                                          // 0x0034(0x0000)
		float                                                      underlaySoftness;                                        // 0x003C(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.TextureBlitter+BlitInfo
	 * Size -> 0x0000
	 */
	struct TextureBlitter_BlitInfo
	{
	public:
		class Texture*                                             src;                                                     // 0x0000(0x0000)
		struct RectInt                                             srcRect;                                                 // 0x0008(0x0000)
		struct Vector2Int                                          dstPos;                                                  // 0x0018(0x0000)
		int32_t                                                    border;                                                  // 0x0020(0x0000)
		struct Color                                               tint;                                                    // 0x0024(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.BitmapAllocator32+Page
	 * Size -> 0x0000
	 */
	struct BitmapAllocator32_Page
	{
	public:
		uint16_t                                                   x;                                                       // 0x0000(0x0000)
		uint16_t                                                   y;                                                       // 0x0002(0x0000)
		int32_t                                                    freeSlots;                                               // 0x0004(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.BitmapAllocator32
	 * Size -> 0x0000
	 */
	struct BitmapAllocator32
	{
	public:
		int32_t                                                    m_PageHeight;                                            // 0x0000(0x0000)
		class List_BitmapAllocator32_Page*                         m_Pages;                                                 // 0x0008(0x0000)
		class List_uint*                                           m_AllocMap;                                              // 0x0010(0x0000)
		int32_t                                                    m_EntryWidth;                                            // 0x0018(0x0000)
		int32_t                                                    m_EntryHeight;                                           // 0x001C(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.UIRVEShaderInfoAllocator
	 * Size -> 0x0000
	 */
	struct UIRVEShaderInfoAllocator
	{
	public:
		class BaseShaderInfoStorage*                               m_Storage;                                               // 0x0000(0x0000)
		struct BitmapAllocator32                                   m_TransformAllocator;                                    // 0x0008(0x0000)
		struct BitmapAllocator32                                   m_ClipRectAllocator;                                     // 0x0028(0x0000)
		struct BitmapAllocator32                                   m_OpacityAllocator;                                      // 0x0048(0x0000)
		struct BitmapAllocator32                                   m_ColorAllocator;                                        // 0x0068(0x0000)
		struct BitmapAllocator32                                   m_TextSettingsAllocator;                                 // 0x0088(0x0000)
		bool                                                       m_StorageReallyCreated;                                  // 0x00A8(0x0000)
		bool                                                       m_VertexTexturingEnabled;                                // 0x00A9(0x0000)
		struct NativeArray_Transform3x4                            m_Transforms;                                            // 0x00B0(0x0000)
		struct NativeArray_Vector4                                 m_ClipRects;                                             // 0x00C0(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.Transform3x4
	 * Size -> 0x0000
	 */
	struct Transform3x4
	{
	public:
		struct Vector4                                             v0;                                                      // 0x0000(0x0000)
		struct Vector4                                             v1;                                                      // 0x0010(0x0000)
		struct Vector4                                             v2;                                                      // 0x0020(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.UIRenderDevice+AllocToUpdate
	 * Size -> 0x0000
	 */
	struct UIRenderDevice_AllocToUpdate
	{
	public:
		uint32_t                                                   id;                                                      // 0x0000(0x0000)
		uint32_t                                                   allocTime;                                               // 0x0004(0x0000)
		class MeshHandle*                                          meshHandle;                                              // 0x0008(0x0000)
		struct Alloc                                               permAllocVerts;                                          // 0x0010(0x0000)
		struct Alloc                                               permAllocIndices;                                        // 0x0028(0x0000)
		class Page*                                                permPage;                                                // 0x0040(0x0000)
		bool                                                       copyBackIndices;                                         // 0x0048(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.UIRenderDevice+AllocToFree
	 * Size -> 0x0000
	 */
	struct UIRenderDevice_AllocToFree
	{
	public:
		struct Alloc                                               alloc;                                                   // 0x0000(0x0000)
		class Page*                                                page;                                                    // 0x0018(0x0000)
		bool                                                       vertices;                                                // 0x0020(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.UIRenderDevice+DeviceToFree
	 * Size -> 0x0000
	 */
	struct UIRenderDevice_DeviceToFree
	{
	public:
		uint32_t                                                   handle;                                                  // 0x0000(0x0000)
		class Page*                                                page;                                                    // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.State
	 * Size -> 0x0000
	 */
	struct State
	{
	public:
		class Material*                                            material;                                                // 0x0000(0x0000)
		class Texture*                                             font;                                                    // 0x0008(0x0000)
		float                                                      fontTexSDFScale;                                         // 0x0010(0x0000)
		struct TextureId                                           texture;                                                 // 0x0014(0x0000)
		int32_t                                                    stencilRef;                                              // 0x0018(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.UIRenderDevice+EvaluationState
	 * Size -> 0x0000
	 */
	struct UIRenderDevice_EvaluationState
	{
	public:
		class MaterialPropertyBlock*                               stateMatProps;                                           // 0x0000(0x0000)
		class Material*                                            defaultMat;                                              // 0x0008(0x0000)
		struct State                                               curState;                                                // 0x0010(0x0000)
		class Page*                                                curPage;                                                 // 0x0030(0x0000)
		bool                                                       mustApplyMaterial;                                       // 0x0038(0x0000)
		bool                                                       mustApplyCommonBlock;                                    // 0x0039(0x0000)
		bool                                                       mustApplyStateBlock;                                     // 0x003A(0x0000)
		bool                                                       mustApplyStencil;                                        // 0x003B(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.UIRenderDevice+DrawStatistics
	 * Size -> 0x0000
	 */
	struct UIRenderDevice_DrawStatistics
	{
	public:
		int32_t                                                    currentFrameIndex;                                       // 0x0000(0x0000)
		uint32_t                                                   totalIndices;                                            // 0x0004(0x0000)
		uint32_t                                                   commandCount;                                            // 0x0008(0x0000)
		uint32_t                                                   drawCommandCount;                                        // 0x000C(0x0000)
		uint32_t                                                   materialSetCount;                                        // 0x0010(0x0000)
		uint32_t                                                   drawRangeCount;                                          // 0x0014(0x0000)
		uint32_t                                                   drawRangeCallCount;                                      // 0x0018(0x0000)
		uint32_t                                                   immediateDraws;                                          // 0x001C(0x0000)
		uint32_t                                                   stencilRefChanges;                                       // 0x0020(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.Implementation.UIRStylePainter+Entry
	 * Size -> 0x0000
	 */
	struct UIRStylePainter_Entry
	{
	public:
		struct NativeSlice_Vertex                                  vertices;                                                // 0x0000(0x0000)
		struct NativeSlice_ushort                                  indices;                                                 // 0x0010(0x0000)
		class Material*                                            material;                                                // 0x0020(0x0000)
		class Texture*                                             custom;                                                  // 0x0028(0x0000)
		class Texture*                                             font;                                                    // 0x0030(0x0000)
		float                                                      fontTexSDFScale;                                         // 0x0038(0x0000)
		struct TextureId                                           texture;                                                 // 0x003C(0x0000)
		class RenderChainCommand*                                  customCommand;                                           // 0x0040(0x0000)
		struct BMPAlloc                                            clipRectID;                                              // 0x0048(0x0000)
		int32_t                                                    addFlags;                                                // 0x0050(0x0000)
		bool                                                       uvIsDisplacement;                                        // 0x0054(0x0000)
		bool                                                       isTextEntry;                                             // 0x0055(0x0000)
		bool                                                       isClipRegisterEntry;                                     // 0x0056(0x0000)
		int32_t                                                    stencilRef;                                              // 0x0058(0x0000)
		int32_t                                                    maskDepth;                                               // 0x005C(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.Implementation.UIRStylePainter+ClosingInfo
	 * Size -> 0x0000
	 */
	struct UIRStylePainter_ClosingInfo
	{
	public:
		bool                                                       needsClosing;                                            // 0x0000(0x0000)
		bool                                                       popViewMatrix;                                           // 0x0001(0x0000)
		bool                                                       popScissorClip;                                          // 0x0002(0x0000)
		bool                                                       blitAndPopRenderTexture;                                 // 0x0003(0x0000)
		bool                                                       PopDefaultMaterial;                                      // 0x0004(0x0000)
		class RenderChainCommand*                                  clipUnregisterDrawCommand;                               // 0x0008(0x0000)
		struct NativeSlice_Vertex                                  clipperRegisterVertices;                                 // 0x0010(0x0000)
		struct NativeSlice_ushort                                  clipperRegisterIndices;                                  // 0x0020(0x0000)
		int32_t                                                    clipperRegisterIndexOffset;                              // 0x0030(0x0000)
		int32_t                                                    maskStencilRef;                                          // 0x0034(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UIR.Implementation.UIRStylePainter+TempDataAlloc<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct UIRStylePainter_TempDataAlloc_T
	{
	public:
		int32_t                                                    maxPoolElemCount;                                        // 0x0000(0x0000)
		struct NativeArray_T                                       pool;                                                    // 0x0000(0x0000)
		class List_NativeArray_T*                                  excess;                                                  // 0x0000(0x0000)
		uint32_t                                                   takenFromPool;                                           // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleSheets.Dimension
	 * Size -> 0x0000
	 */
	struct Dimension
	{
	public:
		int32_t                                                    unit;                                                    // 0x0000(0x0000)
		float                                                      value;                                                   // 0x0004(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleSheets.ScalableImage
	 * Size -> 0x0000
	 */
	struct ScalableImage
	{
	public:
		class Texture2D*                                           normalImage;                                             // 0x0000(0x0000)
		class Texture2D*                                           highResolutionImage;                                     // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleSheets.StylePropertyValue
	 * Size -> 0x0000
	 */
	struct StylePropertyValue
	{
	public:
		class StyleSheet*                                          sheet;                                                   // 0x0000(0x0000)
		struct StyleValueHandle                                    handle;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleSheets.ImageSource
	 * Size -> 0x0000
	 */
	struct ImageSource
	{
	public:
		class Texture2D*                                           texture;                                                 // 0x0000(0x0000)
		class Sprite*                                              sprite;                                                  // 0x0008(0x0000)
		class VectorImage*                                         vectorImage;                                             // 0x0010(0x0000)
		class RenderTexture*                                       renderTexture;                                           // 0x0018(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleSheets.MatchResultInfo
	 * Size -> 0x0000
	 */
	struct MatchResultInfo
	{
	public:
		bool                                                       success;                                                 // 0x0000(0x0000)
		int32_t                                                    triggerPseudoMask;                                       // 0x0004(0x0000)
		int32_t                                                    dependencyPseudoMask;                                    // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleSheets.SelectorMatchRecord
	 * Size -> 0x0000
	 */
	struct SelectorMatchRecord
	{
	public:
		class StyleSheet*                                          sheet;                                                   // 0x0000(0x0000)
		int32_t                                                    styleSheetIndexInStack;                                  // 0x0008(0x0000)
		class StyleComplexSelector*                                complexSelector;                                         // 0x0010(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleSheets.StyleSheetCache+SheetHandleKey
	 * Size -> 0x0000
	 */
	struct StyleSheetCache_SheetHandleKey
	{
	public:
		int32_t                                                    sheetInstanceID;                                         // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0004(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleSheets.MatchResult
	 * Size -> 0x0000
	 */
	struct MatchResult
	{
	public:
		int32_t                                                    errorCode;                                               // 0x0000(0x0000)
		class Il2CppString*                                        errorValue;                                              // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleSheets.BaseStyleMatcher+MatchContext
	 * Size -> 0x0000
	 */
	struct BaseStyleMatcher_MatchContext
	{
	public:
		int32_t                                                    valueIndex;                                              // 0x0000(0x0000)
		int32_t                                                    matchedVariableCount;                                    // 0x0004(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleSheets.Syntax.ExpressionMultiplier
	 * Size -> 0x0000
	 */
	struct ExpressionMultiplier
	{
	public:
		int32_t                                                    m_Type;                                                  // 0x0000(0x0000)
		int32_t                                                    min;                                                     // 0x0004(0x0000)
		int32_t                                                    max;                                                     // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxToken
	 * Size -> 0x0000
	 */
	struct StyleSyntaxToken
	{
	public:
		int32_t                                                    type;                                                    // 0x0000(0x0000)
		class Il2CppString*                                        text;                                                    // 0x0008(0x0000)
		int32_t                                                    number;                                                  // 0x0010(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.Experimental.StyleValues
	 * Size -> 0x0000
	 */
	struct StyleValues
	{
	public:
		class StyleValueCollection*                                m_StyleValues;                                           // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=108
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_108
	{	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.bool2
	 * Size -> 0x0000
	 */
	struct bool2
	{
	public:
		bool                                                       x;                                                       // 0x0000(0x0000)
		bool                                                       y;                                                       // 0x0001(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.math+IntFloatUnion
	 * Size -> 0x0000
	 */
	struct math_IntFloatUnion
	{
	public:
		int32_t                                                    intValue;                                                // 0x0000(0x0000)
		float                                                      floatValue;                                              // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.math+LongDoubleUnion
	 * Size -> 0x0000
	 */
	struct math_LongDoubleUnion
	{
	public:
		int64_t                                                    longValue;                                               // 0x0000(0x0000)
		double                                                     doubleValue;                                             // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.bool2x2
	 * Size -> 0x0000
	 */
	struct bool2x2
	{
	public:
		struct bool2                                               c0;                                                      // 0x0000(0x0000)
		struct bool2                                               c1;                                                      // 0x0002(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.bool2x3
	 * Size -> 0x0000
	 */
	struct bool2x3
	{
	public:
		struct bool2                                               c0;                                                      // 0x0000(0x0000)
		struct bool2                                               c1;                                                      // 0x0002(0x0000)
		struct bool2                                               c2;                                                      // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.bool2x4
	 * Size -> 0x0000
	 */
	struct bool2x4
	{
	public:
		struct bool2                                               c0;                                                      // 0x0000(0x0000)
		struct bool2                                               c1;                                                      // 0x0002(0x0000)
		struct bool2                                               c2;                                                      // 0x0004(0x0000)
		struct bool2                                               c3;                                                      // 0x0006(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.bool3x2
	 * Size -> 0x0000
	 */
	struct bool3x2
	{
	public:
		struct bool3                                               c0;                                                      // 0x0000(0x0000)
		struct bool3                                               c1;                                                      // 0x0003(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.bool3x3
	 * Size -> 0x0000
	 */
	struct bool3x3
	{
	public:
		struct bool3                                               c0;                                                      // 0x0000(0x0000)
		struct bool3                                               c1;                                                      // 0x0003(0x0000)
		struct bool3                                               c2;                                                      // 0x0006(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.bool3x4
	 * Size -> 0x0000
	 */
	struct bool3x4
	{
	public:
		struct bool3                                               c0;                                                      // 0x0000(0x0000)
		struct bool3                                               c1;                                                      // 0x0003(0x0000)
		struct bool3                                               c2;                                                      // 0x0006(0x0000)
		struct bool3                                               c3;                                                      // 0x0009(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.bool4x2
	 * Size -> 0x0000
	 */
	struct bool4x2
	{
	public:
		struct bool4                                               c0;                                                      // 0x0000(0x0000)
		struct bool4                                               c1;                                                      // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.bool4x3
	 * Size -> 0x0000
	 */
	struct bool4x3
	{
	public:
		struct bool4                                               c0;                                                      // 0x0000(0x0000)
		struct bool4                                               c1;                                                      // 0x0004(0x0000)
		struct bool4                                               c2;                                                      // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.bool4x4
	 * Size -> 0x0000
	 */
	struct bool4x4
	{
	public:
		struct bool4                                               c0;                                                      // 0x0000(0x0000)
		struct bool4                                               c1;                                                      // 0x0004(0x0000)
		struct bool4                                               c2;                                                      // 0x0008(0x0000)
		struct bool4                                               c3;                                                      // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.half
	 * Size -> 0x0000
	 */
	struct half
	{
	public:
		uint16_t                                                   value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.double2
	 * Size -> 0x0000
	 */
	struct double2
	{
	public:
		double                                                     x;                                                       // 0x0000(0x0000)
		double                                                     y;                                                       // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.double2x2
	 * Size -> 0x0000
	 */
	struct double2x2
	{
	public:
		struct double2                                             c0;                                                      // 0x0000(0x0000)
		struct double2                                             c1;                                                      // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.double2x3
	 * Size -> 0x0000
	 */
	struct double2x3
	{
	public:
		struct double2                                             c0;                                                      // 0x0000(0x0000)
		struct double2                                             c1;                                                      // 0x0010(0x0000)
		struct double2                                             c2;                                                      // 0x0020(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.double2x4
	 * Size -> 0x0000
	 */
	struct double2x4
	{
	public:
		struct double2                                             c0;                                                      // 0x0000(0x0000)
		struct double2                                             c1;                                                      // 0x0010(0x0000)
		struct double2                                             c2;                                                      // 0x0020(0x0000)
		struct double2                                             c3;                                                      // 0x0030(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.double3x2
	 * Size -> 0x0000
	 */
	struct double3x2
	{
	public:
		struct double3                                             c0;                                                      // 0x0000(0x0000)
		struct double3                                             c1;                                                      // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.double3x3
	 * Size -> 0x0000
	 */
	struct double3x3
	{
	public:
		struct double3                                             c0;                                                      // 0x0000(0x0000)
		struct double3                                             c1;                                                      // 0x0018(0x0000)
		struct double3                                             c2;                                                      // 0x0030(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.double3x4
	 * Size -> 0x0000
	 */
	struct double3x4
	{
	public:
		struct double3                                             c0;                                                      // 0x0000(0x0000)
		struct double3                                             c1;                                                      // 0x0018(0x0000)
		struct double3                                             c2;                                                      // 0x0030(0x0000)
		struct double3                                             c3;                                                      // 0x0048(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.double4x2
	 * Size -> 0x0000
	 */
	struct double4x2
	{
	public:
		struct double4                                             c0;                                                      // 0x0000(0x0000)
		struct double4                                             c1;                                                      // 0x0020(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.double4x3
	 * Size -> 0x0000
	 */
	struct double4x3
	{
	public:
		struct double4                                             c0;                                                      // 0x0000(0x0000)
		struct double4                                             c1;                                                      // 0x0020(0x0000)
		struct double4                                             c2;                                                      // 0x0040(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.double4x4
	 * Size -> 0x0000
	 */
	struct double4x4
	{
	public:
		struct double4                                             c0;                                                      // 0x0000(0x0000)
		struct double4                                             c1;                                                      // 0x0020(0x0000)
		struct double4                                             c2;                                                      // 0x0040(0x0000)
		struct double4                                             c3;                                                      // 0x0060(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.quaternion
	 * Size -> 0x0000
	 */
	struct quaternion
	{
	public:
		struct float4                                              value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.Random
	 * Size -> 0x0000
	 */
	struct Random_1
	{
	public:
		uint32_t                                                   state;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.RigidTransform
	 * Size -> 0x0000
	 */
	struct RigidTransform
	{
	public:
		struct quaternion                                          rot;                                                     // 0x0000(0x0000)
		struct float3                                              pos;                                                     // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.Geometry.MinMaxAABB
	 * Size -> 0x0000
	 */
	struct MinMaxAABB
	{
	public:
		struct float3                                              Min;                                                     // 0x0000(0x0000)
		struct float3                                              Max;                                                     // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.Geometry.Plane
	 * Size -> 0x0000
	 */
	struct Plane
	{
	public:
		struct float4                                              NormalAndDistance;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonReader+<SkipAsync>d__1
	 * Size -> 0x0000
	 */
	struct JsonReader__SkipAsync_d__1
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonReader_2*                                        _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__1;                                                    // 0x0030(0x0000)
		int32_t                                                    depth_5__2;                                              // 0x0040(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonReader+<ReaderReadAndAssertAsync>d__2
	 * Size -> 0x0000
	 */
	struct JsonReader__ReaderReadAndAssertAsync_d__2
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonReader_2*                                        _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonReader+<ReadArrayIntoByteArrayAsync>d__5
	 * Size -> 0x0000
	 */
	struct JsonReader__ReadArrayIntoByteArrayAsync_d__5
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_byte                         t__builder;                                              // 0x0008(0x0000)
		class JsonReader_2*                                        _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		class List_byte*                                           buffer_5__2;                                             // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonReader+<ReadAndMoveToContentAsync>d__12
	 * Size -> 0x0000
	 */
	struct JsonReader__ReadAndMoveToContentAsync_d__12
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_bool                         t__builder;                                              // 0x0008(0x0000)
		class JsonReader_2*                                        _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonReader+<MoveToContentFromNonContentAsync>d__14
	 * Size -> 0x0000
	 */
	struct JsonReader__MoveToContentFromNonContentAsync_d__14
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_bool                         t__builder;                                              // 0x0008(0x0000)
		class JsonReader_2*                                        _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<DoReadAsync>d__3
	 * Size -> 0x0000
	 */
	struct JsonTextReader__DoReadAsync_d__3
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_bool                         t__builder;                                              // 0x0008(0x0000)
		class Task_bool*                                           task;                                                    // 0x0020(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0028(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<ParsePostValueAsync>d__4
	 * Size -> 0x0000
	 */
	struct JsonTextReader__ParsePostValueAsync_d__4
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_bool                         t__builder;                                              // 0x0008(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		bool                                                       ignoreComments;                                          // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_int   u__1;                                                    // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__2;                                                    // 0x0048(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<ReadFromFinishedAsync>d__5
	 * Size -> 0x0000
	 */
	struct JsonTextReader__ReadFromFinishedAsync_d__5
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_bool                         t__builder;                                              // 0x0008(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__1;                                                    // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__2;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<ReadDataAsync>d__7
	 * Size -> 0x0000
	 */
	struct JsonTextReader__ReadDataAsync_d__7
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_int                          t__builder;                                              // 0x0008(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0020(0x0000)
		bool                                                       append;                                                  // 0x0028(0x0000)
		int32_t                                                    charsRequired;                                           // 0x002C(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_int   u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<ParseValueAsync>d__8
	 * Size -> 0x0000
	 */
	struct JsonTextReader__ParseValueAsync_d__8
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_bool                         t__builder;                                              // 0x0008(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_int   u__1;                                                    // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__2;                                                    // 0x0040(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__3;                                                    // 0x0050(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_object u__4;                                                    // 0x0060(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<ReadStringIntoBufferAsync>d__9
	 * Size -> 0x0000
	 */
	struct JsonTextReader__ReadStringIntoBufferAsync_d__9
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		uint16_t                                                   quote;                                                   // 0x0030(0x0000)
		int32_t                                                    charPos_5__2;                                            // 0x0034(0x0000)
		int32_t                                                    initialPosition_5__3;                                    // 0x0038(0x0000)
		int32_t                                                    lastWritePosition_5__4;                                  // 0x003C(0x0000)
		int32_t                                                    escapeStartPos_5__5;                                     // 0x0040(0x0000)
		uint16_t                                                   writeChar_5__6;                                          // 0x0044(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_int   u__1;                                                    // 0x0048(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__2;                                                    // 0x0058(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_char  u__3;                                                    // 0x0068(0x0000)
		bool                                                       anotherHighSurrogate_5__7;                               // 0x0078(0x0000)
		uint16_t                                                   highSurrogate_5__8;                                      // 0x007A(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__4;                                                    // 0x0080(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<ProcessCarriageReturnAsync>d__11
	 * Size -> 0x0000
	 */
	struct JsonTextReader__ProcessCarriageReturnAsync_d__11
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class Task_bool*                                           task;                                                    // 0x0020(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<ParseUnicodeAsync>d__12
	 * Size -> 0x0000
	 */
	struct JsonTextReader__ParseUnicodeAsync_d__12
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_char                         t__builder;                                              // 0x0008(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<ReadCharsAsync>d__14
	 * Size -> 0x0000
	 */
	struct JsonTextReader__ReadCharsAsync_d__14
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_bool                         t__builder;                                              // 0x0008(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0020(0x0000)
		int32_t                                                    relativePosition;                                        // 0x0028(0x0000)
		bool                                                       append;                                                  // 0x002C(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0030(0x0000)
		int32_t                                                    charsRequired_5__2;                                      // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_int   u__1;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<ParseObjectAsync>d__15
	 * Size -> 0x0000
	 */
	struct JsonTextReader__ParseObjectAsync_d__15
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_bool                         t__builder;                                              // 0x0008(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_int   u__1;                                                    // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__2;                                                    // 0x0040(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__3;                                                    // 0x0050(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<ParseCommentAsync>d__16
	 * Size -> 0x0000
	 */
	struct JsonTextReader__ParseCommentAsync_d__16
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		bool                                                       setToken;                                                // 0x0030(0x0000)
		bool                                                       singlelineComment_5__2;                                  // 0x0031(0x0000)
		int32_t                                                    initialPosition_5__3;                                    // 0x0034(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__1;                                                    // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_int   u__2;                                                    // 0x0048(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__3;                                                    // 0x0058(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<EatWhitespaceAsync>d__17
	 * Size -> 0x0000
	 */
	struct JsonTextReader__EatWhitespaceAsync_d__17
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_int   u__1;                                                    // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__2;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<ParseStringAsync>d__18
	 * Size -> 0x0000
	 */
	struct JsonTextReader__ParseStringAsync_d__18
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0020(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0028(0x0000)
		uint16_t                                                   quote;                                                   // 0x0030(0x0000)
		int32_t                                                    readType;                                                // 0x0034(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<MatchValueAsync>d__19
	 * Size -> 0x0000
	 */
	struct JsonTextReader__MatchValueAsync_d__19
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_bool                         t__builder;                                              // 0x0008(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0020(0x0000)
		class Il2CppString*                                        value;                                                   // 0x0028(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<MatchValueWithTrailingSeparatorAsync>d__20
	 * Size -> 0x0000
	 */
	struct JsonTextReader__MatchValueWithTrailingSeparatorAsync_d__20
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_bool                         t__builder;                                              // 0x0008(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0020(0x0000)
		class Il2CppString*                                        value;                                                   // 0x0028(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<MatchAndSetAsync>d__21
	 * Size -> 0x0000
	 */
	struct JsonTextReader__MatchAndSetAsync_d__21
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0020(0x0000)
		class Il2CppString*                                        value;                                                   // 0x0028(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0030(0x0000)
		int32_t                                                    newToken;                                                // 0x0038(0x0000)
		class Il2CppObject*                                        tokenValue;                                              // 0x0040(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__1;                                                    // 0x0048(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<ParseConstructorAsync>d__25
	 * Size -> 0x0000
	 */
	struct JsonTextReader__ParseConstructorAsync_d__25
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__1;                                                    // 0x0030(0x0000)
		int32_t                                                    initialPosition_5__2;                                    // 0x0040(0x0000)
		int32_t                                                    endPosition_5__3;                                        // 0x0044(0x0000)
		class Il2CppString*                                        constructorName_5__4;                                    // 0x0048(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__2;                                                    // 0x0050(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_int   u__3;                                                    // 0x0060(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<ParseNumberNaNAsync>d__26
	 * Size -> 0x0000
	 */
	struct JsonTextReader__ParseNumberNaNAsync_d__26
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_object                       t__builder;                                              // 0x0008(0x0000)
		int32_t                                                    readType;                                                // 0x0020(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0028(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0030(0x0000)
		int32_t                                                    _7__wrap1;                                               // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__1;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<ParseNumberPositiveInfinityAsync>d__27
	 * Size -> 0x0000
	 */
	struct JsonTextReader__ParseNumberPositiveInfinityAsync_d__27
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_object                       t__builder;                                              // 0x0008(0x0000)
		int32_t                                                    readType;                                                // 0x0020(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0028(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0030(0x0000)
		int32_t                                                    _7__wrap1;                                               // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__1;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<ParseNumberNegativeInfinityAsync>d__28
	 * Size -> 0x0000
	 */
	struct JsonTextReader__ParseNumberNegativeInfinityAsync_d__28
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_object                       t__builder;                                              // 0x0008(0x0000)
		int32_t                                                    readType;                                                // 0x0020(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0028(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0030(0x0000)
		int32_t                                                    _7__wrap1;                                               // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__1;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<ParseNumberAsync>d__29
	 * Size -> 0x0000
	 */
	struct JsonTextReader__ParseNumberAsync_d__29
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		int32_t                                                    readType;                                                // 0x0030(0x0000)
		uint16_t                                                   firstChar_5__2;                                          // 0x0034(0x0000)
		int32_t                                                    initialPosition_5__3;                                    // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<ParsePropertyAsync>d__31
	 * Size -> 0x0000
	 */
	struct JsonTextReader__ParsePropertyAsync_d__31
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_bool                         t__builder;                                              // 0x0008(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		uint16_t                                                   quoteChar_5__2;                                          // 0x0030(0x0000)
		class Il2CppString*                                        propertyName_5__3;                                       // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<ReadNumberIntoBufferAsync>d__32
	 * Size -> 0x0000
	 */
	struct JsonTextReader__ReadNumberIntoBufferAsync_d__32
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		int32_t                                                    charPos_5__2;                                            // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_int   u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<ParseUnquotedPropertyAsync>d__33
	 * Size -> 0x0000
	 */
	struct JsonTextReader__ParseUnquotedPropertyAsync_d__33
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		int32_t                                                    initialPosition_5__2;                                    // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_int   u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<ReadNullCharAsync>d__34
	 * Size -> 0x0000
	 */
	struct JsonTextReader__ReadNullCharAsync_d__34
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_bool                         t__builder;                                              // 0x0008(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_int   u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<HandleNullAsync>d__35
	 * Size -> 0x0000
	 */
	struct JsonTextReader__HandleNullAsync_d__35
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__1;                                                    // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__2;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<ReadFinishedAsync>d__36
	 * Size -> 0x0000
	 */
	struct JsonTextReader__ReadFinishedAsync_d__36
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__1;                                                    // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__2;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<ReadStringValueAsync>d__37
	 * Size -> 0x0000
	 */
	struct JsonTextReader__ReadStringValueAsync_d__37
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_object                       t__builder;                                              // 0x0008(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		int32_t                                                    readType;                                                // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__1;                                                    // 0x0038(0x0000)
		class Il2CppString*                                        expected_5__2;                                           // 0x0048(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__2;                                                    // 0x0050(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_object u__3;                                                    // 0x0060(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<ReadNumberValueAsync>d__38
	 * Size -> 0x0000
	 */
	struct JsonTextReader__ReadNumberValueAsync_d__38
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_object                       t__builder;                                              // 0x0008(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		int32_t                                                    readType;                                                // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__1;                                                    // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__2;                                                    // 0x0048(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_object u__3;                                                    // 0x0058(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<DoReadAsBooleanAsync>d__40
	 * Size -> 0x0000
	 */
	struct JsonTextReader__DoReadAsBooleanAsync_d__40
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_Nullable_bool                t__builder;                                              // 0x0008(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__1;                                                    // 0x0030(0x0000)
		struct BigInteger_4                                        i_5__2;                                                  // 0x0040(0x0000)
		bool                                                       isTrue_5__3;                                             // 0x0050(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__2;                                                    // 0x0058(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<DoReadAsBytesAsync>d__42
	 * Size -> 0x0000
	 */
	struct JsonTextReader__DoReadAsBytesAsync_d__42
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_byte                         t__builder;                                              // 0x0008(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		bool                                                       isWrapped_5__2;                                          // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__1;                                                    // 0x0038(0x0000)
		class Byte_Array*                                          data_5__3;                                               // 0x0048(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__2;                                                    // 0x0050(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_byte  u__3;                                                    // 0x0060(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<ReadIntoWrappedTypeObjectAsync>d__43
	 * Size -> 0x0000
	 */
	struct JsonTextReader__ReadIntoWrappedTypeObjectAsync_d__43
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<DoReadAsDateTimeAsync>d__45
	 * Size -> 0x0000
	 */
	struct JsonTextReader__DoReadAsDateTimeAsync_d__45
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_Nullable_DateTime            t__builder;                                              // 0x0008(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_object u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<DoReadAsDateTimeOffsetAsync>d__47
	 * Size -> 0x0000
	 */
	struct JsonTextReader__DoReadAsDateTimeOffsetAsync_d__47
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_Nullable_DateTimeOffset      t__builder;                                              // 0x0008(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_object u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<DoReadAsDecimalAsync>d__49
	 * Size -> 0x0000
	 */
	struct JsonTextReader__DoReadAsDecimalAsync_d__49
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_Nullable_Decimal             t__builder;                                              // 0x0008(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_object u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<DoReadAsDoubleAsync>d__51
	 * Size -> 0x0000
	 */
	struct JsonTextReader__DoReadAsDoubleAsync_d__51
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_Nullable_double              t__builder;                                              // 0x0008(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_object u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<DoReadAsInt32Async>d__53
	 * Size -> 0x0000
	 */
	struct JsonTextReader__DoReadAsInt32Async_d__53
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_Nullable_int                 t__builder;                                              // 0x0008(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_object u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextReader+<DoReadAsStringAsync>d__55
	 * Size -> 0x0000
	 */
	struct JsonTextReader__DoReadAsStringAsync_d__55
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_string                       t__builder;                                              // 0x0008(0x0000)
		class JsonTextReader*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_object u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextWriter+<DoCloseAsync>d__8
	 * Size -> 0x0000
	 */
	struct JsonTextWriter__DoCloseAsync_d__8
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonTextWriter*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextWriter+<WriteIndentAsync>d__12
	 * Size -> 0x0000
	 */
	struct JsonTextWriter__WriteIndentAsync_d__12
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonTextWriter*                                      _4__this;                                                // 0x0020(0x0000)
		int32_t                                                    newLineLen;                                              // 0x0028(0x0000)
		int32_t                                                    currentIndentCount;                                      // 0x002C(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextWriter+<WriteValueInternalAsync>d__14
	 * Size -> 0x0000
	 */
	struct JsonTextWriter__WriteValueInternalAsync_d__14
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class Task*                                                task;                                                    // 0x0020(0x0000)
		class JsonTextWriter*                                      _4__this;                                                // 0x0028(0x0000)
		class Il2CppString*                                        value;                                                   // 0x0030(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextWriter+<WriteIntegerValueAsync>d__23
	 * Size -> 0x0000
	 */
	struct JsonTextWriter__WriteIntegerValueAsync_d__23
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class Task*                                                task;                                                    // 0x0020(0x0000)
		class JsonTextWriter*                                      _4__this;                                                // 0x0028(0x0000)
		uint64_t                                                   uvalue;                                                  // 0x0030(0x0000)
		bool                                                       negative;                                                // 0x0038(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0040(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0048(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextWriter+<DoWritePropertyNameAsync>d__29
	 * Size -> 0x0000
	 */
	struct JsonTextWriter__DoWritePropertyNameAsync_d__29
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class Task*                                                task;                                                    // 0x0020(0x0000)
		class JsonTextWriter*                                      _4__this;                                                // 0x0028(0x0000)
		class Il2CppString*                                        name;                                                    // 0x0030(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextWriter+<DoWritePropertyNameAsync>d__31
	 * Size -> 0x0000
	 */
	struct JsonTextWriter__DoWritePropertyNameAsync_d__31
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonTextWriter*                                      _4__this;                                                // 0x0020(0x0000)
		class Il2CppString*                                        name;                                                    // 0x0028(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0030(0x0000)
		bool                                                       escape;                                                  // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextWriter+<DoWriteStartArrayAsync>d__34
	 * Size -> 0x0000
	 */
	struct JsonTextWriter__DoWriteStartArrayAsync_d__34
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class Task*                                                task;                                                    // 0x0020(0x0000)
		class JsonTextWriter*                                      _4__this;                                                // 0x0028(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextWriter+<DoWriteStartObjectAsync>d__37
	 * Size -> 0x0000
	 */
	struct JsonTextWriter__DoWriteStartObjectAsync_d__37
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class Task*                                                task;                                                    // 0x0020(0x0000)
		class JsonTextWriter*                                      _4__this;                                                // 0x0028(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextWriter+<DoWriteStartConstructorAsync>d__39
	 * Size -> 0x0000
	 */
	struct JsonTextWriter__DoWriteStartConstructorAsync_d__39
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonTextWriter*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		class Il2CppString*                                        name;                                                    // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextWriter+<DoWriteUndefinedAsync>d__42
	 * Size -> 0x0000
	 */
	struct JsonTextWriter__DoWriteUndefinedAsync_d__42
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class Task*                                                task;                                                    // 0x0020(0x0000)
		class JsonTextWriter*                                      _4__this;                                                // 0x0028(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextWriter+<WriteValueNonNullAsync>d__53
	 * Size -> 0x0000
	 */
	struct JsonTextWriter__WriteValueNonNullAsync_d__53
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonTextWriter*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		class Byte_Array*                                          value;                                                   // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextWriter+<DoWriteValueAsync>d__59
	 * Size -> 0x0000
	 */
	struct JsonTextWriter__DoWriteValueAsync_d__59
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonTextWriter*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct DateTime                                            value;                                                   // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextWriter+<DoWriteValueAsync>d__63
	 * Size -> 0x0000
	 */
	struct JsonTextWriter__DoWriteValueAsync_d__63
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonTextWriter*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct DateTimeOffset                                      value;                                                   // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextWriter+<DoWriteValueAsync>d__77
	 * Size -> 0x0000
	 */
	struct JsonTextWriter__DoWriteValueAsync_d__77
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonTextWriter*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct Guid                                                value;                                                   // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextWriter+<DoWriteValueAsync>d__96
	 * Size -> 0x0000
	 */
	struct JsonTextWriter__DoWriteValueAsync_d__96
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class Task*                                                task;                                                    // 0x0020(0x0000)
		class Il2CppString*                                        value;                                                   // 0x0028(0x0000)
		class JsonTextWriter*                                      _4__this;                                                // 0x0030(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextWriter+<DoWriteValueAsync>d__98
	 * Size -> 0x0000
	 */
	struct JsonTextWriter__DoWriteValueAsync_d__98
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonTextWriter*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct TimeSpan                                            value;                                                   // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextWriter+<WriteValueNotNullAsync>d__109
	 * Size -> 0x0000
	 */
	struct JsonTextWriter__WriteValueNotNullAsync_d__109
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class Task*                                                task;                                                    // 0x0020(0x0000)
		class JsonTextWriter*                                      _4__this;                                                // 0x0028(0x0000)
		class Uri*                                                 value;                                                   // 0x0030(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextWriter+<DoWriteCommentAsync>d__114
	 * Size -> 0x0000
	 */
	struct JsonTextWriter__DoWriteCommentAsync_d__114
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonTextWriter*                                      _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		class Il2CppString*                                        text;                                                    // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonTextWriter+<DoWriteRawValueAsync>d__120
	 * Size -> 0x0000
	 */
	struct JsonTextWriter__DoWriteRawValueAsync_d__120
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class Task*                                                task;                                                    // 0x0020(0x0000)
		class JsonTextWriter*                                      _4__this;                                                // 0x0028(0x0000)
		class Il2CppString*                                        json;                                                    // 0x0030(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonWriter+<AutoCompleteAsync>d__1
	 * Size -> 0x0000
	 */
	struct JsonWriter__AutoCompleteAsync_d__1
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonWriter_2*                                        _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonWriter+<InternalWriteStartAsync>d__20
	 * Size -> 0x0000
	 */
	struct JsonWriter__InternalWriteStartAsync_d__20
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonWriter_2*                                        _4__this;                                                // 0x0020(0x0000)
		int32_t                                                    token;                                                   // 0x0028(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0030(0x0000)
		int32_t                                                    container;                                               // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonWriter+<WriteTokenAsync>d__30
	 * Size -> 0x0000
	 */
	struct JsonWriter__WriteTokenAsync_d__30
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonWriter_2*                                        _4__this;                                                // 0x0020(0x0000)
		class JsonReader_2*                                        reader;                                                  // 0x0028(0x0000)
		bool                                                       writeDateConstructorAsDate;                              // 0x0030(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0038(0x0000)
		bool                                                       writeComments;                                           // 0x0040(0x0000)
		bool                                                       writeChildren;                                           // 0x0041(0x0000)
		int32_t                                                    initialDepth_5__2;                                       // 0x0044(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0048(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__2;                                                    // 0x0058(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonWriter+<WriteTokenSyncReadingAsync>d__31
	 * Size -> 0x0000
	 */
	struct JsonWriter__WriteTokenSyncReadingAsync_d__31
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonWriter_2*                                        _4__this;                                                // 0x0020(0x0000)
		class JsonReader_2*                                        reader;                                                  // 0x0028(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0030(0x0000)
		int32_t                                                    initialDepth_5__2;                                       // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__1;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonWriter+<WriteConstructorDateAsync>d__32
	 * Size -> 0x0000
	 */
	struct JsonWriter__WriteConstructorDateAsync_d__32
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonReader_2*                                        reader;                                                  // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		class JsonWriter_2*                                        _4__this;                                                // 0x0030(0x0000)
		struct DateTime                                            date_5__2;                                               // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__1;                                                    // 0x0040(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__2;                                                    // 0x0050(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonWriter+<<InternalWriteEndAsync>g__AwaitProperty|11_0>d
	 * Size -> 0x0000
	 */
	struct JsonWriter___InternalWriteEndAsync_g__AwaitProperty_11_0_d
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class Task*                                                task;                                                    // 0x0020(0x0000)
		class JsonWriter_2*                                        _4__this;                                                // 0x0028(0x0000)
		struct CancellationToken                                   CancellationToken;                                       // 0x0030(0x0000)
		int32_t                                                    token;                                                   // 0x0038(0x0000)
		int32_t                                                    LevelsToComplete;                                        // 0x003C(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonWriter+<<InternalWriteEndAsync>g__AwaitIndent|11_1>d
	 * Size -> 0x0000
	 */
	struct JsonWriter___InternalWriteEndAsync_g__AwaitIndent_11_1_d
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class Task*                                                task;                                                    // 0x0020(0x0000)
		class JsonWriter_2*                                        _4__this;                                                // 0x0028(0x0000)
		int32_t                                                    token;                                                   // 0x0030(0x0000)
		struct CancellationToken                                   CancellationToken;                                       // 0x0038(0x0000)
		int32_t                                                    LevelsToComplete;                                        // 0x0040(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0048(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonWriter+<<InternalWriteEndAsync>g__AwaitEnd|11_2>d
	 * Size -> 0x0000
	 */
	struct JsonWriter___InternalWriteEndAsync_g__AwaitEnd_11_2_d
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class Task*                                                task;                                                    // 0x0020(0x0000)
		class JsonWriter_2*                                        _4__this;                                                // 0x0028(0x0000)
		int32_t                                                    LevelsToComplete;                                        // 0x0030(0x0000)
		struct CancellationToken                                   CancellationToken;                                       // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonWriter+<<InternalWriteEndAsync>g__AwaitRemaining|11_3>d
	 * Size -> 0x0000
	 */
	struct JsonWriter___InternalWriteEndAsync_g__AwaitRemaining_11_3_d
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonWriter_2*                                        _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   CancellationToken;                                       // 0x0028(0x0000)
		int32_t                                                    LevelsToComplete;                                        // 0x0030(0x0000)
		int32_t                                                    token_5__2;                                              // 0x0034(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.Utilities.Base64Encoder+<EncodeAsync>d__13
	 * Size -> 0x0000
	 */
	struct Base64Encoder__EncodeAsync_d__13
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class Base64Encoder_2*                                     _4__this;                                                // 0x0020(0x0000)
		class Byte_Array*                                          buffer;                                                  // 0x0028(0x0000)
		int32_t                                                    index;                                                   // 0x0030(0x0000)
		int32_t                                                    count;                                                   // 0x0034(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0038(0x0000)
		int32_t                                                    num4_5__2;                                               // 0x0040(0x0000)
		int32_t                                                    length_5__3;                                             // 0x0044(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0048(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.Utilities.DateTimeParser
	 * Size -> 0x0000
	 */
	struct DateTimeParser
	{
	public:
		int32_t                                                    Year;                                                    // 0x0000(0x0000)
		int32_t                                                    Month;                                                   // 0x0004(0x0000)
		int32_t                                                    Day;                                                     // 0x0008(0x0000)
		int32_t                                                    Hour;                                                    // 0x000C(0x0000)
		int32_t                                                    Minute;                                                  // 0x0010(0x0000)
		int32_t                                                    Second;                                                  // 0x0014(0x0000)
		int32_t                                                    Fraction;                                                // 0x0018(0x0000)
		int32_t                                                    ZoneHour;                                                // 0x001C(0x0000)
		int32_t                                                    ZoneMinute;                                              // 0x0020(0x0000)
		int32_t                                                    Zone;                                                    // 0x0024(0x0000)
		class Char_Array*                                          text;                                                    // 0x0028(0x0000)
		int32_t                                                    end;                                                     // 0x0030(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.Utilities.DictionaryWrapper+DictionaryEnumerator<TKey, TValue, TEnumeratorKey, TEnumeratorValue>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct DictionaryWrapper_DictionaryEnumerator_TKey__TValue__TEnumeratorKey__TEnumeratorValue
	{
	public:
		class IEnumerator_KeyValuePair_TEnumeratorKey__TEnumeratorValue* e;                                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.Utilities.JavaScriptUtils+<WriteEscapedJavaScriptStringWithDelimitersAsync>d__13
	 * Size -> 0x0000
	 */
	struct JavaScriptUtils__WriteEscapedJavaScriptStringWithDelimitersAsync_d__13
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class Task*                                                task;                                                    // 0x0020(0x0000)
		class Il2CppString*                                        s;                                                       // 0x0028(0x0000)
		class TextWriter*                                          writer;                                                  // 0x0030(0x0000)
		class Boolean_Array*                                       charEscapeFlags;                                         // 0x0038(0x0000)
		int32_t                                                    stringEscapeHandling;                                    // 0x0040(0x0000)
		class JsonTextWriter*                                      client;                                                  // 0x0048(0x0000)
		class Char_Array*                                          writeBuffer;                                             // 0x0050(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0058(0x0000)
		uint16_t                                                   delimiter;                                               // 0x0060(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0068(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.Utilities.JavaScriptUtils+<WriteCharAsync>d__14
	 * Size -> 0x0000
	 */
	struct JavaScriptUtils__WriteCharAsync_d__14
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class Task*                                                task;                                                    // 0x0020(0x0000)
		class TextWriter*                                          writer;                                                  // 0x0028(0x0000)
		uint16_t                                                   c;                                                       // 0x0030(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.Utilities.JavaScriptUtils+<WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync>d__16
	 * Size -> 0x0000
	 */
	struct JavaScriptUtils__WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync_d__16
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class Char_Array*                                          writeBuffer;                                             // 0x0020(0x0000)
		int32_t                                                    lastWritePosition;                                       // 0x0028(0x0000)
		class JsonTextWriter*                                      client;                                                  // 0x0030(0x0000)
		class Il2CppString*                                        s;                                                       // 0x0038(0x0000)
		class TextWriter*                                          writer;                                                  // 0x0040(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0048(0x0000)
		class Boolean_Array*                                       charEscapeFlags;                                         // 0x0050(0x0000)
		int32_t                                                    stringEscapeHandling;                                    // 0x0058(0x0000)
		bool                                                       isEscapedUnicodeText_5__2;                               // 0x005C(0x0000)
		class Il2CppString*                                        escapedValue_5__3;                                       // 0x0060(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0068(0x0000)
		int32_t                                                    i_5__4;                                                  // 0x0078(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.Utilities.StringBuffer
	 * Size -> 0x0000
	 */
	struct StringBuffer
	{
	public:
		class Char_Array*                                          buffer;                                                  // 0x0000(0x0000)
		int32_t                                                    position;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.Utilities.StringReference
	 * Size -> 0x0000
	 */
	struct StringReference
	{
	public:
		class Char_Array*                                          chars;                                                   // 0x0000(0x0000)
		int32_t                                                    startIndex;                                              // 0x0008(0x0000)
		int32_t                                                    length;                                                  // 0x000C(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.Linq.JArray+<WriteToAsync>d__0
	 * Size -> 0x0000
	 */
	struct JArray__WriteToAsync_d__0
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonWriter_2*                                        writer;                                                  // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		class JArray*                                              _4__this;                                                // 0x0030(0x0000)
		class JsonConverter_Array*                                 converters;                                              // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0040(0x0000)
		int32_t                                                    i_5__2;                                                  // 0x0050(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.Linq.JArray+<LoadAsync>d__2
	 * Size -> 0x0000
	 */
	struct JArray__LoadAsync_d__2
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_JArray                       t__builder;                                              // 0x0008(0x0000)
		class JsonReader_2*                                        reader;                                                  // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		class JsonLoadSettings*                                    settings;                                                // 0x0030(0x0000)
		class JArray*                                              a_5__2;                                                  // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__1;                                                    // 0x0040(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__2;                                                    // 0x0050(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.Linq.JConstructor+<WriteToAsync>d__0
	 * Size -> 0x0000
	 */
	struct JConstructor__WriteToAsync_d__0
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonWriter_2*                                        writer;                                                  // 0x0020(0x0000)
		class JConstructor*                                        _4__this;                                                // 0x0028(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0030(0x0000)
		class JsonConverter_Array*                                 converters;                                              // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0040(0x0000)
		int32_t                                                    i_5__2;                                                  // 0x0050(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.Linq.JConstructor+<LoadAsync>d__2
	 * Size -> 0x0000
	 */
	struct JConstructor__LoadAsync_d__2
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_JConstructor                 t__builder;                                              // 0x0008(0x0000)
		class JsonReader_2*                                        reader;                                                  // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		class JsonLoadSettings*                                    settings;                                                // 0x0030(0x0000)
		class JConstructor*                                        c_5__2;                                                  // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__1;                                                    // 0x0040(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__2;                                                    // 0x0050(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.Linq.JContainer+<ReadTokenFromAsync>d__0
	 * Size -> 0x0000
	 */
	struct JContainer__ReadTokenFromAsync_d__0
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonReader_2*                                        reader;                                                  // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		class JContainer*                                          _4__this;                                                // 0x0030(0x0000)
		class JsonLoadSettings*                                    options;                                                 // 0x0038(0x0000)
		int32_t                                                    startDepth_5__2;                                         // 0x0040(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__1;                                                    // 0x0048(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__2;                                                    // 0x0058(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.Linq.JContainer+<ReadContentFromAsync>d__1
	 * Size -> 0x0000
	 */
	struct JContainer__ReadContentFromAsync_d__1
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class JsonReader_2*                                        reader;                                                  // 0x0020(0x0000)
		class JContainer*                                          _4__this;                                                // 0x0028(0x0000)
		class JsonLoadSettings*                                    settings;                                                // 0x0030(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0038(0x0000)
		class IJsonLineInfo*                                       lineInfo_5__2;                                           // 0x0040(0x0000)
		class JContainer*                                          parent_5__3;                                             // 0x0048(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0050(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__2;                                                    // 0x0060(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.Linq.JObject+<LoadAsync>d__2
	 * Size -> 0x0000
	 */
	struct JObject__LoadAsync_d__2
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_JObject                      t__builder;                                              // 0x0008(0x0000)
		class JsonReader_2*                                        reader;                                                  // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		class JsonLoadSettings*                                    settings;                                                // 0x0030(0x0000)
		class JObject*                                             o_5__2;                                                  // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__1;                                                    // 0x0040(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__2;                                                    // 0x0050(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.Linq.JObject+<<WriteToAsync>g__AwaitProperties|0_0>d
	 * Size -> 0x0000
	 */
	struct JObject___WriteToAsync_g__AwaitProperties_0_0_d
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class Task*                                                task;                                                    // 0x0020(0x0000)
		class JObject*                                             _4__this;                                                // 0x0028(0x0000)
		int32_t                                                    i;                                                       // 0x0030(0x0000)
		class JsonWriter_2*                                        Writer;                                                  // 0x0038(0x0000)
		struct CancellationToken                                   CancellationToken;                                       // 0x0040(0x0000)
		class JsonConverter_Array*                                 Converters;                                              // 0x0048(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0050(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.Linq.JProperty+<WriteToAsync>d__1
	 * Size -> 0x0000
	 */
	struct JProperty__WriteToAsync_d__1
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class Task*                                                task;                                                    // 0x0020(0x0000)
		class JProperty*                                           _4__this;                                                // 0x0028(0x0000)
		class JsonWriter_2*                                        writer;                                                  // 0x0030(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0038(0x0000)
		class JsonConverter_Array*                                 converters;                                              // 0x0040(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0048(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.Linq.JProperty+<LoadAsync>d__4
	 * Size -> 0x0000
	 */
	struct JProperty__LoadAsync_d__4
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_JProperty                    t__builder;                                              // 0x0008(0x0000)
		class JsonReader_2*                                        reader;                                                  // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		class JsonLoadSettings*                                    settings;                                                // 0x0030(0x0000)
		class JProperty*                                           p_5__2;                                                  // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__1;                                                    // 0x0040(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__2;                                                    // 0x0050(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.Linq.JRaw+<CreateAsync>d__0
	 * Size -> 0x0000
	 */
	struct JRaw__CreateAsync_d__0
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_JRaw                         t__builder;                                              // 0x0008(0x0000)
		class JsonReader_2*                                        reader;                                                  // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		class StringWriter*                                        sw_5__2;                                                 // 0x0030(0x0000)
		class JsonTextWriter*                                      jsonWriter_5__3;                                         // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.Linq.JToken+<ReadFromAsync>d__3
	 * Size -> 0x0000
	 */
	struct JToken__ReadFromAsync_d__3
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_JToken                       t__builder;                                              // 0x0008(0x0000)
		class JsonReader_2*                                        reader;                                                  // 0x0020(0x0000)
		class JsonLoadSettings*                                    settings;                                                // 0x0028(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_bool  u__1;                                                    // 0x0038(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_JObject u__2;                                                    // 0x0048(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_JArray u__3;                                                    // 0x0058(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_JConstructor u__4;                                                    // 0x0068(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_JProperty u__5;                                                    // 0x0078(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=6
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_6_5
	{	};

	/**
	 * Struct Newtonsoft.Json.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=10
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_10_2
	{	};

	/**
	 * Struct Newtonsoft.Json.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=16
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_16_4
	{	};

	/**
	 * Struct Newtonsoft.Json.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=20
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_20_5
	{	};

	/**
	 * Struct Newtonsoft.Json.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=24
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_24_5
	{	};

	/**
	 * Struct Newtonsoft.Json.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=28
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_28_3
	{	};

	/**
	 * Struct Newtonsoft.Json.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=36
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_36_4
	{	};

	/**
	 * Struct Newtonsoft.Json.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=40
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_40_3
	{	};

	/**
	 * Struct Newtonsoft.Json.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=44
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_44_4
	{	};

	/**
	 * Struct Newtonsoft.Json.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=52
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_52_1
	{	};

	/**
	 * Struct System.Data.System.Data.DataError+ColumnError
	 * Size -> 0x0000
	 */
	struct DataError_ColumnError
	{
	public:
		class DataColumn*                                          column;                                                  // 0x0000(0x0000)
		class Il2CppString*                                        error;                                                   // 0x0008(0x0000)
	};

	/**
	 * Struct System.Data.System.Data.DataTable+RowDiffIdUsageSection
	 * Size -> 0x0000
	 */
	struct DataTable_RowDiffIdUsageSection
	{
	public:
		class DataTable*                                           targetTable;                                             // 0x0000(0x0000)
	};

	/**
	 * Struct System.Data.System.Data.DataTable+DSRowDiffIdUsageSection
	 * Size -> 0x0000
	 */
	struct DataTable_DSRowDiffIdUsageSection
	{
	public:
		class DataSet*                                             targetDS;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct System.Data.System.Data.ExpressionParser+ReservedWords
	 * Size -> 0x0000
	 */
	struct ExpressionParser_ReservedWords
	{
	public:
		class Il2CppString*                                        word;                                                    // 0x0000(0x0000)
		int32_t                                                    token;                                                   // 0x0008(0x0000)
		int32_t                                                    op;                                                      // 0x000C(0x0000)
	};

	/**
	 * Struct System.Data.System.Data.Range
	 * Size -> 0x0000
	 */
	struct Range
	{
	public:
		int32_t                                                    min;                                                     // 0x0000(0x0000)
		int32_t                                                    max;                                                     // 0x0004(0x0000)
		bool                                                       isNotNull;                                               // 0x0008(0x0000)
	};

	/**
	 * Struct System.Data.System.Data.RBTree+Node<K>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct RBTree_Node_K
	{
	public:
		int32_t                                                    selfId;                                                  // 0x0000(0x0000)
		int32_t                                                    leftId;                                                  // 0x0000(0x0000)
		int32_t                                                    rightId;                                                 // 0x0000(0x0000)
		int32_t                                                    parentId;                                                // 0x0000(0x0000)
		int32_t                                                    nextId;                                                  // 0x0000(0x0000)
		int32_t                                                    subTreeSize;                                             // 0x0000(0x0000)
		class Il2CppObject*                                        keyOfNode;                                               // 0x0000(0x0000)
		int32_t                                                    nodeColor;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct System.Data.System.Data.RBTree+NodePath<K>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct RBTree_NodePath_K
	{
	public:
		int32_t                                                    nodeID;                                                  // 0x0000(0x0000)
		int32_t                                                    mainTreeNodeID;                                          // 0x0000(0x0000)
	};

	/**
	 * Struct System.Data.System.Data.RBTree+RBTreeEnumerator<K>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct RBTree_RBTreeEnumerator_K
	{
	public:
		class RBTree_K*                                            tree;                                                    // 0x0000(0x0000)
		int32_t                                                    version;                                                 // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    mainTreeNodeId;                                          // 0x0000(0x0000)
		class Il2CppObject*                                        current;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct System.Data.System.Data.IndexField
	 * Size -> 0x0000
	 */
	struct IndexField
	{
	public:
		class DataColumn*                                          Column;                                                  // 0x0000(0x0000)
		bool                                                       IsDescending;                                            // 0x0008(0x0000)
	};

	/**
	 * Struct System.Data.System.Data.SqlTypes.SqlBoolean
	 * Size -> 0x0000
	 */
	struct SqlBoolean
	{
	public:
		uint8_t                                                    m_value;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct System.Data.System.Data.SqlTypes.SqlBinary
	 * Size -> 0x0000
	 */
	struct SqlBinary
	{
	public:
		class Byte_Array*                                          value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct System.Data.System.Data.SqlTypes.SqlByte
	 * Size -> 0x0000
	 */
	struct SqlByte
	{
	public:
		bool                                                       m_fNotNull;                                              // 0x0000(0x0000)
		uint8_t                                                    m_value;                                                 // 0x0001(0x0000)
	};

	/**
	 * Struct System.Data.System.Data.SqlTypes.SqlDateTime
	 * Size -> 0x0000
	 */
	struct SqlDateTime
	{
	public:
		bool                                                       m_fNotNull;                                              // 0x0000(0x0000)
		int32_t                                                    m_day;                                                   // 0x0004(0x0000)
		int32_t                                                    m_time;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct System.Data.System.Data.SqlTypes.SqlInt16
	 * Size -> 0x0000
	 */
	struct SqlInt16
	{
	public:
		bool                                                       m_fNotNull;                                              // 0x0000(0x0000)
		int16_t                                                    m_value;                                                 // 0x0002(0x0000)
	};

	/**
	 * Struct System.Data.System.Data.SqlTypes.SqlInt32
	 * Size -> 0x0000
	 */
	struct SqlInt32
	{
	public:
		bool                                                       m_fNotNull;                                              // 0x0000(0x0000)
		int32_t                                                    m_value;                                                 // 0x0004(0x0000)
	};

	/**
	 * Struct System.Data.System.Data.SqlTypes.SqlDecimal
	 * Size -> 0x0000
	 */
	struct SqlDecimal
	{
	public:
		uint8_t                                                    bStatus;                                                 // 0x0000(0x0000)
		uint8_t                                                    bLen;                                                    // 0x0001(0x0000)
		uint8_t                                                    bPrec;                                                   // 0x0002(0x0000)
		uint8_t                                                    bScale;                                                  // 0x0003(0x0000)
		uint32_t                                                   data1;                                                   // 0x0004(0x0000)
		uint32_t                                                   data2;                                                   // 0x0008(0x0000)
		uint32_t                                                   data3;                                                   // 0x000C(0x0000)
		uint32_t                                                   data4;                                                   // 0x0010(0x0000)
	};

	/**
	 * Struct System.Data.System.Data.SqlTypes.SqlGuid
	 * Size -> 0x0000
	 */
	struct SqlGuid
	{
	public:
		class Byte_Array*                                          m_value;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct System.Data.System.Data.SqlTypes.SqlSingle
	 * Size -> 0x0000
	 */
	struct SqlSingle
	{
	public:
		bool                                                       fNotNull;                                                // 0x0000(0x0000)
		float                                                      value;                                                   // 0x0004(0x0000)
	};

	/**
	 * Struct System.Data.System.Data.SqlTypes.SqlString
	 * Size -> 0x0000
	 */
	struct SqlString
	{
	public:
		class Il2CppString*                                        m_value;                                                 // 0x0000(0x0000)
		class CompareInfo*                                         m_cmpInfo;                                               // 0x0008(0x0000)
		int32_t                                                    m_lcid;                                                  // 0x0010(0x0000)
		int32_t                                                    m_flag;                                                  // 0x0014(0x0000)
		bool                                                       m_fNotNull;                                              // 0x0018(0x0000)
	};

	/**
	 * Struct System.Data.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=36
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_36_5
	{	};

	/**
	 * Struct System.Data.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=38
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_38_2
	{	};

	/**
	 * Struct System.Data.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=52
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_52_2
	{	};

	/**
	 * Struct System.Data.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=64
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_64_4
	{	};

	/**
	 * Struct System.Data.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=152
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_152_1
	{	};

	/**
	 * Struct System.Data.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=176
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_176
	{	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.IntPoint
	 * Size -> 0x0000
	 */
	struct IntPoint
	{
	public:
		int64_t                                                    N;                                                       // 0x0000(0x0000)
		int64_t                                                    X;                                                       // 0x0008(0x0000)
		int64_t                                                    Y;                                                       // 0x0010(0x0000)
		int64_t                                                    D;                                                       // 0x0018(0x0000)
		double                                                     NX;                                                      // 0x0020(0x0000)
		double                                                     NY;                                                      // 0x0028(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.DoublePoint
	 * Size -> 0x0000
	 */
	struct DoublePoint
	{
	public:
		double                                                     X;                                                       // 0x0000(0x0000)
		double                                                     Y;                                                       // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.Int128
	 * Size -> 0x0000
	 */
	struct Int128
	{
	public:
		int64_t                                                    hi;                                                      // 0x0000(0x0000)
		uint64_t                                                   lo;                                                      // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.IntRect
	 * Size -> 0x0000
	 */
	struct IntRect
	{
	public:
		int64_t                                                    left;                                                    // 0x0000(0x0000)
		int64_t                                                    top;                                                     // 0x0008(0x0000)
		int64_t                                                    right;                                                   // 0x0010(0x0000)
		int64_t                                                    bottom;                                                  // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.Light2DBlendStyle+MaskChannelFilter
	 * Size -> 0x0000
	 */
	struct Light2DBlendStyle_MaskChannelFilter
	{
	public:
		struct Vector4                                             mask_k__BackingField;                                    // 0x0000(0x0000)
		struct Vector4                                             inverted_k__BackingField;                                // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.Light2DBlendStyle+BlendFactors
	 * Size -> 0x0000
	 */
	struct Light2DBlendStyle_BlendFactors
	{
	public:
		float                                                      multiplicative;                                          // 0x0000(0x0000)
		float                                                      additive;                                                // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.RenderTargetHandle
	 * Size -> 0x0000
	 */
	struct RenderTargetHandle
	{
	public:
		int32_t                                                    id_k__BackingField;                                      // 0x0000(0x0000)
		struct RenderTargetIdentifier                              rtid_k__BackingField;                                    // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.Light2DBlendStyle
	 * Size -> 0x0000
	 */
	struct Light2DBlendStyle
	{
	public:
		class Il2CppString*                                        name;                                                    // 0x0000(0x0000)
		int32_t                                                    maskTextureChannel;                                      // 0x0008(0x0000)
		int32_t                                                    blendMode;                                               // 0x000C(0x0000)
		bool                                                       isDirty_k__BackingField;                                 // 0x0010(0x0000)
		bool                                                       hasRenderTarget_k__BackingField;                         // 0x0011(0x0000)
		struct RenderTargetHandle                                  renderTargetHandle;                                      // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.LightStats
	 * Size -> 0x0000
	 */
	struct LightStats
	{
	public:
		int32_t                                                    totalLights;                                             // 0x0000(0x0000)
		int32_t                                                    totalNormalMapUsage;                                     // 0x0004(0x0000)
		int32_t                                                    totalVolumetricUsage;                                    // 0x0008(0x0000)
		uint32_t                                                   blendStylesUsed;                                         // 0x000C(0x0000)
		uint32_t                                                   blendStylesWithLights;                                   // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.LightUtility+LightMeshVertex
	 * Size -> 0x0000
	 */
	struct LightUtility_LightMeshVertex
	{
	public:
		struct Vector3                                             position;                                                // 0x0000(0x0000)
		struct Color                                               color;                                                   // 0x000C(0x0000)
		struct Vector2                                             uv;                                                      // 0x001C(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.LayerBatch+<renderTargetIds>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct LayerBatch__renderTargetIds_e__FixedBuffer
	{
	public:
		int32_t                                                    FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.LayerBatch+<renderTargetUsed>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct LayerBatch__renderTargetUsed_e__FixedBuffer
	{
	public:
		bool                                                       FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.SortingLayerRange
	 * Size -> 0x0000
	 */
	struct SortingLayerRange
	{
	public:
		int16_t                                                    m_LowerBound;                                            // 0x0000(0x0000)
		int16_t                                                    m_UpperBound;                                            // 0x0002(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.RenderTextureDescriptor
	 * Size -> 0x0000
	 */
	struct RenderTextureDescriptor
	{
	public:
		int32_t                                                    width_k__BackingField;                                   // 0x0000(0x0000)
		int32_t                                                    height_k__BackingField;                                  // 0x0004(0x0000)
		int32_t                                                    msaaSamples_k__BackingField;                             // 0x0008(0x0000)
		int32_t                                                    volumeDepth_k__BackingField;                             // 0x000C(0x0000)
		int32_t                                                    mipCount_k__BackingField;                                // 0x0010(0x0000)
		int32_t                                                    graphicsFormat;                                          // 0x0014(0x0000)
		int32_t                                                    stencilFormat_k__BackingField;                           // 0x0018(0x0000)
		int32_t                                                    depthStencilFormat_k__BackingField;                      // 0x001C(0x0000)
		int32_t                                                    dimension_k__BackingField;                               // 0x0020(0x0000)
		int32_t                                                    shadowSamplingMode_k__BackingField;                      // 0x0024(0x0000)
		int32_t                                                    vrUsage_k__BackingField;                                 // 0x0028(0x0000)
		int32_t                                                    flags;                                                   // 0x002C(0x0000)
		int32_t                                                    memoryless_k__BackingField;                              // 0x0030(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.LayerBatch
	 * Size -> 0x0000
	 */
	struct LayerBatch
	{
	public:
		int32_t                                                    startLayerID;                                            // 0x0000(0x0000)
		int32_t                                                    endLayerValue;                                           // 0x0004(0x0000)
		struct SortingLayerRange                                   layerRange;                                              // 0x0008(0x0000)
		struct LightStats                                          lightStats;                                              // 0x000C(0x0000)
		struct LayerBatch__renderTargetIds_e__FixedBuffer          renderTargetIds;                                         // 0x0020(0x0000)
		struct LayerBatch__renderTargetUsed_e__FixedBuffer         renderTargetUsed;                                        // 0x0030(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.ShadowUtility+Edge
	 * Size -> 0x0000
	 */
	struct ShadowUtility_Edge
	{
	public:
		int32_t                                                    vertexIndex0;                                            // 0x0000(0x0000)
		int32_t                                                    vertexIndex1;                                            // 0x0004(0x0000)
		struct Vector4                                             tangent;                                                 // 0x0008(0x0000)
		bool                                                       compareReversed;                                         // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial+AlbedoDebugValidationPresetData
	 * Size -> 0x0000
	 */
	struct DebugDisplaySettingsMaterial_AlbedoDebugValidationPresetData
	{
	public:
		class Il2CppString*                                        name;                                                    // 0x0000(0x0000)
		struct Color                                               color;                                                   // 0x0008(0x0000)
		float                                                      minLuminance;                                            // 0x0018(0x0000)
		float                                                      maxLuminance;                                            // 0x001C(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.DecalSubDrawCall
	 * Size -> 0x0000
	 */
	struct DecalSubDrawCall
	{
	public:
		int32_t                                                    start;                                                   // 0x0000(0x0000)
		int32_t                                                    end;                                                     // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.DecalCreateDrawCallSystem+DrawCallJob
	 * Size -> 0x0000
	 */
	struct DecalCreateDrawCallSystem_DrawCallJob
	{
	public:
		struct NativeArray_float4x4                                decalToWorlds;                                           // 0x0000(0x0000)
		struct NativeArray_float4x4                                normalToWorlds;                                          // 0x0010(0x0000)
		struct NativeArray_float4x4                                sizeOffsets;                                             // 0x0020(0x0000)
		struct NativeArray_float2                                  drawDistances;                                           // 0x0030(0x0000)
		struct NativeArray_float2                                  angleFades;                                              // 0x0040(0x0000)
		struct NativeArray_float4                                  uvScaleBiases;                                           // 0x0050(0x0000)
		struct NativeArray_int                                     layerMasks;                                              // 0x0060(0x0000)
		struct NativeArray_ulong                                   sceneLayerMasks;                                         // 0x0070(0x0000)
		struct NativeArray_float                                   fadeFactors;                                             // 0x0080(0x0000)
		struct NativeArray_BoundingSphere                          boundingSpheres;                                         // 0x0090(0x0000)
		struct Vector3                                             cameraPosition;                                          // 0x00A0(0x0000)
		uint64_t                                                   sceneCullingMask;                                        // 0x00B0(0x0000)
		int32_t                                                    cullingMask;                                             // 0x00B8(0x0000)
		struct NativeArray_int                                     visibleDecalIndices;                                     // 0x00C0(0x0000)
		int32_t                                                    visibleDecalCount;                                       // 0x00D0(0x0000)
		float                                                      maxDrawDistance;                                         // 0x00D4(0x0000)
		struct NativeArray_float4x4                                decalToWorldsDraw;                                       // 0x00D8(0x0000)
		struct NativeArray_float4x4                                normalToDecalsDraw;                                      // 0x00E8(0x0000)
		struct NativeArray_DecalSubDrawCall                        subCalls;                                                // 0x00F8(0x0000)
		struct NativeArray_int                                     subCallCount;                                            // 0x0108(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.DecalEntityIndexer+DecalEntityItem
	 * Size -> 0x0000
	 */
	struct DecalEntityIndexer_DecalEntityItem
	{
	public:
		int32_t                                                    chunkIndex;                                              // 0x0000(0x0000)
		int32_t                                                    arrayIndex;                                              // 0x0004(0x0000)
		int32_t                                                    version;                                                 // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.DecalEntity
	 * Size -> 0x0000
	 */
	struct DecalEntity
	{
	public:
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    version;                                                 // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.DecalEntityManager+CombinedChunks
	 * Size -> 0x0000
	 */
	struct DecalEntityManager_CombinedChunks
	{
	public:
		class DecalEntityChunk*                                    entityChunk;                                             // 0x0000(0x0000)
		class DecalCachedChunk*                                    cachedChunk;                                             // 0x0008(0x0000)
		class DecalCulledChunk*                                    culledChunk;                                             // 0x0010(0x0000)
		class DecalDrawCallChunk*                                  drawCallChunk;                                           // 0x0018(0x0000)
		int32_t                                                    previousChunkIndex;                                      // 0x0020(0x0000)
		bool                                                       valid;                                                   // 0x0024(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Jobs.TransformAccess
	 * Size -> 0x0000
	 */
	struct TransformAccess
	{
	public:
		intptr_t                                                   hierarchy;                                               // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.BoundingSphere
	 * Size -> 0x0000
	 */
	struct BoundingSphere
	{
	public:
		struct Vector3                                             position;                                                // 0x0000(0x0000)
		float                                                      radius;                                                  // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.DecalUpdateCachedSystem+UpdateTransformsJob
	 * Size -> 0x0000
	 */
	struct DecalUpdateCachedSystem_UpdateTransformsJob
	{
	public:
		struct NativeArray_float3                                  positions;                                               // 0x0000(0x0000)
		struct NativeArray_quaternion                              rotations;                                               // 0x0010(0x0000)
		struct NativeArray_float3                                  scales;                                                  // 0x0020(0x0000)
		struct NativeArray_bool                                    dirty;                                                   // 0x0030(0x0000)
		struct NativeArray_DecalScaleMode                          scaleModes;                                              // 0x0040(0x0000)
		struct NativeArray_float4x4                                sizeOffsets;                                             // 0x0050(0x0000)
		struct NativeArray_float4x4                                decalToWorlds;                                           // 0x0060(0x0000)
		struct NativeArray_float4x4                                normalToWorlds;                                          // 0x0070(0x0000)
		struct NativeArray_BoundingSphere                          boundingSpheres;                                         // 0x0080(0x0000)
		float                                                      minDistance;                                             // 0x0090(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.DeferredShaderData+ComputeBufferInfo
	 * Size -> 0x0000
	 */
	struct DeferredShaderData_ComputeBufferInfo
	{
	public:
		uint32_t                                                   frameUsed;                                               // 0x0000(0x0000)
		int32_t                                                    type;                                                    // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.ScriptableRenderer+RenderPassDescriptor
	 * Size -> 0x0000
	 */
	struct ScriptableRenderer_RenderPassDescriptor
	{
	public:
		int32_t                                                    w;                                                       // 0x0000(0x0000)
		int32_t                                                    h;                                                       // 0x0004(0x0000)
		int32_t                                                    samples;                                                 // 0x0008(0x0000)
		int32_t                                                    depthID;                                                 // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.ScriptableRenderer.RenderBlocks+BlockRange
	 * Size -> 0x0000
	 */
	struct ScriptableRenderer_RenderBlocks_BlockRange
	{
	public:
		int32_t                                                    m_Current;                                               // 0x0000(0x0000)
		int32_t                                                    m_End;                                                   // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.ScriptableRenderer+RenderBlocks
	 * Size -> 0x0000
	 */
	struct ScriptableRenderer_RenderBlocks
	{
	public:
		struct NativeArray_RenderPassEvent                         m_BlockEventLimits;                                      // 0x0000(0x0000)
		struct NativeArray_int                                     m_BlockRanges;                                           // 0x0010(0x0000)
		struct NativeArray_int                                     m_BlockRangeLengths;                                     // 0x0020(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.LightCookieManager.Settings+AtlasSettings
	 * Size -> 0x0000
	 */
	struct LightCookieManager_Settings_AtlasSettings
	{
	public:
		struct Vector2Int                                          resolution;                                              // 0x0000(0x0000)
		int32_t                                                    format;                                                  // 0x0008(0x0000)
		bool                                                       useMips;                                                 // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.LightCookieManager+Settings
	 * Size -> 0x0000
	 */
	struct LightCookieManager_Settings
	{
	public:
		struct LightCookieManager_Settings_AtlasSettings           atlas;                                                   // 0x0000(0x0000)
		int32_t                                                    maxAdditionalLights;                                     // 0x0010(0x0000)
		float                                                      cubeOctahedralSizeScale;                                 // 0x0014(0x0000)
		bool                                                       useStructuredBuffer;                                     // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.LightCookieManager.Sorting+<>c__DisplayClass2_0<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct LightCookieManager_Sorting___c__DisplayClass2_0_T
	{
	public:
		class UObject_Array*                                       data;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.LightCookieManager+Sorting
	 * Size -> 0x0000
	 */
	struct LightCookieManager_Sorting
	{	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.LightCookieManager+LightCookieMapping
	 * Size -> 0x0000
	 */
	struct LightCookieManager_LightCookieMapping
	{
	public:
		uint16_t                                                   visibleLightIndex;                                       // 0x0000(0x0000)
		uint16_t                                                   lightBufferIndex;                                        // 0x0002(0x0000)
		class Light*                                               light;                                                   // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.LightCookieManager+WorkSlice<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct LightCookieManager_WorkSlice_T
	{
	public:
		class UObject_Array*                                       m_Data;                                                  // 0x0000(0x0000)
		int32_t                                                    m_Start;                                                 // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.LightCookieManager+ShaderBitArray
	 * Size -> 0x0000
	 */
	struct LightCookieManager_ShaderBitArray
	{
	public:
		class Single_Array*                                        m_Data;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.PostProcessPasses
	 * Size -> 0x0000
	 */
	struct PostProcessPasses
	{
	public:
		class ColorGradingLutPass*                                 m_ColorGradingLutPass;                                   // 0x0000(0x0000)
		class PostProcessPass*                                     m_PostProcessPass;                                       // 0x0008(0x0000)
		class PostProcessPass*                                     m_FinalPostProcessPass;                                  // 0x0010(0x0000)
		struct RenderTargetHandle                                  m_AfterPostProcessColor;                                 // 0x0018(0x0000)
		struct RenderTargetHandle                                  m_ColorGradingLut;                                       // 0x0048(0x0000)
		class PostProcessData*                                     m_RendererPostProcessData;                               // 0x0078(0x0000)
		class PostProcessData*                                     m_CurrentPostProcessData;                                // 0x0080(0x0000)
		class Material*                                            m_BlitMaterial;                                          // 0x0088(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.ShadowSplitData+<m_CullingPlanes>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct ShadowSplitData__m_CullingPlanes_e__FixedBuffer
	{
	public:
		uint8_t                                                    FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Ray
	 * Size -> 0x0000
	 */
	struct Ray
	{
	public:
		struct Vector3                                             m_Origin;                                                // 0x0000(0x0000)
		struct Vector3                                             m_Direction;                                             // 0x000C(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Plane
	 * Size -> 0x0000
	 */
	struct Plane_1
	{
	public:
		struct Vector3                                             m_Normal;                                                // 0x0000(0x0000)
		float                                                      m_Distance;                                              // 0x000C(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.ShadowSplitData
	 * Size -> 0x0000
	 */
	struct ShadowSplitData
	{
	public:
		int32_t                                                    m_CullingPlaneCount;                                     // 0x0000(0x0000)
		struct ShadowSplitData__m_CullingPlanes_e__FixedBuffer     m_CullingPlanes;                                         // 0x0004(0x0000)
		struct Vector4                                             m_CullingSphere;                                         // 0x00A4(0x0000)
		float                                                      m_ShadowCascadeBlendCullingFactor;                       // 0x00B4(0x0000)
		float                                                      m_CullingNearPlane;                                      // 0x00B8(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.ShadowSliceData
	 * Size -> 0x0000
	 */
	struct ShadowSliceData
	{
	public:
		struct Matrix4x4                                           viewMatrix;                                              // 0x0000(0x0000)
		struct Matrix4x4                                           projectionMatrix;                                        // 0x0040(0x0000)
		struct Matrix4x4                                           shadowTransform;                                         // 0x0080(0x0000)
		int32_t                                                    offsetX;                                                 // 0x00C0(0x0000)
		int32_t                                                    offsetY;                                                 // 0x00C4(0x0000)
		int32_t                                                    resolution;                                              // 0x00C8(0x0000)
		struct ShadowSplitData                                     splitData;                                               // 0x00CC(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.LightExtractionJob
	 * Size -> 0x0000
	 */
	struct LightExtractionJob
	{
	public:
		struct NativeArray_VisibleLight                            lights;                                                  // 0x0000(0x0000)
		struct NativeArray_LightType                               lightTypes;                                              // 0x0010(0x0000)
		struct NativeArray_float                                   radiuses;                                                // 0x0020(0x0000)
		struct NativeArray_float3                                  directions;                                              // 0x0030(0x0000)
		struct NativeArray_float3                                  positions;                                               // 0x0040(0x0000)
		struct NativeArray_float                                   coneRadiuses;                                            // 0x0050(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.LightMinMaxZ
	 * Size -> 0x0000
	 */
	struct LightMinMaxZ
	{
	public:
		float                                                      minZ;                                                    // 0x0000(0x0000)
		float                                                      maxZ;                                                    // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.MinMaxZJob
	 * Size -> 0x0000
	 */
	struct MinMaxZJob
	{
	public:
		struct float4x4                                            worldToViewMatrix;                                       // 0x0000(0x0000)
		struct NativeArray_VisibleLight                            lights;                                                  // 0x0040(0x0000)
		struct NativeArray_LightMinMaxZ                            minMaxZs;                                                // 0x0050(0x0000)
		struct NativeArray_float                                   meanZs;                                                  // 0x0060(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.RadixSortJob
	 * Size -> 0x0000
	 */
	struct RadixSortJob
	{
	public:
		struct NativeArray_uint                                    keys;                                                    // 0x0000(0x0000)
		struct NativeArray_int                                     indices;                                                 // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.ReorderJob<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ReorderJob_T
	{
	public:
		struct NativeArray_int                                     indices;                                                 // 0x0000(0x0000)
		struct NativeArray_T                                       input;                                                   // 0x0000(0x0000)
		struct NativeArray_T                                       output;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.SliceCombineJob
	 * Size -> 0x0000
	 */
	struct SliceCombineJob
	{
	public:
		struct int2                                                tileResolution;                                          // 0x0000(0x0000)
		int32_t                                                    wordsPerTile;                                            // 0x0008(0x0000)
		struct NativeArray_uint                                    sliceLightMasksH;                                        // 0x0010(0x0000)
		struct NativeArray_uint                                    sliceLightMasksV;                                        // 0x0020(0x0000)
		struct NativeArray_uint                                    lightMasks;                                              // 0x0030(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.SliceCullingJob+Cone
	 * Size -> 0x0000
	 */
	struct SliceCullingJob_Cone
	{
	public:
		struct float3                                              tip;                                                     // 0x0000(0x0000)
		struct float3                                              direction;                                               // 0x000C(0x0000)
		float                                                      height;                                                  // 0x0018(0x0000)
		float                                                      radius;                                                  // 0x001C(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.SliceCullingJob+Sphere
	 * Size -> 0x0000
	 */
	struct SliceCullingJob_Sphere
	{
	public:
		struct float3                                              center;                                                  // 0x0000(0x0000)
		float                                                      radius;                                                  // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.SliceCullingJob+Plane
	 * Size -> 0x0000
	 */
	struct SliceCullingJob_Plane
	{
	public:
		struct float3                                              normal;                                                  // 0x0000(0x0000)
		float                                                      distanceToOrigin;                                        // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.SliceCullingJob
	 * Size -> 0x0000
	 */
	struct SliceCullingJob
	{
	public:
		float                                                      scale;                                                   // 0x0000(0x0000)
		struct float3                                              viewOrigin;                                              // 0x0004(0x0000)
		struct float3                                              viewForward;                                             // 0x0010(0x0000)
		struct float3                                              viewRight;                                               // 0x001C(0x0000)
		struct float3                                              viewUp;                                                  // 0x0028(0x0000)
		struct NativeArray_LightType                               lightTypes;                                              // 0x0038(0x0000)
		struct NativeArray_float                                   radiuses;                                                // 0x0048(0x0000)
		struct NativeArray_float3                                  directions;                                              // 0x0058(0x0000)
		struct NativeArray_float3                                  positions;                                               // 0x0068(0x0000)
		struct NativeArray_float                                   coneRadiuses;                                            // 0x0078(0x0000)
		int32_t                                                    lightsPerTile;                                           // 0x0088(0x0000)
		struct NativeArray_uint                                    sliceLightMasks;                                         // 0x0090(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.ZBin
	 * Size -> 0x0000
	 */
	struct ZBin
	{
	public:
		uint16_t                                                   minIndex;                                                // 0x0000(0x0000)
		uint16_t                                                   maxIndex;                                                // 0x0002(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.ZBinningJob
	 * Size -> 0x0000
	 */
	struct ZBinningJob
	{
	public:
		struct NativeArray_ZBin                                    bins;                                                    // 0x0000(0x0000)
		struct NativeArray_LightMinMaxZ                            minMaxZs;                                                // 0x0010(0x0000)
		int32_t                                                    binOffset;                                               // 0x0020(0x0000)
		float                                                      zFactor;                                                 // 0x0024(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.UniversalRenderer+RenderPassInputSummary
	 * Size -> 0x0000
	 */
	struct UniversalRenderer_RenderPassInputSummary
	{
	public:
		bool                                                       requiresDepthTexture;                                    // 0x0000(0x0000)
		bool                                                       requiresDepthPrepass;                                    // 0x0001(0x0000)
		bool                                                       requiresNormalsTexture;                                  // 0x0002(0x0000)
		bool                                                       requiresColorTexture;                                    // 0x0003(0x0000)
		bool                                                       requiresColorTextureCreated;                             // 0x0004(0x0000)
		bool                                                       requiresMotionVectors;                                   // 0x0005(0x0000)
		int32_t                                                    requiresDepthNormalAtEvent;                              // 0x0008(0x0000)
		int32_t                                                    requiresDepthTextureEarliestEvent;                       // 0x000C(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Bounds
	 * Size -> 0x0000
	 */
	struct Bounds
	{
	public:
		struct Vector3                                             m_Center;                                                // 0x0000(0x0000)
		struct Vector3                                             m_Extents;                                               // 0x000C(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.CullingResults
	 * Size -> 0x0000
	 */
	struct CullingResults
	{
	public:
		intptr_t                                                   ptr;                                                     // 0x0000(0x0000)
		struct CullingAllocationInfo*                              m_AllocationInfo;                                        // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.LayerMask
	 * Size -> 0x0000
	 */
	struct LayerMask
	{
	public:
		int32_t                                                    m_Mask;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.CameraData
	 * Size -> 0x0000
	 */
	struct CameraData
	{
	public:
		struct Matrix4x4                                           m_ViewMatrix;                                            // 0x0000(0x0000)
		struct Matrix4x4                                           m_ProjectionMatrix;                                      // 0x0040(0x0000)
		class Camera*                                              camera;                                                  // 0x0080(0x0000)
		int32_t                                                    renderType;                                              // 0x0088(0x0000)
		class RenderTexture*                                       targetTexture;                                           // 0x0090(0x0000)
		struct RenderTextureDescriptor                             cameraTargetDescriptor;                                  // 0x0098(0x0000)
		struct Rect                                                pixelRect;                                               // 0x00CC(0x0000)
		int32_t                                                    pixelWidth;                                              // 0x00DC(0x0000)
		int32_t                                                    pixelHeight;                                             // 0x00E0(0x0000)
		float                                                      aspectRatio;                                             // 0x00E4(0x0000)
		float                                                      renderScale;                                             // 0x00E8(0x0000)
		int32_t                                                    imageScalingMode;                                        // 0x00EC(0x0000)
		int32_t                                                    upscalingFilter;                                         // 0x00F0(0x0000)
		bool                                                       fsrOverrideSharpness;                                    // 0x00F4(0x0000)
		float                                                      fsrSharpness;                                            // 0x00F8(0x0000)
		bool                                                       clearDepth;                                              // 0x00FC(0x0000)
		int32_t                                                    cameraType;                                              // 0x0100(0x0000)
		bool                                                       isDefaultViewport;                                       // 0x0104(0x0000)
		bool                                                       isHdrEnabled;                                            // 0x0105(0x0000)
		bool                                                       requiresDepthTexture;                                    // 0x0106(0x0000)
		bool                                                       requiresOpaqueTexture;                                   // 0x0107(0x0000)
		bool                                                       postProcessingRequiresDepthTexture;                      // 0x0108(0x0000)
		bool                                                       xrRendering;                                             // 0x0109(0x0000)
		int32_t                                                    defaultOpaqueSortFlags;                                  // 0x010C(0x0000)
		class XRPass*                                              xr;                                                      // 0x0110(0x0000)
		bool                                                       isStereoEnabled;                                         // 0x0118(0x0000)
		float                                                      maxShadowDistance;                                       // 0x011C(0x0000)
		bool                                                       postProcessEnabled;                                      // 0x0120(0x0000)
		class IEnumerator_Action_RenderTargetIdentifier__CommandBuffer* captureActions;                                          // 0x0128(0x0000)
		struct LayerMask                                           volumeLayerMask;                                         // 0x0130(0x0000)
		class Transform*                                           volumeTrigger;                                           // 0x0138(0x0000)
		bool                                                       isStopNaNEnabled;                                        // 0x0140(0x0000)
		bool                                                       isDitheringEnabled;                                      // 0x0141(0x0000)
		int32_t                                                    antialiasing;                                            // 0x0144(0x0000)
		int32_t                                                    antialiasingQuality;                                     // 0x0148(0x0000)
		class ScriptableRenderer*                                  renderer;                                                // 0x0150(0x0000)
		bool                                                       resolveFinalTarget;                                      // 0x0158(0x0000)
		struct Vector3                                             worldSpaceCameraPos;                                     // 0x015C(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.LightData
	 * Size -> 0x0000
	 */
	struct LightData
	{
	public:
		int32_t                                                    mainLightIndex;                                          // 0x0000(0x0000)
		int32_t                                                    additionalLightsCount;                                   // 0x0004(0x0000)
		int32_t                                                    maxPerObjectAdditionalLightsCount;                       // 0x0008(0x0000)
		struct NativeArray_VisibleLight                            visibleLights;                                           // 0x0010(0x0000)
		struct NativeArray_int                                     originalIndices;                                         // 0x0020(0x0000)
		bool                                                       shadeAdditionalLightsPerVertex;                          // 0x0030(0x0000)
		bool                                                       supportsMixedLighting;                                   // 0x0031(0x0000)
		bool                                                       reflectionProbeBoxProjection;                            // 0x0032(0x0000)
		bool                                                       reflectionProbeBlending;                                 // 0x0033(0x0000)
		bool                                                       supportsLightLayers;                                     // 0x0034(0x0000)
		bool                                                       supportsAdditionalLights;                                // 0x0035(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.ShadowData
	 * Size -> 0x0000
	 */
	struct ShadowData
	{
	public:
		bool                                                       supportsMainLightShadows;                                // 0x0000(0x0000)
		bool                                                       requiresScreenSpaceShadowResolve;                        // 0x0001(0x0000)
		int32_t                                                    mainLightShadowmapWidth;                                 // 0x0004(0x0000)
		int32_t                                                    mainLightShadowmapHeight;                                // 0x0008(0x0000)
		int32_t                                                    mainLightShadowCascadesCount;                            // 0x000C(0x0000)
		struct Vector3                                             mainLightShadowCascadesSplit;                            // 0x0010(0x0000)
		float                                                      mainLightShadowCascadeBorder;                            // 0x001C(0x0000)
		bool                                                       supportsAdditionalLightShadows;                          // 0x0020(0x0000)
		int32_t                                                    additionalLightsShadowmapWidth;                          // 0x0024(0x0000)
		int32_t                                                    additionalLightsShadowmapHeight;                         // 0x0028(0x0000)
		bool                                                       supportsSoftShadows;                                     // 0x002C(0x0000)
		int32_t                                                    shadowmapDepthBufferBits;                                // 0x0030(0x0000)
		class List_Vector4*                                        bias;                                                    // 0x0038(0x0000)
		class List_int*                                            resolution;                                              // 0x0040(0x0000)
		bool                                                       isKeywordAdditionalLightShadowsEnabled;                  // 0x0048(0x0000)
		bool                                                       isKeywordSoftShadowsEnabled;                             // 0x0049(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.PostProcessingData
	 * Size -> 0x0000
	 */
	struct PostProcessingData
	{
	public:
		int32_t                                                    gradingMode;                                             // 0x0000(0x0000)
		int32_t                                                    lutSize;                                                 // 0x0004(0x0000)
		bool                                                       useFastSRGBLinearConversion;                             // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.RenderingData
	 * Size -> 0x0000
	 */
	struct RenderingData
	{
	public:
		struct CullingResults                                      cullResults;                                             // 0x0000(0x0000)
		struct CameraData                                          cameraData;                                              // 0x0010(0x0000)
		struct LightData                                           lightData;                                               // 0x0178(0x0000)
		struct ShadowData                                          shadowData;                                              // 0x01B0(0x0000)
		struct PostProcessingData                                  postProcessingData;                                      // 0x0200(0x0000)
		bool                                                       supportsDynamicBatching;                                 // 0x020C(0x0000)
		int32_t                                                    perObjectData;                                           // 0x0210(0x0000)
		bool                                                       postProcessingEnabled;                                   // 0x0214(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.PreTile
	 * Size -> 0x0000
	 */
	struct PreTile
	{
	public:
		struct float4                                              planeLeft;                                               // 0x0000(0x0000)
		struct float4                                              planeRight;                                              // 0x0010(0x0000)
		struct float4                                              planeBottom;                                             // 0x0020(0x0000)
		struct float4                                              planeTop;                                                // 0x0030(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.TileData
	 * Size -> 0x0000
	 */
	struct TileData
	{
	public:
		uint32_t                                                   tileID;                                                  // 0x0000(0x0000)
		uint32_t                                                   listBitMask;                                             // 0x0004(0x0000)
		uint32_t                                                   relLightOffset;                                          // 0x0008(0x0000)
		uint32_t                                                   unused;                                                  // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.PunctualLightData
	 * Size -> 0x0000
	 */
	struct PunctualLightData
	{
	public:
		struct Vector3                                             wsPos;                                                   // 0x0000(0x0000)
		float                                                      radius;                                                  // 0x000C(0x0000)
		struct Vector4                                             color;                                                   // 0x0010(0x0000)
		struct Vector4                                             attenuation;                                             // 0x0020(0x0000)
		struct Vector3                                             spotDirection;                                           // 0x0030(0x0000)
		int32_t                                                    flags;                                                   // 0x003C(0x0000)
		struct Vector4                                             occlusionProbeInfo;                                      // 0x0040(0x0000)
		uint32_t                                                   layerMask;                                               // 0x0050(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.LODParameters
	 * Size -> 0x0000
	 */
	struct LODParameters
	{
	public:
		int32_t                                                    m_IsOrthographic;                                        // 0x0000(0x0000)
		struct Vector3                                             m_CameraPosition;                                        // 0x0004(0x0000)
		float                                                      m_FieldOfView;                                           // 0x0010(0x0000)
		float                                                      m_OrthoSize;                                             // 0x0014(0x0000)
		int32_t                                                    m_CameraPixelHeight;                                     // 0x0018(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.ScriptableCullingParameters+<m_CullingPlanes>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct ScriptableCullingParameters__m_CullingPlanes_e__FixedBuffer
	{
	public:
		uint8_t                                                    FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.ScriptableCullingParameters+<m_LayerFarCullDistances>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct ScriptableCullingParameters__m_LayerFarCullDistances_e__FixedBuffer
	{
	public:
		float                                                      FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.CameraProperties+<m_ShadowCullPlanes>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct CameraProperties__m_ShadowCullPlanes_e__FixedBuffer
	{
	public:
		uint8_t                                                    FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.CameraProperties+<m_CameraCullPlanes>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct CameraProperties__m_CameraCullPlanes_e__FixedBuffer
	{
	public:
		uint8_t                                                    FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.CameraProperties+<layerCullDistances>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct CameraProperties__layerCullDistances_e__FixedBuffer
	{
	public:
		float                                                      FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.CoreCameraValues
	 * Size -> 0x0000
	 */
	struct CoreCameraValues
	{
	public:
		int32_t                                                    filterMode;                                              // 0x0000(0x0000)
		uint32_t                                                   cullingMask;                                             // 0x0004(0x0000)
		int32_t                                                    instanceID;                                              // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.CameraProperties
	 * Size -> 0x0000
	 */
	struct CameraProperties
	{
	public:
		struct Rect                                                screenRect;                                              // 0x0000(0x0000)
		struct Vector3                                             viewDir;                                                 // 0x0010(0x0000)
		float                                                      projectionNear;                                          // 0x001C(0x0000)
		float                                                      projectionFar;                                           // 0x0020(0x0000)
		float                                                      cameraNear;                                              // 0x0024(0x0000)
		float                                                      cameraFar;                                               // 0x0028(0x0000)
		float                                                      cameraAspect;                                            // 0x002C(0x0000)
		struct Matrix4x4                                           cameraToWorld;                                           // 0x0030(0x0000)
		struct Matrix4x4                                           actualWorldToClip;                                       // 0x0070(0x0000)
		struct Matrix4x4                                           cameraClipToWorld;                                       // 0x00B0(0x0000)
		struct Matrix4x4                                           cameraWorldToClip;                                       // 0x00F0(0x0000)
		struct Matrix4x4                                           implicitProjection;                                      // 0x0130(0x0000)
		struct Matrix4x4                                           stereoWorldToClipLeft;                                   // 0x0170(0x0000)
		struct Matrix4x4                                           stereoWorldToClipRight;                                  // 0x01B0(0x0000)
		struct Matrix4x4                                           worldToCamera;                                           // 0x01F0(0x0000)
		struct Vector3                                             up;                                                      // 0x0230(0x0000)
		struct Vector3                                             right;                                                   // 0x023C(0x0000)
		struct Vector3                                             transformDirection;                                      // 0x0248(0x0000)
		struct Vector3                                             cameraEuler;                                             // 0x0254(0x0000)
		struct Vector3                                             velocity;                                                // 0x0260(0x0000)
		float                                                      farPlaneWorldSpaceLength;                                // 0x026C(0x0000)
		uint32_t                                                   rendererCount;                                           // 0x0270(0x0000)
		struct CameraProperties__m_ShadowCullPlanes_e__FixedBuffer m_ShadowCullPlanes;                                      // 0x0274(0x0000)
		struct CameraProperties__m_CameraCullPlanes_e__FixedBuffer m_CameraCullPlanes;                                      // 0x02D4(0x0000)
		float                                                      baseFarDistance;                                         // 0x0334(0x0000)
		struct Vector3                                             shadowCullCenter;                                        // 0x0338(0x0000)
		struct CameraProperties__layerCullDistances_e__FixedBuffer layerCullDistances;                                      // 0x0344(0x0000)
		int32_t                                                    layerCullSpherical;                                      // 0x03C4(0x0000)
		struct CoreCameraValues                                    coreCameraValues;                                        // 0x03C8(0x0000)
		uint32_t                                                   cameraType;                                              // 0x03D4(0x0000)
		int32_t                                                    projectionIsOblique;                                     // 0x03D8(0x0000)
		int32_t                                                    isImplicitProjectionMatrix;                              // 0x03DC(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.ScriptableCullingParameters
	 * Size -> 0x0000
	 */
	struct ScriptableCullingParameters
	{
	public:
		int32_t                                                    m_IsOrthographic;                                        // 0x0000(0x0000)
		struct LODParameters                                       m_LODParameters;                                         // 0x0004(0x0000)
		struct ScriptableCullingParameters__m_CullingPlanes_e__FixedBuffer m_CullingPlanes;                                         // 0x0020(0x0000)
		int32_t                                                    m_CullingPlaneCount;                                     // 0x00C0(0x0000)
		uint32_t                                                   m_CullingMask;                                           // 0x00C4(0x0000)
		uint64_t                                                   m_SceneMask;                                             // 0x00C8(0x0000)
		struct ScriptableCullingParameters__m_LayerFarCullDistances_e__FixedBuffer m_LayerFarCullDistances;                                 // 0x00D0(0x0000)
		int32_t                                                    m_LayerCull;                                             // 0x0150(0x0000)
		struct Matrix4x4                                           m_CullingMatrix;                                         // 0x0154(0x0000)
		struct Vector3                                             m_Origin;                                                // 0x0194(0x0000)
		float                                                      m_ShadowDistance;                                        // 0x01A0(0x0000)
		float                                                      m_ShadowNearPlaneOffset;                                 // 0x01A4(0x0000)
		int32_t                                                    m_CullingOptions;                                        // 0x01A8(0x0000)
		int32_t                                                    m_ReflectionProbeSortingCriteria;                        // 0x01AC(0x0000)
		struct CameraProperties                                    m_CameraProperties;                                      // 0x01B0(0x0000)
		float                                                      m_AccurateOcclusionThreshold;                            // 0x0590(0x0000)
		int32_t                                                    m_MaximumPortalCullingJobs;                              // 0x0594(0x0000)
		struct Matrix4x4                                           m_StereoViewMatrix;                                      // 0x0598(0x0000)
		struct Matrix4x4                                           m_StereoProjectionMatrix;                                // 0x05D8(0x0000)
		float                                                      m_StereoSeparationDistance;                              // 0x0618(0x0000)
		int32_t                                                    m_maximumVisibleLights;                                  // 0x061C(0x0000)
		bool                                                       m_ConservativeEnclosingSphere;                           // 0x0620(0x0000)
		int32_t                                                    m_NumIterationsEnclosingSphere;                          // 0x0624(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.XRPassCreateInfo
	 * Size -> 0x0000
	 */
	struct XRPassCreateInfo
	{
	public:
		int32_t                                                    multipassId;                                             // 0x0000(0x0000)
		int32_t                                                    cullingPassId;                                           // 0x0004(0x0000)
		class RenderTexture*                                       renderTarget;                                            // 0x0008(0x0000)
		struct RenderTextureDescriptor                             renderTargetDesc;                                        // 0x0010(0x0000)
		bool                                                       renderTargetIsRenderTexture;                             // 0x0044(0x0000)
		struct ScriptableCullingParameters                         cullingParameters;                                       // 0x0048(0x0000)
		class XRPass_CustomMirrorView*                             customMirrorView;                                        // 0x0670(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.XRViewCreateInfo
	 * Size -> 0x0000
	 */
	struct XRViewCreateInfo
	{
	public:
		struct Matrix4x4                                           projMatrix;                                              // 0x0000(0x0000)
		struct Matrix4x4                                           viewMatrix;                                              // 0x0040(0x0000)
		struct Rect                                                viewport;                                                // 0x0080(0x0000)
		int32_t                                                    textureArraySlice;                                       // 0x0090(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.XRLayout
	 * Size -> 0x0000
	 */
	struct XRLayout
	{
	public:
		class Camera*                                              camera;                                                  // 0x0000(0x0000)
		class XRSystem*                                            xrSystem;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.XRModule.UnityEngine.XR.XRDisplaySubsystem+XRRenderParameter
	 * Size -> 0x0000
	 */
	struct XRDisplaySubsystem_XRRenderParameter
	{
	public:
		struct Matrix4x4                                           view;                                                    // 0x0000(0x0000)
		struct Matrix4x4                                           projection;                                              // 0x0040(0x0000)
		struct Rect                                                viewport;                                                // 0x0080(0x0000)
		class Mesh_1*                                              occlusionMesh;                                           // 0x0090(0x0000)
		int32_t                                                    textureArraySlice;                                       // 0x0098(0x0000)
		struct Matrix4x4                                           previousView;                                            // 0x009C(0x0000)
		bool                                                       isPreviousViewValid;                                     // 0x00DC(0x0000)
	};

	/**
	 * Struct UnityEngine.XRModule.UnityEngine.XR.XRDisplaySubsystem+XRRenderPass
	 * Size -> 0x0000
	 */
	struct XRDisplaySubsystem_XRRenderPass
	{
	public:
		intptr_t                                                   displaySubsystemInstance;                                // 0x0000(0x0000)
		int32_t                                                    renderPassIndex;                                         // 0x0008(0x0000)
		struct RenderTargetIdentifier                              renderTarget;                                            // 0x0010(0x0000)
		struct RenderTextureDescriptor                             renderTargetDesc;                                        // 0x0038(0x0000)
		bool                                                       hasMotionVectorPass;                                     // 0x006C(0x0000)
		struct RenderTargetIdentifier                              motionVectorRenderTarget;                                // 0x0070(0x0000)
		struct RenderTextureDescriptor                             motionVectorRenderTargetDesc;                            // 0x0098(0x0000)
		bool                                                       shouldFillOutDepth;                                      // 0x00CC(0x0000)
		int32_t                                                    cullingPassIndex;                                        // 0x00D0(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.XRView
	 * Size -> 0x0000
	 */
	struct XRView
	{
	public:
		struct Matrix4x4                                           projMatrix;                                              // 0x0000(0x0000)
		struct Matrix4x4                                           viewMatrix;                                              // 0x0040(0x0000)
		struct Rect                                                viewport;                                                // 0x0080(0x0000)
		class Mesh_1*                                              occlusionMesh;                                           // 0x0090(0x0000)
		int32_t                                                    textureArraySlice;                                       // 0x0098(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.XRSystem+<>c__DisplayClass26_0
	 * Size -> 0x0000
	 */
	struct XRSystem___c__DisplayClass26_0
	{
	public:
		class Camera*                                              camera;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.LibTessDotNet.Vec3
	 * Size -> 0x0000
	 */
	struct Vec3
	{
	public:
		float                                                      X;                                                       // 0x0000(0x0000)
		float                                                      Y;                                                       // 0x0004(0x0000)
		float                                                      Z;                                                       // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils+EdgePair
	 * Size -> 0x0000
	 */
	struct MeshUtils_EdgePair
	{
	public:
		class MeshUtils_Edge*                                      e;                                                       // 0x0000(0x0000)
		class MeshUtils_Edge*                                      eSym;                                                    // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.LibTessDotNet.PQHandle
	 * Size -> 0x0000
	 */
	struct PQHandle
	{
	public:
		int32_t                                                    handle;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.LibTessDotNet.ContourVertex
	 * Size -> 0x0000
	 */
	struct ContourVertex
	{
	public:
		struct Vec3                                                Position;                                                // 0x0000(0x0000)
		class Il2CppObject*                                        Data;                                                    // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.Internal.DeferredTiler
	 * Size -> 0x0000
	 */
	struct DeferredTiler
	{
	public:
		int32_t                                                    m_TilePixelWidth;                                        // 0x0000(0x0000)
		int32_t                                                    m_TilePixelHeight;                                       // 0x0004(0x0000)
		int32_t                                                    m_TileXCount;                                            // 0x0008(0x0000)
		int32_t                                                    m_TileYCount;                                            // 0x000C(0x0000)
		int32_t                                                    m_TileHeaderSize;                                        // 0x0010(0x0000)
		int32_t                                                    m_AvgLightPerTile;                                       // 0x0014(0x0000)
		int32_t                                                    m_TilerLevel;                                            // 0x0018(0x0000)
		struct FrustumPlanes                                       m_FrustumPlanes;                                         // 0x001C(0x0000)
		bool                                                       m_IsOrthographic;                                        // 0x0034(0x0000)
		struct NativeArray_int                                     m_Counters;                                              // 0x0038(0x0000)
		struct NativeArray_ushort                                  m_TileData;                                              // 0x0048(0x0000)
		struct NativeArray_uint                                    m_TileHeaders;                                           // 0x0058(0x0000)
		struct NativeArray_PreTile                                 m_PreTiles;                                              // 0x0068(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.Internal.DeferredLights+CullLightsJob
	 * Size -> 0x0000
	 */
	struct DeferredLights_CullLightsJob
	{
	public:
		struct DeferredTiler                                       tiler;                                                   // 0x0000(0x0000)
		struct NativeArray_DeferredTiler_PrePunctualLight          prePunctualLights;                                       // 0x0078(0x0000)
		struct NativeArray_ushort                                  coarseTiles;                                             // 0x0088(0x0000)
		struct NativeArray_uint                                    coarseTileHeaders;                                       // 0x0098(0x0000)
		int32_t                                                    coarseHeaderOffset;                                      // 0x00A8(0x0000)
		int32_t                                                    istart;                                                  // 0x00AC(0x0000)
		int32_t                                                    iend;                                                    // 0x00B0(0x0000)
		int32_t                                                    jstart;                                                  // 0x00B4(0x0000)
		int32_t                                                    jend;                                                    // 0x00B8(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.Internal.DeferredLights+DrawCall
	 * Size -> 0x0000
	 */
	struct DeferredLights_DrawCall
	{
	public:
		class ComputeBuffer*                                       tileList;                                                // 0x0000(0x0000)
		class ComputeBuffer*                                       punctualLightBuffer;                                     // 0x0008(0x0000)
		class ComputeBuffer*                                       relLightList;                                            // 0x0010(0x0000)
		int32_t                                                    tileListSize;                                            // 0x0018(0x0000)
		int32_t                                                    punctualLightBufferSize;                                 // 0x001C(0x0000)
		int32_t                                                    relLightListSize;                                        // 0x0020(0x0000)
		int32_t                                                    instanceOffset;                                          // 0x0024(0x0000)
		int32_t                                                    instanceCount;                                           // 0x0028(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.Internal.DeferredLights+InitParams
	 * Size -> 0x0000
	 */
	struct DeferredLights_InitParams
	{
	public:
		class Material*                                            tileDepthInfoMaterial;                                   // 0x0000(0x0000)
		class Material*                                            tileDeferredMaterial;                                    // 0x0008(0x0000)
		class Material*                                            stencilDeferredMaterial;                                 // 0x0010(0x0000)
		class LightCookieManager*                                  lightCookieManager;                                      // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.Internal.BitArray
	 * Size -> 0x0000
	 */
	struct BitArray_1
	{
	public:
		struct NativeArray_uint                                    m_Mem;                                                   // 0x0000(0x0000)
		int32_t                                                    m_BitCount;                                              // 0x0010(0x0000)
		int32_t                                                    m_IntCount;                                              // 0x0014(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.Internal.DeferredTiler+PrePunctualLight
	 * Size -> 0x0000
	 */
	struct DeferredTiler_PrePunctualLight
	{
	public:
		struct float3                                              posVS;                                                   // 0x0000(0x0000)
		float                                                      radius;                                                  // 0x000C(0x0000)
		float                                                      minDist;                                                 // 0x0010(0x0000)
		struct float2                                              screenPos;                                               // 0x0014(0x0000)
		uint16_t                                                   visLightIndex;                                           // 0x001C(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.Internal.AdditionalLightsShadowCasterPass+ShadowResolutionRequest
	 * Size -> 0x0000
	 */
	struct AdditionalLightsShadowCasterPass_ShadowResolutionRequest
	{
	public:
		int32_t                                                    visibleLightIndex;                                       // 0x0000(0x0000)
		int32_t                                                    perLightShadowSliceIndex;                                // 0x0004(0x0000)
		int32_t                                                    requestedResolution;                                     // 0x0008(0x0000)
		bool                                                       softShadow;                                              // 0x000C(0x0000)
		bool                                                       pointLightShadow;                                        // 0x000D(0x0000)
		int32_t                                                    offsetX;                                                 // 0x0010(0x0000)
		int32_t                                                    offsetY;                                                 // 0x0014(0x0000)
		int32_t                                                    allocatedResolution;                                     // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.Internal.ForwardLights+InitParams
	 * Size -> 0x0000
	 */
	struct ForwardLights_InitParams
	{
	public:
		class LightCookieManager*                                  lightCookieManager;                                      // 0x0000(0x0000)
		bool                                                       clusteredRendering;                                      // 0x0008(0x0000)
		int32_t                                                    tileSize;                                                // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.Internal.PostProcessPass+<>c__DisplayClass58_0
	 * Size -> 0x0000
	 */
	struct PostProcessPass___c__DisplayClass58_0
	{
	public:
		struct RenderTargetIdentifier                              source;                                                  // 0x0000(0x0000)
		class PostProcessPass*                                     _4__this;                                                // 0x0028(0x0000)
		struct RenderTargetIdentifier                              destination;                                             // 0x0030(0x0000)
		class CommandBuffer*                                       cmd;                                                     // 0x0058(0x0000)
		bool                                                       tempTargetUsed;                                          // 0x0060(0x0000)
		bool                                                       tempTarget2Used;                                         // 0x0061(0x0000)
		int32_t                                                    amountOfPassesRemaining;                                 // 0x0064(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.UnityEngine.Rendering.Universal.Internal.RenderTargetBufferSystem+SwapBuffer
	 * Size -> 0x0000
	 */
	struct RenderTargetBufferSystem_SwapBuffer
	{
	public:
		struct RenderTargetHandle                                  rt;                                                      // 0x0000(0x0000)
		int32_t                                                    name;                                                    // 0x0030(0x0000)
		int32_t                                                    msaa;                                                    // 0x0034(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=12
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_12_5
	{	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=16
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_16_5
	{	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=24
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_24_6
	{	};

	/**
	 * Struct Unity.RenderPipelines.Universal.Runtime.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=960
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_960_1
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngineInternal.MathfInternal
	 * Size -> 0x0000
	 */
	struct MathfInternal
	{	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Profiling.ProfilerCategory
	 * Size -> 0x0000
	 */
	struct ProfilerCategory
	{
	public:
		uint16_t                                                   m_CategoryId;                                            // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Profiling.ProfilerMarker+AutoScope
	 * Size -> 0x0000
	 */
	struct ProfilerMarker_AutoScope
	{
	public:
		intptr_t                                                   m_Ptr;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Profiling.ProfilerMarker
	 * Size -> 0x0000
	 */
	struct ProfilerMarker
	{
	public:
		intptr_t                                                   m_Ptr;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Profiling.ProfilerRecorderSample
	 * Size -> 0x0000
	 */
	struct ProfilerRecorderSample
	{
	public:
		int64_t                                                    value;                                                   // 0x0000(0x0000)
		int64_t                                                    count;                                                   // 0x0008(0x0000)
		int64_t                                                    refValue;                                                // 0x0010(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Profiling.LowLevel.Unsafe.ProfilerRecorderDescription
	 * Size -> 0x0000
	 */
	struct ProfilerRecorderDescription
	{
	public:
		struct ProfilerCategory                                    category;                                                // 0x0000(0x0000)
		uint16_t                                                   flags;                                                   // 0x0002(0x0000)
		uint8_t                                                    dataType;                                                // 0x0004(0x0000)
		uint8_t                                                    unitType;                                                // 0x0005(0x0000)
		int32_t                                                    reserved0;                                               // 0x0008(0x0000)
		int32_t                                                    nameUtf8Len;                                             // 0x000C(0x0000)
		uint8_t*                                                   nameUtf8;                                                // 0x0010(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Profiling.LowLevel.Unsafe.ProfilerRecorderHandle
	 * Size -> 0x0000
	 */
	struct ProfilerRecorderHandle
	{
	public:
		uint64_t                                                   handle;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Profiling.ProfilerRecorder
	 * Size -> 0x0000
	 */
	struct ProfilerRecorder
	{
	public:
		uint64_t                                                   handle;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Profiling.LowLevel.Unsafe.ProfilerCategoryDescription
	 * Size -> 0x0000
	 */
	struct ProfilerCategoryDescription
	{
	public:
		uint16_t                                                   Id;                                                      // 0x0000(0x0000)
		uint16_t                                                   Flags;                                                   // 0x0002(0x0000)
		struct Color32                                             Color;                                                   // 0x0004(0x0000)
		int32_t                                                    reserved0;                                               // 0x0008(0x0000)
		int32_t                                                    NameUtf8Len;                                             // 0x000C(0x0000)
		uint8_t*                                                   NameUtf8;                                                // 0x0010(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Jobs.LowLevel.Unsafe.JobRanges
	 * Size -> 0x0000
	 */
	struct JobRanges
	{
	public:
		int32_t                                                    BatchSize;                                               // 0x0000(0x0000)
		int32_t                                                    NumJobs;                                                 // 0x0004(0x0000)
		int32_t                                                    TotalIterationCount;                                     // 0x0008(0x0000)
		int32_t                                                    NumPhases;                                               // 0x000C(0x0000)
		intptr_t                                                   StartEndIndex;                                           // 0x0010(0x0000)
		intptr_t                                                   PhaseData;                                               // 0x0018(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Jobs.IJobExtensions+JobStruct<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct IJobExtensions_JobStruct_T
	{	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Jobs.IJobForExtensions+ForJobStruct<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct IJobForExtensions_ForJobStruct_T
	{	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Jobs.LowLevel.Unsafe.JobsUtility+JobScheduleParameters
	 * Size -> 0x0000
	 */
	struct JobsUtility_JobScheduleParameters
	{
	public:
		struct JobHandle                                           Dependency;                                              // 0x0000(0x0000)
		int32_t                                                    ScheduleMode;                                            // 0x0010(0x0000)
		intptr_t                                                   ReflectionData;                                          // 0x0018(0x0000)
		intptr_t                                                   JobDataPtr;                                              // 0x0020(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.IO.LowLevel.Unsafe.AsyncReadManagerRequestMetric
	 * Size -> 0x0000
	 */
	struct AsyncReadManagerRequestMetric
	{
	public:
		class Il2CppString*                                        AssetName_k__BackingField;                               // 0x0000(0x0000)
		class Il2CppString*                                        FileName_k__BackingField;                                // 0x0008(0x0000)
		uint64_t                                                   OffsetBytes_k__BackingField;                             // 0x0010(0x0000)
		uint64_t                                                   SizeBytes_k__BackingField;                               // 0x0018(0x0000)
		uint64_t                                                   AssetTypeId_k__BackingField;                             // 0x0020(0x0000)
		uint64_t                                                   CurrentBytesRead_k__BackingField;                        // 0x0028(0x0000)
		uint32_t                                                   BatchReadCount_k__BackingField;                          // 0x0030(0x0000)
		bool                                                       IsBatchRead_k__BackingField;                             // 0x0034(0x0000)
		int32_t                                                    State_k__BackingField;                                   // 0x0038(0x0000)
		int32_t                                                    ReadType_k__BackingField;                                // 0x003C(0x0000)
		int32_t                                                    PriorityLevel_k__BackingField;                           // 0x0040(0x0000)
		int32_t                                                    Subsystem_k__BackingField;                               // 0x0044(0x0000)
		double                                                     RequestTimeMicroseconds_k__BackingField;                 // 0x0048(0x0000)
		double                                                     TimeInQueueMicroseconds_k__BackingField;                 // 0x0050(0x0000)
		double                                                     TotalTimeMicroseconds_k__BackingField;                   // 0x0058(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArrayDispose
	 * Size -> 0x0000
	 */
	struct NativeArrayDispose
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArrayDisposeJob
	 * Size -> 0x0000
	 */
	struct NativeArrayDisposeJob
	{
	public:
		struct NativeArrayDispose                                  Data;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.LowLevel.Unsafe.UnsafeUtility+IsUnmanagedCache<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct UnsafeUtility_IsUnmanagedCache_T
	{	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.LowLevel.Unsafe.UnsafeUtility+AlignOfHelper<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct UnsafeUtility_AlignOfHelper_T
	{
	public:
		uint8_t                                                    dummy;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        data;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.SortingLayer
	 * Size -> 0x0000
	 */
	struct SortingLayer
	{
	public:
		int32_t                                                    m_Id;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Keyframe
	 * Size -> 0x0000
	 */
	struct Keyframe
	{
	public:
		float                                                      m_Time;                                                  // 0x0000(0x0000)
		float                                                      m_Value;                                                 // 0x0004(0x0000)
		float                                                      m_InTangent;                                             // 0x0008(0x0000)
		float                                                      m_OutTangent;                                            // 0x000C(0x0000)
		int32_t                                                    m_WeightedMode;                                          // 0x0010(0x0000)
		float                                                      m_InWeight;                                              // 0x0014(0x0000)
		float                                                      m_OutWeight;                                             // 0x0018(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Camera+RenderRequest
	 * Size -> 0x0000
	 */
	struct Camera_RenderRequest
	{
	public:
		int32_t                                                    m_CameraRenderMode;                                      // 0x0000(0x0000)
		class RenderTexture*                                       m_ResultRT;                                              // 0x0008(0x0000)
		int32_t                                                    m_OutputSpace;                                           // 0x0010(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.CullingGroupEvent
	 * Size -> 0x0000
	 */
	struct CullingGroupEvent
	{
	public:
		int32_t                                                    m_Index;                                                 // 0x0000(0x0000)
		uint8_t                                                    m_PrevState;                                             // 0x0004(0x0000)
		uint8_t                                                    m_ThisState;                                             // 0x0005(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.ExposedReference<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ExposedReference_T
	{
	public:
		struct PropertyName                                        exposedName;                                             // 0x0000(0x0000)
		class Object_1*                                            defaultValue;                                            // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Ray2D
	 * Size -> 0x0000
	 */
	struct Ray2D
	{
	public:
		struct Vector2                                             m_Origin;                                                // 0x0000(0x0000)
		struct Vector2                                             m_Direction;                                             // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.BeforeRenderHelper+OrderBlock
	 * Size -> 0x0000
	 */
	struct BeforeRenderHelper_OrderBlock
	{
	public:
		int32_t                                                    order;                                                   // 0x0000(0x0000)
		class UnityAction*                                         callback;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Resolution
	 * Size -> 0x0000
	 */
	struct Resolution_1
	{
	public:
		int32_t                                                    m_Width;                                                 // 0x0000(0x0000)
		int32_t                                                    m_Height;                                                // 0x0004(0x0000)
		int32_t                                                    m_RefreshRate;                                           // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Internal_DrawTextureArguments
	 * Size -> 0x0000
	 */
	struct Internal_DrawTextureArguments
	{
	public:
		struct Rect                                                screenRect;                                              // 0x0000(0x0000)
		struct Rect                                                sourceRect;                                              // 0x0010(0x0000)
		int32_t                                                    leftBorder;                                              // 0x0020(0x0000)
		int32_t                                                    rightBorder;                                             // 0x0024(0x0000)
		int32_t                                                    topBorder;                                               // 0x0028(0x0000)
		int32_t                                                    bottomBorder;                                            // 0x002C(0x0000)
		struct Color                                               leftBorderColor;                                         // 0x0030(0x0000)
		struct Color                                               rightBorderColor;                                        // 0x0040(0x0000)
		struct Color                                               topBorderColor;                                          // 0x0050(0x0000)
		struct Color                                               bottomBorderColor;                                       // 0x0060(0x0000)
		struct Color                                               color;                                                   // 0x0070(0x0000)
		struct Vector4                                             borderWidths;                                            // 0x0080(0x0000)
		struct Vector4                                             cornerRadiuses;                                          // 0x0090(0x0000)
		bool                                                       smoothCorners;                                           // 0x00A0(0x0000)
		int32_t                                                    pass;                                                    // 0x00A4(0x0000)
		class Texture*                                             texture;                                                 // 0x00A8(0x0000)
		class Material*                                            mat;                                                     // 0x00B0(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.LightBakingOutput
	 * Size -> 0x0000
	 */
	struct LightBakingOutput
	{
	public:
		int32_t                                                    probeOcclusionLightIndex;                                // 0x0000(0x0000)
		int32_t                                                    occlusionMaskChannel;                                    // 0x0004(0x0000)
		int32_t                                                    lightmapBakeType;                                        // 0x0008(0x0000)
		int32_t                                                    mixedLightingMode;                                       // 0x000C(0x0000)
		bool                                                       isBaked;                                                 // 0x0010(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Mesh+MeshData
	 * Size -> 0x0000
	 */
	struct Mesh_MeshData
	{
	public:
		intptr_t                                                   m_Ptr;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.BoneWeight
	 * Size -> 0x0000
	 */
	struct BoneWeight
	{
	public:
		float                                                      m_Weight0;                                               // 0x0000(0x0000)
		float                                                      m_Weight1;                                               // 0x0004(0x0000)
		float                                                      m_Weight2;                                               // 0x0008(0x0000)
		float                                                      m_Weight3;                                               // 0x000C(0x0000)
		int32_t                                                    m_BoneIndex0;                                            // 0x0010(0x0000)
		int32_t                                                    m_BoneIndex1;                                            // 0x0014(0x0000)
		int32_t                                                    m_BoneIndex2;                                            // 0x0018(0x0000)
		int32_t                                                    m_BoneIndex3;                                            // 0x001C(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.CombineInstance
	 * Size -> 0x0000
	 */
	struct CombineInstance
	{
	public:
		int32_t                                                    m_MeshInstanceID;                                        // 0x0000(0x0000)
		int32_t                                                    m_SubMeshIndex;                                          // 0x0004(0x0000)
		struct Matrix4x4                                           m_Transform;                                             // 0x0008(0x0000)
		struct Vector4                                             m_LightmapScaleOffset;                                   // 0x0048(0x0000)
		struct Vector4                                             m_RealtimeLightmapScaleOffset;                           // 0x0058(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Hash128
	 * Size -> 0x0000
	 */
	struct Hash128
	{
	public:
		uint64_t                                                   u64_0;                                                   // 0x0000(0x0000)
		uint64_t                                                   u64_1;                                                   // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.SpookyHash+U
	 * Size -> 0x0000
	 */
	struct SpookyHash_U
	{
	public:
		uint8_t*                                                   p8;                                                      // 0x0000(0x0000)
		uint32_t*                                                  p32;                                                     // 0x0000(0x0000)
		uint64_t*                                                  p64;                                                     // 0x0000(0x0000)
		uint64_t                                                   i;                                                       // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.GradientColorKey
	 * Size -> 0x0000
	 */
	struct GradientColorKey
	{
	public:
		struct Color                                               color;                                                   // 0x0000(0x0000)
		float                                                      time;                                                    // 0x0010(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.GradientAlphaKey
	 * Size -> 0x0000
	 */
	struct GradientAlphaKey
	{
	public:
		float                                                      alpha;                                                   // 0x0000(0x0000)
		float                                                      time;                                                    // 0x0004(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Mathf
	 * Size -> 0x0000
	 */
	struct Mathf
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Vector3Int
	 * Size -> 0x0000
	 */
	struct Vector3Int
	{
	public:
		int32_t                                                    m_X;                                                     // 0x0000(0x0000)
		int32_t                                                    m_Y;                                                     // 0x0004(0x0000)
		int32_t                                                    m_Z;                                                     // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Random+State
	 * Size -> 0x0000
	 */
	struct Random_State
	{
	public:
		int32_t                                                    s0;                                                      // 0x0000(0x0000)
		int32_t                                                    s1;                                                      // 0x0004(0x0000)
		int32_t                                                    s2;                                                      // 0x0008(0x0000)
		int32_t                                                    s3;                                                      // 0x000C(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.CastHelper<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct CastHelper_T
	{
	public:
		class Il2CppObject*                                        t;                                                       // 0x0000(0x0000)
		intptr_t                                                   onePointerFurtherThanT;                                  // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.RangeInt
	 * Size -> 0x0000
	 */
	struct RangeInt
	{
	public:
		int32_t                                                    start;                                                   // 0x0000(0x0000)
		int32_t                                                    length;                                                  // 0x0004(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.ScriptingUtility+TestClass
	 * Size -> 0x0000
	 */
	struct ScriptingUtility_TestClass
	{
	public:
		int32_t                                                    value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.UnitySynchronizationContext+WorkRequest
	 * Size -> 0x0000
	 */
	struct UnitySynchronizationContext_WorkRequest
	{
	public:
		class SendOrPostCallback*                                  m_DelagateCallback;                                      // 0x0000(0x0000)
		class Il2CppObject*                                        m_DelagateState;                                         // 0x0008(0x0000)
		class ManualResetEvent*                                    m_WaitHandle;                                            // 0x0010(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.TouchScreenKeyboard_InternalConstructorHelperArguments
	 * Size -> 0x0000
	 */
	struct TouchScreenKeyboard_InternalConstructorHelperArguments
	{
	public:
		uint32_t                                                   keyboardType;                                            // 0x0000(0x0000)
		uint32_t                                                   autocorrection;                                          // 0x0004(0x0000)
		uint32_t                                                   multiline;                                               // 0x0008(0x0000)
		uint32_t                                                   secure;                                                  // 0x000C(0x0000)
		uint32_t                                                   alert;                                                   // 0x0010(0x0000)
		int32_t                                                    characterLimit;                                          // 0x0014(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.DrivenRectTransformTracker
	 * Size -> 0x0000
	 */
	struct DrivenRectTransformTracker
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.U2D.SpriteBone
	 * Size -> 0x0000
	 */
	struct SpriteBone
	{
	public:
		class Il2CppString*                                        m_Name;                                                  // 0x0000(0x0000)
		class Il2CppString*                                        m_Guid;                                                  // 0x0008(0x0000)
		struct Vector3                                             m_Position;                                              // 0x0010(0x0000)
		struct Quaternion                                          m_Rotation;                                              // 0x001C(0x0000)
		float                                                      m_Length;                                                // 0x002C(0x0000)
		int32_t                                                    m_ParentId;                                              // 0x0030(0x0000)
		struct Color32                                             m_Color;                                                 // 0x0034(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.U2D.SpriteChannelInfo
	 * Size -> 0x0000
	 */
	struct SpriteChannelInfo
	{
	public:
		intptr_t                                                   m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Count;                                                 // 0x0008(0x0000)
		int32_t                                                    m_Offset;                                                // 0x000C(0x0000)
		int32_t                                                    m_Stride;                                                // 0x0010(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Profiling.Experimental.DebugScreenCapture
	 * Size -> 0x0000
	 */
	struct DebugScreenCapture
	{
	public:
		struct NativeArray_byte                                    rawImageDataReference_k__BackingField;                   // 0x0000(0x0000)
		int32_t                                                    imageFormat_k__BackingField;                             // 0x0010(0x0000)
		int32_t                                                    width_k__BackingField;                                   // 0x0014(0x0000)
		int32_t                                                    height_k__BackingField;                                  // 0x0018(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Jobs.IJobParallelForTransformExtensions.TransformParallelForLoopStruct+TransformJobData<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct IJobParallelForTransformExtensions_TransformParallelForLoopStruct_TransformJobData_T
	{
	public:
		intptr_t                                                   TransformAccessArray;                                    // 0x0000(0x0000)
		int32_t                                                    IsReadOnly;                                              // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Jobs.IJobParallelForTransformExtensions+TransformParallelForLoopStruct<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct IJobParallelForTransformExtensions_TransformParallelForLoopStruct_T
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Jobs.TransformAccessArray
	 * Size -> 0x0000
	 */
	struct TransformAccessArray
	{
	public:
		intptr_t                                                   m_TransformArray;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Windows.Speech.SemanticMeaning
	 * Size -> 0x0000
	 */
	struct SemanticMeaning
	{
	public:
		class Il2CppString*                                        key;                                                     // 0x0000(0x0000)
		class String_Array*                                        values;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Windows.Speech.PhraseRecognizedEventArgs
	 * Size -> 0x0000
	 */
	struct PhraseRecognizedEventArgs
	{
	public:
		int32_t                                                    confidence;                                              // 0x0000(0x0000)
		class SemanticMeaning_Array*                               semanticMeanings;                                        // 0x0008(0x0000)
		class Il2CppString*                                        text;                                                    // 0x0010(0x0000)
		struct DateTime                                            phraseStartTime;                                         // 0x0018(0x0000)
		struct TimeSpan                                            phraseDuration;                                          // 0x0020(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Windows.WebCam.PhotoCapture+PhotoCaptureResult
	 * Size -> 0x0000
	 */
	struct PhotoCapture_PhotoCaptureResult
	{
	public:
		int32_t                                                    resultType;                                              // 0x0000(0x0000)
		int64_t                                                    hResult;                                                 // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Windows.WebCam.VideoCapture+VideoCaptureResult
	 * Size -> 0x0000
	 */
	struct VideoCapture_VideoCaptureResult
	{
	public:
		int32_t                                                    resultType;                                              // 0x0000(0x0000)
		int64_t                                                    hResult;                                                 // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Scripting.APIUpdating.MovedFromAttributeData
	 * Size -> 0x0000
	 */
	struct MovedFromAttributeData
	{
	public:
		class Il2CppString*                                        className;                                               // 0x0000(0x0000)
		class Il2CppString*                                        nameSpace;                                               // 0x0008(0x0000)
		class Il2CppString*                                        assembly;                                                // 0x0010(0x0000)
		bool                                                       classHasChanged;                                         // 0x0018(0x0000)
		bool                                                       nameSpaceHasChanged;                                     // 0x0019(0x0000)
		bool                                                       assemblyHasChanged;                                      // 0x001A(0x0000)
		bool                                                       autoUdpateAPI;                                           // 0x001B(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.SceneManagement.Scene
	 * Size -> 0x0000
	 */
	struct Scene
	{
	public:
		int32_t                                                    m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.SceneManagement.LoadSceneParameters
	 * Size -> 0x0000
	 */
	struct LoadSceneParameters
	{
	public:
		int32_t                                                    m_LoadSceneMode;                                         // 0x0000(0x0000)
		int32_t                                                    m_LocalPhysicsMode;                                      // 0x0004(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.LowLevel.PlayerLoopSystemInternal
	 * Size -> 0x0000
	 */
	struct PlayerLoopSystemInternal
	{
	public:
		class Type*                                                type;                                                    // 0x0000(0x0000)
		class PlayerLoopSystem_UpdateFunction*                     updateDelegate;                                          // 0x0008(0x0000)
		intptr_t                                                   updateFunction;                                          // 0x0010(0x0000)
		intptr_t                                                   loopConditionFunction;                                   // 0x0018(0x0000)
		int32_t                                                    numSubSystems;                                           // 0x0020(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.LowLevel.PlayerLoopSystem
	 * Size -> 0x0000
	 */
	struct PlayerLoopSystem
	{
	public:
		class Type*                                                type;                                                    // 0x0000(0x0000)
		class PlayerLoopSystem_Array*                              subSystemList;                                           // 0x0008(0x0000)
		class PlayerLoopSystem_UpdateFunction*                     updateDelegate;                                          // 0x0010(0x0000)
		intptr_t                                                   updateFunction;                                          // 0x0018(0x0000)
		intptr_t                                                   loopConditionFunction;                                   // 0x0020(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.TimeUpdate+WaitForLastPresentationAndUpdateTime
	 * Size -> 0x0000
	 */
	struct TimeUpdate_WaitForLastPresentationAndUpdateTime
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.TimeUpdate
	 * Size -> 0x0000
	 */
	struct TimeUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.Initialization+ProfilerStartFrame
	 * Size -> 0x0000
	 */
	struct Initialization_ProfilerStartFrame
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.Initialization+UpdateCameraMotionVectors
	 * Size -> 0x0000
	 */
	struct Initialization_UpdateCameraMotionVectors
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.Initialization+DirectorSampleTime
	 * Size -> 0x0000
	 */
	struct Initialization_DirectorSampleTime
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.Initialization+AsyncUploadTimeSlicedUpdate
	 * Size -> 0x0000
	 */
	struct Initialization_AsyncUploadTimeSlicedUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.Initialization+SynchronizeState
	 * Size -> 0x0000
	 */
	struct Initialization_SynchronizeState
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.Initialization+SynchronizeInputs
	 * Size -> 0x0000
	 */
	struct Initialization_SynchronizeInputs
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.Initialization+XREarlyUpdate
	 * Size -> 0x0000
	 */
	struct Initialization_XREarlyUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.Initialization
	 * Size -> 0x0000
	 */
	struct Initialization
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.EarlyUpdate+PollPlayerConnection
	 * Size -> 0x0000
	 */
	struct EarlyUpdate_PollPlayerConnection
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.EarlyUpdate+PollHtcsPlayerConnection
	 * Size -> 0x0000
	 */
	struct EarlyUpdate_PollHtcsPlayerConnection
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.EarlyUpdate+GpuTimestamp
	 * Size -> 0x0000
	 */
	struct EarlyUpdate_GpuTimestamp
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.EarlyUpdate+AnalyticsCoreStatsUpdate
	 * Size -> 0x0000
	 */
	struct EarlyUpdate_AnalyticsCoreStatsUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.EarlyUpdate+UnityWebRequestUpdate
	 * Size -> 0x0000
	 */
	struct EarlyUpdate_UnityWebRequestUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.EarlyUpdate+UpdateStreamingManager
	 * Size -> 0x0000
	 */
	struct EarlyUpdate_UpdateStreamingManager
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.EarlyUpdate+ExecuteMainThreadJobs
	 * Size -> 0x0000
	 */
	struct EarlyUpdate_ExecuteMainThreadJobs
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.EarlyUpdate+ProcessMouseInWindow
	 * Size -> 0x0000
	 */
	struct EarlyUpdate_ProcessMouseInWindow
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.EarlyUpdate+ClearIntermediateRenderers
	 * Size -> 0x0000
	 */
	struct EarlyUpdate_ClearIntermediateRenderers
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.EarlyUpdate+ClearLines
	 * Size -> 0x0000
	 */
	struct EarlyUpdate_ClearLines
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.EarlyUpdate+PresentBeforeUpdate
	 * Size -> 0x0000
	 */
	struct EarlyUpdate_PresentBeforeUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.EarlyUpdate+ResetFrameStatsAfterPresent
	 * Size -> 0x0000
	 */
	struct EarlyUpdate_ResetFrameStatsAfterPresent
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.EarlyUpdate+UpdateAsyncReadbackManager
	 * Size -> 0x0000
	 */
	struct EarlyUpdate_UpdateAsyncReadbackManager
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.EarlyUpdate+UpdateTextureStreamingManager
	 * Size -> 0x0000
	 */
	struct EarlyUpdate_UpdateTextureStreamingManager
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.EarlyUpdate+UpdatePreloading
	 * Size -> 0x0000
	 */
	struct EarlyUpdate_UpdatePreloading
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.EarlyUpdate+RendererNotifyInvisible
	 * Size -> 0x0000
	 */
	struct EarlyUpdate_RendererNotifyInvisible
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.EarlyUpdate+PlayerCleanupCachedData
	 * Size -> 0x0000
	 */
	struct EarlyUpdate_PlayerCleanupCachedData
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.EarlyUpdate+UpdateMainGameViewRect
	 * Size -> 0x0000
	 */
	struct EarlyUpdate_UpdateMainGameViewRect
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.EarlyUpdate+UpdateCanvasRectTransform
	 * Size -> 0x0000
	 */
	struct EarlyUpdate_UpdateCanvasRectTransform
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.EarlyUpdate+UpdateInputManager
	 * Size -> 0x0000
	 */
	struct EarlyUpdate_UpdateInputManager
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.EarlyUpdate+ProcessRemoteInput
	 * Size -> 0x0000
	 */
	struct EarlyUpdate_ProcessRemoteInput
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.EarlyUpdate+XRUpdate
	 * Size -> 0x0000
	 */
	struct EarlyUpdate_XRUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.EarlyUpdate+ScriptRunDelayedStartupFrame
	 * Size -> 0x0000
	 */
	struct EarlyUpdate_ScriptRunDelayedStartupFrame
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.EarlyUpdate+UpdateKinect
	 * Size -> 0x0000
	 */
	struct EarlyUpdate_UpdateKinect
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.EarlyUpdate+DeliverIosPlatformEvents
	 * Size -> 0x0000
	 */
	struct EarlyUpdate_DeliverIosPlatformEvents
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.EarlyUpdate+DispatchEventQueueEvents
	 * Size -> 0x0000
	 */
	struct EarlyUpdate_DispatchEventQueueEvents
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.EarlyUpdate+PhysicsResetInterpolatedTransformPosition
	 * Size -> 0x0000
	 */
	struct EarlyUpdate_PhysicsResetInterpolatedTransformPosition
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.EarlyUpdate+SpriteAtlasManagerUpdate
	 * Size -> 0x0000
	 */
	struct EarlyUpdate_SpriteAtlasManagerUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.EarlyUpdate+TangoUpdate
	 * Size -> 0x0000
	 */
	struct EarlyUpdate_TangoUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.EarlyUpdate+ARCoreUpdate
	 * Size -> 0x0000
	 */
	struct EarlyUpdate_ARCoreUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.EarlyUpdate+PerformanceAnalyticsUpdate
	 * Size -> 0x0000
	 */
	struct EarlyUpdate_PerformanceAnalyticsUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.EarlyUpdate
	 * Size -> 0x0000
	 */
	struct EarlyUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.FixedUpdate+ClearLines
	 * Size -> 0x0000
	 */
	struct FixedUpdate_ClearLines
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.FixedUpdate+DirectorFixedSampleTime
	 * Size -> 0x0000
	 */
	struct FixedUpdate_DirectorFixedSampleTime
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.FixedUpdate+AudioFixedUpdate
	 * Size -> 0x0000
	 */
	struct FixedUpdate_AudioFixedUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.FixedUpdate+ScriptRunBehaviourFixedUpdate
	 * Size -> 0x0000
	 */
	struct FixedUpdate_ScriptRunBehaviourFixedUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.FixedUpdate+DirectorFixedUpdate
	 * Size -> 0x0000
	 */
	struct FixedUpdate_DirectorFixedUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.FixedUpdate+LegacyFixedAnimationUpdate
	 * Size -> 0x0000
	 */
	struct FixedUpdate_LegacyFixedAnimationUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.FixedUpdate+XRFixedUpdate
	 * Size -> 0x0000
	 */
	struct FixedUpdate_XRFixedUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.FixedUpdate+PhysicsFixedUpdate
	 * Size -> 0x0000
	 */
	struct FixedUpdate_PhysicsFixedUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.FixedUpdate+Physics2DFixedUpdate
	 * Size -> 0x0000
	 */
	struct FixedUpdate_Physics2DFixedUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.FixedUpdate+PhysicsClothFixedUpdate
	 * Size -> 0x0000
	 */
	struct FixedUpdate_PhysicsClothFixedUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.FixedUpdate+DirectorFixedUpdatePostPhysics
	 * Size -> 0x0000
	 */
	struct FixedUpdate_DirectorFixedUpdatePostPhysics
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.FixedUpdate+ScriptRunDelayedFixedFrameRate
	 * Size -> 0x0000
	 */
	struct FixedUpdate_ScriptRunDelayedFixedFrameRate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.FixedUpdate+NewInputFixedUpdate
	 * Size -> 0x0000
	 */
	struct FixedUpdate_NewInputFixedUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.FixedUpdate
	 * Size -> 0x0000
	 */
	struct FixedUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PreUpdate+PhysicsUpdate
	 * Size -> 0x0000
	 */
	struct PreUpdate_PhysicsUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PreUpdate+Physics2DUpdate
	 * Size -> 0x0000
	 */
	struct PreUpdate_Physics2DUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PreUpdate+CheckTexFieldInput
	 * Size -> 0x0000
	 */
	struct PreUpdate_CheckTexFieldInput
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PreUpdate+IMGUISendQueuedEvents
	 * Size -> 0x0000
	 */
	struct PreUpdate_IMGUISendQueuedEvents
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PreUpdate+SendMouseEvents
	 * Size -> 0x0000
	 */
	struct PreUpdate_SendMouseEvents
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PreUpdate+AIUpdate
	 * Size -> 0x0000
	 */
	struct PreUpdate_AIUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PreUpdate+WindUpdate
	 * Size -> 0x0000
	 */
	struct PreUpdate_WindUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PreUpdate+UpdateVideo
	 * Size -> 0x0000
	 */
	struct PreUpdate_UpdateVideo
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PreUpdate+NewInputUpdate
	 * Size -> 0x0000
	 */
	struct PreUpdate_NewInputUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PreUpdate
	 * Size -> 0x0000
	 */
	struct PreUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.Update+ScriptRunBehaviourUpdate
	 * Size -> 0x0000
	 */
	struct Update_ScriptRunBehaviourUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.Update+DirectorUpdate
	 * Size -> 0x0000
	 */
	struct Update_DirectorUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.Update+ScriptRunDelayedDynamicFrameRate
	 * Size -> 0x0000
	 */
	struct Update_ScriptRunDelayedDynamicFrameRate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.Update+ScriptRunDelayedTasks
	 * Size -> 0x0000
	 */
	struct Update_ScriptRunDelayedTasks
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.Update
	 * Size -> 0x0000
	 */
	struct Update
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PreLateUpdate+Physics2DLateUpdate
	 * Size -> 0x0000
	 */
	struct PreLateUpdate_Physics2DLateUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PreLateUpdate+AIUpdatePostScript
	 * Size -> 0x0000
	 */
	struct PreLateUpdate_AIUpdatePostScript
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PreLateUpdate+DirectorUpdateAnimationBegin
	 * Size -> 0x0000
	 */
	struct PreLateUpdate_DirectorUpdateAnimationBegin
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PreLateUpdate+LegacyAnimationUpdate
	 * Size -> 0x0000
	 */
	struct PreLateUpdate_LegacyAnimationUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PreLateUpdate+DirectorUpdateAnimationEnd
	 * Size -> 0x0000
	 */
	struct PreLateUpdate_DirectorUpdateAnimationEnd
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PreLateUpdate+DirectorDeferredEvaluate
	 * Size -> 0x0000
	 */
	struct PreLateUpdate_DirectorDeferredEvaluate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PreLateUpdate+UIElementsUpdatePanels
	 * Size -> 0x0000
	 */
	struct PreLateUpdate_UIElementsUpdatePanels
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PreLateUpdate+UpdateNetworkManager
	 * Size -> 0x0000
	 */
	struct PreLateUpdate_UpdateNetworkManager
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PreLateUpdate+UpdateMasterServerInterface
	 * Size -> 0x0000
	 */
	struct PreLateUpdate_UpdateMasterServerInterface
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PreLateUpdate+UNetUpdate
	 * Size -> 0x0000
	 */
	struct PreLateUpdate_UNetUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PreLateUpdate+EndGraphicsJobsAfterScriptUpdate
	 * Size -> 0x0000
	 */
	struct PreLateUpdate_EndGraphicsJobsAfterScriptUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PreLateUpdate+ParticleSystemBeginUpdateAll
	 * Size -> 0x0000
	 */
	struct PreLateUpdate_ParticleSystemBeginUpdateAll
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PreLateUpdate+ScriptRunBehaviourLateUpdate
	 * Size -> 0x0000
	 */
	struct PreLateUpdate_ScriptRunBehaviourLateUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PreLateUpdate+ConstraintManagerUpdate
	 * Size -> 0x0000
	 */
	struct PreLateUpdate_ConstraintManagerUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PreLateUpdate
	 * Size -> 0x0000
	 */
	struct PreLateUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+PlayerSendFrameStarted
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_PlayerSendFrameStarted
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+UpdateRectTransform
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_UpdateRectTransform
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+UpdateCanvasRectTransform
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_UpdateCanvasRectTransform
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+PlayerUpdateCanvases
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_PlayerUpdateCanvases
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+UpdateAudio
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_UpdateAudio
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+UpdateVideo
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_UpdateVideo
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+DirectorLateUpdate
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_DirectorLateUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+ScriptRunDelayedDynamicFrameRate
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_ScriptRunDelayedDynamicFrameRate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+VFXUpdate
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_VFXUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+ParticleSystemEndUpdateAll
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_ParticleSystemEndUpdateAll
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+EndGraphicsJobsAfterScriptLateUpdate
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_EndGraphicsJobsAfterScriptLateUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+UpdateSubstance
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_UpdateSubstance
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+UpdateCustomRenderTextures
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_UpdateCustomRenderTextures
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+XRPostLateUpdate
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_XRPostLateUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+UpdateAllRenderers
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_UpdateAllRenderers
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+UpdateLightProbeProxyVolumes
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_UpdateLightProbeProxyVolumes
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+EnlightenRuntimeUpdate
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_EnlightenRuntimeUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+UpdateAllSkinnedMeshes
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_UpdateAllSkinnedMeshes
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+ProcessWebSendMessages
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_ProcessWebSendMessages
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+SortingGroupsUpdate
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_SortingGroupsUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+UpdateVideoTextures
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_UpdateVideoTextures
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+DirectorRenderImage
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_DirectorRenderImage
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+PlayerEmitCanvasGeometry
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_PlayerEmitCanvasGeometry
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+FinishFrameRendering
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_FinishFrameRendering
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+BatchModeUpdate
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_BatchModeUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+PlayerSendFrameComplete
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_PlayerSendFrameComplete
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+UpdateCaptureScreenshot
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_UpdateCaptureScreenshot
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+PresentAfterDraw
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_PresentAfterDraw
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+ClearImmediateRenderers
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_ClearImmediateRenderers
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+XRPostPresent
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_XRPostPresent
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+UpdateResolution
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_UpdateResolution
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+InputEndFrame
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_InputEndFrame
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+GUIClearEvents
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_GUIClearEvents
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+ShaderHandleErrors
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_ShaderHandleErrors
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+ResetInputAxis
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_ResetInputAxis
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+ThreadedLoadingDebug
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_ThreadedLoadingDebug
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+ProfilerSynchronizeStats
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_ProfilerSynchronizeStats
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+MemoryFrameMaintenance
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_MemoryFrameMaintenance
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+ExecuteGameCenterCallbacks
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_ExecuteGameCenterCallbacks
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+XRPreEndFrame
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_XRPreEndFrame
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+ProfilerEndFrame
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_ProfilerEndFrame
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+GraphicsWarmupPreloadedShaders
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_GraphicsWarmupPreloadedShaders
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+PlayerSendFramePostPresent
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_PlayerSendFramePostPresent
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+PhysicsSkinnedClothBeginUpdate
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_PhysicsSkinnedClothBeginUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+PhysicsSkinnedClothFinishUpdate
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_PhysicsSkinnedClothFinishUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate+TriggerEndOfFrameCallbacks
	 * Size -> 0x0000
	 */
	struct PostLateUpdate_TriggerEndOfFrameCallbacks
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.PlayerLoop.PostLateUpdate
	 * Size -> 0x0000
	 */
	struct PostLateUpdate
	{	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.SubMeshDescriptor
	 * Size -> 0x0000
	 */
	struct SubMeshDescriptor
	{
	public:
		struct Bounds                                              bounds_k__BackingField;                                  // 0x0000(0x0000)
		int32_t                                                    topology_k__BackingField;                                // 0x0018(0x0000)
		int32_t                                                    indexStart_k__BackingField;                              // 0x001C(0x0000)
		int32_t                                                    indexCount_k__BackingField;                              // 0x0020(0x0000)
		int32_t                                                    baseVertex_k__BackingField;                              // 0x0024(0x0000)
		int32_t                                                    firstVertex_k__BackingField;                             // 0x0028(0x0000)
		int32_t                                                    vertexCount_k__BackingField;                             // 0x002C(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.VertexAttributeDescriptor
	 * Size -> 0x0000
	 */
	struct VertexAttributeDescriptor
	{
	public:
		int32_t                                                    attribute_k__BackingField;                               // 0x0000(0x0000)
		int32_t                                                    format_k__BackingField;                                  // 0x0004(0x0000)
		int32_t                                                    dimension_k__BackingField;                               // 0x0008(0x0000)
		int32_t                                                    stream_k__BackingField;                                  // 0x000C(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.GraphicsFence
	 * Size -> 0x0000
	 */
	struct GraphicsFence
	{
	public:
		intptr_t                                                   m_Ptr;                                                   // 0x0000(0x0000)
		int32_t                                                    m_Version;                                               // 0x0008(0x0000)
		int32_t                                                    m_FenceType;                                             // 0x000C(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.SphericalHarmonicsL2
	 * Size -> 0x0000
	 */
	struct SphericalHarmonicsL2
	{
	public:
		float                                                      shr0;                                                    // 0x0000(0x0000)
		float                                                      shr1;                                                    // 0x0004(0x0000)
		float                                                      shr2;                                                    // 0x0008(0x0000)
		float                                                      shr3;                                                    // 0x000C(0x0000)
		float                                                      shr4;                                                    // 0x0010(0x0000)
		float                                                      shr5;                                                    // 0x0014(0x0000)
		float                                                      shr6;                                                    // 0x0018(0x0000)
		float                                                      shr7;                                                    // 0x001C(0x0000)
		float                                                      shr8;                                                    // 0x0020(0x0000)
		float                                                      shg0;                                                    // 0x0024(0x0000)
		float                                                      shg1;                                                    // 0x0028(0x0000)
		float                                                      shg2;                                                    // 0x002C(0x0000)
		float                                                      shg3;                                                    // 0x0030(0x0000)
		float                                                      shg4;                                                    // 0x0034(0x0000)
		float                                                      shg5;                                                    // 0x0038(0x0000)
		float                                                      shg6;                                                    // 0x003C(0x0000)
		float                                                      shg7;                                                    // 0x0040(0x0000)
		float                                                      shg8;                                                    // 0x0044(0x0000)
		float                                                      shb0;                                                    // 0x0048(0x0000)
		float                                                      shb1;                                                    // 0x004C(0x0000)
		float                                                      shb2;                                                    // 0x0050(0x0000)
		float                                                      shb3;                                                    // 0x0054(0x0000)
		float                                                      shb4;                                                    // 0x0058(0x0000)
		float                                                      shb5;                                                    // 0x005C(0x0000)
		float                                                      shb6;                                                    // 0x0060(0x0000)
		float                                                      shb7;                                                    // 0x0064(0x0000)
		float                                                      shb8;                                                    // 0x0068(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.BatchVisibility
	 * Size -> 0x0000
	 */
	struct BatchVisibility
	{
	public:
		int32_t                                                    offset;                                                  // 0x0000(0x0000)
		int32_t                                                    instancesCount;                                          // 0x0004(0x0000)
		int32_t                                                    visibleCount;                                            // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.BatchCullingContext
	 * Size -> 0x0000
	 */
	struct BatchCullingContext
	{
	public:
		struct NativeArray_Plane                                   cullingPlanes;                                           // 0x0000(0x0000)
		struct NativeArray_BatchVisibility                         batchVisibility;                                         // 0x0010(0x0000)
		struct NativeArray_int                                     visibleIndices;                                          // 0x0020(0x0000)
		struct NativeArray_int                                     visibleIndicesY;                                         // 0x0030(0x0000)
		struct LODParameters                                       lodParameters;                                           // 0x0040(0x0000)
		struct Matrix4x4                                           cullingMatrix;                                           // 0x005C(0x0000)
		float                                                      nearPlane;                                               // 0x009C(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.BatchRendererCullingOutput
	 * Size -> 0x0000
	 */
	struct BatchRendererCullingOutput
	{
	public:
		struct JobHandle                                           cullingJobsFence;                                        // 0x0000(0x0000)
		struct Matrix4x4                                           cullingMatrix;                                           // 0x0010(0x0000)
		struct Plane_1*                                            cullingPlanes;                                           // 0x0050(0x0000)
		struct BatchVisibility*                                    batchVisibility;                                         // 0x0058(0x0000)
		int32_t*                                                   visibleIndices;                                          // 0x0060(0x0000)
		int32_t*                                                   visibleIndicesY;                                         // 0x0068(0x0000)
		int32_t                                                    cullingPlanesCount;                                      // 0x0070(0x0000)
		int32_t                                                    batchVisibilityCount;                                    // 0x0074(0x0000)
		int32_t                                                    visibleIndicesCount;                                     // 0x0078(0x0000)
		float                                                      nearPlane;                                               // 0x007C(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.AttachmentDescriptor
	 * Size -> 0x0000
	 */
	struct AttachmentDescriptor
	{
	public:
		int32_t                                                    m_LoadAction;                                            // 0x0000(0x0000)
		int32_t                                                    m_StoreAction;                                           // 0x0004(0x0000)
		int32_t                                                    m_Format;                                                // 0x0008(0x0000)
		struct RenderTargetIdentifier                              m_LoadStoreTarget;                                       // 0x0010(0x0000)
		struct RenderTargetIdentifier                              m_ResolveTarget;                                         // 0x0038(0x0000)
		struct Color                                               m_ClearColor;                                            // 0x0060(0x0000)
		float                                                      m_ClearDepth;                                            // 0x0070(0x0000)
		uint32_t                                                   m_ClearStencil;                                          // 0x0074(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.CullingAllocationInfo
	 * Size -> 0x0000
	 */
	struct CullingAllocationInfo
	{
	public:
		struct VisibleLight*                                       visibleLightsPtr;                                        // 0x0000(0x0000)
		struct VisibleLight*                                       visibleOffscreenVertexLightsPtr;                         // 0x0008(0x0000)
		struct VisibleReflectionProbe*                             visibleReflectionProbesPtr;                              // 0x0010(0x0000)
		int32_t                                                    visibleLightCount;                                       // 0x0018(0x0000)
		int32_t                                                    visibleOffscreenVertexLightCount;                        // 0x001C(0x0000)
		int32_t                                                    visibleReflectionProbeCount;                             // 0x0020(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.DrawingSettings+<shaderPassNames>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct DrawingSettings__shaderPassNames_e__FixedBuffer
	{
	public:
		int32_t                                                    FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.SortingSettings
	 * Size -> 0x0000
	 */
	struct SortingSettings
	{
	public:
		struct Matrix4x4                                           m_WorldToCameraMatrix;                                   // 0x0000(0x0000)
		struct Vector3                                             m_CameraPosition;                                        // 0x0040(0x0000)
		struct Vector3                                             m_CustomAxis;                                            // 0x004C(0x0000)
		int32_t                                                    m_Criteria;                                              // 0x0058(0x0000)
		int32_t                                                    m_DistanceMetric;                                        // 0x005C(0x0000)
		struct Matrix4x4                                           m_PreviousVPMatrix;                                      // 0x0060(0x0000)
		struct Matrix4x4                                           m_NonJitteredVPMatrix;                                   // 0x00A0(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.ShaderTagId
	 * Size -> 0x0000
	 */
	struct ShaderTagId
	{
	public:
		int32_t                                                    m_Id;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.DrawingSettings
	 * Size -> 0x0000
	 */
	struct DrawingSettings
	{
	public:
		struct SortingSettings                                     m_SortingSettings;                                       // 0x0000(0x0000)
		struct DrawingSettings__shaderPassNames_e__FixedBuffer     shaderPassNames;                                         // 0x00E0(0x0000)
		int32_t                                                    m_PerObjectData;                                         // 0x0120(0x0000)
		int32_t                                                    m_Flags;                                                 // 0x0124(0x0000)
		int32_t                                                    m_OverrideMaterialInstanceId;                            // 0x0128(0x0000)
		int32_t                                                    m_OverrideMaterialPassIndex;                             // 0x012C(0x0000)
		int32_t                                                    m_fallbackMaterialInstanceId;                            // 0x0130(0x0000)
		int32_t                                                    m_MainLightIndex;                                        // 0x0134(0x0000)
		int32_t                                                    m_UseSrpBatcher;                                         // 0x0138(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.FilteringSettings
	 * Size -> 0x0000
	 */
	struct FilteringSettings
	{
	public:
		struct RenderQueueRange                                    m_RenderQueueRange;                                      // 0x0000(0x0000)
		int32_t                                                    m_LayerMask;                                             // 0x0008(0x0000)
		uint32_t                                                   m_RenderingLayerMask;                                    // 0x000C(0x0000)
		int32_t                                                    m_ExcludeMotionVectorObjects;                            // 0x0010(0x0000)
		struct SortingLayerRange                                   m_SortingLayerRange;                                     // 0x0014(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.RendererUtils.RendererList
	 * Size -> 0x0000
	 */
	struct RendererList
	{
	public:
		uintptr_t                                                  context;                                                 // 0x0000(0x0000)
		uint32_t                                                   index;                                                   // 0x0008(0x0000)
		uint32_t                                                   frame;                                                   // 0x000C(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.ShadowDrawingSettings
	 * Size -> 0x0000
	 */
	struct ShadowDrawingSettings
	{
	public:
		struct CullingResults                                      m_CullingResults;                                        // 0x0000(0x0000)
		int32_t                                                    m_LightIndex;                                            // 0x0010(0x0000)
		int32_t                                                    m_UseRenderingLayerMaskTest;                             // 0x0014(0x0000)
		struct ShadowSplitData                                     m_SplitData;                                             // 0x0018(0x0000)
		int32_t                                                    m_ObjectsFilter;                                         // 0x00D4(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.RendererUtils.RendererListDesc
	 * Size -> 0x0000
	 */
	struct RendererListDesc
	{
	public:
		int32_t                                                    sortingCriteria;                                         // 0x0000(0x0000)
		int32_t                                                    rendererConfiguration;                                   // 0x0004(0x0000)
		struct RenderQueueRange                                    renderQueueRange;                                        // 0x0008(0x0000)
		struct Nullable_RenderStateBlock                           stateBlock;                                              // 0x0010(0x0000)
		class Material*                                            overrideMaterial;                                        // 0x0080(0x0000)
		bool                                                       excludeObjectMotionVectors;                              // 0x0088(0x0000)
		int32_t                                                    layerMask;                                               // 0x008C(0x0000)
		int32_t                                                    overrideMaterialPassIndex;                               // 0x0090(0x0000)
		struct CullingResults                                      cullingResult_k__BackingField;                           // 0x0098(0x0000)
		class Camera*                                              camera_k__BackingField;                                  // 0x00A8(0x0000)
		struct ShaderTagId                                         passName_k__BackingField;                                // 0x00B0(0x0000)
		class ShaderTagId_Array*                                   passNames_k__BackingField;                               // 0x00B8(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.ScriptableRenderContext
	 * Size -> 0x0000
	 */
	struct ScriptableRenderContext
	{
	public:
		intptr_t                                                   m_Ptr;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.VisibleLight
	 * Size -> 0x0000
	 */
	struct VisibleLight
	{
	public:
		int32_t                                                    m_LightType;                                             // 0x0000(0x0000)
		struct Color                                               m_FinalColor;                                            // 0x0004(0x0000)
		struct Rect                                                m_ScreenRect;                                            // 0x0014(0x0000)
		struct Matrix4x4                                           m_LocalToWorldMatrix;                                    // 0x0024(0x0000)
		float                                                      m_Range;                                                 // 0x0064(0x0000)
		float                                                      m_SpotAngle;                                             // 0x0068(0x0000)
		int32_t                                                    m_InstanceId;                                            // 0x006C(0x0000)
		int32_t                                                    m_Flags;                                                 // 0x0070(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.VisibleReflectionProbe
	 * Size -> 0x0000
	 */
	struct VisibleReflectionProbe
	{
	public:
		struct Bounds                                              m_Bounds;                                                // 0x0000(0x0000)
		struct Matrix4x4                                           m_LocalToWorldMatrix;                                    // 0x0018(0x0000)
		struct Vector4                                             m_HdrData;                                               // 0x0058(0x0000)
		struct Vector3                                             m_Center;                                                // 0x0068(0x0000)
		float                                                      m_BlendDistance;                                         // 0x0074(0x0000)
		int32_t                                                    m_Importance;                                            // 0x0078(0x0000)
		int32_t                                                    m_BoxProjection;                                         // 0x007C(0x0000)
		int32_t                                                    m_InstanceId;                                            // 0x0080(0x0000)
		int32_t                                                    m_TextureId;                                             // 0x0084(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.ShaderKeyword
	 * Size -> 0x0000
	 */
	struct ShaderKeyword
	{
	public:
		class Il2CppString*                                        m_Name;                                                  // 0x0000(0x0000)
		uint32_t                                                   m_Index;                                                 // 0x0008(0x0000)
		bool                                                       m_IsLocal;                                               // 0x000C(0x0000)
		bool                                                       m_IsCompute;                                             // 0x000D(0x0000)
		bool                                                       m_IsValid;                                               // 0x000E(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Rendering.RendererUtils.RendererListParams
	 * Size -> 0x0000
	 */
	struct RendererListParams
	{
	public:
		bool                                                       isValid_k__BackingField;                                 // 0x0000(0x0000)
		struct CullingResults                                      cullingResult;                                           // 0x0008(0x0000)
		struct DrawingSettings                                     drawSettings;                                            // 0x0018(0x0000)
		struct FilteringSettings                                   filteringSettings;                                       // 0x0154(0x0000)
		struct Nullable_RenderStateBlock                           stateBlock;                                              // 0x016C(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Playables.PlayableOutputHandle
	 * Size -> 0x0000
	 */
	struct PlayableOutputHandle
	{
	public:
		intptr_t                                                   m_Handle;                                                // 0x0000(0x0000)
		uint32_t                                                   m_Version;                                               // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Playables.PlayableOutput
	 * Size -> 0x0000
	 */
	struct PlayableOutput
	{
	public:
		struct PlayableOutputHandle                                m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Playables.FrameData
	 * Size -> 0x0000
	 */
	struct FrameData
	{
	public:
		uint64_t                                                   m_FrameID;                                               // 0x0000(0x0000)
		double                                                     m_DeltaTime;                                             // 0x0008(0x0000)
		float                                                      m_Weight;                                                // 0x0010(0x0000)
		float                                                      m_EffectiveWeight;                                       // 0x0014(0x0000)
		double                                                     m_EffectiveParentDelay;                                  // 0x0018(0x0000)
		float                                                      m_EffectiveParentSpeed;                                  // 0x0020(0x0000)
		float                                                      m_EffectiveSpeed;                                        // 0x0024(0x0000)
		int32_t                                                    m_Flags;                                                 // 0x0028(0x0000)
		struct PlayableOutput                                      m_Output;                                                // 0x0030(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Playables.FrameRate
	 * Size -> 0x0000
	 */
	struct FrameRate
	{
	public:
		int32_t                                                    m_Rate;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Playables.PlayableBinding
	 * Size -> 0x0000
	 */
	struct PlayableBinding
	{
	public:
		class Il2CppString*                                        m_StreamName;                                            // 0x0000(0x0000)
		class Object_1*                                            m_SourceObject;                                          // 0x0008(0x0000)
		class Type*                                                m_SourceBindingType;                                     // 0x0010(0x0000)
		class PlayableBinding_CreateOutputMethod*                  m_CreateOutputMethod;                                    // 0x0018(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Playables.ScriptPlayableOutput
	 * Size -> 0x0000
	 */
	struct ScriptPlayableOutput
	{
	public:
		struct PlayableOutputHandle                                m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Experimental.U2D.SpriteIntermediateRendererInfo
	 * Size -> 0x0000
	 */
	struct SpriteIntermediateRendererInfo
	{
	public:
		int32_t                                                    SpriteID;                                                // 0x0000(0x0000)
		int32_t                                                    TextureID;                                               // 0x0004(0x0000)
		int32_t                                                    MaterialID;                                              // 0x0008(0x0000)
		struct Color                                               Color;                                                   // 0x000C(0x0000)
		struct Matrix4x4                                           Transform;                                               // 0x001C(0x0000)
		struct Bounds                                              Bounds;                                                  // 0x005C(0x0000)
		int32_t                                                    Layer;                                                   // 0x0074(0x0000)
		int32_t                                                    SortingLayer;                                            // 0x0078(0x0000)
		int32_t                                                    SortingOrder;                                            // 0x007C(0x0000)
		uint64_t                                                   SceneCullingMask;                                        // 0x0080(0x0000)
		intptr_t                                                   IndexData;                                               // 0x0088(0x0000)
		intptr_t                                                   VertexData;                                              // 0x0090(0x0000)
		int32_t                                                    IndexCount;                                              // 0x0098(0x0000)
		int32_t                                                    VertexCount;                                             // 0x009C(0x0000)
		int32_t                                                    ShaderChannelMask;                                       // 0x00A0(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Experimental.GlobalIllumination.LinearColor
	 * Size -> 0x0000
	 */
	struct LinearColor
	{
	public:
		float                                                      m_red;                                                   // 0x0000(0x0000)
		float                                                      m_green;                                                 // 0x0004(0x0000)
		float                                                      m_blue;                                                  // 0x0008(0x0000)
		float                                                      m_intensity;                                             // 0x000C(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Experimental.GlobalIllumination.DirectionalLight
	 * Size -> 0x0000
	 */
	struct DirectionalLight
	{
	public:
		int32_t                                                    instanceID;                                              // 0x0000(0x0000)
		bool                                                       shadow;                                                  // 0x0004(0x0000)
		uint8_t                                                    mode;                                                    // 0x0005(0x0000)
		struct Vector3                                             position;                                                // 0x0008(0x0000)
		struct Quaternion                                          orientation;                                             // 0x0014(0x0000)
		struct LinearColor                                         color;                                                   // 0x0024(0x0000)
		struct LinearColor                                         indirectColor;                                           // 0x0034(0x0000)
		float                                                      penumbraWidthRadian;                                     // 0x0044(0x0000)
		struct Vector3                                             direction;                                               // 0x0048(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Experimental.GlobalIllumination.PointLight
	 * Size -> 0x0000
	 */
	struct PointLight
	{
	public:
		int32_t                                                    instanceID;                                              // 0x0000(0x0000)
		bool                                                       shadow;                                                  // 0x0004(0x0000)
		uint8_t                                                    mode;                                                    // 0x0005(0x0000)
		struct Vector3                                             position;                                                // 0x0008(0x0000)
		struct Quaternion                                          orientation;                                             // 0x0014(0x0000)
		struct LinearColor                                         color;                                                   // 0x0024(0x0000)
		struct LinearColor                                         indirectColor;                                           // 0x0034(0x0000)
		float                                                      range;                                                   // 0x0044(0x0000)
		float                                                      sphereRadius;                                            // 0x0048(0x0000)
		uint8_t                                                    falloff;                                                 // 0x004C(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Experimental.GlobalIllumination.SpotLight
	 * Size -> 0x0000
	 */
	struct SpotLight
	{
	public:
		int32_t                                                    instanceID;                                              // 0x0000(0x0000)
		bool                                                       shadow;                                                  // 0x0004(0x0000)
		uint8_t                                                    mode;                                                    // 0x0005(0x0000)
		struct Vector3                                             position;                                                // 0x0008(0x0000)
		struct Quaternion                                          orientation;                                             // 0x0014(0x0000)
		struct LinearColor                                         color;                                                   // 0x0024(0x0000)
		struct LinearColor                                         indirectColor;                                           // 0x0034(0x0000)
		float                                                      range;                                                   // 0x0044(0x0000)
		float                                                      sphereRadius;                                            // 0x0048(0x0000)
		float                                                      coneAngle;                                               // 0x004C(0x0000)
		float                                                      innerConeAngle;                                          // 0x0050(0x0000)
		uint8_t                                                    falloff;                                                 // 0x0054(0x0000)
		uint8_t                                                    angularFalloff;                                          // 0x0055(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Experimental.GlobalIllumination.RectangleLight
	 * Size -> 0x0000
	 */
	struct RectangleLight
	{
	public:
		int32_t                                                    instanceID;                                              // 0x0000(0x0000)
		bool                                                       shadow;                                                  // 0x0004(0x0000)
		uint8_t                                                    mode;                                                    // 0x0005(0x0000)
		struct Vector3                                             position;                                                // 0x0008(0x0000)
		struct Quaternion                                          orientation;                                             // 0x0014(0x0000)
		struct LinearColor                                         color;                                                   // 0x0024(0x0000)
		struct LinearColor                                         indirectColor;                                           // 0x0034(0x0000)
		float                                                      range;                                                   // 0x0044(0x0000)
		float                                                      width;                                                   // 0x0048(0x0000)
		float                                                      height;                                                  // 0x004C(0x0000)
		uint8_t                                                    falloff;                                                 // 0x0050(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Experimental.GlobalIllumination.DiscLight
	 * Size -> 0x0000
	 */
	struct DiscLight
	{
	public:
		int32_t                                                    instanceID;                                              // 0x0000(0x0000)
		bool                                                       shadow;                                                  // 0x0004(0x0000)
		uint8_t                                                    mode;                                                    // 0x0005(0x0000)
		struct Vector3                                             position;                                                // 0x0008(0x0000)
		struct Quaternion                                          orientation;                                             // 0x0014(0x0000)
		struct LinearColor                                         color;                                                   // 0x0024(0x0000)
		struct LinearColor                                         indirectColor;                                           // 0x0034(0x0000)
		float                                                      range;                                                   // 0x0044(0x0000)
		float                                                      radius;                                                  // 0x0048(0x0000)
		uint8_t                                                    falloff;                                                 // 0x004C(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Experimental.GlobalIllumination.Cookie
	 * Size -> 0x0000
	 */
	struct Cookie_2
	{
	public:
		int32_t                                                    instanceID;                                              // 0x0000(0x0000)
		float                                                      scale;                                                   // 0x0004(0x0000)
		struct Vector2                                             sizes;                                                   // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Experimental.GlobalIllumination.LightDataGI
	 * Size -> 0x0000
	 */
	struct LightDataGI
	{
	public:
		int32_t                                                    instanceID;                                              // 0x0000(0x0000)
		int32_t                                                    cookieID;                                                // 0x0004(0x0000)
		float                                                      cookieScale;                                             // 0x0008(0x0000)
		struct LinearColor                                         color;                                                   // 0x000C(0x0000)
		struct LinearColor                                         indirectColor;                                           // 0x001C(0x0000)
		struct Quaternion                                          orientation;                                             // 0x002C(0x0000)
		struct Vector3                                             position;                                                // 0x003C(0x0000)
		float                                                      range;                                                   // 0x0048(0x0000)
		float                                                      coneAngle;                                               // 0x004C(0x0000)
		float                                                      innerConeAngle;                                          // 0x0050(0x0000)
		float                                                      shape0;                                                  // 0x0054(0x0000)
		float                                                      shape1;                                                  // 0x0058(0x0000)
		uint8_t                                                    type;                                                    // 0x005C(0x0000)
		uint8_t                                                    mode;                                                    // 0x005D(0x0000)
		uint8_t                                                    shadow;                                                  // 0x005E(0x0000)
		uint8_t                                                    falloff;                                                 // 0x005F(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Experimental.Playables.CameraPlayable
	 * Size -> 0x0000
	 */
	struct CameraPlayable
	{
	public:
		struct PlayableHandle                                      m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Experimental.Playables.MaterialEffectPlayable
	 * Size -> 0x0000
	 */
	struct MaterialEffectPlayable
	{
	public:
		struct PlayableHandle                                      m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Experimental.Playables.TextureMixerPlayable
	 * Size -> 0x0000
	 */
	struct TextureMixerPlayable
	{
	public:
		struct PlayableHandle                                      m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Experimental.Playables.TexturePlayableOutput
	 * Size -> 0x0000
	 */
	struct TexturePlayableOutput
	{
	public:
		struct PlayableOutputHandle                                m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct System.Core.System.Linq.Set+Slot<TElement>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct Set_Slot_TElement
	{
	public:
		int32_t                                                    hashCode;                                                // 0x0000(0x0000)
		class Il2CppObject*                                        value;                                                   // 0x0000(0x0000)
		int32_t                                                    next;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct System.Core.System.Linq.Buffer<TElement>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct Buffer_TElement
	{
	public:
		class UObject_Array*                                       items;                                                   // 0x0000(0x0000)
		int32_t                                                    count;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct System.Core.System.Linq.Expressions.Interpreter.RuntimeLabel
	 * Size -> 0x0000
	 */
	struct RuntimeLabel
	{
	public:
		int32_t                                                    Index;                                                   // 0x0000(0x0000)
		int32_t                                                    StackDepth;                                              // 0x0004(0x0000)
		int32_t                                                    ContinuationStackDepth;                                  // 0x0008(0x0000)
	};

	/**
	 * Struct System.Core.System.Linq.Expressions.Interpreter.InstructionArray
	 * Size -> 0x0000
	 */
	struct InstructionArray
	{
	public:
		int32_t                                                    MaxStackDepth;                                           // 0x0000(0x0000)
		int32_t                                                    MaxContinuationDepth;                                    // 0x0004(0x0000)
		class Instruction_Array*                                   Instructions;                                            // 0x0008(0x0000)
		class Object_Array*                                        Objects;                                                 // 0x0010(0x0000)
		class RuntimeLabel_Array*                                  Labels;                                                  // 0x0018(0x0000)
		class List_KeyValuePair_int__object*                       DebugCookies;                                            // 0x0020(0x0000)
	};

	/**
	 * Struct System.Core.System.Linq.Expressions.Interpreter.InstructionList.DebugView+InstructionView
	 * Size -> 0x0000
	 */
	struct InstructionList_DebugView_InstructionView
	{
	public:
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    stackDepth;                                              // 0x0004(0x0000)
		int32_t                                                    continuationsDepth;                                      // 0x0008(0x0000)
		class Il2CppString*                                        name;                                                    // 0x0010(0x0000)
		class Instruction*                                         instruction;                                             // 0x0018(0x0000)
	};

	/**
	 * Struct System.Core.System.Linq.Expressions.Interpreter.InterpretedFrameInfo
	 * Size -> 0x0000
	 */
	struct InterpretedFrameInfo
	{
	public:
		class Il2CppString*                                        methodName;                                              // 0x0000(0x0000)
		class DebugInfo*                                           debugInfo;                                               // 0x0008(0x0000)
	};

	/**
	 * Struct System.Core.System.Dynamic.BindingRestrictions.TestBuilder+AndNode
	 * Size -> 0x0000
	 */
	struct BindingRestrictions_TestBuilder_AndNode
	{
	public:
		int32_t                                                    Depth;                                                   // 0x0000(0x0000)
		class Expression_1*                                        Node;                                                    // 0x0008(0x0000)
	};

	/**
	 * Struct System.Core.System.Collections.Generic.ArrayBuilder<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ArrayBuilder_T_1
	{
	public:
		class UObject_Array*                                       array;                                                   // 0x0000(0x0000)
		int32_t                                                    count;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct System.Core.System.Collections.Generic.HashSet+Slot<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct HashSet_Slot_T
	{
	public:
		int32_t                                                    hashCode;                                                // 0x0000(0x0000)
		int32_t                                                    next;                                                    // 0x0000(0x0000)
		class Il2CppObject*                                        value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct System.Core.System.Collections.Generic.HashSet+Enumerator<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct HashSet_Enumerator_T
	{
	public:
		class HashSet_T*                                           set;                                                     // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    version;                                                 // 0x0000(0x0000)
		class Il2CppObject*                                        current;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct System.Core.System.Threading.ReaderWriterLockSlim+TimeoutTracker
	 * Size -> 0x0000
	 */
	struct ReaderWriterLockSlim_TimeoutTracker
	{
	public:
		int32_t                                                    m_total;                                                 // 0x0000(0x0000)
		int32_t                                                    m_start;                                                 // 0x0004(0x0000)
	};

	/**
	 * Struct System.Core.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=120
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_120_2
	{	};

	/**
	 * Struct System.Core.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=256
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_256_3
	{	};

	/**
	 * Struct System.Core.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=1024
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_1024_2
	{	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.AppId_t
	 * Size -> 0x0000
	 */
	struct AppId_t
	{
	public:
		uint32_t                                                   m_AppId;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamAppInstalled_t
	 * Size -> 0x0000
	 */
	struct SteamAppInstalled_t
	{
	public:
		struct AppId_t                                             m_nAppID;                                                // 0x0000(0x0000)
		int32_t                                                    m_iInstallFolderIndex;                                   // 0x0004(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamAppUninstalled_t
	 * Size -> 0x0000
	 */
	struct SteamAppUninstalled_t
	{
	public:
		struct AppId_t                                             m_nAppID;                                                // 0x0000(0x0000)
		int32_t                                                    m_iInstallFolderIndex;                                   // 0x0004(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.DlcInstalled_t
	 * Size -> 0x0000
	 */
	struct DlcInstalled_t
	{
	public:
		struct AppId_t                                             m_nAppID;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RegisterActivationCodeResponse_t
	 * Size -> 0x0000
	 */
	struct RegisterActivationCodeResponse_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		uint32_t                                                   m_unPackageRegistered;                                   // 0x0004(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.NewUrlLaunchParameters_t
	 * Size -> 0x0000
	 */
	struct NewUrlLaunchParameters_t
	{	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.AppProofOfPurchaseKeyResponse_t
	 * Size -> 0x0000
	 */
	struct AppProofOfPurchaseKeyResponse_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		uint32_t                                                   m_nAppID;                                                // 0x0004(0x0000)
		uint32_t                                                   m_cchKeyLength;                                          // 0x0008(0x0000)
		class Byte_Array*                                          m_rgchKey;                                               // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.FileDetailsResult_t
	 * Size -> 0x0000
	 */
	struct FileDetailsResult_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		uint64_t                                                   m_ulFileSize;                                            // 0x0008(0x0000)
		class Byte_Array*                                          m_FileSHA;                                               // 0x0010(0x0000)
		uint32_t                                                   m_unFlags;                                               // 0x0018(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.TimedTrialStatus_t
	 * Size -> 0x0000
	 */
	struct TimedTrialStatus_t
	{
	public:
		struct AppId_t                                             m_unAppID;                                               // 0x0000(0x0000)
		bool                                                       m_bIsOffline;                                            // 0x0004(0x0000)
		uint32_t                                                   m_unSecondsAllowed;                                      // 0x0008(0x0000)
		uint32_t                                                   m_unSecondsPlayed;                                       // 0x000C(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.PersonaStateChange_t
	 * Size -> 0x0000
	 */
	struct PersonaStateChange_t
	{
	public:
		uint64_t                                                   m_ulSteamID;                                             // 0x0000(0x0000)
		int32_t                                                    m_nChangeFlags;                                          // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.GameOverlayActivated_t
	 * Size -> 0x0000
	 */
	struct GameOverlayActivated_t
	{
	public:
		uint8_t                                                    m_bActive;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.GameServerChangeRequested_t
	 * Size -> 0x0000
	 */
	struct GameServerChangeRequested_t
	{
	public:
		class Byte_Array*                                          m_rgchServer;                                            // 0x0000(0x0000)
		class Byte_Array*                                          m_rgchPassword;                                          // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.AccountID_t
	 * Size -> 0x0000
	 */
	struct AccountID_t
	{
	public:
		uint32_t                                                   m_AccountID;                                             // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.CSteamID
	 * Size -> 0x0000
	 */
	struct CSteamID
	{
	public:
		uint64_t                                                   m_SteamID;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.GameLobbyJoinRequested_t
	 * Size -> 0x0000
	 */
	struct GameLobbyJoinRequested_t
	{
	public:
		struct CSteamID                                            m_steamIDLobby;                                          // 0x0000(0x0000)
		struct CSteamID                                            m_steamIDFriend;                                         // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.AvatarImageLoaded_t
	 * Size -> 0x0000
	 */
	struct AvatarImageLoaded_t
	{
	public:
		struct CSteamID                                            m_steamID;                                               // 0x0000(0x0000)
		int32_t                                                    m_iImage;                                                // 0x0008(0x0000)
		int32_t                                                    m_iWide;                                                 // 0x000C(0x0000)
		int32_t                                                    m_iTall;                                                 // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.ClanOfficerListResponse_t
	 * Size -> 0x0000
	 */
	struct ClanOfficerListResponse_t
	{
	public:
		struct CSteamID                                            m_steamIDClan;                                           // 0x0000(0x0000)
		int32_t                                                    m_cOfficers;                                             // 0x0008(0x0000)
		uint8_t                                                    m_bSuccess;                                              // 0x000C(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.FriendRichPresenceUpdate_t
	 * Size -> 0x0000
	 */
	struct FriendRichPresenceUpdate_t
	{
	public:
		struct CSteamID                                            m_steamIDFriend;                                         // 0x0000(0x0000)
		struct AppId_t                                             m_nAppID;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.GameRichPresenceJoinRequested_t
	 * Size -> 0x0000
	 */
	struct GameRichPresenceJoinRequested_t
	{
	public:
		struct CSteamID                                            m_steamIDFriend;                                         // 0x0000(0x0000)
		class Byte_Array*                                          m_rgchConnect;                                           // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.GameConnectedClanChatMsg_t
	 * Size -> 0x0000
	 */
	struct GameConnectedClanChatMsg_t
	{
	public:
		struct CSteamID                                            m_steamIDClanChat;                                       // 0x0000(0x0000)
		struct CSteamID                                            m_steamIDUser;                                           // 0x0008(0x0000)
		int32_t                                                    m_iMessageID;                                            // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.GameConnectedChatJoin_t
	 * Size -> 0x0000
	 */
	struct GameConnectedChatJoin_t
	{
	public:
		struct CSteamID                                            m_steamIDClanChat;                                       // 0x0000(0x0000)
		struct CSteamID                                            m_steamIDUser;                                           // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.GameConnectedChatLeave_t
	 * Size -> 0x0000
	 */
	struct GameConnectedChatLeave_t
	{
	public:
		struct CSteamID                                            m_steamIDClanChat;                                       // 0x0000(0x0000)
		struct CSteamID                                            m_steamIDUser;                                           // 0x0008(0x0000)
		bool                                                       m_bKicked;                                               // 0x0010(0x0000)
		bool                                                       m_bDropped;                                              // 0x0011(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.DownloadClanActivityCountsResult_t
	 * Size -> 0x0000
	 */
	struct DownloadClanActivityCountsResult_t
	{
	public:
		bool                                                       m_bSuccess;                                              // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.JoinClanChatRoomCompletionResult_t
	 * Size -> 0x0000
	 */
	struct JoinClanChatRoomCompletionResult_t
	{
	public:
		struct CSteamID                                            m_steamIDClanChat;                                       // 0x0000(0x0000)
		int32_t                                                    m_eChatRoomEnterResponse;                                // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.GameConnectedFriendChatMsg_t
	 * Size -> 0x0000
	 */
	struct GameConnectedFriendChatMsg_t
	{
	public:
		struct CSteamID                                            m_steamIDUser;                                           // 0x0000(0x0000)
		int32_t                                                    m_iMessageID;                                            // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.FriendsGetFollowerCount_t
	 * Size -> 0x0000
	 */
	struct FriendsGetFollowerCount_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		struct CSteamID                                            m_steamID;                                               // 0x0004(0x0000)
		int32_t                                                    m_nCount;                                                // 0x000C(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.FriendsIsFollowing_t
	 * Size -> 0x0000
	 */
	struct FriendsIsFollowing_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		struct CSteamID                                            m_steamID;                                               // 0x0004(0x0000)
		bool                                                       m_bIsFollowing;                                          // 0x000C(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.FriendsEnumerateFollowingList_t
	 * Size -> 0x0000
	 */
	struct FriendsEnumerateFollowingList_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		class CSteamID_Array*                                      m_rgSteamID;                                             // 0x0008(0x0000)
		int32_t                                                    m_nResultsReturned;                                      // 0x0010(0x0000)
		int32_t                                                    m_nTotalResultCount;                                     // 0x0014(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SetPersonaNameResponse_t
	 * Size -> 0x0000
	 */
	struct SetPersonaNameResponse_t
	{
	public:
		bool                                                       m_bSuccess;                                              // 0x0000(0x0000)
		bool                                                       m_bLocalSuccess;                                         // 0x0001(0x0000)
		int32_t                                                    m_result;                                                // 0x0004(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.UnreadChatMessagesChanged_t
	 * Size -> 0x0000
	 */
	struct UnreadChatMessagesChanged_t
	{	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.OverlayBrowserProtocolNavigation_t
	 * Size -> 0x0000
	 */
	struct OverlayBrowserProtocolNavigation_t
	{
	public:
		class Byte_Array*                                          rgchURI;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.GCMessageAvailable_t
	 * Size -> 0x0000
	 */
	struct GCMessageAvailable_t
	{
	public:
		uint32_t                                                   m_nMessageSize;                                          // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.GCMessageFailed_t
	 * Size -> 0x0000
	 */
	struct GCMessageFailed_t
	{	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.GSClientApprove_t
	 * Size -> 0x0000
	 */
	struct GSClientApprove_t
	{
	public:
		struct CSteamID                                            m_SteamID;                                               // 0x0000(0x0000)
		struct CSteamID                                            m_OwnerSteamID;                                          // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.GSClientDeny_t
	 * Size -> 0x0000
	 */
	struct GSClientDeny_t
	{
	public:
		struct CSteamID                                            m_SteamID;                                               // 0x0000(0x0000)
		int32_t                                                    m_eDenyReason;                                           // 0x0008(0x0000)
		class Byte_Array*                                          m_rgchOptionalText;                                      // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.GSClientKick_t
	 * Size -> 0x0000
	 */
	struct GSClientKick_t
	{
	public:
		struct CSteamID                                            m_SteamID;                                               // 0x0000(0x0000)
		int32_t                                                    m_eDenyReason;                                           // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.GSClientAchievementStatus_t
	 * Size -> 0x0000
	 */
	struct GSClientAchievementStatus_t
	{
	public:
		uint64_t                                                   m_SteamID;                                               // 0x0000(0x0000)
		class Byte_Array*                                          m_pchAchievement;                                        // 0x0008(0x0000)
		bool                                                       m_bUnlocked;                                             // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.GSPolicyResponse_t
	 * Size -> 0x0000
	 */
	struct GSPolicyResponse_t
	{
	public:
		uint8_t                                                    m_bSecure;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.GSGameplayStats_t
	 * Size -> 0x0000
	 */
	struct GSGameplayStats_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		int32_t                                                    m_nRank;                                                 // 0x0004(0x0000)
		uint32_t                                                   m_unTotalConnects;                                       // 0x0008(0x0000)
		uint32_t                                                   m_unTotalMinutesPlayed;                                  // 0x000C(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.GSClientGroupStatus_t
	 * Size -> 0x0000
	 */
	struct GSClientGroupStatus_t
	{
	public:
		struct CSteamID                                            m_SteamIDUser;                                           // 0x0000(0x0000)
		struct CSteamID                                            m_SteamIDGroup;                                          // 0x0008(0x0000)
		bool                                                       m_bMember;                                               // 0x0010(0x0000)
		bool                                                       m_bOfficer;                                              // 0x0011(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.GSReputation_t
	 * Size -> 0x0000
	 */
	struct GSReputation_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		uint32_t                                                   m_unReputationScore;                                     // 0x0004(0x0000)
		bool                                                       m_bBanned;                                               // 0x0008(0x0000)
		uint32_t                                                   m_unBannedIP;                                            // 0x000C(0x0000)
		uint16_t                                                   m_usBannedPort;                                          // 0x0010(0x0000)
		uint64_t                                                   m_ulBannedGameID;                                        // 0x0018(0x0000)
		uint32_t                                                   m_unBanExpires;                                          // 0x0020(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.AssociateWithClanResult_t
	 * Size -> 0x0000
	 */
	struct AssociateWithClanResult_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.ComputeNewPlayerCompatibilityResult_t
	 * Size -> 0x0000
	 */
	struct ComputeNewPlayerCompatibilityResult_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		int32_t                                                    m_cPlayersThatDontLikeCandidate;                         // 0x0004(0x0000)
		int32_t                                                    m_cPlayersThatCandidateDoesntLike;                       // 0x0008(0x0000)
		int32_t                                                    m_cClanPlayersThatDontLikeCandidate;                     // 0x000C(0x0000)
		struct CSteamID                                            m_SteamIDCandidate;                                      // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.GSStatsReceived_t
	 * Size -> 0x0000
	 */
	struct GSStatsReceived_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		struct CSteamID                                            m_steamIDUser;                                           // 0x0004(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.GSStatsStored_t
	 * Size -> 0x0000
	 */
	struct GSStatsStored_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		struct CSteamID                                            m_steamIDUser;                                           // 0x0004(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.GSStatsUnloaded_t
	 * Size -> 0x0000
	 */
	struct GSStatsUnloaded_t
	{
	public:
		struct CSteamID                                            m_steamIDUser;                                           // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HHTMLBrowser
	 * Size -> 0x0000
	 */
	struct HHTMLBrowser
	{
	public:
		uint32_t                                                   m_HHTMLBrowser;                                          // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HTML_BrowserReady_t
	 * Size -> 0x0000
	 */
	struct HTML_BrowserReady_t
	{
	public:
		struct HHTMLBrowser                                        unBrowserHandle;                                         // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HTML_NeedsPaint_t
	 * Size -> 0x0000
	 */
	struct HTML_NeedsPaint_t
	{
	public:
		struct HHTMLBrowser                                        unBrowserHandle;                                         // 0x0000(0x0000)
		intptr_t                                                   pBGRA;                                                   // 0x0008(0x0000)
		uint32_t                                                   unWide;                                                  // 0x0010(0x0000)
		uint32_t                                                   unTall;                                                  // 0x0014(0x0000)
		uint32_t                                                   unUpdateX;                                               // 0x0018(0x0000)
		uint32_t                                                   unUpdateY;                                               // 0x001C(0x0000)
		uint32_t                                                   unUpdateWide;                                            // 0x0020(0x0000)
		uint32_t                                                   unUpdateTall;                                            // 0x0024(0x0000)
		uint32_t                                                   unScrollX;                                               // 0x0028(0x0000)
		uint32_t                                                   unScrollY;                                               // 0x002C(0x0000)
		float                                                      flPageScale;                                             // 0x0030(0x0000)
		uint32_t                                                   unPageSerial;                                            // 0x0034(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HTML_StartRequest_t
	 * Size -> 0x0000
	 */
	struct HTML_StartRequest_t
	{
	public:
		struct HHTMLBrowser                                        unBrowserHandle;                                         // 0x0000(0x0000)
		class Il2CppString*                                        pchURL;                                                  // 0x0008(0x0000)
		class Il2CppString*                                        pchTarget;                                               // 0x0010(0x0000)
		class Il2CppString*                                        pchPostData;                                             // 0x0018(0x0000)
		bool                                                       bIsRedirect;                                             // 0x0020(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HTML_CloseBrowser_t
	 * Size -> 0x0000
	 */
	struct HTML_CloseBrowser_t
	{
	public:
		struct HHTMLBrowser                                        unBrowserHandle;                                         // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HTML_URLChanged_t
	 * Size -> 0x0000
	 */
	struct HTML_URLChanged_t
	{
	public:
		struct HHTMLBrowser                                        unBrowserHandle;                                         // 0x0000(0x0000)
		class Il2CppString*                                        pchURL;                                                  // 0x0008(0x0000)
		class Il2CppString*                                        pchPostData;                                             // 0x0010(0x0000)
		bool                                                       bIsRedirect;                                             // 0x0018(0x0000)
		class Il2CppString*                                        pchPageTitle;                                            // 0x0020(0x0000)
		bool                                                       bNewNavigation;                                          // 0x0028(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HTML_FinishedRequest_t
	 * Size -> 0x0000
	 */
	struct HTML_FinishedRequest_t
	{
	public:
		struct HHTMLBrowser                                        unBrowserHandle;                                         // 0x0000(0x0000)
		class Il2CppString*                                        pchURL;                                                  // 0x0008(0x0000)
		class Il2CppString*                                        pchPageTitle;                                            // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HTML_OpenLinkInNewTab_t
	 * Size -> 0x0000
	 */
	struct HTML_OpenLinkInNewTab_t
	{
	public:
		struct HHTMLBrowser                                        unBrowserHandle;                                         // 0x0000(0x0000)
		class Il2CppString*                                        pchURL;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HTML_ChangedTitle_t
	 * Size -> 0x0000
	 */
	struct HTML_ChangedTitle_t
	{
	public:
		struct HHTMLBrowser                                        unBrowserHandle;                                         // 0x0000(0x0000)
		class Il2CppString*                                        pchTitle;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HTML_SearchResults_t
	 * Size -> 0x0000
	 */
	struct HTML_SearchResults_t
	{
	public:
		struct HHTMLBrowser                                        unBrowserHandle;                                         // 0x0000(0x0000)
		uint32_t                                                   unResults;                                               // 0x0004(0x0000)
		uint32_t                                                   unCurrentMatch;                                          // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HTML_CanGoBackAndForward_t
	 * Size -> 0x0000
	 */
	struct HTML_CanGoBackAndForward_t
	{
	public:
		struct HHTMLBrowser                                        unBrowserHandle;                                         // 0x0000(0x0000)
		bool                                                       bCanGoBack;                                              // 0x0004(0x0000)
		bool                                                       bCanGoForward;                                           // 0x0005(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HTML_HorizontalScroll_t
	 * Size -> 0x0000
	 */
	struct HTML_HorizontalScroll_t
	{
	public:
		struct HHTMLBrowser                                        unBrowserHandle;                                         // 0x0000(0x0000)
		uint32_t                                                   unScrollMax;                                             // 0x0004(0x0000)
		uint32_t                                                   unScrollCurrent;                                         // 0x0008(0x0000)
		float                                                      flPageScale;                                             // 0x000C(0x0000)
		bool                                                       bVisible;                                                // 0x0010(0x0000)
		uint32_t                                                   unPageSize;                                              // 0x0014(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HTML_VerticalScroll_t
	 * Size -> 0x0000
	 */
	struct HTML_VerticalScroll_t
	{
	public:
		struct HHTMLBrowser                                        unBrowserHandle;                                         // 0x0000(0x0000)
		uint32_t                                                   unScrollMax;                                             // 0x0004(0x0000)
		uint32_t                                                   unScrollCurrent;                                         // 0x0008(0x0000)
		float                                                      flPageScale;                                             // 0x000C(0x0000)
		bool                                                       bVisible;                                                // 0x0010(0x0000)
		uint32_t                                                   unPageSize;                                              // 0x0014(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HTML_LinkAtPosition_t
	 * Size -> 0x0000
	 */
	struct HTML_LinkAtPosition_t
	{
	public:
		struct HHTMLBrowser                                        unBrowserHandle;                                         // 0x0000(0x0000)
		uint32_t                                                   x;                                                       // 0x0004(0x0000)
		uint32_t                                                   y;                                                       // 0x0008(0x0000)
		class Il2CppString*                                        pchURL;                                                  // 0x0010(0x0000)
		bool                                                       bInput;                                                  // 0x0018(0x0000)
		bool                                                       bLiveLink;                                               // 0x0019(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HTML_JSAlert_t
	 * Size -> 0x0000
	 */
	struct HTML_JSAlert_t
	{
	public:
		struct HHTMLBrowser                                        unBrowserHandle;                                         // 0x0000(0x0000)
		class Il2CppString*                                        pchMessage;                                              // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HTML_JSConfirm_t
	 * Size -> 0x0000
	 */
	struct HTML_JSConfirm_t
	{
	public:
		struct HHTMLBrowser                                        unBrowserHandle;                                         // 0x0000(0x0000)
		class Il2CppString*                                        pchMessage;                                              // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HTML_FileOpenDialog_t
	 * Size -> 0x0000
	 */
	struct HTML_FileOpenDialog_t
	{
	public:
		struct HHTMLBrowser                                        unBrowserHandle;                                         // 0x0000(0x0000)
		class Il2CppString*                                        pchTitle;                                                // 0x0008(0x0000)
		class Il2CppString*                                        pchInitialFile;                                          // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HTML_NewWindow_t
	 * Size -> 0x0000
	 */
	struct HTML_NewWindow_t
	{
	public:
		struct HHTMLBrowser                                        unBrowserHandle;                                         // 0x0000(0x0000)
		class Il2CppString*                                        pchURL;                                                  // 0x0008(0x0000)
		uint32_t                                                   unX;                                                     // 0x0010(0x0000)
		uint32_t                                                   unY;                                                     // 0x0014(0x0000)
		uint32_t                                                   unWide;                                                  // 0x0018(0x0000)
		uint32_t                                                   unTall;                                                  // 0x001C(0x0000)
		struct HHTMLBrowser                                        unNewWindow_BrowserHandle_IGNORE;                        // 0x0020(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HTML_SetCursor_t
	 * Size -> 0x0000
	 */
	struct HTML_SetCursor_t
	{
	public:
		struct HHTMLBrowser                                        unBrowserHandle;                                         // 0x0000(0x0000)
		uint32_t                                                   eMouseCursor;                                            // 0x0004(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HTML_StatusText_t
	 * Size -> 0x0000
	 */
	struct HTML_StatusText_t
	{
	public:
		struct HHTMLBrowser                                        unBrowserHandle;                                         // 0x0000(0x0000)
		class Il2CppString*                                        pchMsg;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HTML_ShowToolTip_t
	 * Size -> 0x0000
	 */
	struct HTML_ShowToolTip_t
	{
	public:
		struct HHTMLBrowser                                        unBrowserHandle;                                         // 0x0000(0x0000)
		class Il2CppString*                                        pchMsg;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HTML_UpdateToolTip_t
	 * Size -> 0x0000
	 */
	struct HTML_UpdateToolTip_t
	{
	public:
		struct HHTMLBrowser                                        unBrowserHandle;                                         // 0x0000(0x0000)
		class Il2CppString*                                        pchMsg;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HTML_HideToolTip_t
	 * Size -> 0x0000
	 */
	struct HTML_HideToolTip_t
	{
	public:
		struct HHTMLBrowser                                        unBrowserHandle;                                         // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HTML_BrowserRestarted_t
	 * Size -> 0x0000
	 */
	struct HTML_BrowserRestarted_t
	{
	public:
		struct HHTMLBrowser                                        unBrowserHandle;                                         // 0x0000(0x0000)
		struct HHTMLBrowser                                        unOldBrowserHandle;                                      // 0x0004(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HTTPRequestHandle
	 * Size -> 0x0000
	 */
	struct HTTPRequestHandle
	{
	public:
		uint32_t                                                   m_HTTPRequestHandle;                                     // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HTTPRequestCompleted_t
	 * Size -> 0x0000
	 */
	struct HTTPRequestCompleted_t
	{
	public:
		struct HTTPRequestHandle                                   m_hRequest;                                              // 0x0000(0x0000)
		uint64_t                                                   m_ulContextValue;                                        // 0x0008(0x0000)
		bool                                                       m_bRequestSuccessful;                                    // 0x0010(0x0000)
		int32_t                                                    m_eStatusCode;                                           // 0x0014(0x0000)
		uint32_t                                                   m_unBodySize;                                            // 0x0018(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HTTPRequestHeadersReceived_t
	 * Size -> 0x0000
	 */
	struct HTTPRequestHeadersReceived_t
	{
	public:
		struct HTTPRequestHandle                                   m_hRequest;                                              // 0x0000(0x0000)
		uint64_t                                                   m_ulContextValue;                                        // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HTTPRequestDataReceived_t
	 * Size -> 0x0000
	 */
	struct HTTPRequestDataReceived_t
	{
	public:
		struct HTTPRequestHandle                                   m_hRequest;                                              // 0x0000(0x0000)
		uint64_t                                                   m_ulContextValue;                                        // 0x0008(0x0000)
		uint32_t                                                   m_cOffset;                                               // 0x0010(0x0000)
		uint32_t                                                   m_cBytesReceived;                                        // 0x0014(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.InputHandle_t
	 * Size -> 0x0000
	 */
	struct InputHandle_t
	{
	public:
		uint64_t                                                   m_InputHandle;                                           // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamInputDeviceConnected_t
	 * Size -> 0x0000
	 */
	struct SteamInputDeviceConnected_t
	{
	public:
		struct InputHandle_t                                       m_ulConnectedDeviceHandle;                               // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamInputDeviceDisconnected_t
	 * Size -> 0x0000
	 */
	struct SteamInputDeviceDisconnected_t
	{
	public:
		struct InputHandle_t                                       m_ulDisconnectedDeviceHandle;                            // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamInputConfigurationLoaded_t
	 * Size -> 0x0000
	 */
	struct SteamInputConfigurationLoaded_t
	{
	public:
		struct AppId_t                                             m_unAppID;                                               // 0x0000(0x0000)
		struct InputHandle_t                                       m_ulDeviceHandle;                                        // 0x0008(0x0000)
		struct CSteamID                                            m_ulMappingCreator;                                      // 0x0010(0x0000)
		uint32_t                                                   m_unMajorRevision;                                       // 0x0018(0x0000)
		uint32_t                                                   m_unMinorRevision;                                       // 0x001C(0x0000)
		bool                                                       m_bUsesSteamInputAPI;                                    // 0x0020(0x0000)
		bool                                                       m_bUsesGamepadAPI;                                       // 0x0021(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamInventoryResult_t
	 * Size -> 0x0000
	 */
	struct SteamInventoryResult_t
	{
	public:
		int32_t                                                    m_SteamInventoryResult;                                  // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamInventoryResultReady_t
	 * Size -> 0x0000
	 */
	struct SteamInventoryResultReady_t
	{
	public:
		struct SteamInventoryResult_t                              m_handle;                                                // 0x0000(0x0000)
		int32_t                                                    m_result;                                                // 0x0004(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamInventoryFullUpdate_t
	 * Size -> 0x0000
	 */
	struct SteamInventoryFullUpdate_t
	{
	public:
		struct SteamInventoryResult_t                              m_handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamInventoryDefinitionUpdate_t
	 * Size -> 0x0000
	 */
	struct SteamInventoryDefinitionUpdate_t
	{	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamInventoryEligiblePromoItemDefIDs_t
	 * Size -> 0x0000
	 */
	struct SteamInventoryEligiblePromoItemDefIDs_t
	{
	public:
		int32_t                                                    m_result;                                                // 0x0000(0x0000)
		struct CSteamID                                            m_steamID;                                               // 0x0004(0x0000)
		int32_t                                                    m_numEligiblePromoItemDefs;                              // 0x000C(0x0000)
		bool                                                       m_bCachedData;                                           // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamInventoryStartPurchaseResult_t
	 * Size -> 0x0000
	 */
	struct SteamInventoryStartPurchaseResult_t
	{
	public:
		int32_t                                                    m_result;                                                // 0x0000(0x0000)
		uint64_t                                                   m_ulOrderID;                                             // 0x0008(0x0000)
		uint64_t                                                   m_ulTransID;                                             // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamInventoryRequestPricesResult_t
	 * Size -> 0x0000
	 */
	struct SteamInventoryRequestPricesResult_t
	{
	public:
		int32_t                                                    m_result;                                                // 0x0000(0x0000)
		class Byte_Array*                                          m_rgchCurrency;                                          // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.FavoritesListChanged_t
	 * Size -> 0x0000
	 */
	struct FavoritesListChanged_t
	{
	public:
		uint32_t                                                   m_nIP;                                                   // 0x0000(0x0000)
		uint32_t                                                   m_nQueryPort;                                            // 0x0004(0x0000)
		uint32_t                                                   m_nConnPort;                                             // 0x0008(0x0000)
		uint32_t                                                   m_nAppID;                                                // 0x000C(0x0000)
		uint32_t                                                   m_nFlags;                                                // 0x0010(0x0000)
		bool                                                       m_bAdd;                                                  // 0x0014(0x0000)
		struct AccountID_t                                         m_unAccountId;                                           // 0x0018(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.LobbyInvite_t
	 * Size -> 0x0000
	 */
	struct LobbyInvite_t
	{
	public:
		uint64_t                                                   m_ulSteamIDUser;                                         // 0x0000(0x0000)
		uint64_t                                                   m_ulSteamIDLobby;                                        // 0x0008(0x0000)
		uint64_t                                                   m_ulGameID;                                              // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.LobbyEnter_t
	 * Size -> 0x0000
	 */
	struct LobbyEnter_t
	{
	public:
		uint64_t                                                   m_ulSteamIDLobby;                                        // 0x0000(0x0000)
		uint32_t                                                   m_rgfChatPermissions;                                    // 0x0008(0x0000)
		bool                                                       m_bLocked;                                               // 0x000C(0x0000)
		uint32_t                                                   m_EChatRoomEnterResponse;                                // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.LobbyDataUpdate_t
	 * Size -> 0x0000
	 */
	struct LobbyDataUpdate_t
	{
	public:
		uint64_t                                                   m_ulSteamIDLobby;                                        // 0x0000(0x0000)
		uint64_t                                                   m_ulSteamIDMember;                                       // 0x0008(0x0000)
		uint8_t                                                    m_bSuccess;                                              // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.LobbyChatUpdate_t
	 * Size -> 0x0000
	 */
	struct LobbyChatUpdate_t
	{
	public:
		uint64_t                                                   m_ulSteamIDLobby;                                        // 0x0000(0x0000)
		uint64_t                                                   m_ulSteamIDUserChanged;                                  // 0x0008(0x0000)
		uint64_t                                                   m_ulSteamIDMakingChange;                                 // 0x0010(0x0000)
		uint32_t                                                   m_rgfChatMemberStateChange;                              // 0x0018(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.LobbyChatMsg_t
	 * Size -> 0x0000
	 */
	struct LobbyChatMsg_t
	{
	public:
		uint64_t                                                   m_ulSteamIDLobby;                                        // 0x0000(0x0000)
		uint64_t                                                   m_ulSteamIDUser;                                         // 0x0008(0x0000)
		uint8_t                                                    m_eChatEntryType;                                        // 0x0010(0x0000)
		uint32_t                                                   m_iChatID;                                               // 0x0014(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.LobbyGameCreated_t
	 * Size -> 0x0000
	 */
	struct LobbyGameCreated_t
	{
	public:
		uint64_t                                                   m_ulSteamIDLobby;                                        // 0x0000(0x0000)
		uint64_t                                                   m_ulSteamIDGameServer;                                   // 0x0008(0x0000)
		uint32_t                                                   m_unIP;                                                  // 0x0010(0x0000)
		uint16_t                                                   m_usPort;                                                // 0x0014(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.LobbyMatchList_t
	 * Size -> 0x0000
	 */
	struct LobbyMatchList_t
	{
	public:
		uint32_t                                                   m_nLobbiesMatching;                                      // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.LobbyKicked_t
	 * Size -> 0x0000
	 */
	struct LobbyKicked_t
	{
	public:
		uint64_t                                                   m_ulSteamIDLobby;                                        // 0x0000(0x0000)
		uint64_t                                                   m_ulSteamIDAdmin;                                        // 0x0008(0x0000)
		uint8_t                                                    m_bKickedDueToDisconnect;                                // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.LobbyCreated_t
	 * Size -> 0x0000
	 */
	struct LobbyCreated_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		uint64_t                                                   m_ulSteamIDLobby;                                        // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.FavoritesListAccountsUpdated_t
	 * Size -> 0x0000
	 */
	struct FavoritesListAccountsUpdated_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SearchForGameProgressCallback_t
	 * Size -> 0x0000
	 */
	struct SearchForGameProgressCallback_t
	{
	public:
		uint64_t                                                   m_ullSearchID;                                           // 0x0000(0x0000)
		int32_t                                                    m_eResult;                                               // 0x0008(0x0000)
		struct CSteamID                                            m_lobbyID;                                               // 0x000C(0x0000)
		struct CSteamID                                            m_steamIDEndedSearch;                                    // 0x0014(0x0000)
		int32_t                                                    m_nSecondsRemainingEstimate;                             // 0x001C(0x0000)
		int32_t                                                    m_cPlayersSearching;                                     // 0x0020(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SearchForGameResultCallback_t
	 * Size -> 0x0000
	 */
	struct SearchForGameResultCallback_t
	{
	public:
		uint64_t                                                   m_ullSearchID;                                           // 0x0000(0x0000)
		int32_t                                                    m_eResult;                                               // 0x0008(0x0000)
		int32_t                                                    m_nCountPlayersInGame;                                   // 0x000C(0x0000)
		int32_t                                                    m_nCountAcceptedGame;                                    // 0x0010(0x0000)
		struct CSteamID                                            m_steamIDHost;                                           // 0x0014(0x0000)
		bool                                                       m_bFinalCallback;                                        // 0x001C(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RequestPlayersForGameProgressCallback_t
	 * Size -> 0x0000
	 */
	struct RequestPlayersForGameProgressCallback_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		uint64_t                                                   m_ullSearchID;                                           // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RequestPlayersForGameResultCallback_t
	 * Size -> 0x0000
	 */
	struct RequestPlayersForGameResultCallback_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		uint64_t                                                   m_ullSearchID;                                           // 0x0008(0x0000)
		struct CSteamID                                            m_SteamIDPlayerFound;                                    // 0x0010(0x0000)
		struct CSteamID                                            m_SteamIDLobby;                                          // 0x0018(0x0000)
		int32_t                                                    m_ePlayerAcceptState;                                    // 0x0020(0x0000)
		int32_t                                                    m_nPlayerIndex;                                          // 0x0024(0x0000)
		int32_t                                                    m_nTotalPlayersFound;                                    // 0x0028(0x0000)
		int32_t                                                    m_nTotalPlayersAcceptedGame;                             // 0x002C(0x0000)
		int32_t                                                    m_nSuggestedTeamIndex;                                   // 0x0030(0x0000)
		uint64_t                                                   m_ullUniqueGameID;                                       // 0x0038(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RequestPlayersForGameFinalResultCallback_t
	 * Size -> 0x0000
	 */
	struct RequestPlayersForGameFinalResultCallback_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		uint64_t                                                   m_ullSearchID;                                           // 0x0008(0x0000)
		uint64_t                                                   m_ullUniqueGameID;                                       // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SubmitPlayerResultResultCallback_t
	 * Size -> 0x0000
	 */
	struct SubmitPlayerResultResultCallback_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		uint64_t                                                   ullUniqueGameID;                                         // 0x0008(0x0000)
		struct CSteamID                                            steamIDPlayer;                                           // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.EndGameResultCallback_t
	 * Size -> 0x0000
	 */
	struct EndGameResultCallback_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		uint64_t                                                   ullUniqueGameID;                                         // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.PartyBeaconID_t
	 * Size -> 0x0000
	 */
	struct PartyBeaconID_t
	{
	public:
		uint64_t                                                   m_PartyBeaconID;                                         // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.JoinPartyCallback_t
	 * Size -> 0x0000
	 */
	struct JoinPartyCallback_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		struct PartyBeaconID_t                                     m_ulBeaconID;                                            // 0x0008(0x0000)
		struct CSteamID                                            m_SteamIDBeaconOwner;                                    // 0x0010(0x0000)
		class Byte_Array*                                          m_rgchConnectString;                                     // 0x0018(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.CreateBeaconCallback_t
	 * Size -> 0x0000
	 */
	struct CreateBeaconCallback_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		struct PartyBeaconID_t                                     m_ulBeaconID;                                            // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.ReservationNotificationCallback_t
	 * Size -> 0x0000
	 */
	struct ReservationNotificationCallback_t
	{
	public:
		struct PartyBeaconID_t                                     m_ulBeaconID;                                            // 0x0000(0x0000)
		struct CSteamID                                            m_steamIDJoiner;                                         // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.ChangeNumOpenSlotsCallback_t
	 * Size -> 0x0000
	 */
	struct ChangeNumOpenSlotsCallback_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.AvailableBeaconLocationsUpdated_t
	 * Size -> 0x0000
	 */
	struct AvailableBeaconLocationsUpdated_t
	{	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.ActiveBeaconsUpdated_t
	 * Size -> 0x0000
	 */
	struct ActiveBeaconsUpdated_t
	{	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.PlaybackStatusHasChanged_t
	 * Size -> 0x0000
	 */
	struct PlaybackStatusHasChanged_t
	{	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.VolumeHasChanged_t
	 * Size -> 0x0000
	 */
	struct VolumeHasChanged_t
	{
	public:
		float                                                      m_flNewVolume;                                           // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.MusicPlayerRemoteWillActivate_t
	 * Size -> 0x0000
	 */
	struct MusicPlayerRemoteWillActivate_t
	{	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.MusicPlayerRemoteWillDeactivate_t
	 * Size -> 0x0000
	 */
	struct MusicPlayerRemoteWillDeactivate_t
	{	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.MusicPlayerRemoteToFront_t
	 * Size -> 0x0000
	 */
	struct MusicPlayerRemoteToFront_t
	{	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.MusicPlayerWillQuit_t
	 * Size -> 0x0000
	 */
	struct MusicPlayerWillQuit_t
	{	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.MusicPlayerWantsPlay_t
	 * Size -> 0x0000
	 */
	struct MusicPlayerWantsPlay_t
	{	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.MusicPlayerWantsPause_t
	 * Size -> 0x0000
	 */
	struct MusicPlayerWantsPause_t
	{	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.MusicPlayerWantsPlayPrevious_t
	 * Size -> 0x0000
	 */
	struct MusicPlayerWantsPlayPrevious_t
	{	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.MusicPlayerWantsPlayNext_t
	 * Size -> 0x0000
	 */
	struct MusicPlayerWantsPlayNext_t
	{	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.MusicPlayerWantsShuffled_t
	 * Size -> 0x0000
	 */
	struct MusicPlayerWantsShuffled_t
	{
	public:
		bool                                                       m_bShuffled;                                             // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.MusicPlayerWantsLooped_t
	 * Size -> 0x0000
	 */
	struct MusicPlayerWantsLooped_t
	{
	public:
		bool                                                       m_bLooped;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.MusicPlayerWantsVolume_t
	 * Size -> 0x0000
	 */
	struct MusicPlayerWantsVolume_t
	{
	public:
		float                                                      m_flNewVolume;                                           // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.MusicPlayerSelectsQueueEntry_t
	 * Size -> 0x0000
	 */
	struct MusicPlayerSelectsQueueEntry_t
	{
	public:
		int32_t                                                    nID;                                                     // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.MusicPlayerSelectsPlaylistEntry_t
	 * Size -> 0x0000
	 */
	struct MusicPlayerSelectsPlaylistEntry_t
	{
	public:
		int32_t                                                    nID;                                                     // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.MusicPlayerWantsPlayingRepeatStatus_t
	 * Size -> 0x0000
	 */
	struct MusicPlayerWantsPlayingRepeatStatus_t
	{
	public:
		int32_t                                                    m_nPlayingRepeatStatus;                                  // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.P2PSessionRequest_t
	 * Size -> 0x0000
	 */
	struct P2PSessionRequest_t
	{
	public:
		struct CSteamID                                            m_steamIDRemote;                                         // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.P2PSessionConnectFail_t
	 * Size -> 0x0000
	 */
	struct P2PSessionConnectFail_t
	{
	public:
		struct CSteamID                                            m_steamIDRemote;                                         // 0x0000(0x0000)
		uint8_t                                                    m_eP2PSessionError;                                      // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SNetSocket_t
	 * Size -> 0x0000
	 */
	struct SNetSocket_t
	{
	public:
		uint32_t                                                   m_SNetSocket;                                            // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SNetListenSocket_t
	 * Size -> 0x0000
	 */
	struct SNetListenSocket_t
	{
	public:
		uint32_t                                                   m_SNetListenSocket;                                      // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SocketStatusCallback_t
	 * Size -> 0x0000
	 */
	struct SocketStatusCallback_t
	{
	public:
		struct SNetSocket_t                                        m_hSocket;                                               // 0x0000(0x0000)
		struct SNetListenSocket_t                                  m_hListenSocket;                                         // 0x0004(0x0000)
		struct CSteamID                                            m_steamIDRemote;                                         // 0x0008(0x0000)
		int32_t                                                    m_eSNetSocketState;                                      // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamNetworkingIPAddr
	 * Size -> 0x0000
	 */
	struct SteamNetworkingIPAddr
	{
	public:
		class Byte_Array*                                          m_ipv6;                                                  // 0x0000(0x0000)
		uint16_t                                                   m_port;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamNetworkingIdentity
	 * Size -> 0x0000
	 */
	struct SteamNetworkingIdentity
	{
	public:
		int32_t                                                    m_eType;                                                 // 0x0000(0x0000)
		int32_t                                                    m_cbSize;                                                // 0x0004(0x0000)
		class UInt32_Array*                                        m_reserved;                                              // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamNetworkingMessagesSessionRequest_t
	 * Size -> 0x0000
	 */
	struct SteamNetworkingMessagesSessionRequest_t
	{
	public:
		struct SteamNetworkingIdentity                             m_identityRemote;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HSteamListenSocket
	 * Size -> 0x0000
	 */
	struct HSteamListenSocket
	{
	public:
		uint32_t                                                   m_HSteamListenSocket;                                    // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamNetworkingPOPID
	 * Size -> 0x0000
	 */
	struct SteamNetworkingPOPID
	{
	public:
		uint32_t                                                   m_SteamNetworkingPOPID;                                  // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamNetConnectionInfo_t
	 * Size -> 0x0000
	 */
	struct SteamNetConnectionInfo_t
	{
	public:
		struct SteamNetworkingIdentity                             m_identityRemote;                                        // 0x0000(0x0000)
		int64_t                                                    m_nUserData;                                             // 0x0010(0x0000)
		struct HSteamListenSocket                                  m_hListenSocket;                                         // 0x0018(0x0000)
		struct SteamNetworkingIPAddr                               m_addrRemote;                                            // 0x0020(0x0000)
		uint16_t                                                   m__pad1;                                                 // 0x0030(0x0000)
		struct SteamNetworkingPOPID                                m_idPOPRemote;                                           // 0x0034(0x0000)
		struct SteamNetworkingPOPID                                m_idPOPRelay;                                            // 0x0038(0x0000)
		int32_t                                                    m_eState;                                                // 0x003C(0x0000)
		int32_t                                                    m_eEndReason;                                            // 0x0040(0x0000)
		class Byte_Array*                                          m_szEndDebug;                                            // 0x0048(0x0000)
		class Byte_Array*                                          m_szConnectionDescription;                               // 0x0050(0x0000)
		int32_t                                                    m_nFlags;                                                // 0x0058(0x0000)
		class UInt32_Array*                                        reserved;                                                // 0x0060(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamNetworkingMessagesSessionFailed_t
	 * Size -> 0x0000
	 */
	struct SteamNetworkingMessagesSessionFailed_t
	{
	public:
		struct SteamNetConnectionInfo_t                            m_info;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HSteamNetConnection
	 * Size -> 0x0000
	 */
	struct HSteamNetConnection
	{
	public:
		uint32_t                                                   m_HSteamNetConnection;                                   // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamNetConnectionStatusChangedCallback_t
	 * Size -> 0x0000
	 */
	struct SteamNetConnectionStatusChangedCallback_t
	{
	public:
		struct HSteamNetConnection                                 m_hConn;                                                 // 0x0000(0x0000)
		struct SteamNetConnectionInfo_t                            m_info;                                                  // 0x0008(0x0000)
		int32_t                                                    m_eOldState;                                             // 0x0070(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamNetAuthenticationStatus_t
	 * Size -> 0x0000
	 */
	struct SteamNetAuthenticationStatus_t
	{
	public:
		int32_t                                                    m_eAvail;                                                // 0x0000(0x0000)
		class Byte_Array*                                          m_debugMsg;                                              // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamRelayNetworkStatus_t
	 * Size -> 0x0000
	 */
	struct SteamRelayNetworkStatus_t
	{
	public:
		int32_t                                                    m_eAvail;                                                // 0x0000(0x0000)
		int32_t                                                    m_bPingMeasurementInProgress;                            // 0x0004(0x0000)
		int32_t                                                    m_eAvailNetworkConfig;                                   // 0x0008(0x0000)
		int32_t                                                    m_eAvailAnyRelay;                                        // 0x000C(0x0000)
		class Byte_Array*                                          m_debugMsg;                                              // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamParentalSettingsChanged_t
	 * Size -> 0x0000
	 */
	struct SteamParentalSettingsChanged_t
	{	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RemotePlaySessionID_t
	 * Size -> 0x0000
	 */
	struct RemotePlaySessionID_t
	{
	public:
		uint32_t                                                   m_RemotePlaySessionID;                                   // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamRemotePlaySessionConnected_t
	 * Size -> 0x0000
	 */
	struct SteamRemotePlaySessionConnected_t
	{
	public:
		struct RemotePlaySessionID_t                               m_unSessionID;                                           // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamRemotePlaySessionDisconnected_t
	 * Size -> 0x0000
	 */
	struct SteamRemotePlaySessionDisconnected_t
	{
	public:
		struct RemotePlaySessionID_t                               m_unSessionID;                                           // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.UGCHandle_t
	 * Size -> 0x0000
	 */
	struct UGCHandle_t
	{
	public:
		uint64_t                                                   m_UGCHandle;                                             // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RemoteStorageFileShareResult_t
	 * Size -> 0x0000
	 */
	struct RemoteStorageFileShareResult_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		struct UGCHandle_t                                         m_hFile;                                                 // 0x0008(0x0000)
		class Byte_Array*                                          m_rgchFilename;                                          // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.PublishedFileId_t
	 * Size -> 0x0000
	 */
	struct PublishedFileId_t
	{
	public:
		uint64_t                                                   m_PublishedFileId;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RemoteStoragePublishFileResult_t
	 * Size -> 0x0000
	 */
	struct RemoteStoragePublishFileResult_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		struct PublishedFileId_t                                   m_nPublishedFileId;                                      // 0x0008(0x0000)
		bool                                                       m_bUserNeedsToAcceptWorkshopLegalAgreement;              // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RemoteStorageDeletePublishedFileResult_t
	 * Size -> 0x0000
	 */
	struct RemoteStorageDeletePublishedFileResult_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		struct PublishedFileId_t                                   m_nPublishedFileId;                                      // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RemoteStorageEnumerateUserPublishedFilesResult_t
	 * Size -> 0x0000
	 */
	struct RemoteStorageEnumerateUserPublishedFilesResult_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		int32_t                                                    m_nResultsReturned;                                      // 0x0004(0x0000)
		int32_t                                                    m_nTotalResultCount;                                     // 0x0008(0x0000)
		class PublishedFileId_t_Array*                             m_rgPublishedFileId;                                     // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RemoteStorageSubscribePublishedFileResult_t
	 * Size -> 0x0000
	 */
	struct RemoteStorageSubscribePublishedFileResult_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		struct PublishedFileId_t                                   m_nPublishedFileId;                                      // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RemoteStorageEnumerateUserSubscribedFilesResult_t
	 * Size -> 0x0000
	 */
	struct RemoteStorageEnumerateUserSubscribedFilesResult_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		int32_t                                                    m_nResultsReturned;                                      // 0x0004(0x0000)
		int32_t                                                    m_nTotalResultCount;                                     // 0x0008(0x0000)
		class PublishedFileId_t_Array*                             m_rgPublishedFileId;                                     // 0x0010(0x0000)
		class UInt32_Array*                                        m_rgRTimeSubscribed;                                     // 0x0018(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RemoteStorageUnsubscribePublishedFileResult_t
	 * Size -> 0x0000
	 */
	struct RemoteStorageUnsubscribePublishedFileResult_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		struct PublishedFileId_t                                   m_nPublishedFileId;                                      // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RemoteStorageUpdatePublishedFileResult_t
	 * Size -> 0x0000
	 */
	struct RemoteStorageUpdatePublishedFileResult_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		struct PublishedFileId_t                                   m_nPublishedFileId;                                      // 0x0008(0x0000)
		bool                                                       m_bUserNeedsToAcceptWorkshopLegalAgreement;              // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RemoteStorageDownloadUGCResult_t
	 * Size -> 0x0000
	 */
	struct RemoteStorageDownloadUGCResult_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		struct UGCHandle_t                                         m_hFile;                                                 // 0x0008(0x0000)
		struct AppId_t                                             m_nAppID;                                                // 0x0010(0x0000)
		int32_t                                                    m_nSizeInBytes;                                          // 0x0014(0x0000)
		class Byte_Array*                                          m_pchFileName;                                           // 0x0018(0x0000)
		uint64_t                                                   m_ulSteamIDOwner;                                        // 0x0020(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RemoteStorageGetPublishedFileDetailsResult_t
	 * Size -> 0x0000
	 */
	struct RemoteStorageGetPublishedFileDetailsResult_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		struct PublishedFileId_t                                   m_nPublishedFileId;                                      // 0x0008(0x0000)
		struct AppId_t                                             m_nCreatorAppID;                                         // 0x0010(0x0000)
		struct AppId_t                                             m_nConsumerAppID;                                        // 0x0014(0x0000)
		class Byte_Array*                                          m_rgchTitle;                                             // 0x0018(0x0000)
		class Byte_Array*                                          m_rgchDescription;                                       // 0x0020(0x0000)
		struct UGCHandle_t                                         m_hFile;                                                 // 0x0028(0x0000)
		struct UGCHandle_t                                         m_hPreviewFile;                                          // 0x0030(0x0000)
		uint64_t                                                   m_ulSteamIDOwner;                                        // 0x0038(0x0000)
		uint32_t                                                   m_rtimeCreated;                                          // 0x0040(0x0000)
		uint32_t                                                   m_rtimeUpdated;                                          // 0x0044(0x0000)
		int32_t                                                    m_eVisibility;                                           // 0x0048(0x0000)
		bool                                                       m_bBanned;                                               // 0x004C(0x0000)
		class Byte_Array*                                          m_rgchTags;                                              // 0x0050(0x0000)
		bool                                                       m_bTagsTruncated;                                        // 0x0058(0x0000)
		class Byte_Array*                                          m_pchFileName;                                           // 0x0060(0x0000)
		int32_t                                                    m_nFileSize;                                             // 0x0068(0x0000)
		int32_t                                                    m_nPreviewFileSize;                                      // 0x006C(0x0000)
		class Byte_Array*                                          m_rgchURL;                                               // 0x0070(0x0000)
		int32_t                                                    m_eFileType;                                             // 0x0078(0x0000)
		bool                                                       m_bAcceptedForUse;                                       // 0x007C(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RemoteStorageEnumerateWorkshopFilesResult_t
	 * Size -> 0x0000
	 */
	struct RemoteStorageEnumerateWorkshopFilesResult_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		int32_t                                                    m_nResultsReturned;                                      // 0x0004(0x0000)
		int32_t                                                    m_nTotalResultCount;                                     // 0x0008(0x0000)
		class PublishedFileId_t_Array*                             m_rgPublishedFileId;                                     // 0x0010(0x0000)
		class Single_Array*                                        m_rgScore;                                               // 0x0018(0x0000)
		struct AppId_t                                             m_nAppId;                                                // 0x0020(0x0000)
		uint32_t                                                   m_unStartIndex;                                          // 0x0024(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RemoteStorageGetPublishedItemVoteDetailsResult_t
	 * Size -> 0x0000
	 */
	struct RemoteStorageGetPublishedItemVoteDetailsResult_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		struct PublishedFileId_t                                   m_unPublishedFileId;                                     // 0x0008(0x0000)
		int32_t                                                    m_nVotesFor;                                             // 0x0010(0x0000)
		int32_t                                                    m_nVotesAgainst;                                         // 0x0014(0x0000)
		int32_t                                                    m_nReports;                                              // 0x0018(0x0000)
		float                                                      m_fScore;                                                // 0x001C(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RemoteStoragePublishedFileSubscribed_t
	 * Size -> 0x0000
	 */
	struct RemoteStoragePublishedFileSubscribed_t
	{
	public:
		struct PublishedFileId_t                                   m_nPublishedFileId;                                      // 0x0000(0x0000)
		struct AppId_t                                             m_nAppID;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RemoteStoragePublishedFileUnsubscribed_t
	 * Size -> 0x0000
	 */
	struct RemoteStoragePublishedFileUnsubscribed_t
	{
	public:
		struct PublishedFileId_t                                   m_nPublishedFileId;                                      // 0x0000(0x0000)
		struct AppId_t                                             m_nAppID;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RemoteStoragePublishedFileDeleted_t
	 * Size -> 0x0000
	 */
	struct RemoteStoragePublishedFileDeleted_t
	{
	public:
		struct PublishedFileId_t                                   m_nPublishedFileId;                                      // 0x0000(0x0000)
		struct AppId_t                                             m_nAppID;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RemoteStorageUpdateUserPublishedItemVoteResult_t
	 * Size -> 0x0000
	 */
	struct RemoteStorageUpdateUserPublishedItemVoteResult_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		struct PublishedFileId_t                                   m_nPublishedFileId;                                      // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RemoteStorageUserVoteDetails_t
	 * Size -> 0x0000
	 */
	struct RemoteStorageUserVoteDetails_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		struct PublishedFileId_t                                   m_nPublishedFileId;                                      // 0x0008(0x0000)
		int32_t                                                    m_eVote;                                                 // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RemoteStorageEnumerateUserSharedWorkshopFilesResult_t
	 * Size -> 0x0000
	 */
	struct RemoteStorageEnumerateUserSharedWorkshopFilesResult_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		int32_t                                                    m_nResultsReturned;                                      // 0x0004(0x0000)
		int32_t                                                    m_nTotalResultCount;                                     // 0x0008(0x0000)
		class PublishedFileId_t_Array*                             m_rgPublishedFileId;                                     // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RemoteStorageSetUserPublishedFileActionResult_t
	 * Size -> 0x0000
	 */
	struct RemoteStorageSetUserPublishedFileActionResult_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		struct PublishedFileId_t                                   m_nPublishedFileId;                                      // 0x0008(0x0000)
		int32_t                                                    m_eAction;                                               // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RemoteStorageEnumeratePublishedFilesByUserActionResult_t
	 * Size -> 0x0000
	 */
	struct RemoteStorageEnumeratePublishedFilesByUserActionResult_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		int32_t                                                    m_eAction;                                               // 0x0004(0x0000)
		int32_t                                                    m_nResultsReturned;                                      // 0x0008(0x0000)
		int32_t                                                    m_nTotalResultCount;                                     // 0x000C(0x0000)
		class PublishedFileId_t_Array*                             m_rgPublishedFileId;                                     // 0x0010(0x0000)
		class UInt32_Array*                                        m_rgRTimeUpdated;                                        // 0x0018(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RemoteStoragePublishFileProgress_t
	 * Size -> 0x0000
	 */
	struct RemoteStoragePublishFileProgress_t
	{
	public:
		double                                                     m_dPercentFile;                                          // 0x0000(0x0000)
		bool                                                       m_bPreview;                                              // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RemoteStoragePublishedFileUpdated_t
	 * Size -> 0x0000
	 */
	struct RemoteStoragePublishedFileUpdated_t
	{
	public:
		struct PublishedFileId_t                                   m_nPublishedFileId;                                      // 0x0000(0x0000)
		struct AppId_t                                             m_nAppID;                                                // 0x0008(0x0000)
		uint64_t                                                   m_ulUnused;                                              // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RemoteStorageFileWriteAsyncComplete_t
	 * Size -> 0x0000
	 */
	struct RemoteStorageFileWriteAsyncComplete_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamAPICall_t
	 * Size -> 0x0000
	 */
	struct SteamAPICall_t
	{
	public:
		uint64_t                                                   m_SteamAPICall;                                          // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RemoteStorageFileReadAsyncComplete_t
	 * Size -> 0x0000
	 */
	struct RemoteStorageFileReadAsyncComplete_t
	{
	public:
		struct SteamAPICall_t                                      m_hFileReadAsync;                                        // 0x0000(0x0000)
		int32_t                                                    m_eResult;                                               // 0x0008(0x0000)
		uint32_t                                                   m_nOffset;                                               // 0x000C(0x0000)
		uint32_t                                                   m_cubRead;                                               // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RemoteStorageLocalFileChange_t
	 * Size -> 0x0000
	 */
	struct RemoteStorageLocalFileChange_t
	{	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.ScreenshotHandle
	 * Size -> 0x0000
	 */
	struct ScreenshotHandle
	{
	public:
		uint32_t                                                   m_ScreenshotHandle;                                      // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.ScreenshotReady_t
	 * Size -> 0x0000
	 */
	struct ScreenshotReady_t
	{
	public:
		struct ScreenshotHandle                                    m_hLocal;                                                // 0x0000(0x0000)
		int32_t                                                    m_eResult;                                               // 0x0004(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.ScreenshotRequested_t
	 * Size -> 0x0000
	 */
	struct ScreenshotRequested_t
	{	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.UGCQueryHandle_t
	 * Size -> 0x0000
	 */
	struct UGCQueryHandle_t
	{
	public:
		uint64_t                                                   m_UGCQueryHandle;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamUGCQueryCompleted_t
	 * Size -> 0x0000
	 */
	struct SteamUGCQueryCompleted_t
	{
	public:
		struct UGCQueryHandle_t                                    m_handle;                                                // 0x0000(0x0000)
		int32_t                                                    m_eResult;                                               // 0x0008(0x0000)
		uint32_t                                                   m_unNumResultsReturned;                                  // 0x000C(0x0000)
		uint32_t                                                   m_unTotalMatchingResults;                                // 0x0010(0x0000)
		bool                                                       m_bCachedData;                                           // 0x0014(0x0000)
		class Byte_Array*                                          m_rgchNextCursor;                                        // 0x0018(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamUGCDetails_t
	 * Size -> 0x0000
	 */
	struct SteamUGCDetails_t
	{
	public:
		struct PublishedFileId_t                                   m_nPublishedFileId;                                      // 0x0000(0x0000)
		int32_t                                                    m_eResult;                                               // 0x0008(0x0000)
		int32_t                                                    m_eFileType;                                             // 0x000C(0x0000)
		struct AppId_t                                             m_nCreatorAppID;                                         // 0x0010(0x0000)
		struct AppId_t                                             m_nConsumerAppID;                                        // 0x0014(0x0000)
		class Byte_Array*                                          m_rgchTitle;                                             // 0x0018(0x0000)
		class Byte_Array*                                          m_rgchDescription;                                       // 0x0020(0x0000)
		uint64_t                                                   m_ulSteamIDOwner;                                        // 0x0028(0x0000)
		uint32_t                                                   m_rtimeCreated;                                          // 0x0030(0x0000)
		uint32_t                                                   m_rtimeUpdated;                                          // 0x0034(0x0000)
		uint32_t                                                   m_rtimeAddedToUserList;                                  // 0x0038(0x0000)
		int32_t                                                    m_eVisibility;                                           // 0x003C(0x0000)
		bool                                                       m_bBanned;                                               // 0x0040(0x0000)
		bool                                                       m_bAcceptedForUse;                                       // 0x0041(0x0000)
		bool                                                       m_bTagsTruncated;                                        // 0x0042(0x0000)
		class Byte_Array*                                          m_rgchTags;                                              // 0x0048(0x0000)
		struct UGCHandle_t                                         m_hFile;                                                 // 0x0050(0x0000)
		struct UGCHandle_t                                         m_hPreviewFile;                                          // 0x0058(0x0000)
		class Byte_Array*                                          m_pchFileName;                                           // 0x0060(0x0000)
		int32_t                                                    m_nFileSize;                                             // 0x0068(0x0000)
		int32_t                                                    m_nPreviewFileSize;                                      // 0x006C(0x0000)
		class Byte_Array*                                          m_rgchURL;                                               // 0x0070(0x0000)
		uint32_t                                                   m_unVotesUp;                                             // 0x0078(0x0000)
		uint32_t                                                   m_unVotesDown;                                           // 0x007C(0x0000)
		float                                                      m_flScore;                                               // 0x0080(0x0000)
		uint32_t                                                   m_unNumChildren;                                         // 0x0084(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamUGCRequestUGCDetailsResult_t
	 * Size -> 0x0000
	 */
	struct SteamUGCRequestUGCDetailsResult_t
	{
	public:
		struct SteamUGCDetails_t                                   m_details;                                               // 0x0000(0x0000)
		bool                                                       m_bCachedData;                                           // 0x0088(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.CreateItemResult_t
	 * Size -> 0x0000
	 */
	struct CreateItemResult_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		struct PublishedFileId_t                                   m_nPublishedFileId;                                      // 0x0008(0x0000)
		bool                                                       m_bUserNeedsToAcceptWorkshopLegalAgreement;              // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SubmitItemUpdateResult_t
	 * Size -> 0x0000
	 */
	struct SubmitItemUpdateResult_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		bool                                                       m_bUserNeedsToAcceptWorkshopLegalAgreement;              // 0x0004(0x0000)
		struct PublishedFileId_t                                   m_nPublishedFileId;                                      // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.ItemInstalled_t
	 * Size -> 0x0000
	 */
	struct ItemInstalled_t
	{
	public:
		struct AppId_t                                             m_unAppID;                                               // 0x0000(0x0000)
		struct PublishedFileId_t                                   m_nPublishedFileId;                                      // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.DownloadItemResult_t
	 * Size -> 0x0000
	 */
	struct DownloadItemResult_t
	{
	public:
		struct AppId_t                                             m_unAppID;                                               // 0x0000(0x0000)
		struct PublishedFileId_t                                   m_nPublishedFileId;                                      // 0x0008(0x0000)
		int32_t                                                    m_eResult;                                               // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.UserFavoriteItemsListChanged_t
	 * Size -> 0x0000
	 */
	struct UserFavoriteItemsListChanged_t
	{
	public:
		struct PublishedFileId_t                                   m_nPublishedFileId;                                      // 0x0000(0x0000)
		int32_t                                                    m_eResult;                                               // 0x0008(0x0000)
		bool                                                       m_bWasAddRequest;                                        // 0x000C(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SetUserItemVoteResult_t
	 * Size -> 0x0000
	 */
	struct SetUserItemVoteResult_t
	{
	public:
		struct PublishedFileId_t                                   m_nPublishedFileId;                                      // 0x0000(0x0000)
		int32_t                                                    m_eResult;                                               // 0x0008(0x0000)
		bool                                                       m_bVoteUp;                                               // 0x000C(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.GetUserItemVoteResult_t
	 * Size -> 0x0000
	 */
	struct GetUserItemVoteResult_t
	{
	public:
		struct PublishedFileId_t                                   m_nPublishedFileId;                                      // 0x0000(0x0000)
		int32_t                                                    m_eResult;                                               // 0x0008(0x0000)
		bool                                                       m_bVotedUp;                                              // 0x000C(0x0000)
		bool                                                       m_bVotedDown;                                            // 0x000D(0x0000)
		bool                                                       m_bVoteSkipped;                                          // 0x000E(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.StartPlaytimeTrackingResult_t
	 * Size -> 0x0000
	 */
	struct StartPlaytimeTrackingResult_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.StopPlaytimeTrackingResult_t
	 * Size -> 0x0000
	 */
	struct StopPlaytimeTrackingResult_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.AddUGCDependencyResult_t
	 * Size -> 0x0000
	 */
	struct AddUGCDependencyResult_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		struct PublishedFileId_t                                   m_nPublishedFileId;                                      // 0x0008(0x0000)
		struct PublishedFileId_t                                   m_nChildPublishedFileId;                                 // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RemoveUGCDependencyResult_t
	 * Size -> 0x0000
	 */
	struct RemoveUGCDependencyResult_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		struct PublishedFileId_t                                   m_nPublishedFileId;                                      // 0x0008(0x0000)
		struct PublishedFileId_t                                   m_nChildPublishedFileId;                                 // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.AddAppDependencyResult_t
	 * Size -> 0x0000
	 */
	struct AddAppDependencyResult_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		struct PublishedFileId_t                                   m_nPublishedFileId;                                      // 0x0008(0x0000)
		struct AppId_t                                             m_nAppID;                                                // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RemoveAppDependencyResult_t
	 * Size -> 0x0000
	 */
	struct RemoveAppDependencyResult_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		struct PublishedFileId_t                                   m_nPublishedFileId;                                      // 0x0008(0x0000)
		struct AppId_t                                             m_nAppID;                                                // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.GetAppDependenciesResult_t
	 * Size -> 0x0000
	 */
	struct GetAppDependenciesResult_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		struct PublishedFileId_t                                   m_nPublishedFileId;                                      // 0x0008(0x0000)
		class AppId_t_Array*                                       m_rgAppIDs;                                              // 0x0010(0x0000)
		uint32_t                                                   m_nNumAppDependencies;                                   // 0x0018(0x0000)
		uint32_t                                                   m_nTotalNumAppDependencies;                              // 0x001C(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.DeleteItemResult_t
	 * Size -> 0x0000
	 */
	struct DeleteItemResult_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		struct PublishedFileId_t                                   m_nPublishedFileId;                                      // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.UserSubscribedItemsListChanged_t
	 * Size -> 0x0000
	 */
	struct UserSubscribedItemsListChanged_t
	{
	public:
		struct AppId_t                                             m_nAppID;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.RTime32
	 * Size -> 0x0000
	 */
	struct RTime32
	{
	public:
		uint32_t                                                   m_RTime32;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.WorkshopEULAStatus_t
	 * Size -> 0x0000
	 */
	struct WorkshopEULAStatus_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		struct AppId_t                                             m_nAppID;                                                // 0x0004(0x0000)
		uint32_t                                                   m_unVersion;                                             // 0x0008(0x0000)
		struct RTime32                                             m_rtAction;                                              // 0x000C(0x0000)
		bool                                                       m_bAccepted;                                             // 0x0010(0x0000)
		bool                                                       m_bNeedsAction;                                          // 0x0011(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamServersConnected_t
	 * Size -> 0x0000
	 */
	struct SteamServersConnected_t
	{	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamServerConnectFailure_t
	 * Size -> 0x0000
	 */
	struct SteamServerConnectFailure_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		bool                                                       m_bStillRetrying;                                        // 0x0004(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamServersDisconnected_t
	 * Size -> 0x0000
	 */
	struct SteamServersDisconnected_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.ClientGameServerDeny_t
	 * Size -> 0x0000
	 */
	struct ClientGameServerDeny_t
	{
	public:
		uint32_t                                                   m_uAppID;                                                // 0x0000(0x0000)
		uint32_t                                                   m_unGameServerIP;                                        // 0x0004(0x0000)
		uint16_t                                                   m_usGameServerPort;                                      // 0x0008(0x0000)
		uint16_t                                                   m_bSecure;                                               // 0x000A(0x0000)
		uint32_t                                                   m_uReason;                                               // 0x000C(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.IPCFailure_t
	 * Size -> 0x0000
	 */
	struct IPCFailure_t
	{
	public:
		uint8_t                                                    m_eFailureType;                                          // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.LicensesUpdated_t
	 * Size -> 0x0000
	 */
	struct LicensesUpdated_t
	{	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.ValidateAuthTicketResponse_t
	 * Size -> 0x0000
	 */
	struct ValidateAuthTicketResponse_t
	{
	public:
		struct CSteamID                                            m_SteamID;                                               // 0x0000(0x0000)
		int32_t                                                    m_eAuthSessionResponse;                                  // 0x0008(0x0000)
		struct CSteamID                                            m_OwnerSteamID;                                          // 0x000C(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.MicroTxnAuthorizationResponse_t
	 * Size -> 0x0000
	 */
	struct MicroTxnAuthorizationResponse_t
	{
	public:
		uint32_t                                                   m_unAppID;                                               // 0x0000(0x0000)
		uint64_t                                                   m_ulOrderID;                                             // 0x0008(0x0000)
		uint8_t                                                    m_bAuthorized;                                           // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.EncryptedAppTicketResponse_t
	 * Size -> 0x0000
	 */
	struct EncryptedAppTicketResponse_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HAuthTicket
	 * Size -> 0x0000
	 */
	struct HAuthTicket
	{
	public:
		uint32_t                                                   m_HAuthTicket;                                           // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.GetAuthSessionTicketResponse_t
	 * Size -> 0x0000
	 */
	struct GetAuthSessionTicketResponse_t
	{
	public:
		struct HAuthTicket                                         m_hAuthTicket;                                           // 0x0000(0x0000)
		int32_t                                                    m_eResult;                                               // 0x0004(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.GameWebCallback_t
	 * Size -> 0x0000
	 */
	struct GameWebCallback_t
	{
	public:
		class Byte_Array*                                          m_szURL;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.StoreAuthURLResponse_t
	 * Size -> 0x0000
	 */
	struct StoreAuthURLResponse_t
	{
	public:
		class Byte_Array*                                          m_szURL;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.MarketEligibilityResponse_t
	 * Size -> 0x0000
	 */
	struct MarketEligibilityResponse_t
	{
	public:
		bool                                                       m_bAllowed;                                              // 0x0000(0x0000)
		int32_t                                                    m_eNotAllowedReason;                                     // 0x0004(0x0000)
		struct RTime32                                             m_rtAllowedAtTime;                                       // 0x0008(0x0000)
		int32_t                                                    m_cdaySteamGuardRequiredDays;                            // 0x000C(0x0000)
		int32_t                                                    m_cdayNewDeviceCooldown;                                 // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.DurationControl_t
	 * Size -> 0x0000
	 */
	struct DurationControl_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		struct AppId_t                                             m_appid;                                                 // 0x0004(0x0000)
		bool                                                       m_bApplicable;                                           // 0x0008(0x0000)
		int32_t                                                    m_csecsLast5h;                                           // 0x000C(0x0000)
		int32_t                                                    m_progress;                                              // 0x0010(0x0000)
		int32_t                                                    m_notification;                                          // 0x0014(0x0000)
		int32_t                                                    m_csecsToday;                                            // 0x0018(0x0000)
		int32_t                                                    m_csecsRemaining;                                        // 0x001C(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.UserStatsReceived_t
	 * Size -> 0x0000
	 */
	struct UserStatsReceived_t
	{
	public:
		uint64_t                                                   m_nGameID;                                               // 0x0000(0x0000)
		int32_t                                                    m_eResult;                                               // 0x0008(0x0000)
		struct CSteamID                                            m_steamIDUser;                                           // 0x000C(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.UserStatsStored_t
	 * Size -> 0x0000
	 */
	struct UserStatsStored_t
	{
	public:
		uint64_t                                                   m_nGameID;                                               // 0x0000(0x0000)
		int32_t                                                    m_eResult;                                               // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.UserAchievementStored_t
	 * Size -> 0x0000
	 */
	struct UserAchievementStored_t
	{
	public:
		uint64_t                                                   m_nGameID;                                               // 0x0000(0x0000)
		bool                                                       m_bGroupAchievement;                                     // 0x0008(0x0000)
		class Byte_Array*                                          m_rgchAchievementName;                                   // 0x0010(0x0000)
		uint32_t                                                   m_nCurProgress;                                          // 0x0018(0x0000)
		uint32_t                                                   m_nMaxProgress;                                          // 0x001C(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamLeaderboard_t
	 * Size -> 0x0000
	 */
	struct SteamLeaderboard_t
	{
	public:
		uint64_t                                                   m_SteamLeaderboard;                                      // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.LeaderboardFindResult_t
	 * Size -> 0x0000
	 */
	struct LeaderboardFindResult_t
	{
	public:
		struct SteamLeaderboard_t                                  m_hSteamLeaderboard;                                     // 0x0000(0x0000)
		uint8_t                                                    m_bLeaderboardFound;                                     // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamLeaderboardEntries_t
	 * Size -> 0x0000
	 */
	struct SteamLeaderboardEntries_t
	{
	public:
		uint64_t                                                   m_SteamLeaderboardEntries;                               // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.LeaderboardScoresDownloaded_t
	 * Size -> 0x0000
	 */
	struct LeaderboardScoresDownloaded_t
	{
	public:
		struct SteamLeaderboard_t                                  m_hSteamLeaderboard;                                     // 0x0000(0x0000)
		struct SteamLeaderboardEntries_t                           m_hSteamLeaderboardEntries;                              // 0x0008(0x0000)
		int32_t                                                    m_cEntryCount;                                           // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.LeaderboardScoreUploaded_t
	 * Size -> 0x0000
	 */
	struct LeaderboardScoreUploaded_t
	{
	public:
		uint8_t                                                    m_bSuccess;                                              // 0x0000(0x0000)
		struct SteamLeaderboard_t                                  m_hSteamLeaderboard;                                     // 0x0008(0x0000)
		int32_t                                                    m_nScore;                                                // 0x0010(0x0000)
		uint8_t                                                    m_bScoreChanged;                                         // 0x0014(0x0000)
		int32_t                                                    m_nGlobalRankNew;                                        // 0x0018(0x0000)
		int32_t                                                    m_nGlobalRankPrevious;                                   // 0x001C(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.NumberOfCurrentPlayers_t
	 * Size -> 0x0000
	 */
	struct NumberOfCurrentPlayers_t
	{
	public:
		uint8_t                                                    m_bSuccess;                                              // 0x0000(0x0000)
		int32_t                                                    m_cPlayers;                                              // 0x0004(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.UserStatsUnloaded_t
	 * Size -> 0x0000
	 */
	struct UserStatsUnloaded_t
	{
	public:
		struct CSteamID                                            m_steamIDUser;                                           // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.CGameID
	 * Size -> 0x0000
	 */
	struct CGameID
	{
	public:
		uint64_t                                                   m_GameID;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.UserAchievementIconFetched_t
	 * Size -> 0x0000
	 */
	struct UserAchievementIconFetched_t
	{
	public:
		struct CGameID                                             m_nGameID;                                               // 0x0000(0x0000)
		class Byte_Array*                                          m_rgchAchievementName;                                   // 0x0008(0x0000)
		bool                                                       m_bAchieved;                                             // 0x0010(0x0000)
		int32_t                                                    m_nIconHandle;                                           // 0x0014(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.GlobalAchievementPercentagesReady_t
	 * Size -> 0x0000
	 */
	struct GlobalAchievementPercentagesReady_t
	{
	public:
		uint64_t                                                   m_nGameID;                                               // 0x0000(0x0000)
		int32_t                                                    m_eResult;                                               // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.LeaderboardUGCSet_t
	 * Size -> 0x0000
	 */
	struct LeaderboardUGCSet_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		struct SteamLeaderboard_t                                  m_hSteamLeaderboard;                                     // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.GlobalStatsReceived_t
	 * Size -> 0x0000
	 */
	struct GlobalStatsReceived_t
	{
	public:
		uint64_t                                                   m_nGameID;                                               // 0x0000(0x0000)
		int32_t                                                    m_eResult;                                               // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.IPCountry_t
	 * Size -> 0x0000
	 */
	struct IPCountry_t
	{	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.LowBatteryPower_t
	 * Size -> 0x0000
	 */
	struct LowBatteryPower_t
	{
	public:
		uint8_t                                                    m_nMinutesBatteryLeft;                                   // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamAPICallCompleted_t
	 * Size -> 0x0000
	 */
	struct SteamAPICallCompleted_t
	{
	public:
		struct SteamAPICall_t                                      m_hAsyncCall;                                            // 0x0000(0x0000)
		int32_t                                                    m_iCallback;                                             // 0x0008(0x0000)
		uint32_t                                                   m_cubParam;                                              // 0x000C(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamShutdown_t
	 * Size -> 0x0000
	 */
	struct SteamShutdown_t
	{	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.CheckFileSignature_t
	 * Size -> 0x0000
	 */
	struct CheckFileSignature_t
	{
	public:
		int32_t                                                    m_eCheckFileSignature;                                   // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.GamepadTextInputDismissed_t
	 * Size -> 0x0000
	 */
	struct GamepadTextInputDismissed_t
	{
	public:
		bool                                                       m_bSubmitted;                                            // 0x0000(0x0000)
		uint32_t                                                   m_unSubmittedText;                                       // 0x0004(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.AppResumingFromSuspend_t
	 * Size -> 0x0000
	 */
	struct AppResumingFromSuspend_t
	{	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.FloatingGamepadTextInputDismissed_t
	 * Size -> 0x0000
	 */
	struct FloatingGamepadTextInputDismissed_t
	{	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.GetVideoURLResult_t
	 * Size -> 0x0000
	 */
	struct GetVideoURLResult_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		struct AppId_t                                             m_unVideoAppID;                                          // 0x0004(0x0000)
		class Byte_Array*                                          m_rgchURL;                                               // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.GetOPFSettingsResult_t
	 * Size -> 0x0000
	 */
	struct GetOPFSettingsResult_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		struct AppId_t                                             m_unVideoAppID;                                          // 0x0004(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamNetworkingFakeIPResult_t
	 * Size -> 0x0000
	 */
	struct SteamNetworkingFakeIPResult_t
	{
	public:
		int32_t                                                    m_eResult;                                               // 0x0000(0x0000)
		struct SteamNetworkingIdentity                             m_identity;                                              // 0x0008(0x0000)
		uint32_t                                                   m_unIP;                                                  // 0x0018(0x0000)
		class UInt16_Array*                                        m_unPorts;                                               // 0x0020(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.FriendGameInfo_t
	 * Size -> 0x0000
	 */
	struct FriendGameInfo_t
	{
	public:
		struct CGameID                                             m_gameID;                                                // 0x0000(0x0000)
		uint32_t                                                   m_unGameIP;                                              // 0x0008(0x0000)
		uint16_t                                                   m_usGamePort;                                            // 0x000C(0x0000)
		uint16_t                                                   m_usQueryPort;                                           // 0x000E(0x0000)
		struct CSteamID                                            m_steamIDLobby;                                          // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.InputAnalogActionData_t
	 * Size -> 0x0000
	 */
	struct InputAnalogActionData_t
	{
	public:
		int32_t                                                    eMode;                                                   // 0x0000(0x0000)
		float                                                      x;                                                       // 0x0004(0x0000)
		float                                                      y;                                                       // 0x0008(0x0000)
		uint8_t                                                    bActive;                                                 // 0x000C(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.InputDigitalActionData_t
	 * Size -> 0x0000
	 */
	struct InputDigitalActionData_t
	{
	public:
		uint8_t                                                    bState;                                                  // 0x0000(0x0000)
		uint8_t                                                    bActive;                                                 // 0x0001(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.InputMotionData_t
	 * Size -> 0x0000
	 */
	struct InputMotionData_t
	{
	public:
		float                                                      rotQuatX;                                                // 0x0000(0x0000)
		float                                                      rotQuatY;                                                // 0x0004(0x0000)
		float                                                      rotQuatZ;                                                // 0x0008(0x0000)
		float                                                      rotQuatW;                                                // 0x000C(0x0000)
		float                                                      posAccelX;                                               // 0x0010(0x0000)
		float                                                      posAccelY;                                               // 0x0014(0x0000)
		float                                                      posAccelZ;                                               // 0x0018(0x0000)
		float                                                      rotVelX;                                                 // 0x001C(0x0000)
		float                                                      rotVelY;                                                 // 0x0020(0x0000)
		float                                                      rotVelZ;                                                 // 0x0024(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamItemInstanceID_t
	 * Size -> 0x0000
	 */
	struct SteamItemInstanceID_t
	{
	public:
		uint64_t                                                   m_SteamItemInstanceID;                                   // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamItemDef_t
	 * Size -> 0x0000
	 */
	struct SteamItemDef_t
	{
	public:
		int32_t                                                    m_SteamItemDef;                                          // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamItemDetails_t
	 * Size -> 0x0000
	 */
	struct SteamItemDetails_t
	{
	public:
		struct SteamItemInstanceID_t                               m_itemId;                                                // 0x0000(0x0000)
		struct SteamItemDef_t                                      m_iDefinition;                                           // 0x0008(0x0000)
		uint16_t                                                   m_unQuantity;                                            // 0x000C(0x0000)
		uint16_t                                                   m_unFlags;                                               // 0x000E(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamPartyBeaconLocation_t
	 * Size -> 0x0000
	 */
	struct SteamPartyBeaconLocation_t
	{
	public:
		int32_t                                                    m_eType;                                                 // 0x0000(0x0000)
		uint64_t                                                   m_ulLocationID;                                          // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.P2PSessionState_t
	 * Size -> 0x0000
	 */
	struct P2PSessionState_t
	{
	public:
		uint8_t                                                    m_bConnectionActive;                                     // 0x0000(0x0000)
		uint8_t                                                    m_bConnecting;                                           // 0x0001(0x0000)
		uint8_t                                                    m_eP2PSessionError;                                      // 0x0002(0x0000)
		uint8_t                                                    m_bUsingRelay;                                           // 0x0003(0x0000)
		int32_t                                                    m_nBytesQueuedForSend;                                   // 0x0004(0x0000)
		int32_t                                                    m_nPacketsQueuedForSend;                                 // 0x0008(0x0000)
		uint32_t                                                   m_nRemoteIP;                                             // 0x000C(0x0000)
		uint16_t                                                   m_nRemotePort;                                           // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamParamStringArray_t
	 * Size -> 0x0000
	 */
	struct SteamParamStringArray_t
	{
	public:
		intptr_t                                                   m_ppStrings;                                             // 0x0000(0x0000)
		int32_t                                                    m_nNumStrings;                                           // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.LeaderboardEntry_t
	 * Size -> 0x0000
	 */
	struct LeaderboardEntry_t
	{
	public:
		struct CSteamID                                            m_steamIDUser;                                           // 0x0000(0x0000)
		int32_t                                                    m_nGlobalRank;                                           // 0x0008(0x0000)
		int32_t                                                    m_nScore;                                                // 0x000C(0x0000)
		int32_t                                                    m_cDetails;                                              // 0x0010(0x0000)
		struct UGCHandle_t                                         m_hUGC;                                                  // 0x0018(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.MatchMakingKeyValuePair_t
	 * Size -> 0x0000
	 */
	struct MatchMakingKeyValuePair_t
	{
	public:
		class Il2CppString*                                        m_szKey;                                                 // 0x0000(0x0000)
		class Il2CppString*                                        m_szValue;                                               // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.CallbackMsg_t
	 * Size -> 0x0000
	 */
	struct CallbackMsg_t
	{
	public:
		int32_t                                                    m_hSteamUser;                                            // 0x0000(0x0000)
		int32_t                                                    m_iCallback;                                             // 0x0004(0x0000)
		intptr_t                                                   m_pubParam;                                              // 0x0008(0x0000)
		int32_t                                                    m_cubParam;                                              // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamNetworkingMicroseconds
	 * Size -> 0x0000
	 */
	struct SteamNetworkingMicroseconds
	{
	public:
		int64_t                                                    m_SteamNetworkingMicroseconds;                           // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamNetConnectionRealTimeStatus_t
	 * Size -> 0x0000
	 */
	struct SteamNetConnectionRealTimeStatus_t
	{
	public:
		int32_t                                                    m_eState;                                                // 0x0000(0x0000)
		int32_t                                                    m_nPing;                                                 // 0x0004(0x0000)
		float                                                      m_flConnectionQualityLocal;                              // 0x0008(0x0000)
		float                                                      m_flConnectionQualityRemote;                             // 0x000C(0x0000)
		float                                                      m_flOutPacketsPerSec;                                    // 0x0010(0x0000)
		float                                                      m_flOutBytesPerSec;                                      // 0x0014(0x0000)
		float                                                      m_flInPacketsPerSec;                                     // 0x0018(0x0000)
		float                                                      m_flInBytesPerSec;                                       // 0x001C(0x0000)
		int32_t                                                    m_nSendRateBytesPerSecond;                               // 0x0020(0x0000)
		int32_t                                                    m_cbPendingUnreliable;                                   // 0x0024(0x0000)
		int32_t                                                    m_cbPendingReliable;                                     // 0x0028(0x0000)
		int32_t                                                    m_cbSentUnackedReliable;                                 // 0x002C(0x0000)
		struct SteamNetworkingMicroseconds                         m_usecQueueTime;                                         // 0x0030(0x0000)
		class UInt32_Array*                                        reserved;                                                // 0x0038(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamNetConnectionRealTimeLaneStatus_t
	 * Size -> 0x0000
	 */
	struct SteamNetConnectionRealTimeLaneStatus_t
	{
	public:
		int32_t                                                    m_cbPendingUnreliable;                                   // 0x0000(0x0000)
		int32_t                                                    m_cbPendingReliable;                                     // 0x0004(0x0000)
		int32_t                                                    m_cbSentUnackedReliable;                                 // 0x0008(0x0000)
		int32_t                                                    reservePad1;                                             // 0x000C(0x0000)
		struct SteamNetworkingMicroseconds                         m_usecQueueTime;                                         // 0x0010(0x0000)
		class UInt32_Array*                                        reserved;                                                // 0x0018(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamNetworkPingLocation_t
	 * Size -> 0x0000
	 */
	struct SteamNetworkPingLocation_t
	{
	public:
		class Byte_Array*                                          m_data;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.Packsize+ValvePackingSentinel_t
	 * Size -> 0x0000
	 */
	struct Packsize_ValvePackingSentinel_t
	{
	public:
		uint32_t                                                   m_u32;                                                   // 0x0000(0x0000)
		uint64_t                                                   m_u64;                                                   // 0x0008(0x0000)
		uint16_t                                                   m_u16;                                                   // 0x0010(0x0000)
		double                                                     m_d;                                                     // 0x0018(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.servernetadr_t
	 * Size -> 0x0000
	 */
	struct servernetadr_t
	{
	public:
		uint16_t                                                   m_usConnectionPort;                                      // 0x0000(0x0000)
		uint16_t                                                   m_usQueryPort;                                           // 0x0002(0x0000)
		uint32_t                                                   m_unIP;                                                  // 0x0004(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamDatagramHostedAddress
	 * Size -> 0x0000
	 */
	struct SteamDatagramHostedAddress
	{
	public:
		int32_t                                                    m_cbSize;                                                // 0x0000(0x0000)
		class Byte_Array*                                          m_data;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamDatagramRelayAuthTicket.ExtraField+OptionValue
	 * Size -> 0x0000
	 */
	struct SteamDatagramRelayAuthTicket_ExtraField_OptionValue
	{
	public:
		class Byte_Array*                                          m_szStringValue;                                         // 0x0000(0x0000)
		int64_t                                                    m_nIntValue;                                             // 0x0000(0x0000)
		uint64_t                                                   m_nFixed64Value;                                         // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamDatagramRelayAuthTicket+ExtraField
	 * Size -> 0x0000
	 */
	struct SteamDatagramRelayAuthTicket_ExtraField
	{
	public:
		int32_t                                                    m_eType;                                                 // 0x0000(0x0000)
		class Byte_Array*                                          m_szName;                                                // 0x0008(0x0000)
		struct SteamDatagramRelayAuthTicket_ExtraField_OptionValue m_val;                                                   // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamDatagramRelayAuthTicket
	 * Size -> 0x0000
	 */
	struct SteamDatagramRelayAuthTicket
	{
	public:
		struct SteamNetworkingIdentity                             m_identityGameserver;                                    // 0x0000(0x0000)
		struct SteamNetworkingIdentity                             m_identityAuthorizedClient;                              // 0x0010(0x0000)
		uint32_t                                                   m_unPublicIP;                                            // 0x0020(0x0000)
		struct RTime32                                             m_rtimeTicketExpiry;                                     // 0x0024(0x0000)
		struct SteamDatagramHostedAddress                          m_routing;                                               // 0x0028(0x0000)
		uint32_t                                                   m_nAppID;                                                // 0x0038(0x0000)
		int32_t                                                    m_nRestrictToVirtualPort;                                // 0x003C(0x0000)
		int32_t                                                    m_nExtraFields;                                          // 0x0040(0x0000)
		class SteamDatagramRelayAuthTicket_ExtraField_Array*       m_vecExtraFields;                                        // 0x0048(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.FriendsGroupID_t
	 * Size -> 0x0000
	 */
	struct FriendsGroupID_t
	{
	public:
		int16_t                                                    m_FriendsGroupID;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HTTPCookieContainerHandle
	 * Size -> 0x0000
	 */
	struct HTTPCookieContainerHandle
	{
	public:
		uint32_t                                                   m_HTTPCookieContainerHandle;                             // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.InputActionSetHandle_t
	 * Size -> 0x0000
	 */
	struct InputActionSetHandle_t
	{
	public:
		uint64_t                                                   m_InputActionSetHandle;                                  // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.InputAnalogActionHandle_t
	 * Size -> 0x0000
	 */
	struct InputAnalogActionHandle_t
	{
	public:
		uint64_t                                                   m_InputAnalogActionHandle;                               // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.InputDigitalActionHandle_t
	 * Size -> 0x0000
	 */
	struct InputDigitalActionHandle_t
	{
	public:
		uint64_t                                                   m_InputDigitalActionHandle;                              // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamInputActionEvent_t+AnalogAction_t
	 * Size -> 0x0000
	 */
	struct SteamInputActionEvent_t_AnalogAction_t
	{
	public:
		struct InputAnalogActionHandle_t                           actionHandle;                                            // 0x0000(0x0000)
		struct InputAnalogActionData_t                             analogActionData;                                        // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamInputActionEvent_t+DigitalAction_t
	 * Size -> 0x0000
	 */
	struct SteamInputActionEvent_t_DigitalAction_t
	{
	public:
		struct InputDigitalActionHandle_t                          actionHandle;                                            // 0x0000(0x0000)
		struct InputDigitalActionData_t                            digitalActionData;                                       // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamInputActionEvent_t+OptionValue
	 * Size -> 0x0000
	 */
	struct SteamInputActionEvent_t_OptionValue
	{
	public:
		struct SteamInputActionEvent_t_AnalogAction_t              analogAction;                                            // 0x0000(0x0000)
		struct SteamInputActionEvent_t_DigitalAction_t             digitalAction;                                           // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamInputActionEvent_t
	 * Size -> 0x0000
	 */
	struct SteamInputActionEvent_t
	{
	public:
		struct InputHandle_t                                       controllerHandle;                                        // 0x0000(0x0000)
		int32_t                                                    eEventType;                                              // 0x0008(0x0000)
		struct SteamInputActionEvent_t_OptionValue                 m_val;                                                   // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamInventoryUpdateHandle_t
	 * Size -> 0x0000
	 */
	struct SteamInventoryUpdateHandle_t
	{
	public:
		uint64_t                                                   m_SteamInventoryUpdateHandle;                            // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HServerListRequest
	 * Size -> 0x0000
	 */
	struct HServerListRequest
	{
	public:
		intptr_t                                                   m_HServerListRequest;                                    // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HServerQuery
	 * Size -> 0x0000
	 */
	struct HServerQuery
	{
	public:
		int32_t                                                    m_HServerQuery;                                          // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.ISteamNetworkingConnectionSignaling
	 * Size -> 0x0000
	 */
	struct ISteamNetworkingConnectionSignaling
	{	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.ISteamNetworkingSignalingRecvContext
	 * Size -> 0x0000
	 */
	struct ISteamNetworkingSignalingRecvContext
	{	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HSteamNetPollGroup
	 * Size -> 0x0000
	 */
	struct HSteamNetPollGroup
	{
	public:
		uint32_t                                                   m_HSteamNetPollGroup;                                    // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamNetworkingConfigValue_t+OptionValue
	 * Size -> 0x0000
	 */
	struct SteamNetworkingConfigValue_t_OptionValue
	{
	public:
		int32_t                                                    m_int32;                                                 // 0x0000(0x0000)
		int64_t                                                    m_int64;                                                 // 0x0000(0x0000)
		float                                                      m_float;                                                 // 0x0000(0x0000)
		intptr_t                                                   m_string;                                                // 0x0000(0x0000)
		intptr_t                                                   m_functionPtr;                                           // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamNetworkingConfigValue_t
	 * Size -> 0x0000
	 */
	struct SteamNetworkingConfigValue_t
	{
	public:
		int32_t                                                    m_eValue;                                                // 0x0000(0x0000)
		int32_t                                                    m_eDataType;                                             // 0x0004(0x0000)
		struct SteamNetworkingConfigValue_t_OptionValue            m_val;                                                   // 0x0008(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamNetworkingErrMsg
	 * Size -> 0x0000
	 */
	struct SteamNetworkingErrMsg
	{
	public:
		class Byte_Array*                                          m_SteamNetworkingErrMsg;                                 // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamNetworkingMessage_t
	 * Size -> 0x0000
	 */
	struct SteamNetworkingMessage_t
	{
	public:
		intptr_t                                                   m_pData;                                                 // 0x0000(0x0000)
		int32_t                                                    m_cbSize;                                                // 0x0008(0x0000)
		struct HSteamNetConnection                                 m_conn;                                                  // 0x000C(0x0000)
		struct SteamNetworkingIdentity                             m_identityPeer;                                          // 0x0010(0x0000)
		int64_t                                                    m_nConnUserData;                                         // 0x0020(0x0000)
		struct SteamNetworkingMicroseconds                         m_usecTimeReceived;                                      // 0x0028(0x0000)
		int64_t                                                    m_nMessageNumber;                                        // 0x0030(0x0000)
		intptr_t                                                   m_pfnFreeData;                                           // 0x0038(0x0000)
		intptr_t                                                   m_pfnRelease;                                            // 0x0040(0x0000)
		int32_t                                                    m_nChannel;                                              // 0x0048(0x0000)
		int32_t                                                    m_nFlags;                                                // 0x004C(0x0000)
		int64_t                                                    m_nUserData;                                             // 0x0050(0x0000)
		uint16_t                                                   m_idxLane;                                               // 0x0058(0x0000)
		uint16_t                                                   pad1;                                                    // 0x005A(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.PublishedFileUpdateHandle_t
	 * Size -> 0x0000
	 */
	struct PublishedFileUpdateHandle_t
	{
	public:
		uint64_t                                                   m_PublishedFileUpdateHandle;                             // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.UGCFileWriteStreamHandle_t
	 * Size -> 0x0000
	 */
	struct UGCFileWriteStreamHandle_t
	{
	public:
		uint64_t                                                   m_UGCFileWriteStreamHandle;                              // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.DepotId_t
	 * Size -> 0x0000
	 */
	struct DepotId_t
	{
	public:
		uint32_t                                                   m_DepotId;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.SteamIPAddress_t
	 * Size -> 0x0000
	 */
	struct SteamIPAddress_t
	{
	public:
		int64_t                                                    m_ip0;                                                   // 0x0000(0x0000)
		int64_t                                                    m_ip1;                                                   // 0x0008(0x0000)
		int32_t                                                    m_eType;                                                 // 0x0010(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.UGCUpdateHandle_t
	 * Size -> 0x0000
	 */
	struct UGCUpdateHandle_t
	{
	public:
		uint64_t                                                   m_UGCUpdateHandle;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HSteamPipe
	 * Size -> 0x0000
	 */
	struct HSteamPipe
	{
	public:
		int32_t                                                    m_HSteamPipe;                                            // 0x0000(0x0000)
	};

	/**
	 * Struct com.rlabrecque.steamworks.net.Steamworks.HSteamUser
	 * Size -> 0x0000
	 */
	struct HSteamUser
	{
	public:
		int32_t                                                    m_HSteamUser;                                            // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.TMP_MaterialReference
	 * Size -> 0x0000
	 */
	struct TMP_MaterialReference
	{
	public:
		class Material*                                            material;                                                // 0x0000(0x0000)
		int32_t                                                    referenceCount;                                          // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.VertexGradient
	 * Size -> 0x0000
	 */
	struct VertexGradient
	{
	public:
		struct Color                                               topLeft;                                                 // 0x0000(0x0000)
		struct Color                                               topRight;                                                // 0x0010(0x0000)
		struct Color                                               bottomLeft;                                              // 0x0020(0x0000)
		struct Color                                               bottomRight;                                             // 0x0030(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.TMP_PageInfo
	 * Size -> 0x0000
	 */
	struct TMP_PageInfo
	{
	public:
		int32_t                                                    firstCharacterIndex;                                     // 0x0000(0x0000)
		int32_t                                                    lastCharacterIndex;                                      // 0x0004(0x0000)
		float                                                      ascender;                                                // 0x0008(0x0000)
		float                                                      baseLine;                                                // 0x000C(0x0000)
		float                                                      descender;                                               // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.TMP_LinkInfo
	 * Size -> 0x0000
	 */
	struct TMP_LinkInfo
	{
	public:
		class TMP_Text*                                            textComponent;                                           // 0x0000(0x0000)
		int32_t                                                    hashCode;                                                // 0x0008(0x0000)
		int32_t                                                    linkIdFirstCharacterIndex;                               // 0x000C(0x0000)
		int32_t                                                    linkIdLength;                                            // 0x0010(0x0000)
		int32_t                                                    linkTextfirstCharacterIndex;                             // 0x0014(0x0000)
		int32_t                                                    linkTextLength;                                          // 0x0018(0x0000)
		class Char_Array*                                          linkID;                                                  // 0x0020(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.TMP_WordInfo
	 * Size -> 0x0000
	 */
	struct TMP_WordInfo
	{
	public:
		class TMP_Text*                                            textComponent;                                           // 0x0000(0x0000)
		int32_t                                                    firstCharacterIndex;                                     // 0x0008(0x0000)
		int32_t                                                    lastCharacterIndex;                                      // 0x000C(0x0000)
		int32_t                                                    characterCount;                                          // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.TMP_SpriteInfo
	 * Size -> 0x0000
	 */
	struct TMP_SpriteInfo
	{
	public:
		int32_t                                                    spriteIndex;                                             // 0x0000(0x0000)
		int32_t                                                    characterIndex;                                          // 0x0004(0x0000)
		int32_t                                                    vertexIndex;                                             // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.Mesh_Extents
	 * Size -> 0x0000
	 */
	struct Mesh_Extents
	{
	public:
		struct Vector2                                             min;                                                     // 0x0000(0x0000)
		struct Vector2                                             max;                                                     // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.TagAttribute
	 * Size -> 0x0000
	 */
	struct TagAttribute
	{
	public:
		int32_t                                                    startIndex;                                              // 0x0000(0x0000)
		int32_t                                                    length;                                                  // 0x0004(0x0000)
		int32_t                                                    hashCode;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.RichTextTagAttribute
	 * Size -> 0x0000
	 */
	struct RichTextTagAttribute
	{
	public:
		int32_t                                                    nameHashCode;                                            // 0x0000(0x0000)
		int32_t                                                    valueHashCode;                                           // 0x0004(0x0000)
		int32_t                                                    valueType;                                               // 0x0008(0x0000)
		int32_t                                                    valueStartIndex;                                         // 0x000C(0x0000)
		int32_t                                                    valueLength;                                             // 0x0010(0x0000)
		int32_t                                                    unitType;                                                // 0x0014(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.TMP_Vertex
	 * Size -> 0x0000
	 */
	struct TMP_Vertex
	{
	public:
		struct Vector3                                             position;                                                // 0x0000(0x0000)
		struct Vector2                                             uv;                                                      // 0x000C(0x0000)
		struct Vector2                                             uv2;                                                     // 0x0014(0x0000)
		struct Vector2                                             uv4;                                                     // 0x001C(0x0000)
		struct Color32                                             color;                                                   // 0x0024(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.TMP_CharacterInfo
	 * Size -> 0x0000
	 */
	struct TMP_CharacterInfo
	{
	public:
		uint16_t                                                   character;                                               // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0004(0x0000)
		int32_t                                                    stringLength;                                            // 0x0008(0x0000)
		int32_t                                                    elementType;                                             // 0x000C(0x0000)
		class TMP_TextElement*                                     textElement;                                             // 0x0010(0x0000)
		class TMP_FontAsset*                                       fontAsset;                                               // 0x0018(0x0000)
		class TMP_SpriteAsset*                                     spriteAsset;                                             // 0x0020(0x0000)
		int32_t                                                    spriteIndex;                                             // 0x0028(0x0000)
		class Material*                                            material;                                                // 0x0030(0x0000)
		int32_t                                                    materialReferenceIndex;                                  // 0x0038(0x0000)
		bool                                                       isUsingAlternateTypeface;                                // 0x003C(0x0000)
		float                                                      pointSize;                                               // 0x0040(0x0000)
		int32_t                                                    lineNumber;                                              // 0x0044(0x0000)
		int32_t                                                    pageNumber;                                              // 0x0048(0x0000)
		int32_t                                                    vertexIndex;                                             // 0x004C(0x0000)
		struct TMP_Vertex                                          vertex_BL;                                               // 0x0050(0x0000)
		struct TMP_Vertex                                          vertex_TL;                                               // 0x0078(0x0000)
		struct TMP_Vertex                                          vertex_TR;                                               // 0x00A0(0x0000)
		struct TMP_Vertex                                          vertex_BR;                                               // 0x00C8(0x0000)
		struct Vector3                                             topLeft;                                                 // 0x00F0(0x0000)
		struct Vector3                                             bottomLeft;                                              // 0x00FC(0x0000)
		struct Vector3                                             topRight;                                                // 0x0108(0x0000)
		struct Vector3                                             bottomRight;                                             // 0x0114(0x0000)
		float                                                      origin;                                                  // 0x0120(0x0000)
		float                                                      xAdvance;                                                // 0x0124(0x0000)
		float                                                      ascender;                                                // 0x0128(0x0000)
		float                                                      baseLine;                                                // 0x012C(0x0000)
		float                                                      descender;                                               // 0x0130(0x0000)
		float                                                      adjustedAscender;                                        // 0x0134(0x0000)
		float                                                      adjustedDescender;                                       // 0x0138(0x0000)
		float                                                      aspectRatio;                                             // 0x013C(0x0000)
		float                                                      scale;                                                   // 0x0140(0x0000)
		struct Color32                                             color;                                                   // 0x0144(0x0000)
		struct Color32                                             underlineColor;                                          // 0x0148(0x0000)
		int32_t                                                    underlineVertexIndex;                                    // 0x014C(0x0000)
		struct Color32                                             strikethroughColor;                                      // 0x0150(0x0000)
		int32_t                                                    strikethroughVertexIndex;                                // 0x0154(0x0000)
		struct Color32                                             highlightColor;                                          // 0x0158(0x0000)
		struct HighlightState                                      highlightState;                                          // 0x015C(0x0000)
		int32_t                                                    style;                                                   // 0x0170(0x0000)
		bool                                                       isVisible;                                               // 0x0174(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.ColorTween
	 * Size -> 0x0000
	 */
	struct ColorTween
	{
	public:
		class ColorTween_ColorTweenCallback*                       m_Target;                                                // 0x0000(0x0000)
		struct Color                                               m_StartColor;                                            // 0x0008(0x0000)
		struct Color                                               m_TargetColor;                                           // 0x0018(0x0000)
		int32_t                                                    m_TweenMode;                                             // 0x0028(0x0000)
		float                                                      m_Duration;                                              // 0x002C(0x0000)
		bool                                                       m_IgnoreTimeScale;                                       // 0x0030(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.FloatTween
	 * Size -> 0x0000
	 */
	struct FloatTween
	{
	public:
		class FloatTween_FloatTweenCallback*                       m_Target;                                                // 0x0000(0x0000)
		float                                                      m_StartValue;                                            // 0x0008(0x0000)
		float                                                      m_TargetValue;                                           // 0x000C(0x0000)
		float                                                      m_Duration;                                              // 0x0010(0x0000)
		bool                                                       m_IgnoreTimeScale;                                       // 0x0014(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.TMP_DefaultControls+Resources
	 * Size -> 0x0000
	 */
	struct TMP_DefaultControls_Resources
	{
	public:
		class Sprite*                                              standard;                                                // 0x0000(0x0000)
		class Sprite*                                              background;                                              // 0x0008(0x0000)
		class Sprite*                                              inputField;                                              // 0x0010(0x0000)
		class Sprite*                                              knob;                                                    // 0x0018(0x0000)
		class Sprite*                                              checkmark;                                               // 0x0020(0x0000)
		class Sprite*                                              dropdown;                                                // 0x0028(0x0000)
		class Sprite*                                              mask;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.FontAssetCreationSettings
	 * Size -> 0x0000
	 */
	struct FontAssetCreationSettings
	{
	public:
		class Il2CppString*                                        sourceFontFileName;                                      // 0x0000(0x0000)
		class Il2CppString*                                        sourceFontFileGUID;                                      // 0x0008(0x0000)
		int32_t                                                    pointSizeSamplingMode;                                   // 0x0010(0x0000)
		int32_t                                                    pointSize;                                               // 0x0014(0x0000)
		int32_t                                                    padding;                                                 // 0x0018(0x0000)
		int32_t                                                    packingMode;                                             // 0x001C(0x0000)
		int32_t                                                    atlasWidth;                                              // 0x0020(0x0000)
		int32_t                                                    atlasHeight;                                             // 0x0024(0x0000)
		int32_t                                                    characterSetSelectionMode;                               // 0x0028(0x0000)
		class Il2CppString*                                        characterSequence;                                       // 0x0030(0x0000)
		class Il2CppString*                                        referencedFontAssetGUID;                                 // 0x0038(0x0000)
		class Il2CppString*                                        referencedTextAssetGUID;                                 // 0x0040(0x0000)
		int32_t                                                    fontStyle;                                               // 0x0048(0x0000)
		float                                                      fontStyleModifier;                                       // 0x004C(0x0000)
		int32_t                                                    renderMode;                                              // 0x0050(0x0000)
		bool                                                       includeFontFeatures;                                     // 0x0054(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.TMP_FontWeightPair
	 * Size -> 0x0000
	 */
	struct TMP_FontWeightPair
	{
	public:
		class TMP_FontAsset*                                       regularTypeface;                                         // 0x0000(0x0000)
		class TMP_FontAsset*                                       italicTypeface;                                          // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.KerningPairKey
	 * Size -> 0x0000
	 */
	struct KerningPairKey
	{
	public:
		uint32_t                                                   ascii_Left;                                              // 0x0000(0x0000)
		uint32_t                                                   ascii_Right;                                             // 0x0004(0x0000)
		uint32_t                                                   key;                                                     // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreFontEngineModule.UnityEngine.TextCore.LowLevel.GlyphValueRecord
	 * Size -> 0x0000
	 */
	struct GlyphValueRecord
	{
	public:
		float                                                      m_XPlacement;                                            // 0x0000(0x0000)
		float                                                      m_YPlacement;                                            // 0x0004(0x0000)
		float                                                      m_XAdvance;                                              // 0x0008(0x0000)
		float                                                      m_YAdvance;                                              // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.GlyphValueRecord_Legacy
	 * Size -> 0x0000
	 */
	struct GlyphValueRecord_Legacy
	{
	public:
		float                                                      xPlacement;                                              // 0x0000(0x0000)
		float                                                      yPlacement;                                              // 0x0004(0x0000)
		float                                                      xAdvance;                                                // 0x0008(0x0000)
		float                                                      yAdvance;                                                // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.TMP_GlyphValueRecord
	 * Size -> 0x0000
	 */
	struct TMP_GlyphValueRecord
	{
	public:
		float                                                      m_XPlacement;                                            // 0x0000(0x0000)
		float                                                      m_YPlacement;                                            // 0x0004(0x0000)
		float                                                      m_XAdvance;                                              // 0x0008(0x0000)
		float                                                      m_YAdvance;                                              // 0x000C(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreFontEngineModule.UnityEngine.TextCore.LowLevel.GlyphAdjustmentRecord
	 * Size -> 0x0000
	 */
	struct GlyphAdjustmentRecord
	{
	public:
		uint32_t                                                   m_GlyphIndex;                                            // 0x0000(0x0000)
		struct GlyphValueRecord                                    m_GlyphValueRecord;                                      // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.TMP_GlyphAdjustmentRecord
	 * Size -> 0x0000
	 */
	struct TMP_GlyphAdjustmentRecord
	{
	public:
		uint32_t                                                   m_GlyphIndex;                                            // 0x0000(0x0000)
		struct TMP_GlyphValueRecord                                m_GlyphValueRecord;                                      // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.GlyphPairKey
	 * Size -> 0x0000
	 */
	struct GlyphPairKey
	{
	public:
		uint32_t                                                   firstGlyphIndex;                                         // 0x0000(0x0000)
		uint32_t                                                   secondGlyphIndex;                                        // 0x0004(0x0000)
		uint32_t                                                   key;                                                     // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.TMP_MeshInfo
	 * Size -> 0x0000
	 */
	struct TMP_MeshInfo
	{
	public:
		class Mesh_1*                                              mesh;                                                    // 0x0000(0x0000)
		int32_t                                                    vertexCount;                                             // 0x0008(0x0000)
		class Vector3_Array*                                       vertices;                                                // 0x0010(0x0000)
		class Vector3_Array*                                       normals;                                                 // 0x0018(0x0000)
		class Vector4_Array*                                       tangents;                                                // 0x0020(0x0000)
		class Vector2_Array*                                       uvs0;                                                    // 0x0028(0x0000)
		class Vector2_Array*                                       uvs2;                                                    // 0x0030(0x0000)
		class Color32_Array*                                       colors32;                                                // 0x0038(0x0000)
		class Int32_Array*                                         triangles;                                               // 0x0040(0x0000)
		class Material*                                            material;                                                // 0x0048(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.TMP_Text+CharacterSubstitution
	 * Size -> 0x0000
	 */
	struct TMP_Text_CharacterSubstitution
	{
	public:
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		uint32_t                                                   unicode;                                                 // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.TMP_Text+UnicodeChar
	 * Size -> 0x0000
	 */
	struct TMP_Text_UnicodeChar
	{
	public:
		int32_t                                                    unicode;                                                 // 0x0000(0x0000)
		int32_t                                                    stringIndex;                                             // 0x0004(0x0000)
		int32_t                                                    length;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.TMP_Text+SpecialCharacter
	 * Size -> 0x0000
	 */
	struct TMP_Text_SpecialCharacter
	{
	public:
		class TMP_Character*                                       character;                                               // 0x0000(0x0000)
		class TMP_FontAsset*                                       fontAsset;                                               // 0x0008(0x0000)
		class Material*                                            material;                                                // 0x0010(0x0000)
		int32_t                                                    materialIndex;                                           // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.TMP_Text+TextBackingContainer
	 * Size -> 0x0000
	 */
	struct TMP_Text_TextBackingContainer
	{
	public:
		class UInt32_Array*                                        m_Array;                                                 // 0x0000(0x0000)
		int32_t                                                    m_Count;                                                 // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.TMP_TextProcessingStack<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct TMP_TextProcessingStack_T
	{
	public:
		class UObject_Array*                                       itemStack;                                               // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        m_DefaultItem;                                           // 0x0000(0x0000)
		int32_t                                                    m_Capacity;                                              // 0x0000(0x0000)
		int32_t                                                    m_RolloverSize;                                          // 0x0000(0x0000)
		int32_t                                                    m_Count;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.CaretInfo
	 * Size -> 0x0000
	 */
	struct CaretInfo
	{
	public:
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		int32_t                                                    position;                                                // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.TMP_TextUtilities+LineSegment
	 * Size -> 0x0000
	 */
	struct TMP_TextUtilities_LineSegment
	{
	public:
		struct Vector3                                             Point1;                                                  // 0x0000(0x0000)
		struct Vector3                                             Point2;                                                  // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.SpriteAssetUtilities.TexturePacker_JsonArray+SpriteFrame
	 * Size -> 0x0000
	 */
	struct TexturePacker_JsonArray_SpriteFrame
	{
	public:
		float                                                      x;                                                       // 0x0000(0x0000)
		float                                                      y;                                                       // 0x0004(0x0000)
		float                                                      w;                                                       // 0x0008(0x0000)
		float                                                      h;                                                       // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.SpriteAssetUtilities.TexturePacker_JsonArray+SpriteSize
	 * Size -> 0x0000
	 */
	struct TexturePacker_JsonArray_SpriteSize
	{
	public:
		float                                                      w;                                                       // 0x0000(0x0000)
		float                                                      h;                                                       // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.SpriteAssetUtilities.TexturePacker_JsonArray+Frame
	 * Size -> 0x0000
	 */
	struct TexturePacker_JsonArray_Frame
	{
	public:
		class Il2CppString*                                        filename;                                                // 0x0000(0x0000)
		struct TexturePacker_JsonArray_SpriteFrame                 frame;                                                   // 0x0008(0x0000)
		bool                                                       rotated;                                                 // 0x0018(0x0000)
		bool                                                       trimmed;                                                 // 0x0019(0x0000)
		struct TexturePacker_JsonArray_SpriteFrame                 spriteSourceSize;                                        // 0x001C(0x0000)
		struct TexturePacker_JsonArray_SpriteSize                  sourceSize;                                              // 0x002C(0x0000)
		struct Vector2                                             pivot;                                                   // 0x0034(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.TMPro.SpriteAssetUtilities.TexturePacker_JsonArray+Meta
	 * Size -> 0x0000
	 */
	struct TexturePacker_JsonArray_Meta
	{
	public:
		class Il2CppString*                                        app;                                                     // 0x0000(0x0000)
		class Il2CppString*                                        version;                                                 // 0x0008(0x0000)
		class Il2CppString*                                        image;                                                   // 0x0010(0x0000)
		class Il2CppString*                                        format;                                                  // 0x0018(0x0000)
		struct TexturePacker_JsonArray_SpriteSize                  size;                                                    // 0x0020(0x0000)
		float                                                      scale;                                                   // 0x0028(0x0000)
		class Il2CppString*                                        smartupdate;                                             // 0x0030(0x0000)
	};

	/**
	 * Struct Unity.TextMeshPro.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=12
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_12_6
	{	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.LightAnchor+Axes
	 * Size -> 0x0000
	 */
	struct LightAnchor_Axes
	{
	public:
		struct Vector3                                             up;                                                      // 0x0000(0x0000)
		struct Vector3                                             right;                                                   // 0x000C(0x0000)
		struct Vector3                                             forward;                                                 // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.ProbeBrickIndex+Brick
	 * Size -> 0x0000
	 */
	struct ProbeBrickIndex_Brick
	{
	public:
		struct Vector3Int                                          position;                                                // 0x0000(0x0000)
		int32_t                                                    subdivisionLevel;                                        // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.ProbeBrickIndex+ReservedBrick
	 * Size -> 0x0000
	 */
	struct ProbeBrickIndex_ReservedBrick
	{
	public:
		struct ProbeBrickIndex_Brick                               brick;                                                   // 0x0000(0x0000)
		int32_t                                                    flattenedIdx;                                            // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.ProbeReferenceVolume+RegId
	 * Size -> 0x0000
	 */
	struct ProbeReferenceVolume_RegId
	{
	public:
		int32_t                                                    id;                                                      // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.ProbeBrickIndex+VoxelMeta
	 * Size -> 0x0000
	 */
	struct ProbeBrickIndex_VoxelMeta
	{
	public:
		struct ProbeReferenceVolume_RegId                          id;                                                      // 0x0000(0x0000)
		class List_ushort*                                         brickIndices;                                            // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.ProbeBrickIndex+BrickMeta
	 * Size -> 0x0000
	 */
	struct ProbeBrickIndex_BrickMeta
	{
	public:
		class HashSet_Vector3Int*                                  voxels;                                                  // 0x0000(0x0000)
		class List_ProbeBrickIndex_ReservedBrick*                  bricks;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.ProbeBrickIndex+CellIndexUpdateInfo
	 * Size -> 0x0000
	 */
	struct ProbeBrickIndex_CellIndexUpdateInfo
	{
	public:
		int32_t                                                    firstChunkIndex;                                         // 0x0000(0x0000)
		int32_t                                                    numberOfChunks;                                          // 0x0004(0x0000)
		int32_t                                                    minSubdivInCell;                                         // 0x0008(0x0000)
		struct Vector3Int                                          minValidBrickIndexForCellAtMaxRes;                       // 0x000C(0x0000)
		struct Vector3Int                                          maxValidBrickIndexForCellAtMaxResPlusOne;                // 0x0018(0x0000)
		struct Vector3Int                                          cellPositionInBricksAtMaxRes;                            // 0x0024(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.ProbeBrickPool+BrickChunkAlloc
	 * Size -> 0x0000
	 */
	struct ProbeBrickPool_BrickChunkAlloc
	{
	public:
		int32_t                                                    x;                                                       // 0x0000(0x0000)
		int32_t                                                    y;                                                       // 0x0004(0x0000)
		int32_t                                                    z;                                                       // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.ProbeBrickPool+DataLocation
	 * Size -> 0x0000
	 */
	struct ProbeBrickPool_DataLocation
	{
	public:
		class Texture3D*                                           TexL0_L1rx;                                              // 0x0000(0x0000)
		class Texture3D*                                           TexL1_G_ry;                                              // 0x0008(0x0000)
		class Texture3D*                                           TexL1_B_rz;                                              // 0x0010(0x0000)
		class Texture3D*                                           TexL2_0;                                                 // 0x0018(0x0000)
		class Texture3D*                                           TexL2_1;                                                 // 0x0020(0x0000)
		class Texture3D*                                           TexL2_2;                                                 // 0x0028(0x0000)
		class Texture3D*                                           TexL2_3;                                                 // 0x0030(0x0000)
		int32_t                                                    width;                                                   // 0x0038(0x0000)
		int32_t                                                    height;                                                  // 0x003C(0x0000)
		int32_t                                                    depth;                                                   // 0x0040(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.ProbeCellIndices+IndexMetaData
	 * Size -> 0x0000
	 */
	struct ProbeCellIndices_IndexMetaData
	{
	public:
		struct Vector3Int                                          minLocalIdx;                                             // 0x0000(0x0000)
		struct Vector3Int                                          maxLocalIdx;                                             // 0x000C(0x0000)
		int32_t                                                    firstChunkIndex;                                         // 0x0018(0x0000)
		int32_t                                                    minSubdiv;                                               // 0x001C(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.ProbeVolumeSystemParameters
	 * Size -> 0x0000
	 */
	struct ProbeVolumeSystemParameters
	{
	public:
		int32_t                                                    memoryBudget;                                            // 0x0000(0x0000)
		class Mesh_1*                                              probeDebugMesh;                                          // 0x0008(0x0000)
		class Shader*                                              probeDebugShader;                                        // 0x0010(0x0000)
		class ProbeVolumeSceneData*                                sceneData;                                               // 0x0018(0x0000)
		int32_t                                                    shBands;                                                 // 0x0020(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.ProbeVolumeShadingParameters
	 * Size -> 0x0000
	 */
	struct ProbeVolumeShadingParameters
	{
	public:
		float                                                      normalBias;                                              // 0x0000(0x0000)
		float                                                      viewBias;                                                // 0x0004(0x0000)
		bool                                                       scaleBiasByMinDistanceBetweenProbes;                     // 0x0008(0x0000)
		float                                                      samplingNoise;                                           // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.ProbeReferenceVolume+Volume
	 * Size -> 0x0000
	 */
	struct ProbeReferenceVolume_Volume
	{
	public:
		struct Vector3                                             corner;                                                  // 0x0000(0x0000)
		struct Vector3                                             X;                                                       // 0x000C(0x0000)
		struct Vector3                                             Y;                                                       // 0x0018(0x0000)
		struct Vector3                                             Z;                                                       // 0x0024(0x0000)
		float                                                      maxSubdivisionMultiplier;                                // 0x0030(0x0000)
		float                                                      minSubdivisionMultiplier;                                // 0x0034(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.ProbeReferenceVolume+RefVolTransform
	 * Size -> 0x0000
	 */
	struct ProbeReferenceVolume_RefVolTransform
	{
	public:
		struct Matrix4x4                                           refSpaceToWS;                                            // 0x0000(0x0000)
		struct Vector3                                             posWS;                                                   // 0x0040(0x0000)
		struct Quaternion                                          rot;                                                     // 0x004C(0x0000)
		float                                                      scale;                                                   // 0x005C(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.ProbeReferenceVolume+RuntimeResources
	 * Size -> 0x0000
	 */
	struct ProbeReferenceVolume_RuntimeResources
	{
	public:
		class ComputeBuffer*                                       index;                                                   // 0x0000(0x0000)
		class ComputeBuffer*                                       cellIndices;                                             // 0x0008(0x0000)
		class Texture3D*                                           L0_L1rx;                                                 // 0x0010(0x0000)
		class Texture3D*                                           L1_G_ry;                                                 // 0x0018(0x0000)
		class Texture3D*                                           L1_B_rz;                                                 // 0x0020(0x0000)
		class Texture3D*                                           L2_0;                                                    // 0x0028(0x0000)
		class Texture3D*                                           L2_1;                                                    // 0x0030(0x0000)
		class Texture3D*                                           L2_2;                                                    // 0x0038(0x0000)
		class Texture3D*                                           L2_3;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.ProbeReferenceVolume+ExtraDataActionInput
	 * Size -> 0x0000
	 */
	struct ProbeReferenceVolume_ExtraDataActionInput
	{	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.ProbeReferenceVolume+InitInfo
	 * Size -> 0x0000
	 */
	struct ProbeReferenceVolume_InitInfo
	{
	public:
		struct Vector3Int                                          pendingMinCellPosition;                                  // 0x0000(0x0000)
		struct Vector3Int                                          pendingMaxCellPosition;                                  // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.ProbeDilationSettings
	 * Size -> 0x0000
	 */
	struct ProbeDilationSettings
	{
	public:
		bool                                                       enableDilation;                                          // 0x0000(0x0000)
		float                                                      dilationDistance;                                        // 0x0004(0x0000)
		float                                                      dilationValidityThreshold;                               // 0x0008(0x0000)
		int32_t                                                    dilationIterations;                                      // 0x000C(0x0000)
		bool                                                       squaredDistWeighting;                                    // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.VirtualOffsetSettings
	 * Size -> 0x0000
	 */
	struct VirtualOffsetSettings
	{
	public:
		bool                                                       useVirtualOffset;                                        // 0x0000(0x0000)
		float                                                      outOfGeoOffset;                                          // 0x0004(0x0000)
		float                                                      searchMultiplier;                                        // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.ProbeVolumeBakingProcessSettings
	 * Size -> 0x0000
	 */
	struct ProbeVolumeBakingProcessSettings
	{
	public:
		struct ProbeDilationSettings                               dilationSettings;                                        // 0x0000(0x0000)
		struct VirtualOffsetSettings                               virtualOffsetSettings;                                   // 0x0014(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.ProbeVolumePerSceneData+SerializableAssetItem
	 * Size -> 0x0000
	 */
	struct ProbeVolumePerSceneData_SerializableAssetItem
	{
	public:
		int32_t                                                    state;                                                   // 0x0000(0x0000)
		class ProbeVolumeAsset*                                    asset;                                                   // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.ProbeVolumeSceneData+SerializableBoundItem
	 * Size -> 0x0000
	 */
	struct ProbeVolumeSceneData_SerializableBoundItem
	{
	public:
		class Il2CppString*                                        sceneGUID;                                               // 0x0000(0x0000)
		struct Bounds                                              bounds;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.ProbeVolumeSceneData+SerializableHasPVItem
	 * Size -> 0x0000
	 */
	struct ProbeVolumeSceneData_SerializableHasPVItem
	{
	public:
		class Il2CppString*                                        sceneGUID;                                               // 0x0000(0x0000)
		bool                                                       hasProbeVolumes;                                         // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.ProbeVolumeSceneData+SerializablePVProfile
	 * Size -> 0x0000
	 */
	struct ProbeVolumeSceneData_SerializablePVProfile
	{
	public:
		class Il2CppString*                                        sceneGUID;                                               // 0x0000(0x0000)
		class ProbeReferenceVolumeProfile*                         profile;                                                 // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.ProbeVolumeSceneData+SerializablePVBakeSettings
	 * Size -> 0x0000
	 */
	struct ProbeVolumeSceneData_SerializablePVBakeSettings
	{
	public:
		class Il2CppString*                                        sceneGUID;                                               // 0x0000(0x0000)
		struct ProbeVolumeBakingProcessSettings                    settings;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.RendererListDesc
	 * Size -> 0x0000
	 */
	struct RendererListDesc_1
	{
	public:
		int32_t                                                    sortingCriteria;                                         // 0x0000(0x0000)
		int32_t                                                    rendererConfiguration;                                   // 0x0004(0x0000)
		struct RenderQueueRange                                    renderQueueRange;                                        // 0x0008(0x0000)
		struct Nullable_RenderStateBlock                           stateBlock;                                              // 0x0010(0x0000)
		class Material*                                            overrideMaterial;                                        // 0x0080(0x0000)
		bool                                                       excludeObjectMotionVectors;                              // 0x0088(0x0000)
		int32_t                                                    layerMask;                                               // 0x008C(0x0000)
		int32_t                                                    overrideMaterialPassIndex;                               // 0x0090(0x0000)
		struct CullingResults                                      cullingResult_k__BackingField;                           // 0x0098(0x0000)
		class Camera*                                              camera_k__BackingField;                                  // 0x00A8(0x0000)
		struct ShaderTagId                                         passName_k__BackingField;                                // 0x00B0(0x0000)
		class ShaderTagId_Array*                                   passNames_k__BackingField;                               // 0x00B8(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.RendererList
	 * Size -> 0x0000
	 */
	struct RendererList_1
	{
	public:
		bool                                                       isValid_k__BackingField;                                 // 0x0000(0x0000)
		struct CullingResults                                      cullingResult;                                           // 0x0008(0x0000)
		struct DrawingSettings                                     drawSettings;                                            // 0x0018(0x0000)
		struct FilteringSettings                                   filteringSettings;                                       // 0x0154(0x0000)
		struct Nullable_RenderStateBlock                           stateBlock;                                              // 0x016C(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphParameters
	 * Size -> 0x0000
	 */
	struct RenderGraphParameters
	{
	public:
		class Il2CppString*                                        executionName;                                           // 0x0000(0x0000)
		int32_t                                                    currentFrameIndex;                                       // 0x0008(0x0000)
		bool                                                       rendererListCulling;                                     // 0x000C(0x0000)
		struct ScriptableRenderContext                             scriptableRenderContext;                                 // 0x0010(0x0000)
		class CommandBuffer*                                       commandBuffer;                                           // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphExecution
	 * Size -> 0x0000
	 */
	struct RenderGraphExecution
	{
	public:
		class RenderGraph*                                         renderGraph;                                             // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphDebugData+PassDebugData
	 * Size -> 0x0000
	 */
	struct RenderGraphDebugData_PassDebugData
	{
	public:
		class Il2CppString*                                        name;                                                    // 0x0000(0x0000)
		class List_int_Array*                                      resourceReadLists;                                       // 0x0008(0x0000)
		class List_int_Array*                                      resourceWriteLists;                                      // 0x0010(0x0000)
		bool                                                       culled;                                                  // 0x0018(0x0000)
		bool                                                       generateDebugData;                                       // 0x0019(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphDebugData+ResourceDebugData
	 * Size -> 0x0000
	 */
	struct RenderGraphDebugData_ResourceDebugData
	{
	public:
		class Il2CppString*                                        name;                                                    // 0x0000(0x0000)
		bool                                                       imported;                                                // 0x0008(0x0000)
		int32_t                                                    creationPassIndex;                                       // 0x000C(0x0000)
		int32_t                                                    releasePassIndex;                                        // 0x0010(0x0000)
		class List_int*                                            consumerList;                                            // 0x0018(0x0000)
		class List_int*                                            producerList;                                            // 0x0020(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph+CompiledResourceInfo
	 * Size -> 0x0000
	 */
	struct RenderGraph_CompiledResourceInfo
	{
	public:
		class List_int*                                            producers;                                               // 0x0000(0x0000)
		class List_int*                                            consumers;                                               // 0x0008(0x0000)
		int32_t                                                    refCount;                                                // 0x0010(0x0000)
		bool                                                       imported;                                                // 0x0014(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph+CompiledPassInfo
	 * Size -> 0x0000
	 */
	struct RenderGraph_CompiledPassInfo
	{
	public:
		class RenderGraphPass*                                     pass;                                                    // 0x0000(0x0000)
		class List_int_Array*                                      resourceCreateList;                                      // 0x0008(0x0000)
		class List_int_Array*                                      resourceReleaseList;                                     // 0x0010(0x0000)
		int32_t                                                    refCount;                                                // 0x0018(0x0000)
		bool                                                       culled;                                                  // 0x001C(0x0000)
		bool                                                       hasSideEffect;                                           // 0x001D(0x0000)
		int32_t                                                    syncToPassIndex;                                         // 0x0020(0x0000)
		int32_t                                                    syncFromPassIndex;                                       // 0x0024(0x0000)
		bool                                                       needGraphicsFence;                                       // 0x0028(0x0000)
		struct GraphicsFence                                       fence;                                                   // 0x0030(0x0000)
		bool                                                       enableAsyncCompute;                                      // 0x0040(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphProfilingScope
	 * Size -> 0x0000
	 */
	struct RenderGraphProfilingScope
	{
	public:
		bool                                                       m_Disposed;                                              // 0x0000(0x0000)
		class ProfilingSampler*                                    m_Sampler;                                               // 0x0008(0x0000)
		class RenderGraph*                                         m_RenderGraph;                                           // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.RenderGraphModule.ResourceHandle
	 * Size -> 0x0000
	 */
	struct ResourceHandle
	{
	public:
		uint32_t                                                   m_Value;                                                 // 0x0000(0x0000)
		int32_t                                                    type_k__BackingField;                                    // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle
	 * Size -> 0x0000
	 */
	struct TextureHandle
	{
	public:
		struct ResourceHandle                                      handle;                                                  // 0x0000(0x0000)
		struct ResourceHandle                                      fallBackResource;                                        // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.RenderGraphModule.FastMemoryDesc
	 * Size -> 0x0000
	 */
	struct FastMemoryDesc
	{
	public:
		bool                                                       inFastMemory;                                            // 0x0000(0x0000)
		int32_t                                                    flags;                                                   // 0x0004(0x0000)
		float                                                      residencyFraction;                                       // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.RenderGraphModule.TextureDesc
	 * Size -> 0x0000
	 */
	struct TextureDesc
	{
	public:
		int32_t                                                    sizeMode;                                                // 0x0000(0x0000)
		int32_t                                                    width;                                                   // 0x0004(0x0000)
		int32_t                                                    height;                                                  // 0x0008(0x0000)
		int32_t                                                    slices;                                                  // 0x000C(0x0000)
		struct Vector2                                             scale;                                                   // 0x0010(0x0000)
		class ScaleFunc*                                           func;                                                    // 0x0018(0x0000)
		int32_t                                                    depthBufferBits;                                         // 0x0020(0x0000)
		int32_t                                                    colorFormat;                                             // 0x0024(0x0000)
		int32_t                                                    filterMode;                                              // 0x0028(0x0000)
		int32_t                                                    wrapMode;                                                // 0x002C(0x0000)
		int32_t                                                    dimension;                                               // 0x0030(0x0000)
		bool                                                       enableRandomWrite;                                       // 0x0034(0x0000)
		bool                                                       useMipMap;                                               // 0x0035(0x0000)
		bool                                                       autoGenerateMips;                                        // 0x0036(0x0000)
		bool                                                       isShadowMap;                                             // 0x0037(0x0000)
		int32_t                                                    anisoLevel;                                              // 0x0038(0x0000)
		float                                                      mipMapBias;                                              // 0x003C(0x0000)
		int32_t                                                    msaaSamples;                                             // 0x0040(0x0000)
		bool                                                       bindTextureMS;                                           // 0x0044(0x0000)
		bool                                                       useDynamicScale;                                         // 0x0045(0x0000)
		int32_t                                                    memoryless;                                              // 0x0048(0x0000)
		class Il2CppString*                                        name;                                                    // 0x0050(0x0000)
		struct FastMemoryDesc                                      fastMemoryDesc;                                          // 0x0058(0x0000)
		bool                                                       fallBackToBlackTexture;                                  // 0x0064(0x0000)
		bool                                                       clearBuffer;                                             // 0x0065(0x0000)
		struct Color                                               clearColor;                                              // 0x0068(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.RenderGraphModule.RendererListHandle
	 * Size -> 0x0000
	 */
	struct RendererListHandle
	{
	public:
		bool                                                       m_IsValid;                                               // 0x0000(0x0000)
		int32_t                                                    handle_k__BackingField;                                  // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.RenderGraphModule.ComputeBufferHandle
	 * Size -> 0x0000
	 */
	struct ComputeBufferHandle
	{
	public:
		struct ResourceHandle                                      handle;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.RenderGraphModule.ComputeBufferDesc
	 * Size -> 0x0000
	 */
	struct ComputeBufferDesc
	{
	public:
		int32_t                                                    count;                                                   // 0x0000(0x0000)
		int32_t                                                    stride;                                                  // 0x0004(0x0000)
		int32_t                                                    type;                                                    // 0x0008(0x0000)
		class Il2CppString*                                        name;                                                    // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphBuilder
	 * Size -> 0x0000
	 */
	struct RenderGraphBuilder
	{
	public:
		class RenderGraphPass*                                     m_RenderPass;                                            // 0x0000(0x0000)
		class RenderGraphResourceRegistry*                         m_Resources;                                             // 0x0008(0x0000)
		class RenderGraph*                                         m_RenderGraph;                                           // 0x0010(0x0000)
		bool                                                       m_Disposed;                                              // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphLogIndent
	 * Size -> 0x0000
	 */
	struct RenderGraphLogIndent
	{
	public:
		int32_t                                                    m_Indentation;                                           // 0x0000(0x0000)
		class RenderGraphLogger*                                   m_Logger;                                                // 0x0008(0x0000)
		bool                                                       m_Disposed;                                              // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphResourcePool+ResourceLogInfo<Type>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct RenderGraphResourcePool_ResourceLogInfo_Type
	{
	public:
		class Il2CppString*                                        name;                                                    // 0x0000(0x0000)
		int64_t                                                    size;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Experimental.Rendering.RenderGraphModule.RendererListResource
	 * Size -> 0x0000
	 */
	struct RendererListResource
	{
	public:
		struct RendererListDesc                                    desc;                                                    // 0x0000(0x0000)
		struct RendererList                                        rendererList;                                            // 0x00C0(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.CoreUnsafeUtils+FixedBufferStringQueue
	 * Size -> 0x0000
	 */
	struct CoreUnsafeUtils_FixedBufferStringQueue
	{
	public:
		uint8_t*                                                   m_ReadCursor;                                            // 0x0000(0x0000)
		uint8_t*                                                   m_WriteCursor;                                           // 0x0008(0x0000)
		uint8_t*                                                   m_BufferEnd;                                             // 0x0010(0x0000)
		uint8_t*                                                   m_BufferStart;                                           // 0x0018(0x0000)
		int32_t                                                    m_BufferLength;                                          // 0x0020(0x0000)
		int32_t                                                    Count_k__BackingField;                                   // 0x0024(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.CoreUnsafeUtils+DefaultKeyGetter<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct CoreUnsafeUtils_DefaultKeyGetter_T
	{	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.CoreUnsafeUtils+UintKeyGetter
	 * Size -> 0x0000
	 */
	struct CoreUnsafeUtils_UintKeyGetter
	{	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.DynamicResolutionHandler+ScalerContainer
	 * Size -> 0x0000
	 */
	struct DynamicResolutionHandler_ScalerContainer
	{
	public:
		int32_t                                                    type;                                                    // 0x0000(0x0000)
		class PerformDynamicRes*                                   method;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.ListBuffer<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ListBuffer_T
	{
	public:
		class Il2CppObject**                                       m_BufferPtr;                                             // 0x0000(0x0000)
		int32_t                                                    m_Capacity;                                              // 0x0000(0x0000)
		int32_t*                                                   m_CountPtr;                                              // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.ObjectPool+PooledObject<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ObjectPool_PooledObject_T
	{
	public:
		class Il2CppObject*                                        m_ToReturn;                                              // 0x0000(0x0000)
		class ObjectPool_T_2*                                      m_Pool;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.DebugUI.Foldout+ContextMenuItem
	 * Size -> 0x0000
	 */
	struct DebugUI_Foldout_ContextMenuItem
	{
	public:
		class Il2CppString*                                        displayName;                                             // 0x0000(0x0000)
		class Action*                                              action;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.DebugUI.Widget+NameAndTooltip
	 * Size -> 0x0000
	 */
	struct DebugUI_Widget_NameAndTooltip
	{
	public:
		class Il2CppString*                                        name;                                                    // 0x0000(0x0000)
		class Il2CppString*                                        tooltip;                                                 // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.ProfilingScope
	 * Size -> 0x0000
	 */
	struct ProfilingScope
	{	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.ProfilingSample
	 * Size -> 0x0000
	 */
	struct ProfilingSample
	{
	public:
		class CommandBuffer*                                       m_Cmd;                                                   // 0x0000(0x0000)
		class Il2CppString*                                        m_Name;                                                  // 0x0008(0x0000)
		bool                                                       m_Disposed;                                              // 0x0010(0x0000)
		class CustomSampler*                                       m_Sampler;                                               // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.ShaderVariablesProbeVolumes
	 * Size -> 0x0000
	 */
	struct ShaderVariablesProbeVolumes
	{
	public:
		struct Vector3                                             PoolDim;                                                 // 0x0000(0x0000)
		float                                                      ViewBias;                                                // 0x000C(0x0000)
		struct Vector3                                             MinCellPosition;                                         // 0x0010(0x0000)
		float                                                      PVSamplingNoise;                                         // 0x001C(0x0000)
		struct Vector3                                             CellIndicesDim;                                          // 0x0020(0x0000)
		float                                                      CellInMeters;                                            // 0x002C(0x0000)
		float                                                      CellInMinBricks;                                         // 0x0030(0x0000)
		float                                                      MinBrickSize;                                            // 0x0034(0x0000)
		int32_t                                                    IndexChunkSize;                                          // 0x0038(0x0000)
		float                                                      NormalBias;                                              // 0x003C(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.SphericalHarmonicsL1
	 * Size -> 0x0000
	 */
	struct SphericalHarmonicsL1
	{
	public:
		struct Vector4                                             shAr;                                                    // 0x0000(0x0000)
		struct Vector4                                             shAg;                                                    // 0x0010(0x0000)
		struct Vector4                                             shAb;                                                    // 0x0020(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.LensFlareCommonSRP+<>c__DisplayClass32_0
	 * Size -> 0x0000
	 */
	struct LensFlareCommonSRP___c__DisplayClass32_0
	{
	public:
		class LensFlareDataElementSRP*                             element;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.LensFlareCommonSRP+<>c__DisplayClass32_1
	 * Size -> 0x0000
	 */
	struct LensFlareCommonSRP___c__DisplayClass32_1
	{
	public:
		struct Vector2                                             screenPos;                                               // 0x0000(0x0000)
		float                                                      position;                                                // 0x0008(0x0000)
		float                                                      globalCos0;                                              // 0x000C(0x0000)
		float                                                      globalSin0;                                              // 0x0010(0x0000)
		float                                                      combinedScale;                                           // 0x0014(0x0000)
		float                                                      usedAspectRatio;                                         // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.ShaderGenUInt4
	 * Size -> 0x0000
	 */
	struct ShaderGenUInt4
	{	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.Hammersley.Hammersley2dSeq16+<hammersley2dSeq16>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct Hammersley_Hammersley2dSeq16__hammersley2dSeq16_e__FixedBuffer
	{
	public:
		float                                                      FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.Hammersley+Hammersley2dSeq16
	 * Size -> 0x0000
	 */
	struct Hammersley_Hammersley2dSeq16
	{
	public:
		struct Hammersley_Hammersley2dSeq16__hammersley2dSeq16_e__FixedBuffer hammersley2dSeq16;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.Hammersley.Hammersley2dSeq32+<hammersley2dSeq32>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct Hammersley_Hammersley2dSeq32__hammersley2dSeq32_e__FixedBuffer
	{
	public:
		float                                                      FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.Hammersley+Hammersley2dSeq32
	 * Size -> 0x0000
	 */
	struct Hammersley_Hammersley2dSeq32
	{
	public:
		struct Hammersley_Hammersley2dSeq32__hammersley2dSeq32_e__FixedBuffer hammersley2dSeq32;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.Hammersley.Hammersley2dSeq64+<hammersley2dSeq64>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct Hammersley_Hammersley2dSeq64__hammersley2dSeq64_e__FixedBuffer
	{
	public:
		float                                                      FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.Hammersley+Hammersley2dSeq64
	 * Size -> 0x0000
	 */
	struct Hammersley_Hammersley2dSeq64
	{
	public:
		struct Hammersley_Hammersley2dSeq64__hammersley2dSeq64_e__FixedBuffer hammersley2dSeq64;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.Hammersley.Hammersley2dSeq256+<hammersley2dSeq256>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct Hammersley_Hammersley2dSeq256__hammersley2dSeq256_e__FixedBuffer
	{
	public:
		float                                                      FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.Hammersley+Hammersley2dSeq256
	 * Size -> 0x0000
	 */
	struct Hammersley_Hammersley2dSeq256
	{
	public:
		struct Hammersley_Hammersley2dSeq256__hammersley2dSeq256_e__FixedBuffer hammersley2dSeq256;                                      // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.RTHandleProperties
	 * Size -> 0x0000
	 */
	struct RTHandleProperties
	{
	public:
		struct Vector2Int                                          previousViewportSize;                                    // 0x0000(0x0000)
		struct Vector2Int                                          previousRenderTargetSize;                                // 0x0008(0x0000)
		struct Vector2Int                                          currentViewportSize;                                     // 0x0010(0x0000)
		struct Vector2Int                                          currentRenderTargetSize;                                 // 0x0018(0x0000)
		struct Vector4                                             rtHandleScale;                                           // 0x0020(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.AtlasAllocatorDynamic+AtlasNode
	 * Size -> 0x0000
	 */
	struct AtlasAllocatorDynamic_AtlasNode
	{
	public:
		int16_t                                                    m_Self;                                                  // 0x0000(0x0000)
		int16_t                                                    m_Parent;                                                // 0x0002(0x0000)
		int16_t                                                    m_LeftChild;                                             // 0x0004(0x0000)
		int16_t                                                    m_RightChild;                                            // 0x0006(0x0000)
		int16_t                                                    m_FreelistNext;                                          // 0x0008(0x0000)
		uint16_t                                                   m_Flags;                                                 // 0x000A(0x0000)
		struct Vector4                                             m_Rect;                                                  // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.BitArray8
	 * Size -> 0x0000
	 */
	struct BitArray8
	{
	public:
		uint8_t                                                    data;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.BitArray16
	 * Size -> 0x0000
	 */
	struct BitArray16
	{
	public:
		uint16_t                                                   data;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.BitArray32
	 * Size -> 0x0000
	 */
	struct BitArray32
	{
	public:
		uint32_t                                                   data;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.BitArray64
	 * Size -> 0x0000
	 */
	struct BitArray64
	{
	public:
		uint64_t                                                   data;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.BitArray128
	 * Size -> 0x0000
	 */
	struct BitArray128
	{
	public:
		uint64_t                                                   data1;                                                   // 0x0000(0x0000)
		uint64_t                                                   data2;                                                   // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.BitArray256
	 * Size -> 0x0000
	 */
	struct BitArray256
	{
	public:
		uint64_t                                                   data1;                                                   // 0x0000(0x0000)
		uint64_t                                                   data2;                                                   // 0x0008(0x0000)
		uint64_t                                                   data3;                                                   // 0x0010(0x0000)
		uint64_t                                                   data4;                                                   // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.HableCurve+DirectParams
	 * Size -> 0x0000
	 */
	struct HableCurve_DirectParams
	{
	public:
		float                                                      x0;                                                      // 0x0000(0x0000)
		float                                                      y0;                                                      // 0x0004(0x0000)
		float                                                      x1;                                                      // 0x0008(0x0000)
		float                                                      y1;                                                      // 0x000C(0x0000)
		float                                                      W;                                                       // 0x0010(0x0000)
		float                                                      overshootX;                                              // 0x0014(0x0000)
		float                                                      overshootY;                                              // 0x0018(0x0000)
		float                                                      gamma;                                                   // 0x001C(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.MeshGizmo+<>c__DisplayClass10_0
	 * Size -> 0x0000
	 */
	struct MeshGizmo___c__DisplayClass10_0
	{
	public:
		class MeshGizmo*                                           _4__this;                                                // 0x0000(0x0000)
		struct Color                                               color;                                                   // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.VolumeIsolationScope
	 * Size -> 0x0000
	 */
	struct VolumeIsolationScope
	{	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.UnityEngine.Rendering.LookDev.Sky
	 * Size -> 0x0000
	 */
	struct Sky
	{
	public:
		class Cubemap*                                             cubemap;                                                 // 0x0000(0x0000)
		float                                                      longitudeOffset;                                         // 0x0008(0x0000)
		float                                                      exposure;                                                // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=24
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_24_7
	{	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=144
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_144_1
	{	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=256
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_256_4
	{	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=512
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_512_1
	{	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=1024
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_1024_3
	{	};

	/**
	 * Struct Unity.RenderPipelines.Core.Runtime.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=4096
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_4096_2
	{	};

	/**
	 * Struct Unity.Burst.Unity.Burst.BurstRuntime+HashCode32<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct BurstRuntime_HashCode32_T
	{	};

	/**
	 * Struct Unity.Burst.Unity.Burst.BurstRuntime+HashCode64<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct BurstRuntime_HashCode64_T
	{	};

	/**
	 * Struct Unity.Burst.Unity.Burst.BurstString+NumberBuffer
	 * Size -> 0x0000
	 */
	struct BurstString_NumberBuffer
	{
	public:
		uint8_t*                                                   buffer;                                                  // 0x0000(0x0000)
		int32_t                                                    Kind;                                                    // 0x0008(0x0000)
		int32_t                                                    DigitsCount;                                             // 0x000C(0x0000)
		int32_t                                                    Scale;                                                   // 0x0010(0x0000)
		bool                                                       IsNegative;                                              // 0x0014(0x0000)
	};

	/**
	 * Struct Unity.Burst.Unity.Burst.BurstString+FormatOptions
	 * Size -> 0x0000
	 */
	struct BurstString_FormatOptions
	{
	public:
		uint8_t                                                    Kind;                                                    // 0x0000(0x0000)
		int8_t                                                     AlignAndSize;                                            // 0x0001(0x0000)
		uint8_t                                                    Specifier;                                               // 0x0002(0x0000)
		bool                                                       Lowercase;                                               // 0x0003(0x0000)
	};

	/**
	 * Struct Unity.Burst.Unity.Burst.BurstString.tBigInt+<m_blocks>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct BurstString_tBigInt__m_blocks_e__FixedBuffer
	{
	public:
		uint32_t                                                   FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.Burst.Unity.Burst.BurstString+tBigInt
	 * Size -> 0x0000
	 */
	struct BurstString_tBigInt
	{
	public:
		int32_t                                                    m_length;                                                // 0x0000(0x0000)
		struct BurstString_tBigInt__m_blocks_e__FixedBuffer        m_blocks;                                                // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.Burst.Unity.Burst.BurstString+tFloatUnion32
	 * Size -> 0x0000
	 */
	struct BurstString_tFloatUnion32
	{
	public:
		float                                                      m_floatingPoint;                                         // 0x0000(0x0000)
		uint32_t                                                   m_integer;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.Burst.Unity.Burst.BurstString+tFloatUnion64
	 * Size -> 0x0000
	 */
	struct BurstString_tFloatUnion64
	{
	public:
		double                                                     m_floatingPoint;                                         // 0x0000(0x0000)
		uint64_t                                                   m_integer;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.Burst.Unity.Burst.FunctionPointer<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct FunctionPointer_T
	{
	public:
		intptr_t                                                   ptr;                                                     // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.Burst.Unity.Burst.SharedStatic<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct SharedStatic_T
	{
	public:
		void*                                                      buffer;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.Burst.Unity.Burst.Intrinsics.v64
	 * Size -> 0x0000
	 */
	struct v64
	{
	public:
		uint8_t                                                    Byte0;                                                   // 0x0000(0x0000)
		uint8_t                                                    Byte1;                                                   // 0x0001(0x0000)
		uint8_t                                                    Byte2;                                                   // 0x0002(0x0000)
		uint8_t                                                    Byte3;                                                   // 0x0003(0x0000)
		uint8_t                                                    Byte4;                                                   // 0x0004(0x0000)
		uint8_t                                                    Byte5;                                                   // 0x0005(0x0000)
		uint8_t                                                    Byte6;                                                   // 0x0006(0x0000)
		uint8_t                                                    Byte7;                                                   // 0x0007(0x0000)
		int8_t                                                     SByte0;                                                  // 0x0000(0x0000)
		int8_t                                                     SByte1;                                                  // 0x0001(0x0000)
		int8_t                                                     SByte2;                                                  // 0x0002(0x0000)
		int8_t                                                     SByte3;                                                  // 0x0003(0x0000)
		int8_t                                                     SByte4;                                                  // 0x0004(0x0000)
		int8_t                                                     SByte5;                                                  // 0x0005(0x0000)
		int8_t                                                     SByte6;                                                  // 0x0006(0x0000)
		int8_t                                                     SByte7;                                                  // 0x0007(0x0000)
		uint16_t                                                   UShort0;                                                 // 0x0000(0x0000)
		uint16_t                                                   UShort1;                                                 // 0x0002(0x0000)
		uint16_t                                                   UShort2;                                                 // 0x0004(0x0000)
		uint16_t                                                   UShort3;                                                 // 0x0006(0x0000)
		int16_t                                                    SShort0;                                                 // 0x0000(0x0000)
		int16_t                                                    SShort1;                                                 // 0x0002(0x0000)
		int16_t                                                    SShort2;                                                 // 0x0004(0x0000)
		int16_t                                                    SShort3;                                                 // 0x0006(0x0000)
		uint32_t                                                   UInt0;                                                   // 0x0000(0x0000)
		uint32_t                                                   UInt1;                                                   // 0x0004(0x0000)
		int32_t                                                    SInt0;                                                   // 0x0000(0x0000)
		int32_t                                                    SInt1;                                                   // 0x0004(0x0000)
		uint64_t                                                   ULong0;                                                  // 0x0000(0x0000)
		int64_t                                                    SLong0;                                                  // 0x0000(0x0000)
		float                                                      Float0;                                                  // 0x0000(0x0000)
		float                                                      Float1;                                                  // 0x0004(0x0000)
		double                                                     Double0;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.Burst.Unity.Burst.Intrinsics.v128
	 * Size -> 0x0000
	 */
	struct v128
	{
	public:
		uint8_t                                                    Byte0;                                                   // 0x0000(0x0000)
		uint8_t                                                    Byte1;                                                   // 0x0001(0x0000)
		uint8_t                                                    Byte2;                                                   // 0x0002(0x0000)
		uint8_t                                                    Byte3;                                                   // 0x0003(0x0000)
		uint8_t                                                    Byte4;                                                   // 0x0004(0x0000)
		uint8_t                                                    Byte5;                                                   // 0x0005(0x0000)
		uint8_t                                                    Byte6;                                                   // 0x0006(0x0000)
		uint8_t                                                    Byte7;                                                   // 0x0007(0x0000)
		uint8_t                                                    Byte8;                                                   // 0x0008(0x0000)
		uint8_t                                                    Byte9;                                                   // 0x0009(0x0000)
		uint8_t                                                    Byte10;                                                  // 0x000A(0x0000)
		uint8_t                                                    Byte11;                                                  // 0x000B(0x0000)
		uint8_t                                                    Byte12;                                                  // 0x000C(0x0000)
		uint8_t                                                    Byte13;                                                  // 0x000D(0x0000)
		uint8_t                                                    Byte14;                                                  // 0x000E(0x0000)
		uint8_t                                                    Byte15;                                                  // 0x000F(0x0000)
		int8_t                                                     SByte0;                                                  // 0x0000(0x0000)
		int8_t                                                     SByte1;                                                  // 0x0001(0x0000)
		int8_t                                                     SByte2;                                                  // 0x0002(0x0000)
		int8_t                                                     SByte3;                                                  // 0x0003(0x0000)
		int8_t                                                     SByte4;                                                  // 0x0004(0x0000)
		int8_t                                                     SByte5;                                                  // 0x0005(0x0000)
		int8_t                                                     SByte6;                                                  // 0x0006(0x0000)
		int8_t                                                     SByte7;                                                  // 0x0007(0x0000)
		int8_t                                                     SByte8;                                                  // 0x0008(0x0000)
		int8_t                                                     SByte9;                                                  // 0x0009(0x0000)
		int8_t                                                     SByte10;                                                 // 0x000A(0x0000)
		int8_t                                                     SByte11;                                                 // 0x000B(0x0000)
		int8_t                                                     SByte12;                                                 // 0x000C(0x0000)
		int8_t                                                     SByte13;                                                 // 0x000D(0x0000)
		int8_t                                                     SByte14;                                                 // 0x000E(0x0000)
		int8_t                                                     SByte15;                                                 // 0x000F(0x0000)
		uint16_t                                                   UShort0;                                                 // 0x0000(0x0000)
		uint16_t                                                   UShort1;                                                 // 0x0002(0x0000)
		uint16_t                                                   UShort2;                                                 // 0x0004(0x0000)
		uint16_t                                                   UShort3;                                                 // 0x0006(0x0000)
		uint16_t                                                   UShort4;                                                 // 0x0008(0x0000)
		uint16_t                                                   UShort5;                                                 // 0x000A(0x0000)
		uint16_t                                                   UShort6;                                                 // 0x000C(0x0000)
		uint16_t                                                   UShort7;                                                 // 0x000E(0x0000)
		int16_t                                                    SShort0;                                                 // 0x0000(0x0000)
		int16_t                                                    SShort1;                                                 // 0x0002(0x0000)
		int16_t                                                    SShort2;                                                 // 0x0004(0x0000)
		int16_t                                                    SShort3;                                                 // 0x0006(0x0000)
		int16_t                                                    SShort4;                                                 // 0x0008(0x0000)
		int16_t                                                    SShort5;                                                 // 0x000A(0x0000)
		int16_t                                                    SShort6;                                                 // 0x000C(0x0000)
		int16_t                                                    SShort7;                                                 // 0x000E(0x0000)
		uint32_t                                                   UInt0;                                                   // 0x0000(0x0000)
		uint32_t                                                   UInt1;                                                   // 0x0004(0x0000)
		uint32_t                                                   UInt2;                                                   // 0x0008(0x0000)
		uint32_t                                                   UInt3;                                                   // 0x000C(0x0000)
		int32_t                                                    SInt0;                                                   // 0x0000(0x0000)
		int32_t                                                    SInt1;                                                   // 0x0004(0x0000)
		int32_t                                                    SInt2;                                                   // 0x0008(0x0000)
		int32_t                                                    SInt3;                                                   // 0x000C(0x0000)
		uint64_t                                                   ULong0;                                                  // 0x0000(0x0000)
		uint64_t                                                   ULong1;                                                  // 0x0008(0x0000)
		int64_t                                                    SLong0;                                                  // 0x0000(0x0000)
		int64_t                                                    SLong1;                                                  // 0x0008(0x0000)
		float                                                      Float0;                                                  // 0x0000(0x0000)
		float                                                      Float1;                                                  // 0x0004(0x0000)
		float                                                      Float2;                                                  // 0x0008(0x0000)
		float                                                      Float3;                                                  // 0x000C(0x0000)
		double                                                     Double0;                                                 // 0x0000(0x0000)
		double                                                     Double1;                                                 // 0x0008(0x0000)
		struct v64                                                 Lo64;                                                    // 0x0000(0x0000)
		struct v64                                                 Hi64;                                                    // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.Burst.Unity.Burst.Intrinsics.v256
	 * Size -> 0x0000
	 */
	struct v256
	{
	public:
		uint8_t                                                    Byte0;                                                   // 0x0000(0x0000)
		uint8_t                                                    Byte1;                                                   // 0x0001(0x0000)
		uint8_t                                                    Byte2;                                                   // 0x0002(0x0000)
		uint8_t                                                    Byte3;                                                   // 0x0003(0x0000)
		uint8_t                                                    Byte4;                                                   // 0x0004(0x0000)
		uint8_t                                                    Byte5;                                                   // 0x0005(0x0000)
		uint8_t                                                    Byte6;                                                   // 0x0006(0x0000)
		uint8_t                                                    Byte7;                                                   // 0x0007(0x0000)
		uint8_t                                                    Byte8;                                                   // 0x0008(0x0000)
		uint8_t                                                    Byte9;                                                   // 0x0009(0x0000)
		uint8_t                                                    Byte10;                                                  // 0x000A(0x0000)
		uint8_t                                                    Byte11;                                                  // 0x000B(0x0000)
		uint8_t                                                    Byte12;                                                  // 0x000C(0x0000)
		uint8_t                                                    Byte13;                                                  // 0x000D(0x0000)
		uint8_t                                                    Byte14;                                                  // 0x000E(0x0000)
		uint8_t                                                    Byte15;                                                  // 0x000F(0x0000)
		uint8_t                                                    Byte16;                                                  // 0x0010(0x0000)
		uint8_t                                                    Byte17;                                                  // 0x0011(0x0000)
		uint8_t                                                    Byte18;                                                  // 0x0012(0x0000)
		uint8_t                                                    Byte19;                                                  // 0x0013(0x0000)
		uint8_t                                                    Byte20;                                                  // 0x0014(0x0000)
		uint8_t                                                    Byte21;                                                  // 0x0015(0x0000)
		uint8_t                                                    Byte22;                                                  // 0x0016(0x0000)
		uint8_t                                                    Byte23;                                                  // 0x0017(0x0000)
		uint8_t                                                    Byte24;                                                  // 0x0018(0x0000)
		uint8_t                                                    Byte25;                                                  // 0x0019(0x0000)
		uint8_t                                                    Byte26;                                                  // 0x001A(0x0000)
		uint8_t                                                    Byte27;                                                  // 0x001B(0x0000)
		uint8_t                                                    Byte28;                                                  // 0x001C(0x0000)
		uint8_t                                                    Byte29;                                                  // 0x001D(0x0000)
		uint8_t                                                    Byte30;                                                  // 0x001E(0x0000)
		uint8_t                                                    Byte31;                                                  // 0x001F(0x0000)
		int8_t                                                     SByte0;                                                  // 0x0000(0x0000)
		int8_t                                                     SByte1;                                                  // 0x0001(0x0000)
		int8_t                                                     SByte2;                                                  // 0x0002(0x0000)
		int8_t                                                     SByte3;                                                  // 0x0003(0x0000)
		int8_t                                                     SByte4;                                                  // 0x0004(0x0000)
		int8_t                                                     SByte5;                                                  // 0x0005(0x0000)
		int8_t                                                     SByte6;                                                  // 0x0006(0x0000)
		int8_t                                                     SByte7;                                                  // 0x0007(0x0000)
		int8_t                                                     SByte8;                                                  // 0x0008(0x0000)
		int8_t                                                     SByte9;                                                  // 0x0009(0x0000)
		int8_t                                                     SByte10;                                                 // 0x000A(0x0000)
		int8_t                                                     SByte11;                                                 // 0x000B(0x0000)
		int8_t                                                     SByte12;                                                 // 0x000C(0x0000)
		int8_t                                                     SByte13;                                                 // 0x000D(0x0000)
		int8_t                                                     SByte14;                                                 // 0x000E(0x0000)
		int8_t                                                     SByte15;                                                 // 0x000F(0x0000)
		int8_t                                                     SByte16;                                                 // 0x0010(0x0000)
		int8_t                                                     SByte17;                                                 // 0x0011(0x0000)
		int8_t                                                     SByte18;                                                 // 0x0012(0x0000)
		int8_t                                                     SByte19;                                                 // 0x0013(0x0000)
		int8_t                                                     SByte20;                                                 // 0x0014(0x0000)
		int8_t                                                     SByte21;                                                 // 0x0015(0x0000)
		int8_t                                                     SByte22;                                                 // 0x0016(0x0000)
		int8_t                                                     SByte23;                                                 // 0x0017(0x0000)
		int8_t                                                     SByte24;                                                 // 0x0018(0x0000)
		int8_t                                                     SByte25;                                                 // 0x0019(0x0000)
		int8_t                                                     SByte26;                                                 // 0x001A(0x0000)
		int8_t                                                     SByte27;                                                 // 0x001B(0x0000)
		int8_t                                                     SByte28;                                                 // 0x001C(0x0000)
		int8_t                                                     SByte29;                                                 // 0x001D(0x0000)
		int8_t                                                     SByte30;                                                 // 0x001E(0x0000)
		int8_t                                                     SByte31;                                                 // 0x001F(0x0000)
		uint16_t                                                   UShort0;                                                 // 0x0000(0x0000)
		uint16_t                                                   UShort1;                                                 // 0x0002(0x0000)
		uint16_t                                                   UShort2;                                                 // 0x0004(0x0000)
		uint16_t                                                   UShort3;                                                 // 0x0006(0x0000)
		uint16_t                                                   UShort4;                                                 // 0x0008(0x0000)
		uint16_t                                                   UShort5;                                                 // 0x000A(0x0000)
		uint16_t                                                   UShort6;                                                 // 0x000C(0x0000)
		uint16_t                                                   UShort7;                                                 // 0x000E(0x0000)
		uint16_t                                                   UShort8;                                                 // 0x0010(0x0000)
		uint16_t                                                   UShort9;                                                 // 0x0012(0x0000)
		uint16_t                                                   UShort10;                                                // 0x0014(0x0000)
		uint16_t                                                   UShort11;                                                // 0x0016(0x0000)
		uint16_t                                                   UShort12;                                                // 0x0018(0x0000)
		uint16_t                                                   UShort13;                                                // 0x001A(0x0000)
		uint16_t                                                   UShort14;                                                // 0x001C(0x0000)
		uint16_t                                                   UShort15;                                                // 0x001E(0x0000)
		int16_t                                                    SShort0;                                                 // 0x0000(0x0000)
		int16_t                                                    SShort1;                                                 // 0x0002(0x0000)
		int16_t                                                    SShort2;                                                 // 0x0004(0x0000)
		int16_t                                                    SShort3;                                                 // 0x0006(0x0000)
		int16_t                                                    SShort4;                                                 // 0x0008(0x0000)
		int16_t                                                    SShort5;                                                 // 0x000A(0x0000)
		int16_t                                                    SShort6;                                                 // 0x000C(0x0000)
		int16_t                                                    SShort7;                                                 // 0x000E(0x0000)
		int16_t                                                    SShort8;                                                 // 0x0010(0x0000)
		int16_t                                                    SShort9;                                                 // 0x0012(0x0000)
		int16_t                                                    SShort10;                                                // 0x0014(0x0000)
		int16_t                                                    SShort11;                                                // 0x0016(0x0000)
		int16_t                                                    SShort12;                                                // 0x0018(0x0000)
		int16_t                                                    SShort13;                                                // 0x001A(0x0000)
		int16_t                                                    SShort14;                                                // 0x001C(0x0000)
		int16_t                                                    SShort15;                                                // 0x001E(0x0000)
		uint32_t                                                   UInt0;                                                   // 0x0000(0x0000)
		uint32_t                                                   UInt1;                                                   // 0x0004(0x0000)
		uint32_t                                                   UInt2;                                                   // 0x0008(0x0000)
		uint32_t                                                   UInt3;                                                   // 0x000C(0x0000)
		uint32_t                                                   UInt4;                                                   // 0x0010(0x0000)
		uint32_t                                                   UInt5;                                                   // 0x0014(0x0000)
		uint32_t                                                   UInt6;                                                   // 0x0018(0x0000)
		uint32_t                                                   UInt7;                                                   // 0x001C(0x0000)
		int32_t                                                    SInt0;                                                   // 0x0000(0x0000)
		int32_t                                                    SInt1;                                                   // 0x0004(0x0000)
		int32_t                                                    SInt2;                                                   // 0x0008(0x0000)
		int32_t                                                    SInt3;                                                   // 0x000C(0x0000)
		int32_t                                                    SInt4;                                                   // 0x0010(0x0000)
		int32_t                                                    SInt5;                                                   // 0x0014(0x0000)
		int32_t                                                    SInt6;                                                   // 0x0018(0x0000)
		int32_t                                                    SInt7;                                                   // 0x001C(0x0000)
		uint64_t                                                   ULong0;                                                  // 0x0000(0x0000)
		uint64_t                                                   ULong1;                                                  // 0x0008(0x0000)
		uint64_t                                                   ULong2;                                                  // 0x0010(0x0000)
		uint64_t                                                   ULong3;                                                  // 0x0018(0x0000)
		int64_t                                                    SLong0;                                                  // 0x0000(0x0000)
		int64_t                                                    SLong1;                                                  // 0x0008(0x0000)
		int64_t                                                    SLong2;                                                  // 0x0010(0x0000)
		int64_t                                                    SLong3;                                                  // 0x0018(0x0000)
		float                                                      Float0;                                                  // 0x0000(0x0000)
		float                                                      Float1;                                                  // 0x0004(0x0000)
		float                                                      Float2;                                                  // 0x0008(0x0000)
		float                                                      Float3;                                                  // 0x000C(0x0000)
		float                                                      Float4;                                                  // 0x0010(0x0000)
		float                                                      Float5;                                                  // 0x0014(0x0000)
		float                                                      Float6;                                                  // 0x0018(0x0000)
		float                                                      Float7;                                                  // 0x001C(0x0000)
		double                                                     Double0;                                                 // 0x0000(0x0000)
		double                                                     Double1;                                                 // 0x0008(0x0000)
		double                                                     Double2;                                                 // 0x0010(0x0000)
		double                                                     Double3;                                                 // 0x0018(0x0000)
		struct v128                                                Lo128;                                                   // 0x0000(0x0000)
		struct v128                                                Hi128;                                                   // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.Burst.Unity.Burst.Intrinsics.X86+RoundingScope
	 * Size -> 0x0000
	 */
	struct X86_RoundingScope
	{
	public:
		int32_t                                                    OldBits;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.Burst.Unity.Burst.Intrinsics.X86.Fma+Union
	 * Size -> 0x0000
	 */
	struct X86_Fma_Union
	{
	public:
		float                                                      f;                                                       // 0x0000(0x0000)
		uint32_t                                                   u;                                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.Burst.Unity.Burst.Intrinsics.X86.Sse4_2.StrBoolArray+<Bits>e__FixedBuffer
	 * Size -> 0x0000
	 */
	struct X86_Sse4_2_StrBoolArray__Bits_e__FixedBuffer
	{
	public:
		uint16_t                                                   FixedElementField;                                       // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.Burst.Unity.Burst.Intrinsics.X86.Sse4_2+StrBoolArray
	 * Size -> 0x0000
	 */
	struct X86_Sse4_2_StrBoolArray
	{
	public:
		struct X86_Sse4_2_StrBoolArray__Bits_e__FixedBuffer        Bits;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.Burst.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=3
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_3_2
	{	};

	/**
	 * Struct Unity.Burst.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=32
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_32_5
	{	};

	/**
	 * Struct Unity.Burst.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=256
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_256_5
	{	};

	/**
	 * Struct Unity.Burst.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=512
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_512_2
	{	};

	/**
	 * Struct Unity.Burst.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=1024
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_1024_4
	{	};

	/**
	 * Struct UnityEngine.UI.UnityEngine.UI.ColorBlock
	 * Size -> 0x0000
	 */
	struct ColorBlock
	{
	public:
		struct Color                                               m_NormalColor;                                           // 0x0000(0x0000)
		struct Color                                               m_HighlightedColor;                                      // 0x0010(0x0000)
		struct Color                                               m_PressedColor;                                          // 0x0020(0x0000)
		struct Color                                               m_SelectedColor;                                         // 0x0030(0x0000)
		struct Color                                               m_DisabledColor;                                         // 0x0040(0x0000)
		float                                                      m_ColorMultiplier;                                       // 0x0050(0x0000)
		float                                                      m_FadeDuration;                                          // 0x0054(0x0000)
	};

	/**
	 * Struct UnityEngine.UI.UnityEngine.UI.DefaultControls+Resources
	 * Size -> 0x0000
	 */
	struct DefaultControls_Resources
	{
	public:
		class Sprite*                                              standard;                                                // 0x0000(0x0000)
		class Sprite*                                              background;                                              // 0x0008(0x0000)
		class Sprite*                                              inputField;                                              // 0x0010(0x0000)
		class Sprite*                                              knob;                                                    // 0x0018(0x0000)
		class Sprite*                                              checkmark;                                               // 0x0020(0x0000)
		class Sprite*                                              dropdown;                                                // 0x0028(0x0000)
		class Sprite*                                              mask;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct UnityEngine.UI.UnityEngine.UI.Navigation
	 * Size -> 0x0000
	 */
	struct Navigation
	{
	public:
		int32_t                                                    m_Mode;                                                  // 0x0000(0x0000)
		bool                                                       m_WrapAround;                                            // 0x0004(0x0000)
		class Selectable*                                          m_SelectOnUp;                                            // 0x0008(0x0000)
		class Selectable*                                          m_SelectOnDown;                                          // 0x0010(0x0000)
		class Selectable*                                          m_SelectOnLeft;                                          // 0x0018(0x0000)
		class Selectable*                                          m_SelectOnRight;                                         // 0x0020(0x0000)
	};

	/**
	 * Struct UnityEngine.UI.UnityEngine.UI.SpriteState
	 * Size -> 0x0000
	 */
	struct SpriteState
	{
	public:
		class Sprite*                                              m_HighlightedSprite;                                     // 0x0000(0x0000)
		class Sprite*                                              m_PressedSprite;                                         // 0x0008(0x0000)
		class Sprite*                                              m_SelectedSprite;                                        // 0x0010(0x0000)
		class Sprite*                                              m_DisabledSprite;                                        // 0x0018(0x0000)
	};

	/**
	 * Struct UnityEngine.UI.UnityEngine.UI.CoroutineTween.ColorTween
	 * Size -> 0x0000
	 */
	struct ColorTween_1
	{
	public:
		class ColorTween_ColorTweenCallback_1*                     m_Target;                                                // 0x0000(0x0000)
		struct Color                                               m_StartColor;                                            // 0x0008(0x0000)
		struct Color                                               m_TargetColor;                                           // 0x0018(0x0000)
		int32_t                                                    m_TweenMode;                                             // 0x0028(0x0000)
		float                                                      m_Duration;                                              // 0x002C(0x0000)
		bool                                                       m_IgnoreTimeScale;                                       // 0x0030(0x0000)
	};

	/**
	 * Struct UnityEngine.UI.UnityEngine.UI.CoroutineTween.FloatTween
	 * Size -> 0x0000
	 */
	struct FloatTween_1
	{
	public:
		class FloatTween_FloatTweenCallback_1*                     m_Target;                                                // 0x0000(0x0000)
		float                                                      m_StartValue;                                            // 0x0008(0x0000)
		float                                                      m_TargetValue;                                           // 0x000C(0x0000)
		float                                                      m_Duration;                                              // 0x0010(0x0000)
		bool                                                       m_IgnoreTimeScale;                                       // 0x0014(0x0000)
	};

	/**
	 * Struct UnityEngine.UI.UnityEngine.UIElements.PanelRaycaster+FloatIntBits
	 * Size -> 0x0000
	 */
	struct PanelRaycaster_FloatIntBits
	{
	public:
		float                                                      f;                                                       // 0x0000(0x0000)
		int32_t                                                    i;                                                       // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UI.UnityEngine.EventSystems.EventSystem+UIToolkitOverrideConfig
	 * Size -> 0x0000
	 */
	struct EventSystem_UIToolkitOverrideConfig
	{
	public:
		class EventSystem*                                         activeEventSystem;                                       // 0x0000(0x0000)
		bool                                                       sendEvents;                                              // 0x0008(0x0000)
		bool                                                       createPanelGameObjectsOnStart;                           // 0x0009(0x0000)
	};

	/**
	 * Struct UnityEngine.UI.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=12
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_12_7
	{	};

	/**
	 * Struct websocket-sharp.<PrivateImplementationDetails>{38D3CEF1-4C5A-4FC9-A92D-E0991034BC1A}+__StaticArrayInitTypeSize=14
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails__38D3CEF1_4C5A_4FC9_A92D_E0991034BC1A____StaticArrayInitTypeSize_14
	{	};

	/**
	 * Struct Cinemachine.Cinemachine.CinemachineBlendDefinition
	 * Size -> 0x0000
	 */
	struct CinemachineBlendDefinition
	{
	public:
		int32_t                                                    m_Style;                                                 // 0x0000(0x0000)
		float                                                      m_Time;                                                  // 0x0004(0x0000)
		class AnimationCurve*                                      m_CustomCurve;                                           // 0x0008(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.CinemachineBlendListCamera+Instruction
	 * Size -> 0x0000
	 */
	struct CinemachineBlendListCamera_Instruction
	{
	public:
		class CinemachineVirtualCameraBase*                        m_VirtualCamera;                                         // 0x0000(0x0000)
		float                                                      m_Hold;                                                  // 0x0008(0x0000)
		struct CinemachineBlendDefinition                          m_Blend;                                                 // 0x0010(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.CinemachineClearShot+Pair
	 * Size -> 0x0000
	 */
	struct CinemachineClearShot_Pair
	{
	public:
		int32_t                                                    a;                                                       // 0x0000(0x0000)
		float                                                      b;                                                       // 0x0004(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.CinemachineConfiner2D+ShapeCache
	 * Size -> 0x0000
	 */
	struct CinemachineConfiner2D_ShapeCache
	{
	public:
		class ConfinerOven*                                        m_confinerOven;                                          // 0x0000(0x0000)
		class List_List_Vector2*                                   m_OriginalPath;                                          // 0x0008(0x0000)
		struct Matrix4x4                                           m_DeltaWorldToBaked;                                     // 0x0010(0x0000)
		struct Matrix4x4                                           m_DeltaBakedToWorld;                                     // 0x0050(0x0000)
		float                                                      m_aspectRatio;                                           // 0x0090(0x0000)
		float                                                      m_maxWindowSize;                                         // 0x0094(0x0000)
		float                                                      m_maxComputationTimePerFrameInSeconds;                   // 0x0098(0x0000)
		struct Matrix4x4                                           m_bakedToWorld;                                          // 0x009C(0x0000)
		class Collider2D*                                          m_boundingShape2D;                                       // 0x00E0(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.CinemachineFreeLook+Orbit
	 * Size -> 0x0000
	 */
	struct CinemachineFreeLook_Orbit
	{
	public:
		float                                                      m_Height;                                                // 0x0000(0x0000)
		float                                                      m_Radius;                                                // 0x0004(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.CinemachinePath+Waypoint
	 * Size -> 0x0000
	 */
	struct CinemachinePath_Waypoint
	{
	public:
		struct Vector3                                             position;                                                // 0x0000(0x0000)
		struct Vector3                                             tangent;                                                 // 0x000C(0x0000)
		float                                                      roll;                                                    // 0x0018(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.CinemachineSmoothPath+Waypoint
	 * Size -> 0x0000
	 */
	struct CinemachineSmoothPath_Waypoint
	{
	public:
		struct Vector3                                             position;                                                // 0x0000(0x0000)
		float                                                      roll;                                                    // 0x000C(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.CinemachineStateDrivenCamera+Instruction
	 * Size -> 0x0000
	 */
	struct CinemachineStateDrivenCamera_Instruction
	{
	public:
		int32_t                                                    m_FullHash;                                              // 0x0000(0x0000)
		class CinemachineVirtualCameraBase*                        m_VirtualCamera;                                         // 0x0008(0x0000)
		float                                                      m_ActivateAfter;                                         // 0x0010(0x0000)
		float                                                      m_MinDuration;                                           // 0x0014(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.CinemachineStateDrivenCamera+ParentHash
	 * Size -> 0x0000
	 */
	struct CinemachineStateDrivenCamera_ParentHash
	{
	public:
		int32_t                                                    m_Hash;                                                  // 0x0000(0x0000)
		int32_t                                                    m_ParentHash;                                            // 0x0004(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.CinemachineStateDrivenCamera+HashPair
	 * Size -> 0x0000
	 */
	struct CinemachineStateDrivenCamera_HashPair
	{
	public:
		int32_t                                                    parentHash;                                              // 0x0000(0x0000)
		int32_t                                                    hash;                                                    // 0x0004(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.CinemachineTargetGroup+Target
	 * Size -> 0x0000
	 */
	struct CinemachineTargetGroup_Target
	{
	public:
		class Transform*                                           target;                                                  // 0x0000(0x0000)
		float                                                      weight;                                                  // 0x0008(0x0000)
		float                                                      radius;                                                  // 0x000C(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.LensSettings
	 * Size -> 0x0000
	 */
	struct LensSettings
	{
	public:
		float                                                      FieldOfView;                                             // 0x0000(0x0000)
		float                                                      OrthographicSize;                                        // 0x0004(0x0000)
		float                                                      NearClipPlane;                                           // 0x0008(0x0000)
		float                                                      FarClipPlane;                                            // 0x000C(0x0000)
		float                                                      Dutch;                                                   // 0x0010(0x0000)
		int32_t                                                    ModeOverride;                                            // 0x0014(0x0000)
		struct Vector2                                             LensShift;                                               // 0x0018(0x0000)
		int32_t                                                    GateFit;                                                 // 0x0020(0x0000)
		struct Vector2                                             m_SensorSize;                                            // 0x0024(0x0000)
		bool                                                       m_OrthoFromCamera;                                       // 0x002C(0x0000)
		bool                                                       m_PhysicalFromCamera;                                    // 0x002D(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.CinemachineComposer+FovCache
	 * Size -> 0x0000
	 */
	struct CinemachineComposer_FovCache
	{
	public:
		struct Rect                                                mFovSoftGuideRect;                                       // 0x0000(0x0000)
		struct Rect                                                mFovHardGuideRect;                                       // 0x0010(0x0000)
		float                                                      mFovH;                                                   // 0x0020(0x0000)
		float                                                      mFov;                                                    // 0x0024(0x0000)
		float                                                      mOrthoSizeOverDistance;                                  // 0x0028(0x0000)
		float                                                      mAspect;                                                 // 0x002C(0x0000)
		struct Rect                                                mSoftGuideRect;                                          // 0x0030(0x0000)
		struct Rect                                                mHardGuideRect;                                          // 0x0040(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.CinemachineOrbitalTransposer+Heading
	 * Size -> 0x0000
	 */
	struct CinemachineOrbitalTransposer_Heading
	{
	public:
		int32_t                                                    m_Definition;                                            // 0x0000(0x0000)
		int32_t                                                    m_VelocityFilterStrength;                                // 0x0004(0x0000)
		float                                                      m_Bias;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.CinemachineTrackedDolly+AutoDolly
	 * Size -> 0x0000
	 */
	struct CinemachineTrackedDolly_AutoDolly
	{
	public:
		bool                                                       m_Enabled;                                               // 0x0000(0x0000)
		float                                                      m_PositionOffset;                                        // 0x0004(0x0000)
		int32_t                                                    m_SearchRadius;                                          // 0x0008(0x0000)
		int32_t                                                    m_SearchResolution;                                      // 0x000C(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.AxisState+Recentering
	 * Size -> 0x0000
	 */
	struct AxisState_Recentering
	{
	public:
		bool                                                       m_enabled;                                               // 0x0000(0x0000)
		float                                                      m_WaitTime;                                              // 0x0004(0x0000)
		float                                                      m_RecenteringTime;                                       // 0x0008(0x0000)
		float                                                      mLastAxisInputTime;                                      // 0x000C(0x0000)
		float                                                      mRecenteringVelocity;                                    // 0x0010(0x0000)
		int32_t                                                    m_LegacyHeadingDefinition;                               // 0x0014(0x0000)
		int32_t                                                    m_LegacyVelocityFilterStrength;                          // 0x0018(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.CameraState+CustomBlendable
	 * Size -> 0x0000
	 */
	struct CameraState_CustomBlendable
	{
	public:
		class Object_1*                                            m_Custom;                                                // 0x0000(0x0000)
		float                                                      m_Weight;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.CameraState
	 * Size -> 0x0000
	 */
	struct CameraState
	{
	public:
		struct LensSettings                                        Lens;                                                    // 0x0000(0x0000)
		struct Vector3                                             ReferenceUp;                                             // 0x0030(0x0000)
		struct Vector3                                             ReferenceLookAt;                                         // 0x003C(0x0000)
		struct Vector3                                             RawPosition;                                             // 0x0048(0x0000)
		struct Quaternion                                          RawOrientation;                                          // 0x0054(0x0000)
		struct Vector3                                             PositionDampingBypass;                                   // 0x0064(0x0000)
		float                                                      ShotQuality;                                             // 0x0070(0x0000)
		struct Vector3                                             PositionCorrection;                                      // 0x0074(0x0000)
		struct Quaternion                                          OrientationCorrection;                                   // 0x0080(0x0000)
		int32_t                                                    BlendHint;                                               // 0x0090(0x0000)
		struct CameraState_CustomBlendable                         mCustom0;                                                // 0x0098(0x0000)
		struct CameraState_CustomBlendable                         mCustom1;                                                // 0x00A8(0x0000)
		struct CameraState_CustomBlendable                         mCustom2;                                                // 0x00B8(0x0000)
		struct CameraState_CustomBlendable                         mCustom3;                                                // 0x00C8(0x0000)
		class List_CameraState_CustomBlendable*                    m_CustomOverflow;                                        // 0x00D8(0x0000)
		int32_t                                                    NumCustomBlendables_k__BackingField;                     // 0x00E0(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.CinemachineBlenderSettings+CustomBlend
	 * Size -> 0x0000
	 */
	struct CinemachineBlenderSettings_CustomBlend
	{
	public:
		class Il2CppString*                                        m_From;                                                  // 0x0000(0x0000)
		class Il2CppString*                                        m_To;                                                    // 0x0008(0x0000)
		struct CinemachineBlendDefinition                          m_Blend;                                                 // 0x0010(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.AxisBase
	 * Size -> 0x0000
	 */
	struct AxisBase
	{
	public:
		float                                                      m_Value;                                                 // 0x0000(0x0000)
		float                                                      m_MinValue;                                              // 0x0004(0x0000)
		float                                                      m_MaxValue;                                              // 0x0008(0x0000)
		bool                                                       m_Wrap;                                                  // 0x000C(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.CinemachineInputAxisDriver
	 * Size -> 0x0000
	 */
	struct CinemachineInputAxisDriver
	{
	public:
		float                                                      multiplier;                                              // 0x0000(0x0000)
		float                                                      accelTime;                                               // 0x0004(0x0000)
		float                                                      decelTime;                                               // 0x0008(0x0000)
		class Il2CppString*                                        name;                                                    // 0x0010(0x0000)
		float                                                      inputValue;                                              // 0x0018(0x0000)
		float                                                      mCurrentSpeed;                                           // 0x001C(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.CinemachineVirtualCameraBase+TransitionParams
	 * Size -> 0x0000
	 */
	struct CinemachineVirtualCameraBase_TransitionParams
	{
	public:
		int32_t                                                    m_BlendHint;                                             // 0x0000(0x0000)
		bool                                                       m_InheritPosition;                                       // 0x0004(0x0000)
		class CinemachineBrain_VcamActivatedEvent*                 m_OnCameraLive;                                          // 0x0008(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.ConfinerOven+AspectStretcher
	 * Size -> 0x0000
	 */
	struct ConfinerOven_AspectStretcher
	{
	public:
		float                                                      Aspect_k__BackingField;                                  // 0x0000(0x0000)
		float                                                      m_InverseAspect;                                         // 0x0004(0x0000)
		float                                                      m_CenterX;                                               // 0x0008(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.ConfinerOven+PolygonSolution
	 * Size -> 0x0000
	 */
	struct ConfinerOven_PolygonSolution
	{
	public:
		class List_List_IntPoint*                                  m_Polygons;                                              // 0x0000(0x0000)
		float                                                      m_FrustumHeight;                                         // 0x0008(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.ConfinerOven+BakingStateCache
	 * Size -> 0x0000
	 */
	struct ConfinerOven_BakingStateCache
	{
	public:
		class ClipperOffset_1*                                     offsetter;                                               // 0x0000(0x0000)
		class List_ConfinerOven_PolygonSolution*                   solutions;                                               // 0x0008(0x0000)
		struct ConfinerOven_PolygonSolution                        rightCandidate;                                          // 0x0010(0x0000)
		struct ConfinerOven_PolygonSolution                        leftCandidate;                                           // 0x0020(0x0000)
		class List_List_IntPoint*                                  maxCandidate;                                            // 0x0030(0x0000)
		float                                                      stepSize;                                                // 0x0038(0x0000)
		float                                                      maxFrustumHeight;                                        // 0x003C(0x0000)
		float                                                      currentFrustumHeight;                                    // 0x0040(0x0000)
		float                                                      bakeTime;                                                // 0x0044(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.NoiseSettings+NoiseParams
	 * Size -> 0x0000
	 */
	struct NoiseSettings_NoiseParams
	{
	public:
		float                                                      Frequency;                                               // 0x0000(0x0000)
		float                                                      Amplitude;                                               // 0x0004(0x0000)
		bool                                                       Constant;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.NoiseSettings+TransformNoiseParams
	 * Size -> 0x0000
	 */
	struct NoiseSettings_TransformNoiseParams
	{
	public:
		struct NoiseSettings_NoiseParams                           X;                                                       // 0x0000(0x0000)
		struct NoiseSettings_NoiseParams                           Y;                                                       // 0x000C(0x0000)
		struct NoiseSettings_NoiseParams                           Z;                                                       // 0x0018(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.TargetPositionCache.CacheCurve+Item
	 * Size -> 0x0000
	 */
	struct TargetPositionCache_CacheCurve_Item
	{
	public:
		struct Vector3                                             Pos;                                                     // 0x0000(0x0000)
		struct Quaternion                                          Rot;                                                     // 0x000C(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.TargetPositionCache.CacheEntry+RecordingItem
	 * Size -> 0x0000
	 */
	struct TargetPositionCache_CacheEntry_RecordingItem
	{
	public:
		float                                                      Time;                                                    // 0x0000(0x0000)
		bool                                                       IsCut;                                                   // 0x0004(0x0000)
		struct TargetPositionCache_CacheCurve_Item                 Item;                                                    // 0x0008(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.TargetPositionCache+TimeRange
	 * Size -> 0x0000
	 */
	struct TargetPositionCache_TimeRange
	{
	public:
		float                                                      Start;                                                   // 0x0000(0x0000)
		float                                                      End;                                                     // 0x0004(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.CinemachineTriggerAction+ActionSettings
	 * Size -> 0x0000
	 */
	struct CinemachineTriggerAction_ActionSettings
	{
	public:
		int32_t                                                    m_Action;                                                // 0x0000(0x0000)
		class Object_1*                                            m_Target;                                                // 0x0008(0x0000)
		int32_t                                                    m_BoostAmount;                                           // 0x0010(0x0000)
		float                                                      m_StartTime;                                             // 0x0014(0x0000)
		int32_t                                                    m_Mode;                                                  // 0x0018(0x0000)
		class CinemachineTriggerAction_ActionSettings_TriggerEvent* m_Event;                                                 // 0x0020(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.CinemachineImpulseListener+ImpulseReaction
	 * Size -> 0x0000
	 */
	struct CinemachineImpulseListener_ImpulseReaction
	{
	public:
		class NoiseSettings*                                       m_SecondaryNoise;                                        // 0x0000(0x0000)
		float                                                      m_AmplitudeGain;                                         // 0x0008(0x0000)
		float                                                      m_FrequencyGain;                                         // 0x000C(0x0000)
		float                                                      m_Duration;                                              // 0x0010(0x0000)
		float                                                      m_CurrentAmount;                                         // 0x0014(0x0000)
		float                                                      m_CurrentTime;                                           // 0x0018(0x0000)
		float                                                      m_CurrentDamping;                                        // 0x001C(0x0000)
		bool                                                       m_Initialized;                                           // 0x0020(0x0000)
		struct Vector3                                             m_NoiseOffsets;                                          // 0x0024(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.CinemachineImpulseManager+EnvelopeDefinition
	 * Size -> 0x0000
	 */
	struct CinemachineImpulseManager_EnvelopeDefinition
	{
	public:
		class AnimationCurve*                                      m_AttackShape;                                           // 0x0000(0x0000)
		class AnimationCurve*                                      m_DecayShape;                                            // 0x0008(0x0000)
		float                                                      m_AttackTime;                                            // 0x0010(0x0000)
		float                                                      m_SustainTime;                                           // 0x0014(0x0000)
		float                                                      m_DecayTime;                                             // 0x0018(0x0000)
		bool                                                       m_ScaleWithImpact;                                       // 0x001C(0x0000)
		bool                                                       m_HoldForever;                                           // 0x001D(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.Utility.HeadingTracker+Item
	 * Size -> 0x0000
	 */
	struct HeadingTracker_Item
	{
	public:
		struct Vector3                                             velocity;                                                // 0x0000(0x0000)
		float                                                      weight;                                                  // 0x000C(0x0000)
		float                                                      time;                                                    // 0x0010(0x0000)
	};

	/**
	 * Struct Cinemachine.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=12
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_12_8
	{	};

	/**
	 * Struct Photon3Unity3D.ExitGames.Client.Photon.NonAllocDictionary+KeyIterator<K, V>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct NonAllocDictionary_KeyIterator_K__V
	{
	public:
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		class NonAllocDictionary_K__V*                             dict;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct Photon3Unity3D.ExitGames.Client.Photon.NonAllocDictionary+PairIterator<K, V>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct NonAllocDictionary_PairIterator_K__V
	{
	public:
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		class NonAllocDictionary_K__V*                             dict;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct Photon3Unity3D.ExitGames.Client.Photon.NonAllocDictionary+Node<K, V>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct NonAllocDictionary_Node_K__V
	{
	public:
		bool                                                       Used;                                                    // 0x0000(0x0000)
		int32_t                                                    Next;                                                    // 0x0000(0x0000)
		uint32_t                                                   Hash;                                                    // 0x0000(0x0000)
		class Il2CppObject*                                        Key;                                                     // 0x0000(0x0000)
		class Il2CppObject*                                        Val;                                                     // 0x0000(0x0000)
	};

	/**
	 * Struct Photon3Unity3D.ExitGames.Client.Photon.DictionaryEntryEnumerator
	 * Size -> 0x0000
	 */
	struct DictionaryEntryEnumerator
	{
	public:
		struct Dictionary_Enumerator_object__object                enumerator;                                              // 0x0000(0x0000)
	};

	/**
	 * Struct Photon3Unity3D.ExitGames.Client.Photon.SendOptions
	 * Size -> 0x0000
	 */
	struct SendOptions
	{
	public:
		int32_t                                                    DeliveryMode;                                            // 0x0000(0x0000)
		bool                                                       Encrypt;                                                 // 0x0004(0x0000)
		uint8_t                                                    Channel;                                                 // 0x0005(0x0000)
	};

	/**
	 * Struct Photon3Unity3D.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=9
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_9_1
	{	};

	/**
	 * Struct Photon3Unity3D.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=64
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_64_5
	{	};

	/**
	 * Struct Photon3Unity3D.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=65
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_65
	{	};

	/**
	 * Struct Photon3Unity3D.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=97
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_97
	{	};

	/**
	 * Struct Photon3Unity3D.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=120
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_120_3
	{	};

	/**
	 * Struct Photon3Unity3D.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=128
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_128_3
	{	};

	/**
	 * Struct Photon3Unity3D.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=192
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_192_1
	{	};

	/**
	 * Struct Photon3Unity3D.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=1212
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_1212_1
	{	};

	/**
	 * Struct UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.FontWeightPair
	 * Size -> 0x0000
	 */
	struct FontWeightPair
	{
	public:
		class FontAsset*                                           regularTypeface;                                         // 0x0000(0x0000)
		class FontAsset*                                           italicTypeface;                                          // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.FontAssetCreationEditorSettings
	 * Size -> 0x0000
	 */
	struct FontAssetCreationEditorSettings
	{
	public:
		class Il2CppString*                                        sourceFontFileGUID;                                      // 0x0000(0x0000)
		int32_t                                                    faceIndex;                                               // 0x0008(0x0000)
		int32_t                                                    pointSizeSamplingMode;                                   // 0x000C(0x0000)
		int32_t                                                    pointSize;                                               // 0x0010(0x0000)
		int32_t                                                    padding;                                                 // 0x0014(0x0000)
		int32_t                                                    packingMode;                                             // 0x0018(0x0000)
		int32_t                                                    atlasWidth;                                              // 0x001C(0x0000)
		int32_t                                                    atlasHeight;                                             // 0x0020(0x0000)
		int32_t                                                    characterSetSelectionMode;                               // 0x0024(0x0000)
		class Il2CppString*                                        characterSequence;                                       // 0x0028(0x0000)
		class Il2CppString*                                        referencedFontAssetGUID;                                 // 0x0030(0x0000)
		class Il2CppString*                                        referencedTextAssetGUID;                                 // 0x0038(0x0000)
		int32_t                                                    fontStyle;                                               // 0x0040(0x0000)
		float                                                      fontStyleModifier;                                       // 0x0044(0x0000)
		int32_t                                                    renderMode;                                              // 0x0048(0x0000)
		bool                                                       includeFontFeatures;                                     // 0x004C(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.Extents
	 * Size -> 0x0000
	 */
	struct Extents_1
	{
	public:
		struct Vector2                                             min;                                                     // 0x0000(0x0000)
		struct Vector2                                             max;                                                     // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.LineInfo
	 * Size -> 0x0000
	 */
	struct LineInfo_1
	{
	public:
		int32_t                                                    controlCharacterCount;                                   // 0x0000(0x0000)
		int32_t                                                    characterCount;                                          // 0x0004(0x0000)
		int32_t                                                    visibleCharacterCount;                                   // 0x0008(0x0000)
		int32_t                                                    spaceCount;                                              // 0x000C(0x0000)
		int32_t                                                    visibleSpaceCount;                                       // 0x0010(0x0000)
		int32_t                                                    wordCount;                                               // 0x0014(0x0000)
		int32_t                                                    firstCharacterIndex;                                     // 0x0018(0x0000)
		int32_t                                                    firstVisibleCharacterIndex;                              // 0x001C(0x0000)
		int32_t                                                    lastCharacterIndex;                                      // 0x0020(0x0000)
		int32_t                                                    lastVisibleCharacterIndex;                               // 0x0024(0x0000)
		float                                                      length;                                                  // 0x0028(0x0000)
		float                                                      lineHeight;                                              // 0x002C(0x0000)
		float                                                      ascender;                                                // 0x0030(0x0000)
		float                                                      baseline;                                                // 0x0034(0x0000)
		float                                                      descender;                                               // 0x0038(0x0000)
		float                                                      maxAdvance;                                              // 0x003C(0x0000)
		float                                                      width;                                                   // 0x0040(0x0000)
		float                                                      marginLeft;                                              // 0x0044(0x0000)
		float                                                      marginRight;                                             // 0x0048(0x0000)
		int32_t                                                    alignment;                                               // 0x004C(0x0000)
		struct Extents_1                                           lineExtents;                                             // 0x0050(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.LinkInfo
	 * Size -> 0x0000
	 */
	struct LinkInfo
	{
	public:
		int32_t                                                    hashCode;                                                // 0x0000(0x0000)
		int32_t                                                    linkIdFirstCharacterIndex;                               // 0x0004(0x0000)
		int32_t                                                    linkIdLength;                                            // 0x0008(0x0000)
		int32_t                                                    linkTextfirstCharacterIndex;                             // 0x000C(0x0000)
		int32_t                                                    linkTextLength;                                          // 0x0010(0x0000)
		class Char_Array*                                          linkId;                                                  // 0x0018(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.MeshInfo
	 * Size -> 0x0000
	 */
	struct MeshInfo
	{
	public:
		int32_t                                                    vertexCount;                                             // 0x0000(0x0000)
		class Vector3_Array*                                       vertices;                                                // 0x0008(0x0000)
		class Vector2_Array*                                       uvs0;                                                    // 0x0010(0x0000)
		class Vector2_Array*                                       uvs2;                                                    // 0x0018(0x0000)
		class Color32_Array*                                       colors32;                                                // 0x0020(0x0000)
		class Int32_Array*                                         triangles;                                               // 0x0028(0x0000)
		class Material*                                            material;                                                // 0x0030(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.TextVertex
	 * Size -> 0x0000
	 */
	struct TextVertex
	{
	public:
		struct Vector3                                             position;                                                // 0x0000(0x0000)
		struct Vector2                                             uv;                                                      // 0x000C(0x0000)
		struct Vector2                                             uv2;                                                     // 0x0014(0x0000)
		struct Vector2                                             uv4;                                                     // 0x001C(0x0000)
		struct Color32                                             color;                                                   // 0x0024(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.TextElementInfo
	 * Size -> 0x0000
	 */
	struct TextElementInfo
	{
	public:
		uint16_t                                                   character;                                               // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0004(0x0000)
		uint8_t                                                    elementType;                                             // 0x0008(0x0000)
		class TextElement_1*                                       textElement;                                             // 0x0010(0x0000)
		class FontAsset*                                           fontAsset;                                               // 0x0018(0x0000)
		class SpriteAsset*                                         spriteAsset;                                             // 0x0020(0x0000)
		int32_t                                                    spriteIndex;                                             // 0x0028(0x0000)
		class Material*                                            material;                                                // 0x0030(0x0000)
		int32_t                                                    materialReferenceIndex;                                  // 0x0038(0x0000)
		bool                                                       isUsingAlternateTypeface;                                // 0x003C(0x0000)
		float                                                      pointSize;                                               // 0x0040(0x0000)
		int32_t                                                    lineNumber;                                              // 0x0044(0x0000)
		int32_t                                                    pageNumber;                                              // 0x0048(0x0000)
		int32_t                                                    vertexIndex;                                             // 0x004C(0x0000)
		struct TextVertex                                          vertexTopLeft;                                           // 0x0050(0x0000)
		struct TextVertex                                          vertexBottomLeft;                                        // 0x0078(0x0000)
		struct TextVertex                                          vertexTopRight;                                          // 0x00A0(0x0000)
		struct TextVertex                                          vertexBottomRight;                                       // 0x00C8(0x0000)
		struct Vector3                                             topLeft;                                                 // 0x00F0(0x0000)
		struct Vector3                                             bottomLeft;                                              // 0x00FC(0x0000)
		struct Vector3                                             topRight;                                                // 0x0108(0x0000)
		struct Vector3                                             bottomRight;                                             // 0x0114(0x0000)
		float                                                      origin;                                                  // 0x0120(0x0000)
		float                                                      ascender;                                                // 0x0124(0x0000)
		float                                                      baseLine;                                                // 0x0128(0x0000)
		float                                                      descender;                                               // 0x012C(0x0000)
		float                                                      xAdvance;                                                // 0x0130(0x0000)
		float                                                      aspectRatio;                                             // 0x0134(0x0000)
		float                                                      scale;                                                   // 0x0138(0x0000)
		struct Color32                                             color;                                                   // 0x013C(0x0000)
		struct Color32                                             underlineColor;                                          // 0x0140(0x0000)
		struct Color32                                             strikethroughColor;                                      // 0x0144(0x0000)
		struct Color32                                             highlightColor;                                          // 0x0148(0x0000)
		int32_t                                                    style;                                                   // 0x014C(0x0000)
		bool                                                       isVisible;                                               // 0x0150(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.TextGenerator+SpecialCharacter
	 * Size -> 0x0000
	 */
	struct TextGenerator_SpecialCharacter
	{
	public:
		class Character*                                           character;                                               // 0x0000(0x0000)
		class FontAsset*                                           fontAsset;                                               // 0x0008(0x0000)
		class Material*                                            material;                                                // 0x0010(0x0000)
		int32_t                                                    materialIndex;                                           // 0x0018(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.XmlTagAttribute
	 * Size -> 0x0000
	 */
	struct XmlTagAttribute
	{
	public:
		int32_t                                                    nameHashCode;                                            // 0x0000(0x0000)
		int32_t                                                    valueType;                                               // 0x0004(0x0000)
		int32_t                                                    valueStartIndex;                                         // 0x0008(0x0000)
		int32_t                                                    valueLength;                                             // 0x000C(0x0000)
		int32_t                                                    valueHashCode;                                           // 0x0010(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.RichTextTagAttribute
	 * Size -> 0x0000
	 */
	struct RichTextTagAttribute_1
	{
	public:
		int32_t                                                    nameHashCode;                                            // 0x0000(0x0000)
		int32_t                                                    valueHashCode;                                           // 0x0004(0x0000)
		int32_t                                                    valueType;                                               // 0x0008(0x0000)
		int32_t                                                    valueStartIndex;                                         // 0x000C(0x0000)
		int32_t                                                    valueLength;                                             // 0x0010(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.FontStyleStack
	 * Size -> 0x0000
	 */
	struct FontStyleStack
	{
	public:
		uint8_t                                                    bold;                                                    // 0x0000(0x0000)
		uint8_t                                                    italic;                                                  // 0x0001(0x0000)
		uint8_t                                                    underline;                                               // 0x0002(0x0000)
		uint8_t                                                    strikethrough;                                           // 0x0003(0x0000)
		uint8_t                                                    highlight;                                               // 0x0004(0x0000)
		uint8_t                                                    superscript;                                             // 0x0005(0x0000)
		uint8_t                                                    subscript;                                               // 0x0006(0x0000)
		uint8_t                                                    uppercase;                                               // 0x0007(0x0000)
		uint8_t                                                    lowercase;                                               // 0x0008(0x0000)
		uint8_t                                                    smallcaps;                                               // 0x0009(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.WordWrapState
	 * Size -> 0x0000
	 */
	struct WordWrapState_1
	{
	public:
		int32_t                                                    previousWordBreak;                                       // 0x0000(0x0000)
		int32_t                                                    totalCharacterCount;                                     // 0x0004(0x0000)
		int32_t                                                    visibleCharacterCount;                                   // 0x0008(0x0000)
		int32_t                                                    visibleSpriteCount;                                      // 0x000C(0x0000)
		int32_t                                                    visibleLinkCount;                                        // 0x0010(0x0000)
		int32_t                                                    firstCharacterIndex;                                     // 0x0014(0x0000)
		int32_t                                                    firstVisibleCharacterIndex;                              // 0x0018(0x0000)
		int32_t                                                    lastCharacterIndex;                                      // 0x001C(0x0000)
		int32_t                                                    lastVisibleCharIndex;                                    // 0x0020(0x0000)
		int32_t                                                    lineNumber;                                              // 0x0024(0x0000)
		float                                                      maxCapHeight;                                            // 0x0028(0x0000)
		float                                                      maxAscender;                                             // 0x002C(0x0000)
		float                                                      maxDescender;                                            // 0x0030(0x0000)
		float                                                      maxLineAscender;                                         // 0x0034(0x0000)
		float                                                      maxLineDescender;                                        // 0x0038(0x0000)
		float                                                      previousLineAscender;                                    // 0x003C(0x0000)
		float                                                      xAdvance;                                                // 0x0040(0x0000)
		float                                                      preferredWidth;                                          // 0x0044(0x0000)
		float                                                      preferredHeight;                                         // 0x0048(0x0000)
		float                                                      previousLineScale;                                       // 0x004C(0x0000)
		int32_t                                                    wordCount;                                               // 0x0050(0x0000)
		int32_t                                                    fontStyle;                                               // 0x0054(0x0000)
		float                                                      fontScale;                                               // 0x0058(0x0000)
		float                                                      fontScaleMultiplier;                                     // 0x005C(0x0000)
		float                                                      currentFontSize;                                         // 0x0060(0x0000)
		float                                                      baselineOffset;                                          // 0x0064(0x0000)
		float                                                      lineOffset;                                              // 0x0068(0x0000)
		class TextInfo_1*                                          textInfo;                                                // 0x0070(0x0000)
		struct LineInfo_1                                          lineInfo;                                                // 0x0078(0x0000)
		struct Color32                                             vertexColor;                                             // 0x00D8(0x0000)
		struct Color32                                             underlineColor;                                          // 0x00DC(0x0000)
		struct Color32                                             strikethroughColor;                                      // 0x00E0(0x0000)
		struct Color32                                             highlightColor;                                          // 0x00E4(0x0000)
		struct FontStyleStack                                      basicStyleStack;                                         // 0x00E8(0x0000)
		struct TextProcessingStack_Color32                         colorStack;                                              // 0x00F8(0x0000)
		struct TextProcessingStack_Color32                         underlineColorStack;                                     // 0x0118(0x0000)
		struct TextProcessingStack_Color32                         strikethroughColorStack;                                 // 0x0138(0x0000)
		struct TextProcessingStack_Color32                         highlightColorStack;                                     // 0x0158(0x0000)
		struct TextProcessingStack_TextColorGradient               colorGradientStack;                                      // 0x0178(0x0000)
		struct TextProcessingStack_float                           sizeStack;                                               // 0x01A0(0x0000)
		struct TextProcessingStack_float                           indentStack;                                             // 0x01C0(0x0000)
		struct TextProcessingStack_TextFontWeight                  fontWeightStack;                                         // 0x01E0(0x0000)
		struct TextProcessingStack_int                             styleStack;                                              // 0x0200(0x0000)
		struct TextProcessingStack_float                           baselineStack;                                           // 0x0220(0x0000)
		struct TextProcessingStack_int                             actionStack;                                             // 0x0240(0x0000)
		struct TextProcessingStack_MaterialReference               materialReferenceStack;                                  // 0x0260(0x0000)
		struct TextProcessingStack_TextAlignment                   lineJustificationStack;                                  // 0x02B8(0x0000)
		int32_t                                                    spriteAnimationId;                                       // 0x02D8(0x0000)
		class FontAsset*                                           currentFontAsset;                                        // 0x02E0(0x0000)
		class SpriteAsset*                                         currentSpriteAsset;                                      // 0x02E8(0x0000)
		class Material*                                            currentMaterial;                                         // 0x02F0(0x0000)
		int32_t                                                    currentMaterialIndex;                                    // 0x02F8(0x0000)
		struct Extents_1                                           meshExtents;                                             // 0x02FC(0x0000)
		bool                                                       tagNoParsing;                                            // 0x030C(0x0000)
		bool                                                       isNonBreakingSpace;                                      // 0x030D(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.PageInfo
	 * Size -> 0x0000
	 */
	struct PageInfo
	{
	public:
		int32_t                                                    firstCharacterIndex;                                     // 0x0000(0x0000)
		int32_t                                                    lastCharacterIndex;                                      // 0x0004(0x0000)
		float                                                      ascender;                                                // 0x0008(0x0000)
		float                                                      baseLine;                                                // 0x000C(0x0000)
		float                                                      descender;                                               // 0x0010(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.WordInfo
	 * Size -> 0x0000
	 */
	struct WordInfo
	{
	public:
		int32_t                                                    firstCharacterIndex;                                     // 0x0000(0x0000)
		int32_t                                                    lastCharacterIndex;                                      // 0x0004(0x0000)
		int32_t                                                    characterCount;                                          // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.TextProcessingStack<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct TextProcessingStack_T
	{
	public:
		class UObject_Array*                                       itemStack;                                               // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
		class Il2CppObject*                                        m_DefaultItem;                                           // 0x0000(0x0000)
		int32_t                                                    m_Capacity;                                              // 0x0000(0x0000)
		int32_t                                                    m_RolloverSize;                                          // 0x0000(0x0000)
		int32_t                                                    m_Count;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.TextResourceManager+FontAssetRef
	 * Size -> 0x0000
	 */
	struct TextResourceManager_FontAssetRef
	{
	public:
		int32_t                                                    nameHashCode;                                            // 0x0000(0x0000)
		int32_t                                                    familyNameHashCode;                                      // 0x0004(0x0000)
		int32_t                                                    styleNameHashCode;                                       // 0x0008(0x0000)
		int64_t                                                    familyNameAndStyleHashCode;                              // 0x0010(0x0000)
		class FontAsset*                                           fontAsset;                                               // 0x0018(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreTextEngineModule.UnityEngine.TextCore.Text.TextSettings+FontReferenceMap
	 * Size -> 0x0000
	 */
	struct TextSettings_FontReferenceMap
	{
	public:
		class Font*                                                font;                                                    // 0x0000(0x0000)
		class FontAsset*                                           fontAsset;                                               // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.Purchasing.Stores.UnityEngine.Purchasing.GoogleFinishTransactionService+<FinishTransaction>d__3
	 * Size -> 0x0000
	 */
	struct GoogleFinishTransactionService__FinishTransaction_d__3
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncVoidMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class GoogleFinishTransactionService*                      _4__this;                                                // 0x0028(0x0000)
		class Il2CppString*                                        purchaseToken;                                           // 0x0030(0x0000)
		class ProductDefinition*                                   product;                                                 // 0x0038(0x0000)
		class Action_IGoogleBillingResult__IGooglePurchase*        onTransactionFinished;                                   // 0x0040(0x0000)
		struct TaskAwaiter_IGooglePurchase                         u__1;                                                    // 0x0048(0x0000)
	};

	/**
	 * Struct UnityEngine.Purchasing.Stores.UnityEngine.Purchasing.GoogleFinishTransactionService+<FindPurchase>d__4
	 * Size -> 0x0000
	 */
	struct GoogleFinishTransactionService__FindPurchase_d__4
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_IGooglePurchase              t__builder;                                              // 0x0008(0x0000)
		class Il2CppString*                                        purchaseToken;                                           // 0x0020(0x0000)
		class GoogleFinishTransactionService*                      _4__this;                                                // 0x0028(0x0000)
		class GoogleFinishTransactionService___c__DisplayClass4_0* _8__1;                                                   // 0x0030(0x0000)
		struct TaskAwaiter_List_IGooglePurchase                    u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct UnityEngine.Purchasing.Stores.UnityEngine.Purchasing.GooglePlayStoreService+<FetchPurchases>d__31
	 * Size -> 0x0000
	 */
	struct GooglePlayStoreService__FetchPurchases_d__31
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncVoidMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class GooglePlayStoreService*                              _4__this;                                                // 0x0028(0x0000)
		class Action_List_IGooglePurchase*                         onQueryPurchaseSucceed;                                  // 0x0030(0x0000)
		struct TaskAwaiter                                         u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct UnityEngine.Purchasing.Stores.UnityEngine.Purchasing.GooglePlayStoreService+<TryFetchPurchases>d__32
	 * Size -> 0x0000
	 */
	struct GooglePlayStoreService__TryFetchPurchases_d__32
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class Action_List_IGooglePurchase*                         onQueryPurchaseSucceed;                                  // 0x0020(0x0000)
		class GooglePlayStoreService*                              _4__this;                                                // 0x0028(0x0000)
		struct TaskAwaiter_List_IGooglePurchase                    u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct UnityEngine.Purchasing.Stores.UnityEngine.Purchasing.GoogleQueryPurchasesService+<QueryPurchases>d__3
	 * Size -> 0x0000
	 */
	struct GoogleQueryPurchasesService__QueryPurchases_d__3
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_List_IGooglePurchase         t__builder;                                              // 0x0008(0x0000)
		class GoogleQueryPurchasesService*                         _4__this;                                                // 0x0020(0x0000)
		struct TaskAwaiter_IEnumerable_IGooglePurchase             u__1;                                                    // 0x0028(0x0000)
	};

	/**
	 * Struct UnityEngine.Purchasing.Stores.UnityEngine.Purchasing.GooglePurchaseUpdatedListener+<HandleUserCancelledPurchaseFailure>d__13
	 * Size -> 0x0000
	 */
	struct GooglePurchaseUpdatedListener__HandleUserCancelledPurchaseFailure_d__13
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncVoidMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class GooglePurchaseUpdatedListener*                       _4__this;                                                // 0x0028(0x0000)
		class IGoogleBillingResult*                                billingResult;                                           // 0x0030(0x0000)
		struct TaskAwaiter_List_IGooglePurchase                    u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct UnityEngine.Purchasing.Stores.UnityEngine.Purchasing.UDPReflectionConsts
	 * Size -> 0x0000
	 */
	struct UDPReflectionConsts
	{	};

	/**
	 * Struct UnityEngine.Purchasing.Stores.UnityEngine.Purchasing.ExponentialRetryPolicy.<>c__DisplayClass4_0+<<Invoke>g__Retry|0>d
	 * Size -> 0x0000
	 */
	struct ExponentialRetryPolicy___c__DisplayClass4_0___Invoke_g__Retry_0_d
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncVoidMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class ExponentialRetryPolicy___c__DisplayClass4_0*         _4__this;                                                // 0x0028(0x0000)
		struct TaskAwaiter                                         u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct UnityEngine.Purchasing.Stores.UnityEngine.Purchasing.ExponentialRetryPolicy.<>c__DisplayClass4_0+<<Invoke>g__WaitAndRetry|1>d
	 * Size -> 0x0000
	 */
	struct ExponentialRetryPolicy___c__DisplayClass4_0___Invoke_g__WaitAndRetry_1_d
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class ExponentialRetryPolicy___c__DisplayClass4_0*         _4__this;                                                // 0x0020(0x0000)
		struct TaskAwaiter                                         u__1;                                                    // 0x0028(0x0000)
	};

	/**
	 * Struct UnityEngine.Purchasing.Stores.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=76
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_76_2
	{	};

	/**
	 * Struct UnityEngine.Purchasing.Stores.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=112
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_112_2
	{	};

	/**
	 * Struct Unity.Postprocessing.Runtime.UnityEngine.Rendering.PostProcessing.BloomRenderer+Level
	 * Size -> 0x0000
	 */
	struct BloomRenderer_Level
	{
	public:
		int32_t                                                    down;                                                    // 0x0000(0x0000)
		int32_t                                                    up;                                                      // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.Postprocessing.Runtime.UnityEngine.Rendering.PostProcessing.PostProcessEventComparer
	 * Size -> 0x0000
	 */
	struct PostProcessEventComparer
	{	};

	/**
	 * Struct Unity.Postprocessing.Runtime.UnityEngine.Rendering.PostProcessing.HableCurve+DirectParams
	 * Size -> 0x0000
	 */
	struct HableCurve_DirectParams_1
	{
	public:
		float                                                      x0;                                                      // 0x0000(0x0000)
		float                                                      y0;                                                      // 0x0004(0x0000)
		float                                                      x1;                                                      // 0x0008(0x0000)
		float                                                      y1;                                                      // 0x000C(0x0000)
		float                                                      W;                                                       // 0x0010(0x0000)
		float                                                      overshootX;                                              // 0x0014(0x0000)
		float                                                      overshootY;                                              // 0x0018(0x0000)
		float                                                      gamma;                                                   // 0x001C(0x0000)
	};

	/**
	 * Struct Unity.Postprocessing.Runtime.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=20
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_20_6
	{	};

	/**
	 * Struct PhotonVoice.API.Photon.Voice.DeviceInfo
	 * Size -> 0x0000
	 */
	struct DeviceInfo
	{
	public:
		bool                                                       IsDefault_k__BackingField;                               // 0x0000(0x0000)
		int32_t                                                    IDInt_k__BackingField;                                   // 0x0004(0x0000)
		class Il2CppString*                                        IDString_k__BackingField;                                // 0x0008(0x0000)
		class Il2CppString*                                        Name_k__BackingField;                                    // 0x0010(0x0000)
		bool                                                       useStringID;                                             // 0x0018(0x0000)
	};

	/**
	 * Struct PhotonVoice.API.Photon.Voice.FrameBuffer
	 * Size -> 0x0000
	 */
	struct FrameBuffer
	{
	public:
		class Byte_Array*                                          array;                                                   // 0x0000(0x0000)
		int32_t                                                    offset;                                                  // 0x0008(0x0000)
		int32_t                                                    count;                                                   // 0x000C(0x0000)
		class IDisposable*                                         disposer;                                                // 0x0010(0x0000)
		bool                                                       disposed;                                                // 0x0018(0x0000)
		int32_t                                                    refCnt;                                                  // 0x001C(0x0000)
		struct GCHandle                                            gcHandle;                                                // 0x0020(0x0000)
		intptr_t                                                   ptr;                                                     // 0x0028(0x0000)
		bool                                                       pinned;                                                  // 0x0030(0x0000)
		uint8_t                                                    Flags_k__BackingField;                                   // 0x0031(0x0000)
	};

	/**
	 * Struct PhotonVoice.API.Photon.Voice.VoiceInfo
	 * Size -> 0x0000
	 */
	struct VoiceInfo
	{
	public:
		int32_t                                                    Codec_k__BackingField;                                   // 0x0000(0x0000)
		int32_t                                                    SamplingRate_k__BackingField;                            // 0x0004(0x0000)
		int32_t                                                    Channels_k__BackingField;                                // 0x0008(0x0000)
		int32_t                                                    FrameDurationUs_k__BackingField;                         // 0x000C(0x0000)
		int32_t                                                    Bitrate_k__BackingField;                                 // 0x0010(0x0000)
		int32_t                                                    Width_k__BackingField;                                   // 0x0014(0x0000)
		int32_t                                                    Height_k__BackingField;                                  // 0x0018(0x0000)
		int32_t                                                    FPS_k__BackingField;                                     // 0x001C(0x0000)
		int32_t                                                    KeyFrameInt_k__BackingField;                             // 0x0020(0x0000)
		class Il2CppObject*                                        UserData_k__BackingField;                                // 0x0028(0x0000)
	};

	/**
	 * Struct PhotonVoice.API.Photon.Voice.RemoteVoiceOptions
	 * Size -> 0x0000
	 */
	struct RemoteVoiceOptions
	{
	public:
		class Action*                                              OnRemoteVoiceRemoveAction_k__BackingField;               // 0x0000(0x0000)
		class IDecoder*                                            Decoder_k__BackingField;                                 // 0x0008(0x0000)
		class ILogger_2*                                           logger;                                                  // 0x0010(0x0000)
		struct VoiceInfo                                           voiceInfo;                                               // 0x0018(0x0000)
		class Il2CppString*                                        logPrefix_k__BackingField;                               // 0x0048(0x0000)
	};

	/**
	 * Struct PhotonVoice.API.Photon.Voice.VoiceClient+CreateOptions
	 * Size -> 0x0000
	 */
	struct VoiceClient_CreateOptions
	{
	public:
		uint8_t                                                    VoiceIDMin;                                              // 0x0000(0x0000)
		uint8_t                                                    VoiceIDMax;                                              // 0x0001(0x0000)
	};

	/**
	 * Struct PhotonVoice.API.Photon.Voice.Flip
	 * Size -> 0x0000
	 */
	struct Flip
	{
	public:
		bool                                                       IsVertical_k__BackingField;                              // 0x0000(0x0000)
		bool                                                       IsHorizontal_k__BackingField;                            // 0x0001(0x0000)
	};

	/**
	 * Struct PhotonVoice.API.Photon.Voice.ImageBufferInfo+StrideSet
	 * Size -> 0x0000
	 */
	struct ImageBufferInfo_StrideSet
	{
	public:
		int32_t                                                    stride0;                                                 // 0x0000(0x0000)
		int32_t                                                    stride1;                                                 // 0x0004(0x0000)
		int32_t                                                    stride2;                                                 // 0x0008(0x0000)
		int32_t                                                    stride3;                                                 // 0x000C(0x0000)
		int32_t                                                    Length_k__BackingField;                                  // 0x0010(0x0000)
	};

	/**
	 * Struct PhotonVoice.API.Photon.Voice.ImageBufferInfo
	 * Size -> 0x0000
	 */
	struct ImageBufferInfo
	{
	public:
		int32_t                                                    Width_k__BackingField;                                   // 0x0000(0x0000)
		int32_t                                                    Height_k__BackingField;                                  // 0x0004(0x0000)
		struct ImageBufferInfo_StrideSet                           Stride_k__BackingField;                                  // 0x0008(0x0000)
		int32_t                                                    Format_k__BackingField;                                  // 0x001C(0x0000)
		int32_t                                                    Rotation_k__BackingField;                                // 0x0020(0x0000)
		struct Flip                                                Flip_k__BackingField;                                    // 0x0024(0x0000)
	};

	/**
	 * Struct PhotonVoice.API.Photon.Voice.ImageBufferNative+PlaneSet
	 * Size -> 0x0000
	 */
	struct ImageBufferNative_PlaneSet
	{
	public:
		intptr_t                                                   plane0;                                                  // 0x0000(0x0000)
		intptr_t                                                   plane1;                                                  // 0x0008(0x0000)
		intptr_t                                                   plane2;                                                  // 0x0010(0x0000)
		intptr_t                                                   plane3;                                                  // 0x0018(0x0000)
		int32_t                                                    Length_k__BackingField;                                  // 0x0020(0x0000)
	};

	/**
	 * Struct PhotonVoice.API.Photon.Voice.IOS.AudioSessionParameters
	 * Size -> 0x0000
	 */
	struct AudioSessionParameters
	{
	public:
		int32_t                                                    Category;                                                // 0x0000(0x0000)
		int32_t                                                    Mode;                                                    // 0x0004(0x0000)
		class AudioSessionCategoryOption_Array*                    CategoryOptions;                                         // 0x0008(0x0000)
	};

	/**
	 * Struct PhotonVoice.API.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=16
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_16_6
	{	};

	/**
	 * Struct Mono.Security.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=3
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_3_3
	{	};

	/**
	 * Struct Mono.Security.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=9
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_9_2
	{	};

	/**
	 * Struct Mono.Security.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=10
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_10_3
	{	};

	/**
	 * Struct Mono.Security.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=18
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_18_1
	{	};

	/**
	 * Struct Mono.Security.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=20
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_20_7
	{	};

	/**
	 * Struct Mono.Security.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=32
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_32_6
	{	};

	/**
	 * Struct Mono.Security.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=48
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_48_2
	{	};

	/**
	 * Struct Mono.Security.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=64
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_64_6
	{	};

	/**
	 * Struct Mono.Security.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=256
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_256_6
	{	};

	/**
	 * Struct Mono.Security.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=3132
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_3132_1
	{	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.ObscuredTypes.ObscuredBool
	 * Size -> 0x0000
	 */
	struct ObscuredBool
	{
	public:
		uint8_t                                                    currentCryptoKey;                                        // 0x0000(0x0000)
		int32_t                                                    hiddenValue;                                             // 0x0004(0x0000)
		bool                                                       inited;                                                  // 0x0008(0x0000)
		bool                                                       fakeValue;                                               // 0x0009(0x0000)
		bool                                                       fakeValueActive;                                         // 0x000A(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.ObscuredTypes.ObscuredByte
	 * Size -> 0x0000
	 */
	struct ObscuredByte
	{
	public:
		uint8_t                                                    currentCryptoKey;                                        // 0x0000(0x0000)
		uint8_t                                                    hiddenValue;                                             // 0x0001(0x0000)
		bool                                                       inited;                                                  // 0x0002(0x0000)
		uint8_t                                                    fakeValue;                                               // 0x0003(0x0000)
		bool                                                       fakeValueActive;                                         // 0x0004(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.ObscuredTypes.ObscuredChar
	 * Size -> 0x0000
	 */
	struct ObscuredChar
	{
	public:
		uint16_t                                                   currentCryptoKey;                                        // 0x0000(0x0000)
		uint16_t                                                   hiddenValue;                                             // 0x0002(0x0000)
		bool                                                       inited;                                                  // 0x0004(0x0000)
		uint16_t                                                   fakeValue;                                               // 0x0006(0x0000)
		bool                                                       fakeValueActive;                                         // 0x0008(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.Common.ACTkByte16
	 * Size -> 0x0000
	 */
	struct ACTkByte16
	{
	public:
		uint8_t                                                    b1;                                                      // 0x0000(0x0000)
		uint8_t                                                    b2;                                                      // 0x0001(0x0000)
		uint8_t                                                    b3;                                                      // 0x0002(0x0000)
		uint8_t                                                    b4;                                                      // 0x0003(0x0000)
		uint8_t                                                    b5;                                                      // 0x0004(0x0000)
		uint8_t                                                    b6;                                                      // 0x0005(0x0000)
		uint8_t                                                    b7;                                                      // 0x0006(0x0000)
		uint8_t                                                    b8;                                                      // 0x0007(0x0000)
		uint8_t                                                    b9;                                                      // 0x0008(0x0000)
		uint8_t                                                    b10;                                                     // 0x0009(0x0000)
		uint8_t                                                    b11;                                                     // 0x000A(0x0000)
		uint8_t                                                    b12;                                                     // 0x000B(0x0000)
		uint8_t                                                    b13;                                                     // 0x000C(0x0000)
		uint8_t                                                    b14;                                                     // 0x000D(0x0000)
		uint8_t                                                    b15;                                                     // 0x000E(0x0000)
		uint8_t                                                    b16;                                                     // 0x000F(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.ObscuredTypes.ObscuredDecimal+DecimalLongBytesUnion
	 * Size -> 0x0000
	 */
	struct ObscuredDecimal_DecimalLongBytesUnion
	{
	public:
		struct Decimal                                             d;                                                       // 0x0000(0x0000)
		int64_t                                                    l1;                                                      // 0x0000(0x0000)
		int64_t                                                    l2;                                                      // 0x0008(0x0000)
		struct ACTkByte16                                          b16;                                                     // 0x0000(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.Common.ACTkByte4
	 * Size -> 0x0000
	 */
	struct ACTkByte4
	{
	public:
		uint8_t                                                    b1;                                                      // 0x0000(0x0000)
		uint8_t                                                    b2;                                                      // 0x0001(0x0000)
		uint8_t                                                    b3;                                                      // 0x0002(0x0000)
		uint8_t                                                    b4;                                                      // 0x0003(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.ObscuredTypes.ObscuredFloat
	 * Size -> 0x0000
	 */
	struct ObscuredFloat
	{
	public:
		int32_t                                                    currentCryptoKey;                                        // 0x0000(0x0000)
		int32_t                                                    hiddenValue;                                             // 0x0004(0x0000)
		struct ACTkByte4                                           hiddenValueOldByte4;                                     // 0x0008(0x0000)
		bool                                                       inited;                                                  // 0x000C(0x0000)
		float                                                      fakeValue;                                               // 0x0010(0x0000)
		bool                                                       fakeValueActive;                                         // 0x0014(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.ObscuredTypes.ObscuredDecimal
	 * Size -> 0x0000
	 */
	struct ObscuredDecimal
	{
	public:
		int64_t                                                    currentCryptoKey;                                        // 0x0000(0x0000)
		struct ACTkByte16                                          hiddenValue;                                             // 0x0008(0x0000)
		bool                                                       inited;                                                  // 0x0018(0x0000)
		struct Decimal                                             fakeValue;                                               // 0x0020(0x0000)
		bool                                                       fakeValueActive;                                         // 0x0030(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.Common.ACTkByte8
	 * Size -> 0x0000
	 */
	struct ACTkByte8
	{
	public:
		uint8_t                                                    b1;                                                      // 0x0000(0x0000)
		uint8_t                                                    b2;                                                      // 0x0001(0x0000)
		uint8_t                                                    b3;                                                      // 0x0002(0x0000)
		uint8_t                                                    b4;                                                      // 0x0003(0x0000)
		uint8_t                                                    b5;                                                      // 0x0004(0x0000)
		uint8_t                                                    b6;                                                      // 0x0005(0x0000)
		uint8_t                                                    b7;                                                      // 0x0006(0x0000)
		uint8_t                                                    b8;                                                      // 0x0007(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.ObscuredTypes.ObscuredDouble+DoubleLongBytesUnion
	 * Size -> 0x0000
	 */
	struct ObscuredDouble_DoubleLongBytesUnion
	{
	public:
		double                                                     d;                                                       // 0x0000(0x0000)
		int64_t                                                    l;                                                       // 0x0000(0x0000)
		struct ACTkByte8                                           b8;                                                      // 0x0000(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.ObscuredTypes.ObscuredDouble
	 * Size -> 0x0000
	 */
	struct ObscuredDouble
	{
	public:
		int64_t                                                    currentCryptoKey;                                        // 0x0000(0x0000)
		int64_t                                                    hiddenValue;                                             // 0x0008(0x0000)
		struct ACTkByte8                                           hiddenValueOldByte8;                                     // 0x0010(0x0000)
		bool                                                       inited;                                                  // 0x0018(0x0000)
		double                                                     fakeValue;                                               // 0x0020(0x0000)
		bool                                                       fakeValueActive;                                         // 0x0028(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.ObscuredTypes.ObscuredFloat+FloatIntBytesUnion
	 * Size -> 0x0000
	 */
	struct ObscuredFloat_FloatIntBytesUnion
	{
	public:
		float                                                      f;                                                       // 0x0000(0x0000)
		int32_t                                                    i;                                                       // 0x0000(0x0000)
		struct ACTkByte4                                           b4;                                                      // 0x0000(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.ObscuredTypes.ObscuredInt
	 * Size -> 0x0000
	 */
	struct ObscuredInt
	{
	public:
		int32_t                                                    currentCryptoKey;                                        // 0x0000(0x0000)
		int32_t                                                    hiddenValue;                                             // 0x0004(0x0000)
		bool                                                       inited;                                                  // 0x0008(0x0000)
		int32_t                                                    fakeValue;                                               // 0x000C(0x0000)
		bool                                                       fakeValueActive;                                         // 0x0010(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.ObscuredTypes.ObscuredLong
	 * Size -> 0x0000
	 */
	struct ObscuredLong
	{
	public:
		int64_t                                                    currentCryptoKey;                                        // 0x0000(0x0000)
		int64_t                                                    hiddenValue;                                             // 0x0008(0x0000)
		bool                                                       inited;                                                  // 0x0010(0x0000)
		int64_t                                                    fakeValue;                                               // 0x0018(0x0000)
		bool                                                       fakeValueActive;                                         // 0x0020(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion+RawEncryptedQuaternion
	 * Size -> 0x0000
	 */
	struct ObscuredQuaternion_RawEncryptedQuaternion
	{
	public:
		int32_t                                                    x;                                                       // 0x0000(0x0000)
		int32_t                                                    y;                                                       // 0x0004(0x0000)
		int32_t                                                    z;                                                       // 0x0008(0x0000)
		int32_t                                                    w;                                                       // 0x000C(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion
	 * Size -> 0x0000
	 */
	struct ObscuredQuaternion
	{
	public:
		int32_t                                                    currentCryptoKey;                                        // 0x0000(0x0000)
		struct ObscuredQuaternion_RawEncryptedQuaternion           hiddenValue;                                             // 0x0004(0x0000)
		bool                                                       inited;                                                  // 0x0014(0x0000)
		struct Quaternion                                          fakeValue;                                               // 0x0018(0x0000)
		bool                                                       fakeValueActive;                                         // 0x0028(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.ObscuredTypes.ObscuredSByte
	 * Size -> 0x0000
	 */
	struct ObscuredSByte
	{
	public:
		int8_t                                                     currentCryptoKey;                                        // 0x0000(0x0000)
		int8_t                                                     hiddenValue;                                             // 0x0001(0x0000)
		bool                                                       inited;                                                  // 0x0002(0x0000)
		int8_t                                                     fakeValue;                                               // 0x0003(0x0000)
		bool                                                       fakeValueActive;                                         // 0x0004(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.ObscuredTypes.ObscuredShort
	 * Size -> 0x0000
	 */
	struct ObscuredShort
	{
	public:
		int16_t                                                    currentCryptoKey;                                        // 0x0000(0x0000)
		int16_t                                                    hiddenValue;                                             // 0x0002(0x0000)
		bool                                                       inited;                                                  // 0x0004(0x0000)
		int16_t                                                    fakeValue;                                               // 0x0006(0x0000)
		bool                                                       fakeValueActive;                                         // 0x0008(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.ObscuredTypes.ObscuredULong
	 * Size -> 0x0000
	 */
	struct ObscuredULong
	{
	public:
		uint64_t                                                   currentCryptoKey;                                        // 0x0000(0x0000)
		uint64_t                                                   hiddenValue;                                             // 0x0008(0x0000)
		bool                                                       inited;                                                  // 0x0010(0x0000)
		uint64_t                                                   fakeValue;                                               // 0x0018(0x0000)
		bool                                                       fakeValueActive;                                         // 0x0020(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.ObscuredTypes.ObscuredUShort
	 * Size -> 0x0000
	 */
	struct ObscuredUShort
	{
	public:
		uint16_t                                                   currentCryptoKey;                                        // 0x0000(0x0000)
		uint16_t                                                   hiddenValue;                                             // 0x0002(0x0000)
		bool                                                       inited;                                                  // 0x0004(0x0000)
		uint16_t                                                   fakeValue;                                               // 0x0006(0x0000)
		bool                                                       fakeValueActive;                                         // 0x0008(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2+RawEncryptedVector2
	 * Size -> 0x0000
	 */
	struct ObscuredVector2_RawEncryptedVector2
	{
	public:
		int32_t                                                    x;                                                       // 0x0000(0x0000)
		int32_t                                                    y;                                                       // 0x0004(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2
	 * Size -> 0x0000
	 */
	struct ObscuredVector2
	{
	public:
		int32_t                                                    currentCryptoKey;                                        // 0x0000(0x0000)
		struct ObscuredVector2_RawEncryptedVector2                 hiddenValue;                                             // 0x0004(0x0000)
		bool                                                       inited;                                                  // 0x000C(0x0000)
		struct Vector2                                             fakeValue;                                               // 0x0010(0x0000)
		bool                                                       fakeValueActive;                                         // 0x0018(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2Int+RawEncryptedVector2Int
	 * Size -> 0x0000
	 */
	struct ObscuredVector2Int_RawEncryptedVector2Int
	{
	public:
		int32_t                                                    x;                                                       // 0x0000(0x0000)
		int32_t                                                    y;                                                       // 0x0004(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2Int
	 * Size -> 0x0000
	 */
	struct ObscuredVector2Int
	{
	public:
		int32_t                                                    currentCryptoKey;                                        // 0x0000(0x0000)
		struct ObscuredVector2Int_RawEncryptedVector2Int           hiddenValue;                                             // 0x0004(0x0000)
		bool                                                       inited;                                                  // 0x000C(0x0000)
		struct Vector2Int                                          fakeValue;                                               // 0x0010(0x0000)
		bool                                                       fakeValueActive;                                         // 0x0018(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3+RawEncryptedVector3
	 * Size -> 0x0000
	 */
	struct ObscuredVector3_RawEncryptedVector3
	{
	public:
		int32_t                                                    x;                                                       // 0x0000(0x0000)
		int32_t                                                    y;                                                       // 0x0004(0x0000)
		int32_t                                                    z;                                                       // 0x0008(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3
	 * Size -> 0x0000
	 */
	struct ObscuredVector3
	{
	public:
		int32_t                                                    currentCryptoKey;                                        // 0x0000(0x0000)
		struct ObscuredVector3_RawEncryptedVector3                 hiddenValue;                                             // 0x0004(0x0000)
		bool                                                       inited;                                                  // 0x0010(0x0000)
		struct Vector3                                             fakeValue;                                               // 0x0014(0x0000)
		bool                                                       fakeValueActive;                                         // 0x0020(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3Int+RawEncryptedVector3Int
	 * Size -> 0x0000
	 */
	struct ObscuredVector3Int_RawEncryptedVector3Int
	{
	public:
		int32_t                                                    x;                                                       // 0x0000(0x0000)
		int32_t                                                    y;                                                       // 0x0004(0x0000)
		int32_t                                                    z;                                                       // 0x0008(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3Int
	 * Size -> 0x0000
	 */
	struct ObscuredVector3Int
	{
	public:
		int32_t                                                    currentCryptoKey;                                        // 0x0000(0x0000)
		struct ObscuredVector3Int_RawEncryptedVector3Int           hiddenValue;                                             // 0x0004(0x0000)
		bool                                                       inited;                                                  // 0x0010(0x0000)
		struct Vector3Int                                          fakeValue;                                               // 0x0014(0x0000)
		bool                                                       fakeValueActive;                                         // 0x0020(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.Detectors.TimeCheatingDetector+OnlineTimeResult
	 * Size -> 0x0000
	 */
	struct TimeCheatingDetector_OnlineTimeResult
	{
	public:
		bool                                                       success;                                                 // 0x0000(0x0000)
		class Il2CppString*                                        error;                                                   // 0x0008(0x0000)
		int64_t                                                    errorResponseCode;                                       // 0x0010(0x0000)
		double                                                     onlineSecondsUtc;                                        // 0x0018(0x0000)
		struct DateTime                                            onlineDateTimeUtc;                                       // 0x0020(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.Detectors.TimeCheatingDetector+<GetOnlineTimeTask>d__52
	 * Size -> 0x0000
	 */
	struct TimeCheatingDetector__GetOnlineTimeTask_d__52
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_TimeCheatingDetector_OnlineTimeResult t__builder;                                              // 0x0008(0x0000)
		class Il2CppString*                                        url;                                                     // 0x0020(0x0000)
		int32_t                                                    method;                                                  // 0x0028(0x0000)
		struct TaskAwaiter_TimeCheatingDetector_OnlineTimeResult   u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.Detectors.TimeCheatingDetector+<GetOnlineTimeTask>d__53
	 * Size -> 0x0000
	 */
	struct TimeCheatingDetector__GetOnlineTimeTask_d__53
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_TimeCheatingDetector_OnlineTimeResult t__builder;                                              // 0x0008(0x0000)
		class Uri*                                                 uri;                                                     // 0x0020(0x0000)
		int32_t                                                    method;                                                  // 0x0028(0x0000)
		struct TimeCheatingDetector_OnlineTimeResult               result_5__2;                                             // 0x0030(0x0000)
		struct TaskAwaiter                                         u__1;                                                    // 0x0058(0x0000)
		class UnityWebRequest*                                     wr_5__3;                                                 // 0x0060(0x0000)
		class UnityWebRequestAsyncOperation*                       asyncOperation_5__4;                                     // 0x0068(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.Detectors.TimeCheatingDetector+<ForceCheckTask>d__60
	 * Size -> 0x0000
	 */
	struct TimeCheatingDetector__ForceCheckTask_d__60
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_TimeCheatingDetector_CheckResult t__builder;                                              // 0x0008(0x0000)
		class TimeCheatingDetector*                                _4__this;                                                // 0x0020(0x0000)
		struct TaskAwaiter                                         u__1;                                                    // 0x0028(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=10
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_10_4
	{	};

	/**
	 * Struct ACTk.Runtime.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=32
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_32_7
	{	};

	/**
	 * Struct PhotonVoice.Photon.Voice.Unity.NativeAndroidMicrophoneSettings
	 * Size -> 0x0000
	 */
	struct NativeAndroidMicrophoneSettings
	{
	public:
		bool                                                       AcousticEchoCancellation;                                // 0x0000(0x0000)
		bool                                                       AutomaticGainControl;                                    // 0x0001(0x0000)
		bool                                                       NoiseSuppression;                                        // 0x0002(0x0000)
	};

	/**
	 * Struct PhotonVoice.Photon.Voice.Unity.PlaybackDelaySettings
	 * Size -> 0x0000
	 */
	struct PlaybackDelaySettings
	{
	public:
		int32_t                                                    MinDelaySoft;                                            // 0x0000(0x0000)
		int32_t                                                    MaxDelaySoft;                                            // 0x0004(0x0000)
		int32_t                                                    MaxDelayHard;                                            // 0x0008(0x0000)
	};

	/**
	 * Struct PhotonUnityNetworking.Demos.Photon.Pun.Demo.Hub.DemoHubManager+DemoData
	 * Size -> 0x0000
	 */
	struct DemoHubManager_DemoData
	{
	public:
		class Il2CppString*                                        Title;                                                   // 0x0000(0x0000)
		class Il2CppString*                                        Description;                                             // 0x0008(0x0000)
		class Il2CppString*                                        Scene;                                                   // 0x0010(0x0000)
		class Il2CppString*                                        TutorialLink;                                            // 0x0018(0x0000)
		class Il2CppString*                                        DocLink;                                                 // 0x0020(0x0000)
	};

	/**
	 * Struct PhotonUnityNetworking.Demos.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=512
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_512_3
	{	};

	/**
	 * Struct UnityEngine.IMGUIModule.UnityEngine.EventInterests
	 * Size -> 0x0000
	 */
	struct EventInterests
	{
	public:
		bool                                                       wantsMouseMove_k__BackingField;                          // 0x0000(0x0000)
		bool                                                       wantsMouseEnterLeaveWindow_k__BackingField;              // 0x0001(0x0000)
		bool                                                       wantsLessLayoutEvents_k__BackingField;                   // 0x0002(0x0000)
	};

	/**
	 * Struct UnityEngine.IMGUIModule.UnityEngine.GUIClip+ParentClipScope
	 * Size -> 0x0000
	 */
	struct GUIClip_ParentClipScope
	{
	public:
		bool                                                       m_Disposed;                                              // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.IMGUIModule.UnityEngine.SliderHandler
	 * Size -> 0x0000
	 */
	struct SliderHandler
	{
	public:
		struct Rect                                                position;                                                // 0x0000(0x0000)
		float                                                      currentValue;                                            // 0x0010(0x0000)
		float                                                      size;                                                    // 0x0014(0x0000)
		float                                                      start;                                                   // 0x0018(0x0000)
		float                                                      end;                                                     // 0x001C(0x0000)
		class GUIStyle*                                            slider;                                                  // 0x0020(0x0000)
		class GUIStyle*                                            thumb;                                                   // 0x0028(0x0000)
		class GUIStyle*                                            thumbExtent;                                             // 0x0030(0x0000)
		bool                                                       horiz;                                                   // 0x0038(0x0000)
		int32_t                                                    id;                                                      // 0x003C(0x0000)
	};

	/**
	 * Struct Unity.Timeline.UnityEngine.Timeline.AnimationOutputWeightProcessor+WeightInfo
	 * Size -> 0x0000
	 */
	struct AnimationOutputWeightProcessor_WeightInfo
	{
	public:
		struct Playable                                            mixer;                                                   // 0x0000(0x0000)
		struct Playable                                            parentMixer;                                             // 0x0010(0x0000)
		int32_t                                                    port;                                                    // 0x0020(0x0000)
	};

	/**
	 * Struct Unity.Timeline.UnityEngine.Timeline.TrackAsset+TransientBuildData
	 * Size -> 0x0000
	 */
	struct TrackAsset_TransientBuildData
	{
	public:
		class List_TrackAsset*                                     trackList;                                               // 0x0000(0x0000)
		class List_TimelineClip*                                   clipList;                                                // 0x0008(0x0000)
		class List_IMarker*                                        markerList;                                              // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.Timeline.UnityEngine.Timeline.DiscreteTime
	 * Size -> 0x0000
	 */
	struct DiscreteTime
	{
	public:
		int64_t                                                    m_DiscreteTime;                                          // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.Timeline.UnityEngine.Timeline.IntervalTreeNode
	 * Size -> 0x0000
	 */
	struct IntervalTreeNode
	{
	public:
		int64_t                                                    center;                                                  // 0x0000(0x0000)
		int32_t                                                    first;                                                   // 0x0008(0x0000)
		int32_t                                                    last;                                                    // 0x000C(0x0000)
		int32_t                                                    left;                                                    // 0x0010(0x0000)
		int32_t                                                    right;                                                   // 0x0014(0x0000)
	};

	/**
	 * Struct Unity.Timeline.UnityEngine.Timeline.IntervalTree+Entry<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct IntervalTree_Entry_T
	{
	public:
		int64_t                                                    intervalStart;                                           // 0x0000(0x0000)
		int64_t                                                    intervalEnd;                                             // 0x0000(0x0000)
		class Il2CppObject*                                        item;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.Timeline.UnityEngine.Timeline.MarkerList
	 * Size -> 0x0000
	 */
	struct MarkerList
	{
	public:
		class List_ScriptableObject*                               m_Objects;                                               // 0x0000(0x0000)
		class List_IMarker*                                        m_Cache;                                                 // 0x0008(0x0000)
		bool                                                       m_CacheDirty;                                            // 0x0010(0x0000)
		bool                                                       m_HasNotifications;                                      // 0x0011(0x0000)
	};

	/**
	 * Struct Unity.Timeline.UnityEngine.Timeline.TimeNotificationBehaviour+NotificationEntry
	 * Size -> 0x0000
	 */
	struct TimeNotificationBehaviour_NotificationEntry
	{
	public:
		double                                                     time;                                                    // 0x0000(0x0000)
		class INotification*                                       payload;                                                 // 0x0008(0x0000)
		bool                                                       notificationFired;                                       // 0x0010(0x0000)
		int16_t                                                    flags;                                                   // 0x0012(0x0000)
	};

	/**
	 * Struct PhotonUnityNetworking.Photon.Pun.InstantiateParameters
	 * Size -> 0x0000
	 */
	struct InstantiateParameters
	{
	public:
		class Int32_Array*                                         viewIDs;                                                 // 0x0000(0x0000)
		uint8_t                                                    objLevelPrefix;                                          // 0x0008(0x0000)
		class Object_Array*                                        data;                                                    // 0x0010(0x0000)
		uint8_t                                                    group;                                                   // 0x0018(0x0000)
		struct Quaternion                                          rotation;                                                // 0x001C(0x0000)
		struct Vector3                                             position;                                                // 0x002C(0x0000)
		class Il2CppString*                                        prefabName;                                              // 0x0038(0x0000)
		class Player*                                              creator;                                                 // 0x0040(0x0000)
		int32_t                                                    timestamp;                                               // 0x0048(0x0000)
	};

	/**
	 * Struct PhotonUnityNetworking.Photon.Pun.PhotonNetwork+RaiseEventBatch
	 * Size -> 0x0000
	 */
	struct PhotonNetwork_RaiseEventBatch
	{
	public:
		uint8_t                                                    Group;                                                   // 0x0000(0x0000)
		bool                                                       Reliable;                                                // 0x0001(0x0000)
	};

	/**
	 * Struct PhotonUnityNetworking.Photon.Pun.PhotonView+CallbackTargetChange
	 * Size -> 0x0000
	 */
	struct PhotonView_CallbackTargetChange
	{
	public:
		class IPhotonViewCallback*                                 obj;                                                     // 0x0000(0x0000)
		class Type*                                                type;                                                    // 0x0008(0x0000)
		bool                                                       add;                                                     // 0x0010(0x0000)
	};

	/**
	 * Struct PhotonUnityNetworking.Photon.Pun.PhotonMessageInfo
	 * Size -> 0x0000
	 */
	struct PhotonMessageInfo
	{
	public:
		int32_t                                                    timeInt;                                                 // 0x0000(0x0000)
		class Player*                                              Sender;                                                  // 0x0008(0x0000)
		class PhotonView*                                          photonView;                                              // 0x0010(0x0000)
	};

	/**
	 * Struct PhotonRealtime.Photon.Realtime.PhotonPortDefinition
	 * Size -> 0x0000
	 */
	struct PhotonPortDefinition
	{
	public:
		uint16_t                                                   NameServerPort;                                          // 0x0000(0x0000)
		uint16_t                                                   MasterServerPort;                                        // 0x0002(0x0000)
		uint16_t                                                   GameServerPort;                                          // 0x0004(0x0000)
	};

	/**
	 * Struct PhotonRealtime.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=13
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_13
	{	};

	/**
	 * Struct System.Net.Http.System.Net.Http.MonoWebRequestHandler+<SendAsync>d__99
	 * Size -> 0x0000
	 */
	struct MonoWebRequestHandler__SendAsync_d__99
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_HttpResponseMessage          t__builder;                                              // 0x0008(0x0000)
		class MonoWebRequestHandler*                               _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		class HttpRequestMessage*                                  request;                                                 // 0x0030(0x0000)
		class HttpWebRequest*                                      wrequest_5__2;                                           // 0x0038(0x0000)
		class HttpWebResponse*                                     wresponse_5__3;                                          // 0x0040(0x0000)
		struct CancellationTokenRegistration                       _7__wrap3;                                               // 0x0048(0x0000)
		class HttpContent*                                         content_5__5;                                            // 0x0060(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0068(0x0000)
		class Stream*                                              stream_5__6;                                             // 0x0078(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_Stream u__2;                                                    // 0x0080(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_WebResponse u__3;                                                    // 0x0090(0x0000)
		struct TaskAwaiter_HttpResponseMessage                     u__4;                                                    // 0x00A0(0x0000)
	};

	/**
	 * Struct System.Net.Http.System.Net.Http.HttpClient+<SendAsyncWorker>d__47
	 * Size -> 0x0000
	 */
	struct HttpClient__SendAsyncWorker_d__47
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_HttpResponseMessage          t__builder;                                              // 0x0008(0x0000)
		class HttpClient*                                          _4__this;                                                // 0x0020(0x0000)
		struct CancellationToken                                   cancellationToken;                                       // 0x0028(0x0000)
		class HttpRequestMessage*                                  request;                                                 // 0x0030(0x0000)
		int32_t                                                    completionOption;                                        // 0x0038(0x0000)
		class CancellationTokenSource*                             lcts_5__2;                                               // 0x0040(0x0000)
		class HttpResponseMessage*                                 response_5__3;                                           // 0x0048(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_HttpResponseMessage u__1;                                                    // 0x0050(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__2;                                                    // 0x0060(0x0000)
	};

	/**
	 * Struct System.Net.Http.System.Net.Http.HttpClient+<GetStreamAsync>d__50
	 * Size -> 0x0000
	 */
	struct HttpClient__GetStreamAsync_d__50
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_Stream                       t__builder;                                              // 0x0008(0x0000)
		class HttpClient*                                          _4__this;                                                // 0x0020(0x0000)
		class Il2CppString*                                        requestUri;                                              // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_HttpResponseMessage u__1;                                                    // 0x0030(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_Stream u__2;                                                    // 0x0040(0x0000)
	};

	/**
	 * Struct System.Net.Http.System.Net.Http.HttpContent+<CreateContentReadStreamAsync>d__12
	 * Size -> 0x0000
	 */
	struct HttpContent__CreateContentReadStreamAsync_d__12
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_Stream                       t__builder;                                              // 0x0008(0x0000)
		class HttpContent*                                         _4__this;                                                // 0x0020(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0028(0x0000)
	};

	/**
	 * Struct System.Net.Http.System.Net.Http.HttpContent+<LoadIntoBufferAsync>d__17
	 * Size -> 0x0000
	 */
	struct HttpContent__LoadIntoBufferAsync_d__17
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class HttpContent*                                         _4__this;                                                // 0x0020(0x0000)
		int64_t                                                    maxBufferSize;                                           // 0x0028(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter       u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct System.Net.Http.System.Net.Http.HttpContent+<ReadAsStreamAsync>d__18
	 * Size -> 0x0000
	 */
	struct HttpContent__ReadAsStreamAsync_d__18
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_Stream                       t__builder;                                              // 0x0008(0x0000)
		class HttpContent*                                         _4__this;                                                // 0x0020(0x0000)
		struct ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_Stream u__1;                                                    // 0x0028(0x0000)
	};

	/**
	 * Struct System.Net.Http.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=127
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_127
	{	};

	/**
	 * Struct Unity.Services.Analytics.Ua2CoreInitializeCallback+<Initialize>d__1
	 * Size -> 0x0000
	 */
	struct Ua2CoreInitializeCallback__Initialize_d__1
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class CoreRegistry*                                        registry;                                                // 0x0020(0x0000)
		struct TaskAwaiter                                         u__1;                                                    // 0x0028(0x0000)
	};

	/**
	 * Struct Unity.Services.Analytics.Unity.Services.Analytics.AnalyticsServiceInstance+<CheckForRequiredConsents>d__1
	 * Size -> 0x0000
	 */
	struct AnalyticsServiceInstance__CheckForRequiredConsents_d__1
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_List_string                  t__builder;                                              // 0x0008(0x0000)
		class AnalyticsServiceInstance*                            _4__this;                                                // 0x0020(0x0000)
		struct TaskAwaiter_GeoIPResponse                           u__1;                                                    // 0x0028(0x0000)
	};

	/**
	 * Struct Unity.Services.Analytics.Unity.Services.Analytics.AnalyticsServiceInstance+<Initialize>d__53
	 * Size -> 0x0000
	 */
	struct AnalyticsServiceInstance__Initialize_d__53
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class AnalyticsServiceInstance*                            _4__this;                                                // 0x0020(0x0000)
		class ICloudProjectId*                                     cloudProjectId;                                          // 0x0028(0x0000)
		class IInstallationId*                                     installId;                                               // 0x0030(0x0000)
		class IPlayerId*                                           playerId;                                                // 0x0038(0x0000)
		class Il2CppString*                                        environment;                                             // 0x0040(0x0000)
		class Il2CppString*                                        customAnalyticsId;                                       // 0x0048(0x0000)
		struct TaskAwaiter                                         u__1;                                                    // 0x0050(0x0000)
	};

	/**
	 * Struct Unity.Services.Analytics.Unity.Services.Analytics.AnalyticsServiceInstance+<InitializeUser>d__54
	 * Size -> 0x0000
	 */
	struct AnalyticsServiceInstance__InitializeUser_d__54
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class AnalyticsServiceInstance*                            _4__this;                                                // 0x0020(0x0000)
		struct TaskAwaiter_GeoIPResponse                           u__1;                                                    // 0x0028(0x0000)
	};

	/**
	 * Struct Unity.Services.Analytics.Unity.Services.Analytics.AnalyticsServiceInstance+<SetAnalyticsEnabled>d__62
	 * Size -> 0x0000
	 */
	struct AnalyticsServiceInstance__SetAnalyticsEnabled_d__62
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		bool                                                       enabled;                                                 // 0x0020(0x0000)
		class AnalyticsServiceInstance*                            _4__this;                                                // 0x0028(0x0000)
		struct TaskAwaiter                                         u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct Unity.Services.Analytics.Unity.Services.Analytics.AdImpressionParameters
	 * Size -> 0x0000
	 */
	struct AdImpressionParameters
	{
	public:
		int32_t                                                    AdCompletionStatus;                                      // 0x0000(0x0000)
		int32_t                                                    AdProvider;                                              // 0x0004(0x0000)
		class Il2CppString*                                        PlacementID;                                             // 0x0008(0x0000)
		class Il2CppString*                                        PlacementName;                                           // 0x0010(0x0000)
		struct Nullable_AdPlacementType                            PlacementType;                                           // 0x0018(0x0000)
		struct Nullable_double                                     AdEcpmUsd;                                               // 0x0020(0x0000)
		class Il2CppString*                                        SdkVersion;                                              // 0x0030(0x0000)
		class Il2CppString*                                        AdImpressionID;                                          // 0x0038(0x0000)
		class Il2CppString*                                        AdStoreDstID;                                            // 0x0040(0x0000)
		class Il2CppString*                                        AdMediaType;                                             // 0x0048(0x0000)
		struct Nullable_long                                       AdTimeWatchedMs;                                         // 0x0050(0x0000)
		struct Nullable_long                                       AdTimeCloseButtonShownMs;                                // 0x0060(0x0000)
		struct Nullable_long                                       AdLengthMs;                                              // 0x0070(0x0000)
		struct Nullable_bool                                       AdHasClicked;                                            // 0x0080(0x0000)
		class Il2CppString*                                        AdSource;                                                // 0x0088(0x0000)
		class Il2CppString*                                        AdStatusCallback;                                        // 0x0090(0x0000)
	};

	/**
	 * Struct Unity.Services.Analytics.Unity.Services.Analytics.Item
	 * Size -> 0x0000
	 */
	struct Item
	{
	public:
		class Il2CppString*                                        ItemName;                                                // 0x0000(0x0000)
		class Il2CppString*                                        ItemType;                                                // 0x0008(0x0000)
		int64_t                                                    ItemAmount;                                              // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.Services.Analytics.Unity.Services.Analytics.Product
	 * Size -> 0x0000
	 */
	struct Product
	{
	public:
		struct Nullable_RealCurrency                               RealCurrency;                                            // 0x0000(0x0000)
		class List_VirtualCurrency*                                VirtualCurrencies;                                       // 0x0018(0x0000)
		class List_Item*                                           Items;                                                   // 0x0020(0x0000)
	};

	/**
	 * Struct Unity.Services.Analytics.Unity.Services.Analytics.TransactionParameters
	 * Size -> 0x0000
	 */
	struct TransactionParameters
	{
	public:
		class Il2CppString*                                        PaymentCountry;                                          // 0x0000(0x0000)
		class Il2CppString*                                        ProductID;                                               // 0x0008(0x0000)
		struct Nullable_long                                       RevenueValidated;                                        // 0x0010(0x0000)
		class Il2CppString*                                        TransactionID;                                           // 0x0020(0x0000)
		class Il2CppString*                                        TransactionReceipt;                                      // 0x0028(0x0000)
		class Il2CppString*                                        TransactionReceiptSignature;                             // 0x0030(0x0000)
		struct Nullable_TransactionServer                          TransactionServer;                                       // 0x0038(0x0000)
		class Il2CppString*                                        TransactorID;                                            // 0x0040(0x0000)
		class Il2CppString*                                        StoreItemSkuID;                                          // 0x0048(0x0000)
		class Il2CppString*                                        StoreItemID;                                             // 0x0050(0x0000)
		class Il2CppString*                                        StoreID;                                                 // 0x0058(0x0000)
		class Il2CppString*                                        StoreSourceID;                                           // 0x0060(0x0000)
		class Il2CppString*                                        TransactionName;                                         // 0x0068(0x0000)
		int32_t                                                    TransactionType;                                         // 0x0070(0x0000)
		struct Product                                             ProductsReceived;                                        // 0x0078(0x0000)
		struct Product                                             ProductsSpent;                                           // 0x00A0(0x0000)
	};

	/**
	 * Struct Unity.Services.Analytics.Unity.Services.Analytics.VirtualCurrency
	 * Size -> 0x0000
	 */
	struct VirtualCurrency
	{
	public:
		class Il2CppString*                                        VirtualCurrencyName;                                     // 0x0000(0x0000)
		int32_t                                                    VirtualCurrencyType;                                     // 0x0008(0x0000)
		int64_t                                                    VirtualCurrencyAmount;                                   // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.Services.Analytics.Unity.Services.Analytics.TransactionFailedParameters
	 * Size -> 0x0000
	 */
	struct TransactionFailedParameters
	{
	public:
		class Il2CppString*                                        PaymentCountry;                                          // 0x0000(0x0000)
		struct Nullable_long                                       EngagementID;                                            // 0x0008(0x0000)
		struct Nullable_bool                                       IsInitiator;                                             // 0x0018(0x0000)
		class Il2CppString*                                        StoreID;                                                 // 0x0020(0x0000)
		class Il2CppString*                                        StoreSourceID;                                           // 0x0028(0x0000)
		class Il2CppString*                                        TransactionID;                                           // 0x0030(0x0000)
		class Il2CppString*                                        StoreItemID;                                             // 0x0038(0x0000)
		class Il2CppString*                                        AmazonUserID;                                            // 0x0040(0x0000)
		class Il2CppString*                                        StoreItemSkuID;                                          // 0x0048(0x0000)
		class Il2CppString*                                        ProductID;                                               // 0x0050(0x0000)
		class Il2CppString*                                        GameStoreID;                                             // 0x0058(0x0000)
		struct Nullable_TransactionServer                          TransactionServer;                                       // 0x0060(0x0000)
		struct Nullable_long                                       RevenueValidated;                                        // 0x0068(0x0000)
		class Il2CppString*                                        TransactionName;                                         // 0x0078(0x0000)
		int32_t                                                    TransactionType;                                         // 0x0080(0x0000)
		struct Product                                             ProductsReceived;                                        // 0x0088(0x0000)
		struct Product                                             ProductsSpent;                                           // 0x00B0(0x0000)
		class Il2CppString*                                        FailureReason;                                           // 0x00D8(0x0000)
	};

	/**
	 * Struct Unity.Services.Analytics.Unity.Services.Analytics.Events+Item
	 * Size -> 0x0000
	 */
	struct Events_Item
	{
	public:
		class Il2CppString*                                        itemName;                                                // 0x0000(0x0000)
		class Il2CppString*                                        itemType;                                                // 0x0008(0x0000)
		int64_t                                                    itemAmount;                                              // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.Services.Analytics.Unity.Services.Analytics.Events+VirtualCurrency
	 * Size -> 0x0000
	 */
	struct Events_VirtualCurrency
	{
	public:
		class Il2CppString*                                        virtualCurrencyName;                                     // 0x0000(0x0000)
		class Il2CppString*                                        virtualCurrencyType;                                     // 0x0008(0x0000)
		int64_t                                                    virtualCurrencyAmount;                                   // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.Services.Analytics.Unity.Services.Analytics.Events+Product
	 * Size -> 0x0000
	 */
	struct Events_Product
	{
	public:
		struct Nullable_Events_RealCurrency                        realCurrency;                                            // 0x0000(0x0000)
		class List_Events_VirtualCurrency*                         virtualCurrencies;                                       // 0x0018(0x0000)
		class List_Events_Item*                                    items;                                                   // 0x0020(0x0000)
	};

	/**
	 * Struct Unity.Services.Analytics.Unity.Services.Analytics.Events+TransactionParameters
	 * Size -> 0x0000
	 */
	struct Events_TransactionParameters
	{
	public:
		struct Nullable_bool                                       isInitiator;                                             // 0x0000(0x0000)
		class Il2CppString*                                        paymentCountry;                                          // 0x0008(0x0000)
		class Il2CppString*                                        productID;                                               // 0x0010(0x0000)
		struct Nullable_long                                       revenueValidated;                                        // 0x0018(0x0000)
		class Il2CppString*                                        transactionID;                                           // 0x0028(0x0000)
		class Il2CppString*                                        transactionReceipt;                                      // 0x0030(0x0000)
		class Il2CppString*                                        transactionReceiptSignature;                             // 0x0038(0x0000)
		struct Nullable_Events_TransactionServer                   transactionServer;                                       // 0x0040(0x0000)
		class Il2CppString*                                        transactorID;                                            // 0x0048(0x0000)
		class Il2CppString*                                        storeItemSkuID;                                          // 0x0050(0x0000)
		class Il2CppString*                                        storeItemID;                                             // 0x0058(0x0000)
		class Il2CppString*                                        storeID;                                                 // 0x0060(0x0000)
		class Il2CppString*                                        storeSourceID;                                           // 0x0068(0x0000)
		class Il2CppString*                                        transactionName;                                         // 0x0070(0x0000)
		int32_t                                                    transactionType;                                         // 0x0078(0x0000)
		struct Events_Product                                      productsReceived;                                        // 0x0080(0x0000)
		struct Events_Product                                      productsSpent;                                           // 0x00A8(0x0000)
	};

	/**
	 * Struct Unity.Services.Analytics.Unity.Services.Analytics.Events+<CheckForRequiredConsents>d__4
	 * Size -> 0x0000
	 */
	struct Events__CheckForRequiredConsents_d__4
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_List_string                  t__builder;                                              // 0x0008(0x0000)
		struct TaskAwaiter_List_string                             u__1;                                                    // 0x0020(0x0000)
	};

	/**
	 * Struct Unity.Services.Analytics.Unity.Services.Analytics.Internal.Buffer+Token
	 * Size -> 0x0000
	 */
	struct Buffer_Token
	{
	public:
		class Il2CppString*                                        Name;                                                    // 0x0000(0x0000)
		int32_t                                                    Type;                                                    // 0x0008(0x0000)
		class Il2CppObject*                                        Data;                                                    // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.Services.Analytics.Unity.Services.Analytics.Internal.ConsentTracker+<CheckGeoIP>d__19
	 * Size -> 0x0000
	 */
	struct ConsentTracker__CheckGeoIP_d__19
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_GeoIPResponse                t__builder;                                              // 0x0008(0x0000)
		class ConsentTracker*                                      _4__this;                                                // 0x0020(0x0000)
		struct TaskAwaiter_GeoIPResponse                           u__1;                                                    // 0x0028(0x0000)
	};

	/**
	 * Struct Unity.Services.Analytics.Unity.Services.Analytics.Internal.ConsentTracker+<GetGeoIPResponse>d__33
	 * Size -> 0x0000
	 */
	struct ConsentTracker__GetGeoIPResponse_d__33
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_GeoIPResponse                t__builder;                                              // 0x0008(0x0000)
		class ConsentTracker*                                      _4__this;                                                // 0x0020(0x0000)
		struct TaskAwaiter_GeoIPResponse                           u__1;                                                    // 0x0028(0x0000)
	};

	/**
	 * Struct Unity.Services.Analytics.Unity.Services.Analytics.Internal.GeoAPI+<MakeRequest>d__1
	 * Size -> 0x0000
	 */
	struct GeoAPI__MakeRequest_d__1
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_GeoIPResponse                t__builder;                                              // 0x0008(0x0000)
		class GeoAPI*                                              _4__this;                                                // 0x0020(0x0000)
		struct TaskAwaiter_UnityWebRequestAsyncOperation           u__1;                                                    // 0x0028(0x0000)
	};

	/**
	 * Struct Unity.Services.Analytics.Unity.Services.Analytics.Internal.Dispatcher+<Flush>d__11
	 * Size -> 0x0000
	 */
	struct Dispatcher__Flush_d__11
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class Dispatcher*                                          _4__this;                                                // 0x0020(0x0000)
		struct TaskAwaiter                                         u__1;                                                    // 0x0028(0x0000)
	};

	/**
	 * Struct Unity.Services.Analytics.Unity.Services.Analytics.Internal.Dispatcher+<FlushBufferToService>d__13
	 * Size -> 0x0000
	 */
	struct Dispatcher__FlushBufferToService_d__13
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class Dispatcher*                                          _4__this;                                                // 0x0020(0x0000)
		class Dispatcher___c__DisplayClass13_0*                    _8__1;                                                   // 0x0028(0x0000)
		struct TaskAwaiter_byte                                    u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct Unity.VisualEffectGraph.Runtime.VisualEffectActivationBehaviour+EventState
	 * Size -> 0x0000
	 */
	struct VisualEffectActivationBehaviour_EventState
	{
	public:
		class ExposedProperty*                                     attribute;                                               // 0x0000(0x0000)
		int32_t                                                    type;                                                    // 0x0008(0x0000)
		class Single_Array*                                        values;                                                  // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.VisualEffectGraph.Runtime.UnityEngine.VFX.SDF.MeshToSDFBaker+Triangle
	 * Size -> 0x0000
	 */
	struct MeshToSDFBaker_Triangle
	{
	public:
		struct Vector3                                             a;                                                       // 0x0000(0x0000)
		struct Vector3                                             b;                                                       // 0x000C(0x0000)
		struct Vector3                                             c;                                                       // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.VisualEffectGraph.Runtime.UnityEngine.VFX.Utility.VFXHierarchyAttributeMapBinder+Bone
	 * Size -> 0x0000
	 */
	struct VFXHierarchyAttributeMapBinder_Bone
	{
	public:
		class Transform*                                           source;                                                  // 0x0000(0x0000)
		float                                                      sourceRadius;                                            // 0x0008(0x0000)
		class Transform*                                           target;                                                  // 0x0010(0x0000)
		float                                                      targetRadius;                                            // 0x0018(0x0000)
	};

	/**
	 * Struct PhotonUnityNetworking.Utilities.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=16
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_16_7
	{	};

	/**
	 * Struct PhotonUnityNetworking.Utilities.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=32
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_32_8
	{	};

	/**
	 * Struct PhotonUnityNetworking.Utilities.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=48
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_48_3
	{	};

	/**
	 * Struct clipper_library.ClipperLib.IntPoint
	 * Size -> 0x0000
	 */
	struct IntPoint_1
	{
	public:
		int64_t                                                    X;                                                       // 0x0000(0x0000)
		int64_t                                                    Y;                                                       // 0x0008(0x0000)
	};

	/**
	 * Struct clipper_library.ClipperLib.DoublePoint
	 * Size -> 0x0000
	 */
	struct DoublePoint_1
	{
	public:
		double                                                     X;                                                       // 0x0000(0x0000)
		double                                                     Y;                                                       // 0x0008(0x0000)
	};

	/**
	 * Struct clipper_library.ClipperLib.Int128
	 * Size -> 0x0000
	 */
	struct Int128_1
	{
	public:
		int64_t                                                    hi;                                                      // 0x0000(0x0000)
		uint64_t                                                   lo;                                                      // 0x0008(0x0000)
	};

	/**
	 * Struct clipper_library.ClipperLib.IntRect
	 * Size -> 0x0000
	 */
	struct IntRect_1
	{
	public:
		int64_t                                                    left;                                                    // 0x0000(0x0000)
		int64_t                                                    top;                                                     // 0x0008(0x0000)
		int64_t                                                    right;                                                   // 0x0010(0x0000)
		int64_t                                                    bottom;                                                  // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Internal.Unity.Services.Wire.Internal.ChannelToken
	 * Size -> 0x0000
	 */
	struct ChannelToken
	{
	public:
		class Il2CppString*                                        ChannelName;                                             // 0x0000(0x0000)
		class Il2CppString*                                        Token;                                                   // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Internal.Unity.Services.Qos.Internal.QosResult
	 * Size -> 0x0000
	 */
	struct QosResult
	{
	public:
		class Il2CppString*                                        Region;                                                  // 0x0000(0x0000)
		int32_t                                                    AverageLatencyMs;                                        // 0x0008(0x0000)
		float                                                      PacketLossPercent;                                       // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Internal.Unity.Services.Core.Networking.Internal.HttpOptions
	 * Size -> 0x0000
	 */
	struct HttpOptions
	{
	public:
		int32_t                                                    RequestTimeoutInSeconds;                                 // 0x0000(0x0000)
		int32_t                                                    RedirectLimit;                                           // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Internal.Unity.Services.Core.Networking.Internal.ReadOnlyHttpRequest
	 * Size -> 0x0000
	 */
	struct ReadOnlyHttpRequest
	{
	public:
		class HttpRequest_1*                                       m_Request;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Internal.Unity.Services.Core.Networking.Internal.ReadOnlyHttpResponse
	 * Size -> 0x0000
	 */
	struct ReadOnlyHttpResponse
	{
	public:
		class HttpResponse_1*                                      m_Response;                                              // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Internal.Unity.Services.Core.Internal.AsyncOperationAwaiter
	 * Size -> 0x0000
	 */
	struct AsyncOperationAwaiter
	{
	public:
		class IAsyncOperation*                                     m_Operation;                                             // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Internal.Unity.Services.Core.Internal.AsyncOperationAwaiter<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct AsyncOperationAwaiter_T
	{
	public:
		class IAsyncOperation_T*                                   m_Operation;                                             // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Internal.Unity.Services.Core.Internal.CoreRegistration
	 * Size -> 0x0000
	 */
	struct CoreRegistration
	{
	public:
		class IPackageRegistry*                                    m_Registry;                                              // 0x0000(0x0000)
		int32_t                                                    m_PackageHash;                                           // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Internal.Unity.Services.Core.Internal.CoreRegistryInitializer.<>c__DisplayClass3_0+<<InitializeRegistryAsync>g__InitializePackageAtIndexAsync|0>d
	 * Size -> 0x0000
	 */
	struct CoreRegistryInitializer___c__DisplayClass3_0___InitializeRegistryAsync_g__InitializePackageAtIndexAsync_0_d
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class CoreRegistryInitializer___c__DisplayClass3_0*        _4__this;                                                // 0x0020(0x0000)
		int32_t                                                    index;                                                   // 0x0028(0x0000)
		struct TaskAwaiter                                         u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Internal.Unity.Services.Core.Internal.CoreRegistryInitializer+<InitializeRegistryAsync>d__3
	 * Size -> 0x0000
	 */
	struct CoreRegistryInitializer__InitializeRegistryAsync_d__3
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class CoreRegistryInitializer*                             _4__this;                                                // 0x0020(0x0000)
		class CoreRegistryInitializer___c__DisplayClass3_0*        _8__1;                                                   // 0x0028(0x0000)
		int32_t                                                    i_5__2;                                                  // 0x0030(0x0000)
		struct TaskAwaiter                                         u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Internal.Unity.Services.Core.Internal.DependencyTreeInitializeOrderSorter
	 * Size -> 0x0000
	 */
	struct DependencyTreeInitializeOrderSorter
	{
	public:
		class DependencyTree*                                      Tree;                                                    // 0x0000(0x0000)
		class ICollection_int*                                     Target;                                                  // 0x0008(0x0000)
		class Dictionary_int__DependencyTreeInitializeOrderSorter_ExplorationMark* m_PackageTypeHashExplorationHistory;                     // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Internal.Unity.Services.Core.Internal.CoreDiagnostics+<GetOrCreateDiagnostics>d__21
	 * Size -> 0x0000
	 */
	struct CoreDiagnostics__GetOrCreateDiagnostics_d__21
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_IDiagnostics                 t__builder;                                              // 0x0008(0x0000)
		class CoreDiagnostics*                                     _4__this;                                                // 0x0020(0x0000)
		struct TaskAwaiter_IDiagnosticsFactory                     u__1;                                                    // 0x0028(0x0000)
		struct TaskAwaiter_string                                  u__2;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Internal.Unity.Services.Core.Internal.CoreDiagnostics+<SendCoreDiagnostics>d__27
	 * Size -> 0x0000
	 */
	struct CoreDiagnostics__SendCoreDiagnostics_d__27
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class CoreDiagnostics*                                     _4__this;                                                // 0x0020(0x0000)
		class Il2CppString*                                        diagnosticName;                                          // 0x0028(0x0000)
		class Exception*                                           exception;                                               // 0x0030(0x0000)
		struct TaskAwaiter_IDiagnostics                            u__1;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Internal.Unity.Services.Core.Internal.UnityServicesInitializer+<EnableServicesInitializationAsync>d__1
	 * Size -> 0x0000
	 */
	struct UnityServicesInitializer__EnableServicesInitializationAsync_d__1
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncVoidMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		struct TaskAwaiter                                         u__1;                                                    // 0x0028(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Internal.Unity.Services.Core.Internal.UnityServicesInternal+<InitializeAsync>d__20
	 * Size -> 0x0000
	 */
	struct UnityServicesInternal__InitializeAsync_d__20
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class UnityServicesInternal*                               _4__this;                                                // 0x0020(0x0000)
		class InitializationOptions*                               options;                                                 // 0x0028(0x0000)
		struct TaskAwaiter_object                                  u__1;                                                    // 0x0030(0x0000)
		struct TaskAwaiter                                         u__2;                                                    // 0x0038(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Internal.Unity.Services.Core.Internal.UnityServicesInternal.<>c__DisplayClass22_0+<<InitializeServicesAsync>g__InitializePackagesAsync|1>d
	 * Size -> 0x0000
	 */
	struct UnityServicesInternal___c__DisplayClass22_0___InitializeServicesAsync_g__InitializePackagesAsync_1_d
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class UnityServicesInternal___c__DisplayClass22_0*         _4__this;                                                // 0x0020(0x0000)
		struct TaskAwaiter                                         u__1;                                                    // 0x0028(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Internal.Unity.Services.Core.Internal.UnityServicesInternal+<InitializeServicesAsync>d__22
	 * Size -> 0x0000
	 */
	struct UnityServicesInternal__InitializeServicesAsync_d__22
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class UnityServicesInternal*                               _4__this;                                                // 0x0020(0x0000)
		class UnityServicesInternal___c__DisplayClass22_0*         _8__1;                                                   // 0x0028(0x0000)
		struct TaskAwaiter                                         u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Internal.Unity.Services.Core.Internal.UnityServicesInternal+<EnableInitializationAsync>d__23
	 * Size -> 0x0000
	 */
	struct UnityServicesInternal__EnableInitializationAsync_d__23
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class UnityServicesInternal*                               _4__this;                                                // 0x0020(0x0000)
		struct TaskAwaiter                                         u__1;                                                    // 0x0028(0x0000)
	};

	/**
	 * Struct UnityEngine.AndroidJNIModule.UnityEngine.jvalue
	 * Size -> 0x0000
	 */
	struct jvalue
	{
	public:
		bool                                                       z;                                                       // 0x0000(0x0000)
		int8_t                                                     b;                                                       // 0x0000(0x0000)
		uint16_t                                                   c;                                                       // 0x0000(0x0000)
		int16_t                                                    s;                                                       // 0x0000(0x0000)
		int32_t                                                    i;                                                       // 0x0000(0x0000)
		int64_t                                                    j;                                                       // 0x0000(0x0000)
		float                                                      f;                                                       // 0x0000(0x0000)
		double                                                     d;                                                       // 0x0000(0x0000)
		intptr_t                                                   l;                                                       // 0x0000(0x0000)
	};

	/**
	 * Struct System.Numerics.System.Numerics.BigIntegerCalculator+FastReducer
	 * Size -> 0x0000
	 */
	struct BigIntegerCalculator_FastReducer
	{
	public:
		class UInt32_Array*                                        modulus;                                                 // 0x0000(0x0000)
		class UInt32_Array*                                        mu;                                                      // 0x0008(0x0000)
		class UInt32_Array*                                        q1;                                                      // 0x0010(0x0000)
		class UInt32_Array*                                        q2;                                                      // 0x0018(0x0000)
		int32_t                                                    muLength;                                                // 0x0020(0x0000)
	};

	/**
	 * Struct System.Numerics.System.Numerics.BigIntegerCalculator+BitsBuffer
	 * Size -> 0x0000
	 */
	struct BigIntegerCalculator_BitsBuffer
	{
	public:
		class UInt32_Array*                                        bits;                                                    // 0x0000(0x0000)
		int32_t                                                    length;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct System.Numerics.System.Numerics.BigNumber+BigNumberBuffer
	 * Size -> 0x0000
	 */
	struct BigNumber_BigNumberBuffer
	{
	public:
		class StringBuilder*                                       digits;                                                  // 0x0000(0x0000)
		int32_t                                                    precision;                                               // 0x0008(0x0000)
		int32_t                                                    scale;                                                   // 0x000C(0x0000)
		bool                                                       sign;                                                    // 0x0010(0x0000)
	};

	/**
	 * Struct System.Numerics.System.Numerics.DoubleUlong
	 * Size -> 0x0000
	 */
	struct DoubleUlong
	{
	public:
		double                                                     dbl;                                                     // 0x0000(0x0000)
		uint64_t                                                   uu;                                                      // 0x0000(0x0000)
	};

	/**
	 * Struct System.Numerics.System.Globalization.FormatProvider.Number+NumberBuffer
	 * Size -> 0x0000
	 */
	struct FormatProvider_Number_NumberBuffer
	{
	public:
		int32_t                                                    precision;                                               // 0x0000(0x0000)
		int32_t                                                    scale;                                                   // 0x0004(0x0000)
		bool                                                       sign;                                                    // 0x0008(0x0000)
		uint16_t*                                                  overrideDigits;                                          // 0x0010(0x0000)
	};

	/**
	 * Struct System.Numerics.System.Text.ValueStringBuilder
	 * Size -> 0x0000
	 */
	struct ValueStringBuilder_1
	{
	public:
		class Char_Array*                                          arrayToReturnToPool;                                     // 0x0000(0x0000)
		struct Span_char                                           chars;                                                   // 0x0008(0x0000)
		int32_t                                                    pos;                                                     // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.2D.Animation.Runtime.UnityEngine.U2D.Animation.NativeCustomSlice<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct NativeCustomSlice_T
	{
	public:
		intptr_t                                                   data;                                                    // 0x0000(0x0000)
		int32_t                                                    length;                                                  // 0x0000(0x0000)
		int32_t                                                    stride;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.2D.Animation.Runtime.UnityEngine.U2D.Animation.NativeCustomSliceEnumerator<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct NativeCustomSliceEnumerator_T
	{
	public:
		struct NativeCustomSlice_T                                 nativeCustomSlice;                                       // 0x0000(0x0000)
		int32_t                                                    index;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.2D.Animation.Runtime.UnityEngine.U2D.Animation.SpriteLibrary+CategoryEntrySprite
	 * Size -> 0x0000
	 */
	struct SpriteLibrary_CategoryEntrySprite
	{
	public:
		class Il2CppString*                                        category;                                                // 0x0000(0x0000)
		class Il2CppString*                                        entry;                                                   // 0x0008(0x0000)
		class Sprite*                                              sprite;                                                  // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.2D.Animation.Runtime.UnityEngine.U2D.Animation.PositionVertex
	 * Size -> 0x0000
	 */
	struct PositionVertex
	{
	public:
		struct Vector3                                             position;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.2D.Animation.Runtime.UnityEngine.U2D.Animation.PositionTangentVertex
	 * Size -> 0x0000
	 */
	struct PositionTangentVertex
	{
	public:
		struct Vector3                                             position;                                                // 0x0000(0x0000)
		struct Vector4                                             tangent;                                                 // 0x000C(0x0000)
	};

	/**
	 * Struct UnityEngine.Purchasing.UnityEngine.Purchasing.Telemetry.TelemetryDiagnosticParams
	 * Size -> 0x0000
	 */
	struct TelemetryDiagnosticParams
	{
	public:
		class Il2CppString*                                        name;                                                    // 0x0000(0x0000)
		class Il2CppString*                                        exception;                                               // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.Purchasing.UnityEngine.Purchasing.Telemetry.TelemetryMetricDefinition
	 * Size -> 0x0000
	 */
	struct TelemetryMetricDefinition
	{
	public:
		int32_t                                                    MetricType_k__BackingField;                              // 0x0000(0x0000)
		class Il2CppString*                                        MetricName_k__BackingField;                              // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.Purchasing.UnityEngine.Purchasing.Telemetry.TelemetryMetricParams
	 * Size -> 0x0000
	 */
	struct TelemetryMetricParams
	{
	public:
		int32_t                                                    type;                                                    // 0x0000(0x0000)
		class Il2CppString*                                        name;                                                    // 0x0008(0x0000)
		double                                                     timeSeconds;                                             // 0x0010(0x0000)
	};

	/**
	 * Struct System.Xml.Linq.System.Xml.Linq.XHashtable.XHashtableState+Entry<TValue>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct XHashtable_XHashtableState_Entry_TValue
	{
	public:
		class Il2CppObject*                                        Value;                                                   // 0x0000(0x0000)
		int32_t                                                    HashCode;                                                // 0x0000(0x0000)
		int32_t                                                    Next;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct System.Xml.Linq.System.Xml.Linq.NamespaceCache
	 * Size -> 0x0000
	 */
	struct NamespaceCache
	{
	public:
		class XNamespace*                                          ns;                                                      // 0x0000(0x0000)
		class Il2CppString*                                        namespaceName;                                           // 0x0008(0x0000)
	};

	/**
	 * Struct System.Xml.Linq.System.Xml.Linq.NamespaceResolver
	 * Size -> 0x0000
	 */
	struct NamespaceResolver
	{
	public:
		int32_t                                                    scope;                                                   // 0x0000(0x0000)
		class NamespaceResolver_NamespaceDeclaration*              declaration;                                             // 0x0008(0x0000)
		class NamespaceResolver_NamespaceDeclaration*              rover;                                                   // 0x0010(0x0000)
	};

	/**
	 * Struct System.Xml.Linq.System.Xml.Linq.ElementWriter
	 * Size -> 0x0000
	 */
	struct ElementWriter
	{
	public:
		class XmlWriter*                                           writer;                                                  // 0x0000(0x0000)
		struct NamespaceResolver                                   resolver;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.AnimationModule.UnityEngine.AnimatorClipInfo
	 * Size -> 0x0000
	 */
	struct AnimatorClipInfo
	{
	public:
		int32_t                                                    m_ClipInstanceID;                                        // 0x0000(0x0000)
		float                                                      m_Weight;                                                // 0x0004(0x0000)
	};

	/**
	 * Struct UnityEngine.AnimationModule.UnityEngine.AnimatorStateInfo
	 * Size -> 0x0000
	 */
	struct AnimatorStateInfo
	{
	public:
		int32_t                                                    m_Name;                                                  // 0x0000(0x0000)
		int32_t                                                    m_Path;                                                  // 0x0004(0x0000)
		int32_t                                                    m_FullPath;                                              // 0x0008(0x0000)
		float                                                      m_NormalizedTime;                                        // 0x000C(0x0000)
		float                                                      m_Length;                                                // 0x0010(0x0000)
		float                                                      m_Speed;                                                 // 0x0014(0x0000)
		float                                                      m_SpeedMultiplier;                                       // 0x0018(0x0000)
		int32_t                                                    m_Tag;                                                   // 0x001C(0x0000)
		int32_t                                                    m_Loop;                                                  // 0x0020(0x0000)
	};

	/**
	 * Struct UnityEngine.AnimationModule.UnityEngine.AnimatorTransitionInfo
	 * Size -> 0x0000
	 */
	struct AnimatorTransitionInfo
	{
	public:
		int32_t                                                    m_FullPath;                                              // 0x0000(0x0000)
		int32_t                                                    m_UserName;                                              // 0x0004(0x0000)
		int32_t                                                    m_Name;                                                  // 0x0008(0x0000)
		bool                                                       m_HasFixedDuration;                                      // 0x000C(0x0000)
		float                                                      m_Duration;                                              // 0x0010(0x0000)
		float                                                      m_NormalizedTime;                                        // 0x0014(0x0000)
		bool                                                       m_AnyState;                                              // 0x0018(0x0000)
		int32_t                                                    m_TransitionType;                                        // 0x001C(0x0000)
	};

	/**
	 * Struct UnityEngine.AnimationModule.UnityEngine.SkeletonBone
	 * Size -> 0x0000
	 */
	struct SkeletonBone
	{
	public:
		class Il2CppString*                                        name;                                                    // 0x0000(0x0000)
		class Il2CppString*                                        parentName;                                              // 0x0008(0x0000)
		struct Vector3                                             position;                                                // 0x0010(0x0000)
		struct Quaternion                                          rotation;                                                // 0x001C(0x0000)
		struct Vector3                                             scale;                                                   // 0x002C(0x0000)
	};

	/**
	 * Struct UnityEngine.AnimationModule.UnityEngine.HumanLimit
	 * Size -> 0x0000
	 */
	struct HumanLimit
	{
	public:
		struct Vector3                                             m_Min;                                                   // 0x0000(0x0000)
		struct Vector3                                             m_Max;                                                   // 0x000C(0x0000)
		struct Vector3                                             m_Center;                                                // 0x0018(0x0000)
		float                                                      m_AxisLength;                                            // 0x0024(0x0000)
		int32_t                                                    m_UseDefaultValues;                                      // 0x0028(0x0000)
	};

	/**
	 * Struct UnityEngine.AnimationModule.UnityEngine.HumanBone
	 * Size -> 0x0000
	 */
	struct HumanBone
	{
	public:
		class Il2CppString*                                        m_BoneName;                                              // 0x0000(0x0000)
		class Il2CppString*                                        m_HumanName;                                             // 0x0008(0x0000)
		struct HumanLimit                                          limit;                                                   // 0x0010(0x0000)
	};

	/**
	 * Struct UnityEngine.AnimationModule.UnityEngine.HumanDescription
	 * Size -> 0x0000
	 */
	struct HumanDescription
	{
	public:
		class HumanBone_Array*                                     human;                                                   // 0x0000(0x0000)
		class SkeletonBone_Array*                                  skeleton;                                                // 0x0008(0x0000)
		float                                                      m_ArmTwist;                                              // 0x0010(0x0000)
		float                                                      m_ForeArmTwist;                                          // 0x0014(0x0000)
		float                                                      m_UpperLegTwist;                                         // 0x0018(0x0000)
		float                                                      m_LegTwist;                                              // 0x001C(0x0000)
		float                                                      m_ArmStretch;                                            // 0x0020(0x0000)
		float                                                      m_LegStretch;                                            // 0x0024(0x0000)
		float                                                      m_FeetSpacing;                                           // 0x0028(0x0000)
		float                                                      m_GlobalScale;                                           // 0x002C(0x0000)
		class Il2CppString*                                        m_RootMotionBoneName;                                    // 0x0030(0x0000)
		bool                                                       m_HasTranslationDoF;                                     // 0x0038(0x0000)
		bool                                                       m_HasExtraRoot;                                          // 0x0039(0x0000)
		bool                                                       m_SkeletonHasParents;                                    // 0x003A(0x0000)
	};

	/**
	 * Struct UnityEngine.AnimationModule.UnityEngine.Animations.AnimationClipPlayable
	 * Size -> 0x0000
	 */
	struct AnimationClipPlayable
	{
	public:
		struct PlayableHandle                                      m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.AnimationModule.UnityEngine.Animations.AnimationHumanStream
	 * Size -> 0x0000
	 */
	struct AnimationHumanStream
	{
	public:
		intptr_t                                                   stream;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.AnimationModule.UnityEngine.Animations.AnimationLayerMixerPlayable
	 * Size -> 0x0000
	 */
	struct AnimationLayerMixerPlayable
	{
	public:
		struct PlayableHandle                                      m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.AnimationModule.UnityEngine.Animations.AnimationMixerPlayable
	 * Size -> 0x0000
	 */
	struct AnimationMixerPlayable
	{
	public:
		struct PlayableHandle                                      m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.AnimationModule.UnityEngine.Animations.AnimationMotionXToDeltaPlayable
	 * Size -> 0x0000
	 */
	struct AnimationMotionXToDeltaPlayable
	{
	public:
		struct PlayableHandle                                      m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.AnimationModule.UnityEngine.Animations.AnimationOffsetPlayable
	 * Size -> 0x0000
	 */
	struct AnimationOffsetPlayable
	{
	public:
		struct PlayableHandle                                      m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.AnimationModule.UnityEngine.Animations.AnimationPlayableOutput
	 * Size -> 0x0000
	 */
	struct AnimationPlayableOutput
	{
	public:
		struct PlayableOutputHandle                                m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.AnimationModule.UnityEngine.Animations.AnimationPosePlayable
	 * Size -> 0x0000
	 */
	struct AnimationPosePlayable
	{
	public:
		struct PlayableHandle                                      m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.AnimationModule.UnityEngine.Animations.AnimationRemoveScalePlayable
	 * Size -> 0x0000
	 */
	struct AnimationRemoveScalePlayable
	{
	public:
		struct PlayableHandle                                      m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.AnimationModule.UnityEngine.Animations.AnimationScriptPlayable
	 * Size -> 0x0000
	 */
	struct AnimationScriptPlayable
	{
	public:
		struct PlayableHandle                                      m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.AnimationModule.UnityEngine.Animations.AnimationStream
	 * Size -> 0x0000
	 */
	struct AnimationStream
	{
	public:
		uint32_t                                                   m_AnimatorBindingsVersion;                               // 0x0000(0x0000)
		intptr_t                                                   constant;                                                // 0x0008(0x0000)
		intptr_t                                                   input;                                                   // 0x0010(0x0000)
		intptr_t                                                   output;                                                  // 0x0018(0x0000)
		intptr_t                                                   workspace;                                               // 0x0020(0x0000)
		intptr_t                                                   inputStreamAccessor;                                     // 0x0028(0x0000)
		intptr_t                                                   animationHandleBinder;                                   // 0x0030(0x0000)
	};

	/**
	 * Struct UnityEngine.AnimationModule.UnityEngine.Animations.AnimatorControllerPlayable
	 * Size -> 0x0000
	 */
	struct AnimatorControllerPlayable
	{
	public:
		struct PlayableHandle                                      m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsNativeModule.UnityEngine.Yoga.YogaSize
	 * Size -> 0x0000
	 */
	struct YogaSize
	{
	public:
		float                                                      width;                                                   // 0x0000(0x0000)
		float                                                      height;                                                  // 0x0004(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsNativeModule.UnityEngine.Yoga.YogaValue
	 * Size -> 0x0000
	 */
	struct YogaValue
	{
	public:
		float                                                      value;                                                   // 0x0000(0x0000)
		int32_t                                                    unit;                                                    // 0x0004(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsNativeModule.UnityEngine.UIElements.TextVertex
	 * Size -> 0x0000
	 */
	struct TextVertex_1
	{
	public:
		struct Vector3                                             position;                                                // 0x0000(0x0000)
		struct Color32                                             color;                                                   // 0x000C(0x0000)
		struct Vector2                                             uv0;                                                     // 0x0010(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsNativeModule.UnityEngine.UIElements.UIR.GfxUpdateBufferRange
	 * Size -> 0x0000
	 */
	struct GfxUpdateBufferRange
	{
	public:
		uint32_t                                                   offsetFromWriteStart;                                    // 0x0000(0x0000)
		uint32_t                                                   size;                                                    // 0x0004(0x0000)
		uintptr_t                                                  source;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsNativeModule.UnityEngine.UIElements.UIR.DrawBufferRange
	 * Size -> 0x0000
	 */
	struct DrawBufferRange
	{
	public:
		int32_t                                                    firstIndex;                                              // 0x0000(0x0000)
		int32_t                                                    indexCount;                                              // 0x0004(0x0000)
		int32_t                                                    minIndexVal;                                             // 0x0008(0x0000)
		int32_t                                                    vertsReferenced;                                         // 0x000C(0x0000)
	};

	/**
	 * Struct UnityEngine.AudioModule.UnityEngine.AudioConfiguration
	 * Size -> 0x0000
	 */
	struct AudioConfiguration
	{
	public:
		int32_t                                                    speakerMode;                                             // 0x0000(0x0000)
		int32_t                                                    dspBufferSize;                                           // 0x0004(0x0000)
		int32_t                                                    sampleRate;                                              // 0x0008(0x0000)
		int32_t                                                    numRealVoices;                                           // 0x000C(0x0000)
		int32_t                                                    numVirtualVoices;                                        // 0x0010(0x0000)
	};

	/**
	 * Struct UnityEngine.AudioModule.UnityEngine.Audio.AudioClipPlayable
	 * Size -> 0x0000
	 */
	struct AudioClipPlayable
	{
	public:
		struct PlayableHandle                                      m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.AudioModule.UnityEngine.Audio.AudioMixerPlayable
	 * Size -> 0x0000
	 */
	struct AudioMixerPlayable
	{
	public:
		struct PlayableHandle                                      m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.AudioModule.UnityEngine.Audio.AudioPlayableOutput
	 * Size -> 0x0000
	 */
	struct AudioPlayableOutput
	{
	public:
		struct PlayableOutputHandle                                m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.Physics2DModule.UnityEngine.RaycastHit2D
	 * Size -> 0x0000
	 */
	struct RaycastHit2D
	{
	public:
		struct Vector2                                             m_Centroid;                                              // 0x0000(0x0000)
		struct Vector2                                             m_Point;                                                 // 0x0008(0x0000)
		struct Vector2                                             m_Normal;                                                // 0x0010(0x0000)
		float                                                      m_Distance;                                              // 0x0018(0x0000)
		float                                                      m_Fraction;                                              // 0x001C(0x0000)
		int32_t                                                    m_Collider;                                              // 0x0020(0x0000)
	};

	/**
	 * Struct UnityEngine.Physics2DModule.UnityEngine.ContactFilter2D
	 * Size -> 0x0000
	 */
	struct ContactFilter2D
	{
	public:
		bool                                                       useTriggers;                                             // 0x0000(0x0000)
		bool                                                       useLayerMask;                                            // 0x0001(0x0000)
		bool                                                       useDepth;                                                // 0x0002(0x0000)
		bool                                                       useOutsideDepth;                                         // 0x0003(0x0000)
		bool                                                       useNormalAngle;                                          // 0x0004(0x0000)
		bool                                                       useOutsideNormalAngle;                                   // 0x0005(0x0000)
		struct LayerMask                                           layerMask;                                               // 0x0008(0x0000)
		float                                                      minDepth;                                                // 0x000C(0x0000)
		float                                                      maxDepth;                                                // 0x0010(0x0000)
		float                                                      minNormalAngle;                                          // 0x0014(0x0000)
		float                                                      maxNormalAngle;                                          // 0x0018(0x0000)
	};

	/**
	 * Struct UnityEngine.Physics2DModule.UnityEngine.PhysicsScene2D
	 * Size -> 0x0000
	 */
	struct PhysicsScene2D
	{
	public:
		int32_t                                                    m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.Physics2DModule.UnityEngine.ContactPoint2D
	 * Size -> 0x0000
	 */
	struct ContactPoint2D
	{
	public:
		struct Vector2                                             m_Point;                                                 // 0x0000(0x0000)
		struct Vector2                                             m_Normal;                                                // 0x0008(0x0000)
		struct Vector2                                             m_RelativeVelocity;                                      // 0x0010(0x0000)
		float                                                      m_Separation;                                            // 0x0018(0x0000)
		float                                                      m_NormalImpulse;                                         // 0x001C(0x0000)
		float                                                      m_TangentImpulse;                                        // 0x0020(0x0000)
		int32_t                                                    m_Collider;                                              // 0x0024(0x0000)
		int32_t                                                    m_OtherCollider;                                         // 0x0028(0x0000)
		int32_t                                                    m_Rigidbody;                                             // 0x002C(0x0000)
		int32_t                                                    m_OtherRigidbody;                                        // 0x0030(0x0000)
		int32_t                                                    m_Enabled;                                               // 0x0034(0x0000)
	};

	/**
	 * Struct UnityEngine.PhysicsModule.UnityEngine.ModifiableContactPair
	 * Size -> 0x0000
	 */
	struct ModifiableContactPair
	{
	public:
		intptr_t                                                   actor;                                                   // 0x0000(0x0000)
		intptr_t                                                   otherActor;                                              // 0x0008(0x0000)
		intptr_t                                                   shape;                                                   // 0x0010(0x0000)
		intptr_t                                                   otherShape;                                              // 0x0018(0x0000)
		struct Quaternion                                          rotation;                                                // 0x0020(0x0000)
		struct Vector3                                             position;                                                // 0x0030(0x0000)
		struct Quaternion                                          otherRotation;                                           // 0x003C(0x0000)
		struct Vector3                                             otherPosition;                                           // 0x004C(0x0000)
		int32_t                                                    numContacts;                                             // 0x0058(0x0000)
		intptr_t                                                   contacts;                                                // 0x0060(0x0000)
	};

	/**
	 * Struct UnityEngine.PhysicsModule.UnityEngine.RaycastHit
	 * Size -> 0x0000
	 */
	struct RaycastHit
	{
	public:
		struct Vector3                                             m_Point;                                                 // 0x0000(0x0000)
		struct Vector3                                             m_Normal;                                                // 0x000C(0x0000)
		uint32_t                                                   m_FaceID;                                                // 0x0018(0x0000)
		float                                                      m_Distance;                                              // 0x001C(0x0000)
		struct Vector2                                             m_UV;                                                    // 0x0020(0x0000)
		int32_t                                                    m_Collider;                                              // 0x0028(0x0000)
	};

	/**
	 * Struct UnityEngine.PhysicsModule.UnityEngine.ContactPoint
	 * Size -> 0x0000
	 */
	struct ContactPoint
	{
	public:
		struct Vector3                                             m_Point;                                                 // 0x0000(0x0000)
		struct Vector3                                             m_Normal;                                                // 0x000C(0x0000)
		int32_t                                                    m_ThisColliderInstanceID;                                // 0x0018(0x0000)
		int32_t                                                    m_OtherColliderInstanceID;                               // 0x001C(0x0000)
		float                                                      m_Separation;                                            // 0x0020(0x0000)
	};

	/**
	 * Struct UnityEngine.PhysicsModule.UnityEngine.PhysicsScene
	 * Size -> 0x0000
	 */
	struct PhysicsScene
	{
	public:
		int32_t                                                    m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreFontEngineModule.UnityEngine.TextCore.FaceInfo
	 * Size -> 0x0000
	 */
	struct FaceInfo
	{
	public:
		int32_t                                                    m_FaceIndex;                                             // 0x0000(0x0000)
		class Il2CppString*                                        m_FamilyName;                                            // 0x0008(0x0000)
		class Il2CppString*                                        m_StyleName;                                             // 0x0010(0x0000)
		int32_t                                                    m_PointSize;                                             // 0x0018(0x0000)
		float                                                      m_Scale;                                                 // 0x001C(0x0000)
		float                                                      m_LineHeight;                                            // 0x0020(0x0000)
		float                                                      m_AscentLine;                                            // 0x0024(0x0000)
		float                                                      m_CapLine;                                               // 0x0028(0x0000)
		float                                                      m_MeanLine;                                              // 0x002C(0x0000)
		float                                                      m_Baseline;                                              // 0x0030(0x0000)
		float                                                      m_DescentLine;                                           // 0x0034(0x0000)
		float                                                      m_SuperscriptOffset;                                     // 0x0038(0x0000)
		float                                                      m_SuperscriptSize;                                       // 0x003C(0x0000)
		float                                                      m_SubscriptOffset;                                       // 0x0040(0x0000)
		float                                                      m_SubscriptSize;                                         // 0x0044(0x0000)
		float                                                      m_UnderlineOffset;                                       // 0x0048(0x0000)
		float                                                      m_UnderlineThickness;                                    // 0x004C(0x0000)
		float                                                      m_StrikethroughOffset;                                   // 0x0050(0x0000)
		float                                                      m_StrikethroughThickness;                                // 0x0054(0x0000)
		float                                                      m_TabWidth;                                              // 0x0058(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreFontEngineModule.UnityEngine.TextCore.GlyphRect
	 * Size -> 0x0000
	 */
	struct GlyphRect
	{
	public:
		int32_t                                                    m_X;                                                     // 0x0000(0x0000)
		int32_t                                                    m_Y;                                                     // 0x0004(0x0000)
		int32_t                                                    m_Width;                                                 // 0x0008(0x0000)
		int32_t                                                    m_Height;                                                // 0x000C(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreFontEngineModule.UnityEngine.TextCore.GlyphMetrics
	 * Size -> 0x0000
	 */
	struct GlyphMetrics
	{
	public:
		float                                                      m_Width;                                                 // 0x0000(0x0000)
		float                                                      m_Height;                                                // 0x0004(0x0000)
		float                                                      m_HorizontalBearingX;                                    // 0x0008(0x0000)
		float                                                      m_HorizontalBearingY;                                    // 0x000C(0x0000)
		float                                                      m_HorizontalAdvance;                                     // 0x0010(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreFontEngineModule.UnityEngine.TextCore.LowLevel.FontReference
	 * Size -> 0x0000
	 */
	struct FontReference
	{
	public:
		class Il2CppString*                                        familyName;                                              // 0x0000(0x0000)
		class Il2CppString*                                        styleName;                                               // 0x0008(0x0000)
		int32_t                                                    faceIndex;                                               // 0x0010(0x0000)
		class Il2CppString*                                        filePath;                                                // 0x0018(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreFontEngineModule.UnityEngine.TextCore.LowLevel.FontEngineUtilities
	 * Size -> 0x0000
	 */
	struct FontEngineUtilities
	{	};

	/**
	 * Struct UnityEngine.TextCoreFontEngineModule.UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct
	 * Size -> 0x0000
	 */
	struct GlyphMarshallingStruct
	{
	public:
		uint32_t                                                   index;                                                   // 0x0000(0x0000)
		struct GlyphMetrics                                        metrics;                                                 // 0x0004(0x0000)
		struct GlyphRect                                           glyphRect;                                               // 0x0018(0x0000)
		float                                                      scale;                                                   // 0x0028(0x0000)
		int32_t                                                    atlasIndex;                                              // 0x002C(0x0000)
	};

	/**
	 * Struct UnityEngine.TextCoreFontEngineModule.UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord
	 * Size -> 0x0000
	 */
	struct GlyphPairAdjustmentRecord
	{
	public:
		struct GlyphAdjustmentRecord                               m_FirstAdjustmentRecord;                                 // 0x0000(0x0000)
		struct GlyphAdjustmentRecord                               m_SecondAdjustmentRecord;                                // 0x0014(0x0000)
		int32_t                                                    m_FeatureLookupFlags;                                    // 0x0028(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Telemetry.Unity.Services.Core.Telemetry.Internal.MetricsHandler+<>c__DisplayClass1_0
	 * Size -> 0x0000
	 */
	struct MetricsHandler___c__DisplayClass1_0
	{
	public:
		class CachedPayload_MetricsPayload*                        persistedCache;                                          // 0x0000(0x0000)
		class MetricsHandler*                                      _4__this;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Telemetry.Unity.Services.Core.Telemetry.Internal.Diagnostic
	 * Size -> 0x0000
	 */
	struct Diagnostic
	{
	public:
		class IDictionary_string__string*                          Content;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Telemetry.Unity.Services.Core.Telemetry.Internal.DiagnosticsPayload
	 * Size -> 0x0000
	 */
	struct DiagnosticsPayload
	{
	public:
		class List_Diagnostic*                                     Diagnostics;                                             // 0x0000(0x0000)
		class Dictionary_string__string*                           CommonTags;                                              // 0x0008(0x0000)
		class Dictionary_string__string*                           DiagnosticsCommonTags;                                   // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Telemetry.Unity.Services.Core.Telemetry.Internal.Metric
	 * Size -> 0x0000
	 */
	struct Metric
	{
	public:
		class Il2CppString*                                        Name;                                                    // 0x0000(0x0000)
		double                                                     Value;                                                   // 0x0008(0x0000)
		int32_t                                                    Type;                                                    // 0x0010(0x0000)
		class IDictionary_string__string*                          Tags;                                                    // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Telemetry.Unity.Services.Core.Telemetry.Internal.MetricsPayload
	 * Size -> 0x0000
	 */
	struct MetricsPayload
	{
	public:
		class List_Metric*                                         Metrics;                                                 // 0x0000(0x0000)
		class Dictionary_string__string*                           CommonTags;                                              // 0x0008(0x0000)
		class Dictionary_string__string*                           MetricsCommonTags;                                       // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Telemetry.Unity.Services.Core.Telemetry.Internal.WebRequest
	 * Size -> 0x0000
	 */
	struct WebRequest_1
	{
	public:
		int32_t                                                    Result;                                                  // 0x0000(0x0000)
		class Il2CppString*                                        ErrorMessage;                                            // 0x0008(0x0000)
		class Il2CppString*                                        ErrorBody;                                               // 0x0010(0x0000)
		int64_t                                                    ResponseCode;                                            // 0x0018(0x0000)
	};

	/**
	 * Struct UnityEngine.XRModule.UnityEngine.XR.XRNodeState
	 * Size -> 0x0000
	 */
	struct XRNodeState
	{
	public:
		int32_t                                                    m_Type;                                                  // 0x0000(0x0000)
		int32_t                                                    m_AvailableFields;                                       // 0x0004(0x0000)
		struct Vector3                                             m_Position;                                              // 0x0008(0x0000)
		struct Quaternion                                          m_Rotation;                                              // 0x0014(0x0000)
		struct Vector3                                             m_Velocity;                                              // 0x0024(0x0000)
		struct Vector3                                             m_AngularVelocity;                                       // 0x0030(0x0000)
		struct Vector3                                             m_Acceleration;                                          // 0x003C(0x0000)
		struct Vector3                                             m_AngularAcceleration;                                   // 0x0048(0x0000)
		int32_t                                                    m_Tracked;                                               // 0x0054(0x0000)
		uint64_t                                                   m_UniqueID;                                              // 0x0058(0x0000)
	};

	/**
	 * Struct UnityEngine.XRModule.UnityEngine.XR.InputFeatureUsage
	 * Size -> 0x0000
	 */
	struct InputFeatureUsage
	{
	public:
		class Il2CppString*                                        m_Name;                                                  // 0x0000(0x0000)
		uint32_t                                                   m_InternalType;                                          // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.XRModule.UnityEngine.XR.InputDevice
	 * Size -> 0x0000
	 */
	struct InputDevice_1
	{
	public:
		uint64_t                                                   m_DeviceId;                                              // 0x0000(0x0000)
		bool                                                       m_Initialized;                                           // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.XRModule.UnityEngine.XR.Hand
	 * Size -> 0x0000
	 */
	struct Hand
	{
	public:
		uint64_t                                                   m_DeviceId;                                              // 0x0000(0x0000)
		uint32_t                                                   m_FeatureIndex;                                          // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.XRModule.UnityEngine.XR.Eyes
	 * Size -> 0x0000
	 */
	struct Eyes_1
	{
	public:
		uint64_t                                                   m_DeviceId;                                              // 0x0000(0x0000)
		uint32_t                                                   m_FeatureIndex;                                          // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.XRModule.UnityEngine.XR.Bone
	 * Size -> 0x0000
	 */
	struct Bone_2
	{
	public:
		uint64_t                                                   m_DeviceId;                                              // 0x0000(0x0000)
		uint32_t                                                   m_FeatureIndex;                                          // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.XRModule.UnityEngine.XR.XRDisplaySubsystem+XRBlitParams
	 * Size -> 0x0000
	 */
	struct XRDisplaySubsystem_XRBlitParams
	{
	public:
		class RenderTexture*                                       srcTex;                                                  // 0x0000(0x0000)
		int32_t                                                    srcTexArraySlice;                                        // 0x0008(0x0000)
		struct Rect                                                srcRect;                                                 // 0x000C(0x0000)
		struct Rect                                                destRect;                                                // 0x001C(0x0000)
	};

	/**
	 * Struct UnityEngine.XRModule.UnityEngine.XR.XRDisplaySubsystem+XRMirrorViewBlitDesc
	 * Size -> 0x0000
	 */
	struct XRDisplaySubsystem_XRMirrorViewBlitDesc
	{
	public:
		intptr_t                                                   displaySubsystemInstance;                                // 0x0000(0x0000)
		bool                                                       nativeBlitAvailable;                                     // 0x0008(0x0000)
		bool                                                       nativeBlitInvalidStates;                                 // 0x0009(0x0000)
		int32_t                                                    blitParamsCount;                                         // 0x000C(0x0000)
	};

	/**
	 * Struct UnityEngine.XRModule.UnityEngine.XR.MeshId
	 * Size -> 0x0000
	 */
	struct MeshId
	{
	public:
		uint64_t                                                   m_SubId1;                                                // 0x0000(0x0000)
		uint64_t                                                   m_SubId2;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.XRModule.UnityEngine.XR.MeshGenerationResult
	 * Size -> 0x0000
	 */
	struct MeshGenerationResult
	{
	public:
		struct MeshId                                              MeshId_k__BackingField;                                  // 0x0000(0x0000)
		class Mesh_1*                                              Mesh_k__BackingField;                                    // 0x0010(0x0000)
		class MeshCollider*                                        MeshCollider_k__BackingField;                            // 0x0018(0x0000)
		int32_t                                                    Status_k__BackingField;                                  // 0x0020(0x0000)
		int32_t                                                    Attributes_k__BackingField;                              // 0x0024(0x0000)
		uint64_t                                                   Timestamp_k__BackingField;                               // 0x0028(0x0000)
		struct Vector3                                             Position_k__BackingField;                                // 0x0030(0x0000)
		struct Quaternion                                          Rotation_k__BackingField;                                // 0x003C(0x0000)
		struct Vector3                                             Scale_k__BackingField;                                   // 0x004C(0x0000)
	};

	/**
	 * Struct UnityEngine.XRModule.UnityEngine.XR.XRMeshSubsystem+MeshTransformList
	 * Size -> 0x0000
	 */
	struct XRMeshSubsystem_MeshTransformList
	{
	public:
		intptr_t                                                   m_Self;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.VFXModule.UnityEngine.VFX.VFXCameraXRSettings
	 * Size -> 0x0000
	 */
	struct VFXCameraXRSettings
	{
	public:
		uint32_t                                                   viewTotal;                                               // 0x0000(0x0000)
		uint32_t                                                   viewCount;                                               // 0x0004(0x0000)
		uint32_t                                                   viewOffset;                                              // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.VFXModule.UnityEngine.VFX.VFXOutputEventArgs
	 * Size -> 0x0000
	 */
	struct VFXOutputEventArgs
	{
	public:
		int32_t                                                    nameId_k__BackingField;                                  // 0x0000(0x0000)
		class VFXEventAttribute*                                   eventAttribute_k__BackingField;                          // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.TerrainModule.UnityEngine.TerrainUtils.TerrainTileCoord
	 * Size -> 0x0000
	 */
	struct TerrainTileCoord
	{
	public:
		int32_t                                                    tileX;                                                   // 0x0000(0x0000)
		int32_t                                                    tileZ;                                                   // 0x0004(0x0000)
	};

	/**
	 * Struct UnityEngine.TextRenderingModule.UnityEngine.TextGenerationSettings
	 * Size -> 0x0000
	 */
	struct TextGenerationSettings_1
	{
	public:
		class Font*                                                font;                                                    // 0x0000(0x0000)
		struct Color                                               color;                                                   // 0x0008(0x0000)
		int32_t                                                    fontSize;                                                // 0x0018(0x0000)
		float                                                      lineSpacing;                                             // 0x001C(0x0000)
		bool                                                       richText;                                                // 0x0020(0x0000)
		float                                                      scaleFactor;                                             // 0x0024(0x0000)
		int32_t                                                    fontStyle;                                               // 0x0028(0x0000)
		int32_t                                                    textAnchor;                                              // 0x002C(0x0000)
		bool                                                       alignByGeometry;                                         // 0x0030(0x0000)
		bool                                                       resizeTextForBestFit;                                    // 0x0031(0x0000)
		int32_t                                                    resizeTextMinSize;                                       // 0x0034(0x0000)
		int32_t                                                    resizeTextMaxSize;                                       // 0x0038(0x0000)
		bool                                                       updateBounds;                                            // 0x003C(0x0000)
		int32_t                                                    verticalOverflow;                                        // 0x0040(0x0000)
		int32_t                                                    horizontalOverflow;                                      // 0x0044(0x0000)
		struct Vector2                                             generationExtents;                                       // 0x0048(0x0000)
		struct Vector2                                             pivot;                                                   // 0x0050(0x0000)
		bool                                                       generateOutOfBounds;                                     // 0x0058(0x0000)
	};

	/**
	 * Struct UnityEngine.TextRenderingModule.UnityEngine.UICharInfo
	 * Size -> 0x0000
	 */
	struct UICharInfo
	{
	public:
		struct Vector2                                             cursorPos;                                               // 0x0000(0x0000)
		float                                                      charWidth;                                               // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.TextRenderingModule.UnityEngine.UILineInfo
	 * Size -> 0x0000
	 */
	struct UILineInfo
	{
	public:
		int32_t                                                    startCharIdx;                                            // 0x0000(0x0000)
		int32_t                                                    height;                                                  // 0x0004(0x0000)
		float                                                      topY;                                                    // 0x0008(0x0000)
		float                                                      leading;                                                 // 0x000C(0x0000)
	};

	/**
	 * Struct UnityEngine.TextRenderingModule.UnityEngine.UIVertex
	 * Size -> 0x0000
	 */
	struct UIVertex
	{
	public:
		struct Vector3                                             position;                                                // 0x0000(0x0000)
		struct Vector3                                             normal;                                                  // 0x000C(0x0000)
		struct Vector4                                             tangent;                                                 // 0x0018(0x0000)
		struct Color32                                             color;                                                   // 0x0028(0x0000)
		struct Vector4                                             uv0;                                                     // 0x002C(0x0000)
		struct Vector4                                             uv1;                                                     // 0x003C(0x0000)
		struct Vector4                                             uv2;                                                     // 0x004C(0x0000)
		struct Vector4                                             uv3;                                                     // 0x005C(0x0000)
	};

	/**
	 * Struct UnityEngine.InputLegacyModule.UnityEngine.Touch
	 * Size -> 0x0000
	 */
	struct Touch_1
	{
	public:
		int32_t                                                    m_FingerId;                                              // 0x0000(0x0000)
		struct Vector2                                             m_Position;                                              // 0x0004(0x0000)
		struct Vector2                                             m_RawPosition;                                           // 0x000C(0x0000)
		struct Vector2                                             m_PositionDelta;                                         // 0x0014(0x0000)
		float                                                      m_TimeDelta;                                             // 0x001C(0x0000)
		int32_t                                                    m_TapCount;                                              // 0x0020(0x0000)
		int32_t                                                    m_Phase;                                                 // 0x0024(0x0000)
		int32_t                                                    m_Type;                                                  // 0x0028(0x0000)
		float                                                      m_Pressure;                                              // 0x002C(0x0000)
		float                                                      m_maximumPossiblePressure;                               // 0x0030(0x0000)
		float                                                      m_Radius;                                                // 0x0034(0x0000)
		float                                                      m_RadiusVariance;                                        // 0x0038(0x0000)
		float                                                      m_AltitudeAngle;                                         // 0x003C(0x0000)
		float                                                      m_AzimuthAngle;                                          // 0x0040(0x0000)
	};

	/**
	 * Struct UnityEngine.InputLegacyModule.UnityEngine.SendMouseEvents+HitInfo
	 * Size -> 0x0000
	 */
	struct SendMouseEvents_HitInfo
	{
	public:
		class GameObject*                                          target;                                                  // 0x0000(0x0000)
		class Camera*                                              camera;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.ParticleSystemModule.UnityEngine.ParticleSystem+MinMaxGradient
	 * Size -> 0x0000
	 */
	struct ParticleSystem_MinMaxGradient
	{
	public:
		int32_t                                                    m_Mode;                                                  // 0x0000(0x0000)
		class Gradient*                                            m_GradientMin;                                           // 0x0008(0x0000)
		class Gradient*                                            m_GradientMax;                                           // 0x0010(0x0000)
		struct Color                                               m_ColorMin;                                              // 0x0018(0x0000)
		struct Color                                               m_ColorMax;                                              // 0x0028(0x0000)
	};

	/**
	 * Struct UnityEngine.ParticleSystemModule.UnityEngine.ParticleSystem+MainModule
	 * Size -> 0x0000
	 */
	struct ParticleSystem_MainModule
	{
	public:
		class ParticleSystem*                                      m_ParticleSystem;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.ParticleSystemModule.UnityEngine.ParticleSystem+SubEmittersModule
	 * Size -> 0x0000
	 */
	struct ParticleSystem_SubEmittersModule
	{
	public:
		class ParticleSystem*                                      m_ParticleSystem;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.ParticleSystemModule.UnityEngine.ParticleSystem+Particle
	 * Size -> 0x0000
	 */
	struct ParticleSystem_Particle
	{
	public:
		struct Vector3                                             m_Position;                                              // 0x0000(0x0000)
		struct Vector3                                             m_Velocity;                                              // 0x000C(0x0000)
		struct Vector3                                             m_AnimatedVelocity;                                      // 0x0018(0x0000)
		struct Vector3                                             m_InitialVelocity;                                       // 0x0024(0x0000)
		struct Vector3                                             m_AxisOfRotation;                                        // 0x0030(0x0000)
		struct Vector3                                             m_Rotation;                                              // 0x003C(0x0000)
		struct Vector3                                             m_AngularVelocity;                                       // 0x0048(0x0000)
		struct Vector3                                             m_StartSize;                                             // 0x0054(0x0000)
		struct Color32                                             m_StartColor;                                            // 0x0060(0x0000)
		uint32_t                                                   m_RandomSeed;                                            // 0x0064(0x0000)
		uint32_t                                                   m_ParentRandomSeed;                                      // 0x0068(0x0000)
		float                                                      m_Lifetime;                                              // 0x006C(0x0000)
		float                                                      m_StartLifetime;                                         // 0x0070(0x0000)
		int32_t                                                    m_MeshIndex;                                             // 0x0074(0x0000)
		float                                                      m_EmitAccumulator0;                                      // 0x0078(0x0000)
		float                                                      m_EmitAccumulator1;                                      // 0x007C(0x0000)
		uint32_t                                                   m_Flags;                                                 // 0x0080(0x0000)
	};

	/**
	 * Struct UnityEngine.ParticleSystemModule.UnityEngine.ParticleSystem+EmitParams
	 * Size -> 0x0000
	 */
	struct ParticleSystem_EmitParams
	{
	public:
		struct ParticleSystem_Particle                             m_Particle;                                              // 0x0000(0x0000)
		bool                                                       m_PositionSet;                                           // 0x0084(0x0000)
		bool                                                       m_VelocitySet;                                           // 0x0085(0x0000)
		bool                                                       m_AxisOfRotationSet;                                     // 0x0086(0x0000)
		bool                                                       m_RotationSet;                                           // 0x0087(0x0000)
		bool                                                       m_AngularVelocitySet;                                    // 0x0088(0x0000)
		bool                                                       m_StartSizeSet;                                          // 0x0089(0x0000)
		bool                                                       m_StartColorSet;                                         // 0x008A(0x0000)
		bool                                                       m_RandomSeedSet;                                         // 0x008B(0x0000)
		bool                                                       m_StartLifetimeSet;                                      // 0x008C(0x0000)
		bool                                                       m_MeshIndexSet;                                          // 0x008D(0x0000)
		bool                                                       m_ApplyShapeToPosition;                                  // 0x008E(0x0000)
	};

	/**
	 * Struct UnityEngine.TilemapModule.UnityEngine.Tilemaps.TileData
	 * Size -> 0x0000
	 */
	struct TileData_1
	{
	public:
		int32_t                                                    m_Sprite;                                                // 0x0000(0x0000)
		struct Color                                               m_Color;                                                 // 0x0004(0x0000)
		struct Matrix4x4                                           m_Transform;                                             // 0x0014(0x0000)
		int32_t                                                    m_GameObject;                                            // 0x0054(0x0000)
		int32_t                                                    m_Flags;                                                 // 0x0058(0x0000)
		int32_t                                                    m_ColliderType;                                          // 0x005C(0x0000)
	};

	/**
	 * Struct UnityEngine.TilemapModule.UnityEngine.Tilemaps.TileDataNative
	 * Size -> 0x0000
	 */
	struct TileDataNative
	{
	public:
		int32_t                                                    m_Sprite;                                                // 0x0000(0x0000)
		struct Color                                               m_Color;                                                 // 0x0004(0x0000)
		struct Matrix4x4                                           m_Transform;                                             // 0x0014(0x0000)
		int32_t                                                    m_GameObject;                                            // 0x0054(0x0000)
		int32_t                                                    m_Flags;                                                 // 0x0058(0x0000)
		int32_t                                                    m_ColliderType;                                          // 0x005C(0x0000)
	};

	/**
	 * Struct UnityEngine.TilemapModule.UnityEngine.Tilemaps.TileChangeData
	 * Size -> 0x0000
	 */
	struct TileChangeData
	{
	public:
		struct Vector3Int                                          m_Position;                                              // 0x0000(0x0000)
		class Object_1*                                            m_TileAsset;                                             // 0x0010(0x0000)
		struct Color                                               m_Color;                                                 // 0x0018(0x0000)
		struct Matrix4x4                                           m_Transform;                                             // 0x0028(0x0000)
	};

	/**
	 * Struct UnityEngine.TilemapModule.UnityEngine.Tilemaps.TileAnimationData
	 * Size -> 0x0000
	 */
	struct TileAnimationData
	{
	public:
		class Sprite_Array*                                        m_AnimatedSprites;                                       // 0x0000(0x0000)
		float                                                      m_AnimationSpeed;                                        // 0x0008(0x0000)
		float                                                      m_AnimationStartTime;                                    // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Registration.Unity.Services.Core.Registration.CorePackageInitializer+<>c__DisplayClass35_0
	 * Size -> 0x0000
	 */
	struct CorePackageInitializer___c__DisplayClass35_0
	{
	public:
		class CoreRegistry*                                        registry;                                                // 0x0000(0x0000)
		class CorePackageInitializer*                              _4__this;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Registration.Unity.Services.Core.Registration.CorePackageInitializer+<Initialize>d__35
	 * Size -> 0x0000
	 */
	struct CorePackageInitializer__Initialize_d__35
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class CoreRegistry*                                        registry;                                                // 0x0020(0x0000)
		class CorePackageInitializer*                              _4__this;                                                // 0x0028(0x0000)
		struct CorePackageInitializer___c__DisplayClass35_0        _8__1;                                                   // 0x0030(0x0000)
		class Stopwatch*                                           stopwatch_5__2;                                          // 0x0040(0x0000)
		struct TaskAwaiter                                         u__1;                                                    // 0x0048(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Registration.Unity.Services.Core.Registration.CorePackageInitializer+<InitializeProjectConfigAsync>d__40
	 * Size -> 0x0000
	 */
	struct CorePackageInitializer__InitializeProjectConfigAsync_d__40
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class CorePackageInitializer*                              _4__this;                                                // 0x0020(0x0000)
		class InitializationOptions*                               options;                                                 // 0x0028(0x0000)
		struct TaskAwaiter_ProjectConfiguration                    u__1;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Registration.Unity.Services.Core.Registration.CorePackageInitializer+<GenerateProjectConfigurationAsync>d__41
	 * Size -> 0x0000
	 */
	struct CorePackageInitializer__GenerateProjectConfigurationAsync_d__41
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_ProjectConfiguration         t__builder;                                              // 0x0008(0x0000)
		class InitializationOptions*                               options;                                                 // 0x0020(0x0000)
		struct TaskAwaiter_SerializableProjectConfiguration        u__1;                                                    // 0x0028(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Registration.Unity.Services.Core.Registration.CorePackageInitializer+<GetSerializedConfigOrEmptyAsync>d__42
	 * Size -> 0x0000
	 */
	struct CorePackageInitializer__GetSerializedConfigOrEmptyAsync_d__42
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_SerializableProjectConfiguration t__builder;                                              // 0x0008(0x0000)
		struct TaskAwaiter_SerializableProjectConfiguration        u__1;                                                    // 0x0020(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Registration.Unity.Services.Core.Registration.CorePackageInitializer+<CreateDiagnosticsComponents>d__48
	 * Size -> 0x0000
	 */
	struct CorePackageInitializer__CreateDiagnosticsComponents_d__48
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_IDiagnosticsFactory          t__builder;                                              // 0x0008(0x0000)
		class CorePackageInitializer*                              _4__this;                                                // 0x0020(0x0000)
		struct TaskAwaiter                                         u__1;                                                    // 0x0028(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Registration.Unity.Services.Core.Registration.CorePackageInitializer+<GetSerializedProjectConfigurationAsync>d__50
	 * Size -> 0x0000
	 */
	struct CorePackageInitializer__GetSerializedProjectConfigurationAsync_d__50
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_string                       t__builder;                                              // 0x0008(0x0000)
		class CorePackageInitializer*                              _4__this;                                                // 0x0020(0x0000)
		struct TaskAwaiter                                         u__1;                                                    // 0x0028(0x0000)
	};

	/**
	 * Struct UnityEngine.VideoModule.UnityEngine.Experimental.Video.VideoClipPlayable
	 * Size -> 0x0000
	 */
	struct VideoClipPlayable
	{
	public:
		struct PlayableHandle                                      m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct Purchasing.Common.UnityEngine.Purchasing.VersionCheck+Version
	 * Size -> 0x0000
	 */
	struct VersionCheck_Version
	{
	public:
		int32_t                                                    major;                                                   // 0x0000(0x0000)
		int32_t                                                    minor;                                                   // 0x0004(0x0000)
		int32_t                                                    patch;                                                   // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.InputModule.UnityEngineInternal.Input.NativeInputEventBuffer
	 * Size -> 0x0000
	 */
	struct NativeInputEventBuffer
	{
	public:
		void*                                                      eventBuffer;                                             // 0x0000(0x0000)
		int32_t                                                    eventCount;                                              // 0x0008(0x0000)
		int32_t                                                    sizeInBytes;                                             // 0x000C(0x0000)
		int32_t                                                    capacityInBytes;                                         // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Unity.Services.Core.UnityServices+<InitializeAsync>d__11
	 * Size -> 0x0000
	 */
	struct UnityServices__InitializeAsync_d__11
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder                              t__builder;                                              // 0x0008(0x0000)
		class InitializationOptions*                               options;                                                 // 0x0020(0x0000)
		struct TaskAwaiter_object                                  u__1;                                                    // 0x0028(0x0000)
		struct TaskAwaiter                                         u__2;                                                    // 0x0030(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Configuration.Unity.Services.Core.Configuration.SerializableProjectConfiguration
	 * Size -> 0x0000
	 */
	struct SerializableProjectConfiguration
	{
	public:
		class String_Array*                                        Keys;                                                    // 0x0000(0x0000)
		class ConfigurationEntry_Array*                            Values;                                                  // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.Services.Core.Configuration.Unity.Services.Core.Configuration.StreamingAssetsConfigurationLoader+<GetConfigAsync>d__0
	 * Size -> 0x0000
	 */
	struct StreamingAssetsConfigurationLoader__GetConfigAsync_d__0
	{
	public:
		int32_t                                                    _1__state;                                               // 0x0000(0x0000)
		struct AsyncTaskMethodBuilder_SerializableProjectConfiguration t__builder;                                              // 0x0008(0x0000)
		struct TaskAwaiter_string                                  u__1;                                                    // 0x0020(0x0000)
	};

	/**
	 * Struct Unity.RenderPipeline.Universal.ShaderLibrary.UnityEngine.Rendering.Universal.ShaderInput+ShadowData
	 * Size -> 0x0000
	 */
	struct ShaderInput_ShadowData
	{
	public:
		struct Matrix4x4                                           worldToShadowMatrix;                                     // 0x0000(0x0000)
		struct Vector4                                             shadowParams;                                            // 0x0040(0x0000)
	};

	/**
	 * Struct Unity.RenderPipeline.Universal.ShaderLibrary.UnityEngine.Rendering.Universal.ShaderInput+LightData
	 * Size -> 0x0000
	 */
	struct ShaderInput_LightData
	{
	public:
		struct Vector4                                             position;                                                // 0x0000(0x0000)
		struct Vector4                                             color;                                                   // 0x0010(0x0000)
		struct Vector4                                             attenuation;                                             // 0x0020(0x0000)
		struct Vector4                                             spotDirection;                                           // 0x0030(0x0000)
		struct Vector4                                             occlusionProbeChannels;                                  // 0x0040(0x0000)
		uint32_t                                                   layerMask;                                               // 0x0050(0x0000)
	};

	/**
	 * Struct ACTk.Examples.Genuine.Runtime.<PrivateImplementationDetails>+__StaticArrayInitTypeSize=10
	 * Size -> 0x0000
	 */
	struct PrivateImplementationDetails____StaticArrayInitTypeSize_10_5
	{	};

	/**
	 * Struct __Generated.Unity.IL2CPP.Metadata.__Il2CppFullySharedGenericStructType
	 * Size -> 0x0000
	 */
	struct Il2CppFullySharedGenericStructType
	{	};

	/**
	 * Struct mscorlib.System.Span<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct Span_T
	{
	public:
		struct ByReference_T                                       pointer;                                                 // 0x0000(0x0000)
		int32_t                                                    length;                                                  // 0x0000(0x0000)
	};

	/**
	 * Struct Assembly-CSharp.GooglePlayGames.BasicApi.SavedGame.SavedGameMetadataUpdate
	 * Size -> 0x0000
	 */
	struct SavedGameMetadataUpdate
	{
	public:
		bool                                                       mDescriptionUpdated;                                     // 0x0000(0x0000)
		class Il2CppString*                                        mNewDescription;                                         // 0x0008(0x0000)
		bool                                                       mCoverImageUpdated;                                      // 0x0010(0x0000)
		class Byte_Array*                                          mNewPngCoverImage;                                       // 0x0018(0x0000)
		struct Nullable_TimeSpan                                   mNewPlayedTime;                                          // 0x0020(0x0000)
	};

	/**
	 * Struct mscorlib.System.Decimal+DecCalc
	 * Size -> 0x0000
	 */
	struct Decimal_DecCalc
	{
	public:
		uint32_t                                                   uflags;                                                  // 0x0000(0x0000)
		uint32_t                                                   uhi;                                                     // 0x0004(0x0000)
		uint32_t                                                   ulo;                                                     // 0x0008(0x0000)
		uint32_t                                                   umid;                                                    // 0x000C(0x0000)
		uint64_t                                                   ulomidLE;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.Decimal
	 * Size -> 0x0000
	 */
	struct Decimal
	{
	public:
		int32_t                                                    flags;                                                   // 0x0000(0x0000)
		int32_t                                                    hi;                                                      // 0x0004(0x0000)
		int32_t                                                    lo;                                                      // 0x0008(0x0000)
		int32_t                                                    mid;                                                     // 0x000C(0x0000)
		uint64_t                                                   ulomidLE;                                                // 0x0008(0x0000)
	};

	/**
	 * Struct mscorlib.System.ArraySegment<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ArraySegment_T
	{
	public:
		class UObject_Array*                                       array;                                                   // 0x0000(0x0000)
		int32_t                                                    offset;                                                  // 0x0000(0x0000)
		int32_t                                                    count;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Guid
	 * Size -> 0x0000
	 */
	struct Guid
	{
	public:
		int32_t                                                    a;                                                       // 0x0000(0x0000)
		int16_t                                                    b;                                                       // 0x0004(0x0000)
		int16_t                                                    c;                                                       // 0x0006(0x0000)
		uint8_t                                                    d;                                                       // 0x0008(0x0000)
		uint8_t                                                    e;                                                       // 0x0009(0x0000)
		uint8_t                                                    f;                                                       // 0x000A(0x0000)
		uint8_t                                                    g;                                                       // 0x000B(0x0000)
		uint8_t                                                    h;                                                       // 0x000C(0x0000)
		uint8_t                                                    i;                                                       // 0x000D(0x0000)
		uint8_t                                                    j;                                                       // 0x000E(0x0000)
		uint8_t                                                    k;                                                       // 0x000F(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ValueTaskAwaiter
	 * Size -> 0x0000
	 */
	struct ValueTaskAwaiter
	{
	public:
		struct ValueTask                                           value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable
	 * Size -> 0x0000
	 */
	struct ConfiguredValueTaskAwaitable
	{
	public:
		struct ValueTask                                           value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ValueTaskAwaiter<TResult>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ValueTaskAwaiter_TResult
	{
	public:
		struct ValueTask_TResult                                   value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable<TResult>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct ConfiguredValueTaskAwaitable_TResult
	{
	public:
		struct ValueTask_TResult                                   value;                                                   // 0x0000(0x0000)
	};

	/**
	 * Struct mscorlib.System.Numerics.Vector<ulong>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct Vector_ulong
	{
	public:
		struct Register                                            _register;                                               // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputControlScheme
	 * Size -> 0x0000
	 */
	struct InputControlScheme
	{
	public:
		class Il2CppString*                                        m_Name;                                                  // 0x0000(0x0000)
		class Il2CppString*                                        m_BindingGroup;                                          // 0x0008(0x0000)
		class InputControlScheme_DeviceRequirement_Array*          m_DeviceRequirements;                                    // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.InputActionRebindingExtensions+ParameterOverride
	 * Size -> 0x0000
	 */
	struct InputActionRebindingExtensions_ParameterOverride
	{
	public:
		class Il2CppString*                                        objectRegistrationName;                                  // 0x0000(0x0000)
		class Il2CppString*                                        parameter;                                               // 0x0008(0x0000)
		struct InputBinding                                        bindingMask;                                             // 0x0010(0x0000)
		struct PrimitiveValue                                      value;                                                   // 0x0068(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<JobHandle>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_JobHandle
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray+Enumerator<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct NativeArray_Enumerator_T
	{
	public:
		struct NativeArray_T                                       m_Array;                                                 // 0x0000(0x0000)
		int32_t                                                    m_Index;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeArray<U>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeArray_U
	{
	public:
		void*                                                      m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
		int32_t                                                    m_AllocatorLabel;                                        // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.Users.InputUser
	 * Size -> 0x0000
	 */
	struct InputUser
	{
	public:
		uint32_t                                                   m_Id;                                                    // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UQueryBuilder<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct UQueryBuilder_T
	{
	public:
		class List_StyleSelector*                                  m_StyleSelectors;                                        // 0x0000(0x0000)
		class List_StyleSelectorPart*                              m_Parts;                                                 // 0x0000(0x0000)
		class VisualElement*                                       m_Element;                                               // 0x0000(0x0000)
		class List_RuleMatcher*                                    m_Matchers;                                              // 0x0000(0x0000)
		int32_t                                                    m_Relationship;                                          // 0x0000(0x0000)
		int32_t                                                    pseudoStatesMask;                                        // 0x0000(0x0000)
		int32_t                                                    negatedPseudoStatesMask;                                 // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.UIElementsModule.UnityEngine.UIElements.UQueryState+Enumerator<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct UQueryState_Enumerator_T
	{
	public:
		class List_VisualElement*                                  iterationList;                                           // 0x0000(0x0000)
		int32_t                                                    currentIndex;                                            // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeSlice<U>
	 * Size -> 0x0000
	 * GenericType
	 */
	struct NativeSlice_U
	{
	public:
		uint8_t*                                                   m_Buffer;                                                // 0x0000(0x0000)
		int32_t                                                    m_Stride;                                                // 0x0000(0x0000)
		int32_t                                                    m_Length;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.Unity.Collections.NativeSlice+Enumerator<T>
	 * Size -> 0x0000
	 * GenericTypeBase
	 */
	struct NativeSlice_Enumerator_T
	{
	public:
		struct NativeSlice_T                                       m_Array;                                                 // 0x0000(0x0000)
		int32_t                                                    m_Index;                                                 // 0x0000(0x0000)
	};

	/**
	 * Struct Newtonsoft.Json.Newtonsoft.Json.JsonPosition
	 * Size -> 0x0000
	 */
	struct JsonPosition
	{
	public:
		int32_t                                                    Type;                                                    // 0x0000(0x0000)
		int32_t                                                    Position;                                                // 0x0004(0x0000)
		class Il2CppString*                                        PropertyName;                                            // 0x0008(0x0000)
		bool                                                       HasIndex;                                                // 0x0010(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Playables.PlayableGraph
	 * Size -> 0x0000
	 */
	struct PlayableGraph
	{
	public:
		intptr_t                                                   m_Handle;                                                // 0x0000(0x0000)
		uint32_t                                                   m_Version;                                               // 0x0008(0x0000)
	};

	/**
	 * Struct UnityEngine.CoreModule.UnityEngine.Playables.Playable
	 * Size -> 0x0000
	 */
	struct Playable
	{
	public:
		struct PlayableHandle                                      m_Handle;                                                // 0x0000(0x0000)
	};

	/**
	 * Struct Unity.InputSystem.UnityEngine.InputSystem.EnhancedTouch.TouchHistory
	 * Size -> 0x0000
	 */
	struct TouchHistory
	{
	public:
		class InputStateHistory_TouchState*                        m_History;                                               // 0x0000(0x0000)
		class Finger*                                              m_Finger;                                                // 0x0008(0x0000)
		int32_t                                                    m_Count;                                                 // 0x0010(0x0000)
		int32_t                                                    m_StartIndex;                                            // 0x0014(0x0000)
		uint32_t                                                   m_Version;                                               // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.bool4
	 * Size -> 0x0000
	 */
	struct bool4
	{
	public:
		bool                                                       x;                                                       // 0x0000(0x0000)
		bool                                                       y;                                                       // 0x0001(0x0000)
		bool                                                       z;                                                       // 0x0002(0x0000)
		bool                                                       w;                                                       // 0x0003(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.bool3
	 * Size -> 0x0000
	 */
	struct bool3
	{
	public:
		bool                                                       x;                                                       // 0x0000(0x0000)
		bool                                                       y;                                                       // 0x0001(0x0000)
		bool                                                       z;                                                       // 0x0002(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.uint2
	 * Size -> 0x0000
	 */
	struct uint2
	{
	public:
		uint32_t                                                   x;                                                       // 0x0000(0x0000)
		uint32_t                                                   y;                                                       // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.float2
	 * Size -> 0x0000
	 */
	struct float2
	{
	public:
		float                                                      x;                                                       // 0x0000(0x0000)
		float                                                      y;                                                       // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.int2
	 * Size -> 0x0000
	 */
	struct int2
	{
	public:
		int32_t                                                    x;                                                       // 0x0000(0x0000)
		int32_t                                                    y;                                                       // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.half2
	 * Size -> 0x0000
	 */
	struct half2
	{
	public:
		struct half                                                x;                                                       // 0x0000(0x0000)
		struct half                                                y;                                                       // 0x0002(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.uint4
	 * Size -> 0x0000
	 */
	struct uint4
	{
	public:
		uint32_t                                                   x;                                                       // 0x0000(0x0000)
		uint32_t                                                   y;                                                       // 0x0004(0x0000)
		uint32_t                                                   z;                                                       // 0x0008(0x0000)
		uint32_t                                                   w;                                                       // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.float4
	 * Size -> 0x0000
	 */
	struct float4
	{
	public:
		float                                                      x;                                                       // 0x0000(0x0000)
		float                                                      y;                                                       // 0x0004(0x0000)
		float                                                      z;                                                       // 0x0008(0x0000)
		float                                                      w;                                                       // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.int4
	 * Size -> 0x0000
	 */
	struct int4
	{
	public:
		int32_t                                                    x;                                                       // 0x0000(0x0000)
		int32_t                                                    y;                                                       // 0x0004(0x0000)
		int32_t                                                    z;                                                       // 0x0008(0x0000)
		int32_t                                                    w;                                                       // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.half4
	 * Size -> 0x0000
	 */
	struct half4
	{
	public:
		struct half                                                x;                                                       // 0x0000(0x0000)
		struct half                                                y;                                                       // 0x0002(0x0000)
		struct half                                                z;                                                       // 0x0004(0x0000)
		struct half                                                w;                                                       // 0x0006(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.double4
	 * Size -> 0x0000
	 */
	struct double4
	{
	public:
		double                                                     x;                                                       // 0x0000(0x0000)
		double                                                     y;                                                       // 0x0008(0x0000)
		double                                                     z;                                                       // 0x0010(0x0000)
		double                                                     w;                                                       // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.uint3
	 * Size -> 0x0000
	 */
	struct uint3
	{
	public:
		uint32_t                                                   x;                                                       // 0x0000(0x0000)
		uint32_t                                                   y;                                                       // 0x0004(0x0000)
		uint32_t                                                   z;                                                       // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.float3
	 * Size -> 0x0000
	 */
	struct float3
	{
	public:
		float                                                      x;                                                       // 0x0000(0x0000)
		float                                                      y;                                                       // 0x0004(0x0000)
		float                                                      z;                                                       // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.int3
	 * Size -> 0x0000
	 */
	struct int3
	{
	public:
		int32_t                                                    x;                                                       // 0x0000(0x0000)
		int32_t                                                    y;                                                       // 0x0004(0x0000)
		int32_t                                                    z;                                                       // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.half3
	 * Size -> 0x0000
	 */
	struct half3
	{
	public:
		struct half                                                x;                                                       // 0x0000(0x0000)
		struct half                                                y;                                                       // 0x0002(0x0000)
		struct half                                                z;                                                       // 0x0004(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.double3
	 * Size -> 0x0000
	 */
	struct double3
	{
	public:
		double                                                     x;                                                       // 0x0000(0x0000)
		double                                                     y;                                                       // 0x0008(0x0000)
		double                                                     z;                                                       // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.uint2x2
	 * Size -> 0x0000
	 */
	struct uint2x2
	{
	public:
		struct uint2                                               c0;                                                      // 0x0000(0x0000)
		struct uint2                                               c1;                                                      // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.float2x2
	 * Size -> 0x0000
	 */
	struct float2x2
	{
	public:
		struct float2                                              c0;                                                      // 0x0000(0x0000)
		struct float2                                              c1;                                                      // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.int2x2
	 * Size -> 0x0000
	 */
	struct int2x2
	{
	public:
		struct int2                                                c0;                                                      // 0x0000(0x0000)
		struct int2                                                c1;                                                      // 0x0008(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.uint2x3
	 * Size -> 0x0000
	 */
	struct uint2x3
	{
	public:
		struct uint2                                               c0;                                                      // 0x0000(0x0000)
		struct uint2                                               c1;                                                      // 0x0008(0x0000)
		struct uint2                                               c2;                                                      // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.float2x3
	 * Size -> 0x0000
	 */
	struct float2x3
	{
	public:
		struct float2                                              c0;                                                      // 0x0000(0x0000)
		struct float2                                              c1;                                                      // 0x0008(0x0000)
		struct float2                                              c2;                                                      // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.int2x3
	 * Size -> 0x0000
	 */
	struct int2x3
	{
	public:
		struct int2                                                c0;                                                      // 0x0000(0x0000)
		struct int2                                                c1;                                                      // 0x0008(0x0000)
		struct int2                                                c2;                                                      // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.uint2x4
	 * Size -> 0x0000
	 */
	struct uint2x4
	{
	public:
		struct uint2                                               c0;                                                      // 0x0000(0x0000)
		struct uint2                                               c1;                                                      // 0x0008(0x0000)
		struct uint2                                               c2;                                                      // 0x0010(0x0000)
		struct uint2                                               c3;                                                      // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.float2x4
	 * Size -> 0x0000
	 */
	struct float2x4
	{
	public:
		struct float2                                              c0;                                                      // 0x0000(0x0000)
		struct float2                                              c1;                                                      // 0x0008(0x0000)
		struct float2                                              c2;                                                      // 0x0010(0x0000)
		struct float2                                              c3;                                                      // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.int2x4
	 * Size -> 0x0000
	 */
	struct int2x4
	{
	public:
		struct int2                                                c0;                                                      // 0x0000(0x0000)
		struct int2                                                c1;                                                      // 0x0008(0x0000)
		struct int2                                                c2;                                                      // 0x0010(0x0000)
		struct int2                                                c3;                                                      // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.uint3x2
	 * Size -> 0x0000
	 */
	struct uint3x2
	{
	public:
		struct uint3                                               c0;                                                      // 0x0000(0x0000)
		struct uint3                                               c1;                                                      // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.float3x2
	 * Size -> 0x0000
	 */
	struct float3x2
	{
	public:
		struct float3                                              c0;                                                      // 0x0000(0x0000)
		struct float3                                              c1;                                                      // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.int3x2
	 * Size -> 0x0000
	 */
	struct int3x2
	{
	public:
		struct int3                                                c0;                                                      // 0x0000(0x0000)
		struct int3                                                c1;                                                      // 0x000C(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.uint3x3
	 * Size -> 0x0000
	 */
	struct uint3x3
	{
	public:
		struct uint3                                               c0;                                                      // 0x0000(0x0000)
		struct uint3                                               c1;                                                      // 0x000C(0x0000)
		struct uint3                                               c2;                                                      // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.float3x3
	 * Size -> 0x0000
	 */
	struct float3x3
	{
	public:
		struct float3                                              c0;                                                      // 0x0000(0x0000)
		struct float3                                              c1;                                                      // 0x000C(0x0000)
		struct float3                                              c2;                                                      // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.int3x3
	 * Size -> 0x0000
	 */
	struct int3x3
	{
	public:
		struct int3                                                c0;                                                      // 0x0000(0x0000)
		struct int3                                                c1;                                                      // 0x000C(0x0000)
		struct int3                                                c2;                                                      // 0x0018(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.uint3x4
	 * Size -> 0x0000
	 */
	struct uint3x4
	{
	public:
		struct uint3                                               c0;                                                      // 0x0000(0x0000)
		struct uint3                                               c1;                                                      // 0x000C(0x0000)
		struct uint3                                               c2;                                                      // 0x0018(0x0000)
		struct uint3                                               c3;                                                      // 0x0024(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.float3x4
	 * Size -> 0x0000
	 */
	struct float3x4
	{
	public:
		struct float3                                              c0;                                                      // 0x0000(0x0000)
		struct float3                                              c1;                                                      // 0x000C(0x0000)
		struct float3                                              c2;                                                      // 0x0018(0x0000)
		struct float3                                              c3;                                                      // 0x0024(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.int3x4
	 * Size -> 0x0000
	 */
	struct int3x4
	{
	public:
		struct int3                                                c0;                                                      // 0x0000(0x0000)
		struct int3                                                c1;                                                      // 0x000C(0x0000)
		struct int3                                                c2;                                                      // 0x0018(0x0000)
		struct int3                                                c3;                                                      // 0x0024(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.uint4x2
	 * Size -> 0x0000
	 */
	struct uint4x2
	{
	public:
		struct uint4                                               c0;                                                      // 0x0000(0x0000)
		struct uint4                                               c1;                                                      // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.float4x2
	 * Size -> 0x0000
	 */
	struct float4x2
	{
	public:
		struct float4                                              c0;                                                      // 0x0000(0x0000)
		struct float4                                              c1;                                                      // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.int4x2
	 * Size -> 0x0000
	 */
	struct int4x2
	{
	public:
		struct int4                                                c0;                                                      // 0x0000(0x0000)
		struct int4                                                c1;                                                      // 0x0010(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.uint4x3
	 * Size -> 0x0000
	 */
	struct uint4x3
	{
	public:
		struct uint4                                               c0;                                                      // 0x0000(0x0000)
		struct uint4                                               c1;                                                      // 0x0010(0x0000)
		struct uint4                                               c2;                                                      // 0x0020(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.float4x3
	 * Size -> 0x0000
	 */
	struct float4x3
	{
	public:
		struct float4                                              c0;                                                      // 0x0000(0x0000)
		struct float4                                              c1;                                                      // 0x0010(0x0000)
		struct float4                                              c2;                                                      // 0x0020(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.int4x3
	 * Size -> 0x0000
	 */
	struct int4x3
	{
	public:
		struct int4                                                c0;                                                      // 0x0000(0x0000)
		struct int4                                                c1;                                                      // 0x0010(0x0000)
		struct int4                                                c2;                                                      // 0x0020(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.uint4x4
	 * Size -> 0x0000
	 */
	struct uint4x4
	{
	public:
		struct uint4                                               c0;                                                      // 0x0000(0x0000)
		struct uint4                                               c1;                                                      // 0x0010(0x0000)
		struct uint4                                               c2;                                                      // 0x0020(0x0000)
		struct uint4                                               c3;                                                      // 0x0030(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.float4x4
	 * Size -> 0x0000
	 */
	struct float4x4
	{
	public:
		struct float4                                              c0;                                                      // 0x0000(0x0000)
		struct float4                                              c1;                                                      // 0x0010(0x0000)
		struct float4                                              c2;                                                      // 0x0020(0x0000)
		struct float4                                              c3;                                                      // 0x0030(0x0000)
	};

	/**
	 * Struct Unity.Mathematics.Unity.Mathematics.int4x4
	 * Size -> 0x0000
	 */
	struct int4x4
	{
	public:
		struct int4                                                c0;                                                      // 0x0000(0x0000)
		struct int4                                                c1;                                                      // 0x0010(0x0000)
		struct int4                                                c2;                                                      // 0x0020(0x0000)
		struct int4                                                c3;                                                      // 0x0030(0x0000)
	};

	/**
	 * Struct System.Data.System.Data.SqlTypes.SqlInt64
	 * Size -> 0x0000
	 */
	struct SqlInt64
	{
	public:
		bool                                                       m_fNotNull;                                              // 0x0000(0x0000)
		int64_t                                                    m_value;                                                 // 0x0008(0x0000)
	};

	/**
	 * Struct System.Data.System.Data.SqlTypes.SqlDouble
	 * Size -> 0x0000
	 */
	struct SqlDouble
	{
	public:
		bool                                                       m_fNotNull;                                              // 0x0000(0x0000)
		double                                                     m_value;                                                 // 0x0008(0x0000)
	};

	/**
	 * Struct System.Data.System.Data.SqlTypes.SqlMoney
	 * Size -> 0x0000
	 */
	struct SqlMoney
	{
	public:
		bool                                                       fNotNull;                                                // 0x0000(0x0000)
		int64_t                                                    value;                                                   // 0x0008(0x0000)
	};

	/**
	 * Struct Cinemachine.Cinemachine.AxisState
	 * Size -> 0x0000
	 */
	struct AxisState
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0000)
		int32_t                                                    m_SpeedMode;                                             // 0x0004(0x0000)
		float                                                      m_MaxSpeed;                                              // 0x0008(0x0000)
		float                                                      m_AccelTime;                                             // 0x000C(0x0000)
		float                                                      m_DecelTime;                                             // 0x0010(0x0000)
		class Il2CppString*                                        m_InputAxisName;                                         // 0x0018(0x0000)
		float                                                      m_InputAxisValue;                                        // 0x0020(0x0000)
		bool                                                       m_InvertInput;                                           // 0x0024(0x0000)
		float                                                      m_MinValue;                                              // 0x0028(0x0000)
		float                                                      m_MaxValue;                                              // 0x002C(0x0000)
		bool                                                       m_Wrap;                                                  // 0x0030(0x0000)
		struct AxisState_Recentering                               m_Recentering;                                           // 0x0034(0x0000)
		float                                                      m_CurrentSpeed;                                          // 0x0050(0x0000)
		float                                                      m_LastUpdateTime;                                        // 0x0054(0x0000)
		int32_t                                                    m_LastUpdateFrame;                                       // 0x0058(0x0000)
		class AxisState_IInputAxisProvider*                        m_InputAxisProvider;                                     // 0x0060(0x0000)
		int32_t                                                    m_InputAxisIndex;                                        // 0x0068(0x0000)
		bool                                                       ValueRangeLocked_k__BackingField;                        // 0x006C(0x0000)
		bool                                                       HasRecentering_k__BackingField;                          // 0x006D(0x0000)
	};

	/**
	 * Struct ACTk.Runtime.CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt
	 * Size -> 0x0000
	 */
	struct ObscuredUInt
	{
	public:
		uint32_t                                                   currentCryptoKey;                                        // 0x0000(0x0000)
		uint32_t                                                   hiddenValue;                                             // 0x0004(0x0000)
		bool                                                       inited;                                                  // 0x0008(0x0000)
		uint32_t                                                   fakeValue;                                               // 0x000C(0x0000)
		bool                                                       fakeValueActive;                                         // 0x0010(0x0000)
	};

}


